import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest19 {

    public static boolean debug = false;

    @Test
    public void test09501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09501");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray36 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("", objArray36);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray36);
        java.lang.Object[] objArray39 = new java.lang.Object[] { 2, switchingFunctionsHandler27, 1, objArray36 };
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray36, (java.lang.Throwable) mathException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray36, (java.lang.Throwable) functionEvaluationException46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray36, (java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray19, (java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray19);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray19);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "hi!");
        double double63 = functionEvaluationException62.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException62);
        java.lang.Throwable[] throwableArray65 = functionEvaluationException62.getSuppressed();
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray77);
        org.apache.commons.math.ode.IntegratorException integratorException79 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray77);
        org.apache.commons.math.ode.IntegratorException integratorException80 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray77);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray77);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, (java.lang.Throwable) mathException81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, (java.lang.Throwable) functionEvaluationException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException82);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray65, (java.lang.Throwable) mathException84);
        org.apache.commons.math.ode.IntegratorException integratorException86 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", (java.lang.Object[]) throwableArray65);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray65);
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray19, (java.lang.Throwable) mathException87);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100", (java.lang.Object[]) strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException91 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", strArray19);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 3.0d + "'", double63 == 3.0d);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(strArray77);
    }

    @Test
    public void test09502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09502");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", objArray27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray27);
        java.lang.Object[] objArray30 = new java.lang.Object[] { 2, switchingFunctionsHandler18, 1, objArray27 };
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) mathException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray27);
        java.lang.String str43 = functionEvaluationException42.getPattern();
        java.lang.Object[] objArray44 = functionEvaluationException42.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double47 = functionEvaluationException46.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray44, (java.lang.Throwable) functionEvaluationException46);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray44);
        java.lang.Throwable throwable50 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray44, throwable50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "", objArray44);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("", objArray44);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", objArray44);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ");
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray71);
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray71);
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray71);
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException74);
        java.lang.Throwable[] throwableArray76 = convergenceException75.getSuppressed();
        java.lang.Throwable[] throwableArray77 = convergenceException75.getSuppressed();
        java.lang.Throwable throwable78 = null;
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray77, throwable78);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException82);
        java.lang.Throwable[] throwableArray84 = convergenceException82.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException85 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException82);
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException82);
        convergenceException79.addSuppressed((java.lang.Throwable) convergenceException82);
        functionEvaluationException60.addSuppressed((java.lang.Throwable) convergenceException82);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), (java.lang.Throwable) convergenceException82);
        java.lang.Object[] objArray90 = functionEvaluationException89.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException91 = new org.apache.commons.math.ode.IntegratorException("", objArray90);
        org.apache.commons.math.ConvergenceException convergenceException92 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException91);
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray44, (java.lang.Throwable) integratorException91);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1.0d) + "'", double47 == (-1.0d));
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[]");
    }

    @Test
    public void test09503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09503");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray20 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray20);
        java.lang.Object[] objArray23 = new java.lang.Object[] { 2, switchingFunctionsHandler11, 1, objArray20 };
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray20, (java.lang.Throwable) mathException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException28);
        java.lang.Object[] objArray30 = functionEvaluationException28.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        double double34 = functionEvaluationException33.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray49 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("", objArray49);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray49);
        java.lang.Object[] objArray52 = new java.lang.Object[] { 2, switchingFunctionsHandler40, 1, objArray49 };
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray49, (java.lang.Throwable) mathException56);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException56);
        mathException36.addSuppressed((java.lang.Throwable) integratorException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) mathException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "");
        java.lang.Object[] objArray64 = functionEvaluationException63.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100", objArray30, (java.lang.Throwable) integratorException65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException("", objArray30);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("", objArray30);
        java.lang.String str70 = convergenceException69.toString();
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org.apache.commons.math.ConvergenceException: " + "'", str70, "org.apache.commons.math.ConvergenceException: ");
    }

    @Test
    public void test09504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09504");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException", strArray16);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray16);
        java.lang.Object[] objArray33 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("", objArray33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray33);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray45);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray62 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("", objArray62);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray62);
        java.lang.Object[] objArray65 = new java.lang.Object[] { 2, switchingFunctionsHandler53, 1, objArray62 };
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) mathException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) functionEvaluationException72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) functionEvaluationException75);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray45, (java.lang.Throwable) functionEvaluationException75);
        java.lang.Throwable[] throwableArray78 = functionEvaluationException75.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, (java.lang.Throwable) functionEvaluationException75);
        functionEvaluationException35.addSuppressed((java.lang.Throwable) functionEvaluationException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) functionEvaluationException75);
        java.lang.Throwable[] throwableArray82 = functionEvaluationException81.getSuppressed();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray16, (java.lang.Throwable) functionEvaluationException81);
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException85 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray16);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertNotNull(throwableArray82);
    }

    @Test
    public void test09505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09505");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ");
        java.lang.Object[] objArray10 = convergenceException9.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray23 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("", objArray23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray23);
        java.lang.Object[] objArray26 = new java.lang.Object[] { 2, switchingFunctionsHandler14, 1, objArray23 };
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray23, (java.lang.Throwable) mathException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", objArray10, (java.lang.Throwable) mathException30);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray44);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray44);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", strArray44);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "", objArray10, (java.lang.Throwable) mathException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", objArray10);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray10);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: hi!", objArray10);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException", objArray10);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", objArray10);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(strArray44);
    }

    @Test
    public void test09506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09506");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", objArray27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray27);
        java.lang.Object[] objArray30 = new java.lang.Object[] { 2, switchingFunctionsHandler18, 1, objArray27 };
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) mathException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException40);
        java.lang.Object[] objArray49 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("", objArray49);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray49);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException51);
        java.lang.Throwable[] throwableArray53 = integratorException51.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException51);
        functionEvaluationException40.addSuppressed((java.lang.Throwable) integratorException51);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!", objArray12, (java.lang.Throwable) integratorException51);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) integratorException51);
        java.lang.Throwable[] throwableArray58 = convergenceException57.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", (java.lang.Object[]) throwableArray58);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray58);
        java.lang.String str61 = integratorException60.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException" + "'", str61, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException");
    }

    @Test
    public void test09507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09507");
        java.lang.Object[] objArray13 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray13);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException15);
        java.lang.Throwable[] throwableArray17 = integratorException15.getSuppressed();
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) mathException18);
        java.lang.Throwable[] throwableArray20 = mathException19.getSuppressed();
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray20);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ");
        java.lang.Object[] objArray27 = convergenceException26.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", objArray40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray40);
        java.lang.Object[] objArray43 = new java.lang.Object[] { 2, switchingFunctionsHandler31, 1, objArray40 };
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray40, (java.lang.Throwable) mathException47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", objArray27, (java.lang.Throwable) mathException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) 0, (java.lang.Throwable) mathException47);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException47);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) convergenceException53);
        java.lang.String str55 = functionEvaluationException54.getPattern();
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: " + "'", str55, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test09508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09508");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException7);
        java.lang.Object[] objArray9 = mathException8.getArguments();
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!", objArray9, throwable10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray9);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("", objArray9);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("", objArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        double double18 = functionEvaluationException17.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException17);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray33 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("", objArray33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray33);
        java.lang.Object[] objArray36 = new java.lang.Object[] { 2, switchingFunctionsHandler24, 1, objArray33 };
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) mathException40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException40);
        mathException20.addSuppressed((java.lang.Throwable) integratorException42);
        mathException14.addSuppressed((java.lang.Throwable) integratorException42);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException14);
        java.lang.String str46 = mathException14.toString();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.apache.commons.math.MathException: " + "'", str46, "org.apache.commons.math.MathException: ");
    }

    @Test
    public void test09509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09509");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray18 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", objArray18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray18);
        java.lang.Object[] objArray21 = new java.lang.Object[] { 2, switchingFunctionsHandler9, 1, objArray18 };
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) mathException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) functionEvaluationException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) functionEvaluationException31);
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", objArray40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray40);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException42);
        java.lang.Throwable[] throwableArray44 = integratorException42.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException42);
        functionEvaluationException31.addSuppressed((java.lang.Throwable) integratorException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException42);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException54);
        java.lang.Object[] objArray56 = mathException55.getArguments();
        java.lang.Throwable throwable57 = null;
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!", objArray56, throwable57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray56);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException("", objArray56);
        integratorException42.addSuppressed((java.lang.Throwable) integratorException60);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException42);
        java.lang.Throwable[] throwableArray63 = derivativeException62.getSuppressed();
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, (java.lang.Throwable) mathException64);
        java.lang.Throwable[] throwableArray66 = mathException64.getSuppressed();
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray66);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) throwableArray66);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray66);
    }

    @Test
    public void test09510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09510");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray13);
        java.lang.Object[] objArray35 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("", objArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray35);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("", objArray35, (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException41);
        java.lang.Object[] objArray44 = functionEvaluationException41.getArguments();
        java.lang.Throwable[] throwableArray45 = functionEvaluationException41.getSuppressed();
        java.lang.Object[] objArray46 = functionEvaluationException41.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray60 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("", objArray60);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray60);
        java.lang.Object[] objArray63 = new java.lang.Object[] { 2, switchingFunctionsHandler51, 1, objArray60 };
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray60, (java.lang.Throwable) mathException67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException68);
        java.lang.Object[] objArray70 = functionEvaluationException68.getArguments();
        double double71 = functionEvaluationException68.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: hi!", objArray46, (java.lang.Throwable) functionEvaluationException68);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray46);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Throwable) convergenceException73);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}", (java.lang.Throwable) mathException74);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray13, (java.lang.Throwable) mathException75);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray13);
        java.lang.String str78 = mathException77.getPattern();
        java.lang.String str79 = mathException77.getPattern();
        java.lang.String str80 = mathException77.toString();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!" + "'", str78, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!" + "'", str79, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!" + "'", str80, "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test09511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09511");
        java.lang.Object[] objArray11 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", objArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException12);
        java.lang.Throwable[] throwableArray14 = derivativeException13.getSuppressed();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", objArray40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray40);
        java.lang.Object[] objArray43 = new java.lang.Object[] { 2, switchingFunctionsHandler31, 1, objArray40 };
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray40, (java.lang.Throwable) mathException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray40, (java.lang.Throwable) functionEvaluationException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray40, (java.lang.Throwable) functionEvaluationException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray23, (java.lang.Throwable) functionEvaluationException53);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) mathException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) mathException56);
        java.lang.String str58 = functionEvaluationException57.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Throwable) functionEvaluationException57);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str58, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test09512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09512");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray30);
        java.lang.Object[] objArray33 = new java.lang.Object[] { 2, switchingFunctionsHandler21, 1, objArray30 };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) mathException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray13, (java.lang.Throwable) functionEvaluationException43);
        java.lang.Throwable[] throwableArray46 = functionEvaluationException43.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray46, (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray46);
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray64);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray64);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray64);
        java.lang.String str69 = functionEvaluationException68.getPattern();
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) 3, (java.lang.Throwable) functionEvaluationException68);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException68);
        java.lang.Throwable[] throwableArray73 = integratorException72.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray73);
        java.lang.Object[] objArray86 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("", objArray86);
        org.apache.commons.math.ode.IntegratorException integratorException88 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException88);
        java.lang.Throwable[] throwableArray90 = integratorException88.getSuppressed();
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray90);
        org.apache.commons.math.ode.IntegratorException integratorException92 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray90);
        java.lang.String str93 = integratorException92.getPattern();
        java.lang.String str94 = integratorException92.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException95 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Throwable) integratorException92);
        org.apache.commons.math.ConvergenceException convergenceException96 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray73, (java.lang.Throwable) functionEvaluationException95);
        org.apache.commons.math.MathException mathException97 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) throwableArray46, (java.lang.Throwable) functionEvaluationException95);
        org.apache.commons.math.MathException mathException98 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = -1", (java.lang.Throwable) functionEvaluationException95);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: " + "'", str69, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str93, "org.apache.commons.math.FunctionEvaluationException: hi!");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str94, "org.apache.commons.math.FunctionEvaluationException: hi!");
    }

    @Test
    public void test09513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09513");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", objArray40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray40);
        java.lang.Object[] objArray43 = new java.lang.Object[] { 2, switchingFunctionsHandler31, 1, objArray40 };
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray40, (java.lang.Throwable) mathException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray40, (java.lang.Throwable) functionEvaluationException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray40, (java.lang.Throwable) functionEvaluationException53);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray40);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray21, (java.lang.Throwable) convergenceException56);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", strArray21);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Throwable) derivativeException62);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100", (java.lang.Throwable) mathException63);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) mathException63);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) convergenceException65);
        java.lang.String str67 = mathException66.getPattern();
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str67, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test09514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09514");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        boolean boolean20 = switchingFunctionsHandler0.stop();
        double double21 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean27 = switchingFunctionsHandler26.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        switchingFunctionsHandler26.add(switchingFunction28, (double) (-1), (double) 'a', (int) (short) 0);
        double[] doubleArray34 = null;
        boolean boolean35 = switchingFunctionsHandler26.reset((double) 3, doubleArray34);
        double double36 = switchingFunctionsHandler26.getEventTime();
        double double37 = switchingFunctionsHandler26.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        switchingFunctionsHandler26.add(switchingFunction38, Double.NaN, (double) (short) 100, (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean45 = switchingFunctionsHandler44.isEmpty();
        double[] doubleArray48 = new double[] { 100.0d };
        boolean boolean49 = switchingFunctionsHandler44.reset((double) 0L, doubleArray48);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean52 = switchingFunctionsHandler51.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = switchingFunctionsHandler51.evaluateStep(stepInterpolator53);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean57 = switchingFunctionsHandler56.isEmpty();
        double[] doubleArray60 = new double[] { 100.0d };
        boolean boolean61 = switchingFunctionsHandler56.reset((double) 0L, doubleArray60);
        boolean boolean62 = switchingFunctionsHandler51.reset((double) 1, doubleArray60);
        boolean boolean63 = switchingFunctionsHandler44.reset((double) 100, doubleArray60);
        boolean boolean64 = switchingFunctionsHandler26.reset((double) 10.0f, doubleArray60);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray60);
        boolean boolean66 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        switchingFunctionsHandler0.add(switchingFunction67, (double) 100.0f, 97.0d, (int) (short) 0);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator72 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = switchingFunctionsHandler0.evaluateStep(stepInterpolator72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test09515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09515");
        java.lang.Object[] objArray17 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", objArray17, (java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.String str27 = convergenceException26.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray17, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException28);
        java.lang.String str30 = functionEvaluationException28.getPattern();
        java.lang.String str31 = functionEvaluationException28.getPattern();
        java.lang.Object[] objArray32 = functionEvaluationException28.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100", objArray32);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ", objArray32);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray45);
        java.lang.Object[] objArray47 = derivativeException46.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray62 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("", objArray62);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray62);
        java.lang.Object[] objArray65 = new java.lang.Object[] { 2, switchingFunctionsHandler53, 1, objArray62 };
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) mathException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) functionEvaluationException72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) functionEvaluationException75);
        java.lang.Object[] objArray84 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException("", objArray84);
        org.apache.commons.math.ode.IntegratorException integratorException86 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray84);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException86);
        java.lang.Throwable[] throwableArray88 = integratorException86.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException89 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException86);
        functionEvaluationException75.addSuppressed((java.lang.Throwable) integratorException86);
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException("hi!", objArray47, (java.lang.Throwable) integratorException86);
        org.apache.commons.math.ConvergenceException convergenceException92 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", objArray47);
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray47);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Convergence failed", objArray47);
        java.lang.Throwable[] throwableArray95 = mathException94.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException96 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", objArray32, (java.lang.Throwable) mathException94);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray88);
        org.junit.Assert.assertNotNull(throwableArray95);
    }

    @Test
    public void test09516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09516");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        boolean boolean8 = switchingFunctionsHandler0.stop();
        double double9 = switchingFunctionsHandler0.getEventTime();
        double double10 = switchingFunctionsHandler0.getEventTime();
        double double11 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = switchingFunctionsHandler13.evaluateStep(stepInterpolator15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean19 = switchingFunctionsHandler18.isEmpty();
        double[] doubleArray22 = new double[] { 100.0d };
        boolean boolean23 = switchingFunctionsHandler18.reset((double) 0L, doubleArray22);
        switchingFunctionsHandler13.stepAccepted((double) (byte) 10, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean27 = switchingFunctionsHandler26.isEmpty();
        double[] doubleArray30 = new double[] { 100.0d };
        boolean boolean31 = switchingFunctionsHandler26.reset((double) 0L, doubleArray30);
        switchingFunctionsHandler13.stepAccepted(100.0d, doubleArray30);
        double double33 = switchingFunctionsHandler13.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler13.add(switchingFunction34, (double) 10, (double) (byte) 0, 3);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean41 = switchingFunctionsHandler40.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler40.evaluateStep(stepInterpolator42);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        switchingFunctionsHandler40.add(switchingFunction44, (double) 0L, 1.0d, (int) (short) 1);
        boolean boolean49 = switchingFunctionsHandler40.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        switchingFunctionsHandler51.add(switchingFunction52, (double) (-1), (double) 3, 0);
        double[] doubleArray64 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean65 = switchingFunctionsHandler51.reset((double) (-1), doubleArray64);
        boolean boolean66 = switchingFunctionsHandler51.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler68 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean69 = switchingFunctionsHandler68.isEmpty();
        double[] doubleArray72 = new double[] { 100.0d };
        boolean boolean73 = switchingFunctionsHandler68.reset((double) 0L, doubleArray72);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean76 = switchingFunctionsHandler75.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator77 = null;
        boolean boolean78 = switchingFunctionsHandler75.evaluateStep(stepInterpolator77);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler80 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean81 = switchingFunctionsHandler80.isEmpty();
        double[] doubleArray84 = new double[] { 100.0d };
        boolean boolean85 = switchingFunctionsHandler80.reset((double) 0L, doubleArray84);
        boolean boolean86 = switchingFunctionsHandler75.reset((double) 1, doubleArray84);
        boolean boolean87 = switchingFunctionsHandler68.reset((double) 100, doubleArray84);
        boolean boolean88 = switchingFunctionsHandler51.reset((double) (-1.0f), doubleArray84);
        boolean boolean89 = switchingFunctionsHandler40.reset((-1.0d), doubleArray84);
        boolean boolean90 = switchingFunctionsHandler13.reset(0.0d, doubleArray84);
        switchingFunctionsHandler0.stepAccepted(35.0d, doubleArray84);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator92 = null;
        boolean boolean93 = switchingFunctionsHandler0.evaluateStep(stepInterpolator92);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test09517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09517");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ");
        java.lang.Object[] objArray6 = convergenceException5.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray19 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray19);
        java.lang.Object[] objArray22 = new java.lang.Object[] { 2, switchingFunctionsHandler10, 1, objArray19 };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) mathException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", objArray6, (java.lang.Throwable) mathException26);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray6, (java.lang.Throwable) derivativeException42);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, (java.lang.Throwable) integratorException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException44);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException44);
        java.lang.Throwable[] throwableArray48 = derivativeException47.getSuppressed();
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(throwableArray48);
    }

    @Test
    public void test09518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09518");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray31);
        java.lang.Object[] objArray34 = new java.lang.Object[] { 2, switchingFunctionsHandler22, 1, objArray31 };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) mathException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException44);
        java.lang.Throwable[] throwableArray47 = functionEvaluationException44.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) (-1));
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray47, (java.lang.Throwable) functionEvaluationException50);
        java.lang.Throwable throwable52 = null;
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray47, throwable52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", (java.lang.Object[]) throwableArray47);
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray67);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray67);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("", strArray67);
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!", strArray67);
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", strArray67);
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray67);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray67);
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) throwableArray47, (java.lang.Throwable) mathException74);
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException87 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray86);
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray86);
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray86);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray86);
        java.lang.String str91 = functionEvaluationException90.getPattern();
        mathException74.addSuppressed((java.lang.Throwable) functionEvaluationException90);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: " + "'", str91, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test09519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09519");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "Evaluation failed for argument = {0}");
        java.lang.Object[] objArray6 = functionEvaluationException5.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray21 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("", objArray21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray21);
        java.lang.Object[] objArray24 = new java.lang.Object[] { 2, switchingFunctionsHandler12, 1, objArray21 };
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) mathException28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException31);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", objArray6, (java.lang.Throwable) derivativeException32);
        java.lang.Object[] objArray47 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("", objArray47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray47);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray47);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray62);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("", strArray62);
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray62);
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray76);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray76);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray76);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray76);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Object[]) strArray62, (java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray47, (java.lang.Throwable) mathException81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.IntegratorException: ");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException87 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, (java.lang.Throwable) functionEvaluationException86);
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray47, (java.lang.Throwable) functionEvaluationException86);
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", objArray6, (java.lang.Throwable) functionEvaluationException86);
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) convergenceException89);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray76);
    }

    @Test
    public void test09520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09520");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler0.add(switchingFunction21, (double) 10, (double) (byte) 0, 3);
        double double26 = switchingFunctionsHandler0.getEventTime();
        boolean boolean27 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = switchingFunctionsHandler0.evaluateStep(stepInterpolator28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test09521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09521");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler0.evaluateStep(stepInterpolator20);
        double double22 = switchingFunctionsHandler0.getEventTime();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler25.add(switchingFunction26, (double) (-1), (double) 3, 0);
        double[] doubleArray38 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean39 = switchingFunctionsHandler25.reset((double) (-1), doubleArray38);
        boolean boolean40 = switchingFunctionsHandler25.isEmpty();
        double double41 = switchingFunctionsHandler25.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        switchingFunctionsHandler25.add(switchingFunction42, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean47 = switchingFunctionsHandler25.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean50 = switchingFunctionsHandler49.isEmpty();
        double[] doubleArray53 = new double[] { 100.0d };
        boolean boolean54 = switchingFunctionsHandler49.reset((double) 0L, doubleArray53);
        boolean boolean55 = switchingFunctionsHandler25.reset((double) 100L, doubleArray53);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean58 = switchingFunctionsHandler57.isEmpty();
        boolean boolean59 = switchingFunctionsHandler57.stop();
        boolean boolean60 = switchingFunctionsHandler57.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        switchingFunctionsHandler62.add(switchingFunction63, (double) (-1), (double) 3, 0);
        double[] doubleArray75 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean76 = switchingFunctionsHandler62.reset((double) (-1), doubleArray75);
        boolean boolean77 = switchingFunctionsHandler62.isEmpty();
        boolean boolean78 = switchingFunctionsHandler62.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction79 = null;
        switchingFunctionsHandler62.add(switchingFunction79, (double) (byte) 0, 0.0d, (int) ' ');
        double[] doubleArray88 = new double[] { 1.0f, (-1.0f), 100.0d };
        boolean boolean89 = switchingFunctionsHandler62.reset((double) 1L, doubleArray88);
        switchingFunctionsHandler57.stepAccepted(52.0d, doubleArray88);
        boolean boolean91 = switchingFunctionsHandler25.reset(52.0d, doubleArray88);
        boolean boolean92 = switchingFunctionsHandler0.reset((double) 100, doubleArray88);
        double double93 = switchingFunctionsHandler0.getEventTime();
        double double94 = switchingFunctionsHandler0.getEventTime();
        boolean boolean95 = switchingFunctionsHandler0.stop();
        boolean boolean96 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
        org.junit.Assert.assertTrue(Double.isNaN(double94));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test09522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09522");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray22 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("", objArray22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray22);
        java.lang.Object[] objArray25 = new java.lang.Object[] { 2, switchingFunctionsHandler13, 1, objArray22 };
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray22, (java.lang.Throwable) mathException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray22, (java.lang.Throwable) functionEvaluationException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray22, (java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray22);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray48);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray48);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray48);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException51);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", objArray22, (java.lang.Throwable) convergenceException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("", objArray22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "");
        java.lang.Object[] objArray59 = functionEvaluationException58.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException58);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray22, (java.lang.Throwable) functionEvaluationException58);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "hi!");
        java.lang.String str67 = functionEvaluationException66.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) functionEvaluationException66);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException", objArray22, (java.lang.Throwable) functionEvaluationException66);
        double double70 = functionEvaluationException66.getArgument();
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException66);
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException66);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
    }

    @Test
    public void test09523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09523");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction2 = null;
        switchingFunctionsHandler0.add(switchingFunction2, (double) (-1), (double) 'a', (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) (byte) -1, 100.0d, (int) ' ');
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler14.add(switchingFunction15, (double) (-1), (double) 3, 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler21.add(switchingFunction22, (double) (-1), (double) 3, 0);
        double[] doubleArray34 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean35 = switchingFunctionsHandler21.reset((double) (-1), doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean38 = switchingFunctionsHandler37.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = switchingFunctionsHandler37.evaluateStep(stepInterpolator39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean43 = switchingFunctionsHandler42.isEmpty();
        double[] doubleArray46 = new double[] { 100.0d };
        boolean boolean47 = switchingFunctionsHandler42.reset((double) 0L, doubleArray46);
        switchingFunctionsHandler37.stepAccepted((double) (byte) 10, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        switchingFunctionsHandler37.add(switchingFunction49, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean56 = switchingFunctionsHandler55.isEmpty();
        double[] doubleArray59 = new double[] { 100.0d };
        boolean boolean60 = switchingFunctionsHandler55.reset((double) 0L, doubleArray59);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean63 = switchingFunctionsHandler62.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        boolean boolean65 = switchingFunctionsHandler62.evaluateStep(stepInterpolator64);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean68 = switchingFunctionsHandler67.isEmpty();
        double[] doubleArray71 = new double[] { 100.0d };
        boolean boolean72 = switchingFunctionsHandler67.reset((double) 0L, doubleArray71);
        boolean boolean73 = switchingFunctionsHandler62.reset((double) 1, doubleArray71);
        boolean boolean74 = switchingFunctionsHandler55.reset((double) 100, doubleArray71);
        boolean boolean75 = switchingFunctionsHandler37.reset((double) (byte) -1, doubleArray71);
        boolean boolean76 = switchingFunctionsHandler21.reset((double) (byte) 1, doubleArray71);
        boolean boolean77 = switchingFunctionsHandler14.reset((double) 10L, doubleArray71);
        boolean boolean78 = switchingFunctionsHandler0.reset(35.0d, doubleArray71);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = switchingFunctionsHandler0.evaluateStep(stepInterpolator79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test09524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09524");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        switchingFunctionsHandler22.stepAccepted((double) (byte) 10, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray31);
        boolean boolean35 = switchingFunctionsHandler0.isEmpty();
        double double36 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        switchingFunctionsHandler0.add(switchingFunction37, (double) (-1L), (double) 1L, 100);
        boolean boolean42 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test09525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09525");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray16 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray16);
        java.lang.Object[] objArray19 = new java.lang.Object[] { 2, switchingFunctionsHandler7, 1, objArray16 };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray16, (java.lang.Throwable) mathException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException24);
        java.lang.Object[] objArray26 = functionEvaluationException24.getArguments();
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", (java.lang.Throwable) functionEvaluationException24);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray43);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray43);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray43);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.MathException", (java.lang.Object[]) strArray43);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Throwable) functionEvaluationException49);
        mathException27.addSuppressed((java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException27);
        java.lang.Throwable[] throwableArray54 = integratorException53.getSuppressed();
        java.lang.Object[] objArray60 = new java.lang.Object[] { 100.0f, (byte) 10 };
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray60);
        java.lang.Object[] objArray72 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("", objArray72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray72);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("", objArray72, (java.lang.Throwable) functionEvaluationException78);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException78);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("", objArray60, (java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException80);
        org.apache.commons.math.ode.IntegratorException integratorException84 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException80);
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException80);
        java.lang.String str86 = convergenceException85.getPattern();
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray54, (java.lang.Throwable) convergenceException85);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException92 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException93 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100", (java.lang.Throwable) functionEvaluationException92);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) throwableArray54, (java.lang.Throwable) functionEvaluationException92);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[100.0, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[100.0, 10]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
    }

    @Test
    public void test09526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09526");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        double double16 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean25 = switchingFunctionsHandler24.isEmpty();
        double[] doubleArray28 = new double[] { 100.0d };
        boolean boolean29 = switchingFunctionsHandler24.reset((double) 0L, doubleArray28);
        boolean boolean30 = switchingFunctionsHandler0.reset((double) 100L, doubleArray28);
        boolean boolean31 = switchingFunctionsHandler0.isEmpty();
        boolean boolean32 = switchingFunctionsHandler0.isEmpty();
        boolean boolean33 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler0.add(switchingFunction34, (double) 1.0f, 100.0d, (int) 'a');
        boolean boolean39 = switchingFunctionsHandler0.stop();
        double double40 = switchingFunctionsHandler0.getEventTime();
        boolean boolean41 = switchingFunctionsHandler0.stop();
        double double42 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction43 = null;
        switchingFunctionsHandler0.add(switchingFunction43, (double) 1.0f, (double) (byte) 1, 2);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
    }

    @Test
    public void test09527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09527");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.stop();
        double double5 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) (-1L), (double) 2, 3);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler13.add(switchingFunction15, (double) (-1), (double) 'a', (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler13.add(switchingFunction20, (double) (byte) -1, 100.0d, (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler13.add(switchingFunction25, Double.NaN, (double) '4', (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean32 = switchingFunctionsHandler31.isEmpty();
        double[] doubleArray35 = new double[] { 100.0d };
        boolean boolean36 = switchingFunctionsHandler31.reset((double) 0L, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean39 = switchingFunctionsHandler38.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler38.evaluateStep(stepInterpolator40);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean44 = switchingFunctionsHandler43.isEmpty();
        double[] doubleArray47 = new double[] { 100.0d };
        boolean boolean48 = switchingFunctionsHandler43.reset((double) 0L, doubleArray47);
        boolean boolean49 = switchingFunctionsHandler38.reset((double) 1, doubleArray47);
        boolean boolean50 = switchingFunctionsHandler31.reset((double) 100, doubleArray47);
        double double51 = switchingFunctionsHandler31.getEventTime();
        boolean boolean52 = switchingFunctionsHandler31.stop();
        boolean boolean53 = switchingFunctionsHandler31.isEmpty();
        double double54 = switchingFunctionsHandler31.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler31.evaluateStep(stepInterpolator55);
        boolean boolean57 = switchingFunctionsHandler31.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean60 = switchingFunctionsHandler59.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        boolean boolean62 = switchingFunctionsHandler59.evaluateStep(stepInterpolator61);
        boolean boolean63 = switchingFunctionsHandler59.stop();
        double double64 = switchingFunctionsHandler59.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean67 = switchingFunctionsHandler66.isEmpty();
        double[] doubleArray70 = new double[] { 100.0d };
        boolean boolean71 = switchingFunctionsHandler66.reset((double) 0L, doubleArray70);
        boolean boolean72 = switchingFunctionsHandler59.reset((double) 0L, doubleArray70);
        boolean boolean73 = switchingFunctionsHandler31.reset(0.0d, doubleArray70);
        boolean boolean74 = switchingFunctionsHandler13.reset((double) (-1L), doubleArray70);
        boolean boolean75 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray70);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test09528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09528");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("", objArray35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray35);
        java.lang.Object[] objArray38 = new java.lang.Object[] { 2, switchingFunctionsHandler26, 1, objArray35 };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) mathException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) functionEvaluationException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray16, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "", (java.lang.Throwable) derivativeException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("", (java.lang.Throwable) derivativeException55);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException57);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray38);
    }

    @Test
    public void test09529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09529");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("", objArray35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray35);
        java.lang.Object[] objArray38 = new java.lang.Object[] { 2, switchingFunctionsHandler26, 1, objArray35 };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) mathException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) functionEvaluationException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray16, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray16);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray16);
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray69);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray69);
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray69);
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray69);
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", strArray69);
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray69);
        java.lang.String[] strArray85 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException86 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray85);
        org.apache.commons.math.ode.IntegratorException integratorException87 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray85);
        org.apache.commons.math.ode.IntegratorException integratorException88 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray85);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, (java.lang.Throwable) integratorException88);
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray69, (java.lang.Throwable) integratorException88);
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray16, (java.lang.Throwable) convergenceException90);
        org.apache.commons.math.ode.DerivativeException derivativeException92 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray85);
    }

    @Test
    public void test09530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09530");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray17 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray17);
        java.lang.Object[] objArray20 = new java.lang.Object[] { 2, switchingFunctionsHandler8, 1, objArray17 };
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) mathException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) functionEvaluationException27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException27);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Throwable) mathException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) mathException32);
        java.lang.String str34 = functionEvaluationException33.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException33);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str34, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!");
    }

    @Test
    public void test09531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09531");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler0.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler0.add(switchingFunction9, 97.0d, 100.0d, 10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test09532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09532");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        double double22 = switchingFunctionsHandler0.getEventTime();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler0.add(switchingFunction25, (double) (short) -1, (double) (-1L), 1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = switchingFunctionsHandler0.evaluateStep(stepInterpolator30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test09533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09533");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        switchingFunctionsHandler22.stepAccepted((double) (byte) 10, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray31);
        boolean boolean35 = switchingFunctionsHandler0.isEmpty();
        boolean boolean36 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        switchingFunctionsHandler0.add(switchingFunction37, (double) (short) 0, 3.0d, (int) 'a');
        double double42 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction43 = null;
        switchingFunctionsHandler0.add(switchingFunction43, (double) 10.0f, 3.0d, (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        switchingFunctionsHandler0.add(switchingFunction48, (double) (short) 0, 0.0d, (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        switchingFunctionsHandler0.add(switchingFunction53, (double) (byte) 1, (double) 2, 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        switchingFunctionsHandler0.add(switchingFunction58, (double) '4', 35.0d, (int) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        switchingFunctionsHandler0.add(switchingFunction63, (double) 1.0f, 2.0d, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction68 = null;
        switchingFunctionsHandler0.add(switchingFunction68, (double) 100, 0.0d, (int) 'a');
        boolean boolean73 = switchingFunctionsHandler0.stop();
        boolean boolean74 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test09534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09534");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray20);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", strArray20);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray51 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("", objArray51);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray51);
        java.lang.Object[] objArray54 = new java.lang.Object[] { 2, switchingFunctionsHandler42, 1, objArray51 };
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray51, (java.lang.Throwable) mathException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray51, (java.lang.Throwable) functionEvaluationException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray51, (java.lang.Throwable) functionEvaluationException64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray51);
        java.lang.String str67 = functionEvaluationException66.getPattern();
        java.lang.Object[] objArray68 = functionEvaluationException66.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double71 = functionEvaluationException70.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray68, (java.lang.Throwable) functionEvaluationException70);
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray68);
        java.lang.Throwable throwable74 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray68, throwable74);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "Evaluation failed for argument = 100", (java.lang.Object[]) strArray20, (java.lang.Throwable) convergenceException76);
        double double78 = functionEvaluationException77.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) functionEvaluationException77);
        double double80 = functionEvaluationException79.getArgument();
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-1.0d) + "'", double71 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 10.0d + "'", double80 == 10.0d);
    }

    @Test
    public void test09535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09535");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray10);
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException(throwable14);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!");
        mathException15.addSuppressed((java.lang.Throwable) mathException17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException15);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray10, (java.lang.Throwable) derivativeException19);
        java.lang.Object[] objArray33 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("", objArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException34);
        java.lang.Throwable[] throwableArray36 = derivativeException35.getSuppressed();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray45);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray62 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("", objArray62);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray62);
        java.lang.Object[] objArray65 = new java.lang.Object[] { 2, switchingFunctionsHandler53, 1, objArray62 };
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) mathException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) functionEvaluationException72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) functionEvaluationException75);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray45, (java.lang.Throwable) functionEvaluationException75);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray36, (java.lang.Throwable) mathException77);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) mathException78);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException79);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) convergenceException80);
        java.lang.String str82 = convergenceException80.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException80);
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray10, (java.lang.Throwable) convergenceException80);
        org.apache.commons.math.ode.DerivativeException derivativeException85 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException84);
        java.lang.String str86 = convergenceException84.getPattern();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: " + "'", str82, "org.apache.commons.math.FunctionEvaluationException: ");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: " + "'", str86, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test09536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09536");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray11);
        java.lang.Throwable[] throwableArray16 = derivativeException15.getSuppressed();
        java.lang.Throwable[] throwableArray17 = derivativeException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray17);
        java.lang.String str19 = convergenceException18.getPattern();
        java.lang.Object[] objArray20 = convergenceException18.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException18);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "", (java.lang.Object[]) strArray37, (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 100", (java.lang.Object[]) strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray37);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray65 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("", objArray65);
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray65);
        java.lang.Object[] objArray68 = new java.lang.Object[] { 2, switchingFunctionsHandler56, 1, objArray65 };
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray65, (java.lang.Throwable) mathException72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray65, (java.lang.Throwable) functionEvaluationException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray65, (java.lang.Throwable) functionEvaluationException78);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException80 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray65);
        java.lang.String str81 = functionEvaluationException80.getPattern();
        java.lang.Object[] objArray82 = functionEvaluationException80.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: hi!", objArray82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException83);
        java.lang.String str85 = convergenceException83.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray37, (java.lang.Throwable) convergenceException83);
        convergenceException18.addSuppressed((java.lang.Throwable) convergenceException86);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str19, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str85, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test09537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09537");
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", objArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", objArray14, (java.lang.Throwable) functionEvaluationException20);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.String str24 = convergenceException23.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray14, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) functionEvaluationException25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray44 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("", objArray44);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray44);
        java.lang.Object[] objArray47 = new java.lang.Object[] { 2, switchingFunctionsHandler35, 1, objArray44 };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray44, (java.lang.Throwable) mathException51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray44);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray44);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("", objArray69);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray69);
        java.lang.Object[] objArray72 = new java.lang.Object[] { 2, switchingFunctionsHandler60, 1, objArray69 };
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray69, (java.lang.Throwable) mathException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray69);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException80 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.MathException: hi!", objArray44, (java.lang.Throwable) mathException79);
        java.lang.Throwable[] throwableArray81 = mathException79.getSuppressed();
        derivativeException27.addSuppressed((java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.IntegratorException integratorException84 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException27);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertNotNull(throwableArray81);
    }

    @Test
    public void test09538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09538");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        double double6 = switchingFunctionsHandler0.getEventTime();
        boolean boolean7 = switchingFunctionsHandler0.stop();
        boolean boolean8 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler0.evaluateStep(stepInterpolator9);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        boolean boolean12 = switchingFunctionsHandler0.stop();
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test09539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09539");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("", objArray29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray29);
        java.lang.Object[] objArray32 = new java.lang.Object[] { 2, switchingFunctionsHandler20, 1, objArray29 };
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) mathException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) functionEvaluationException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) functionEvaluationException42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray12, (java.lang.Throwable) functionEvaluationException42);
        java.lang.Throwable[] throwableArray45 = functionEvaluationException42.getSuppressed();
        java.lang.Throwable[] throwableArray46 = functionEvaluationException42.getSuppressed();
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray46);
        java.lang.String str48 = mathException47.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException47);
        java.lang.String str50 = functionEvaluationException49.getPattern();
        java.lang.Object[] objArray51 = functionEvaluationException49.getArguments();
        double double52 = functionEvaluationException49.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), (java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException49);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str48, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.apache.commons.math.MathException: " + "'", str50, "org.apache.commons.math.MathException: ");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    }

    @Test
    public void test09540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09540");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.stop();
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        double double8 = switchingFunctionsHandler0.getEventTime();
        double double9 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean12 = switchingFunctionsHandler11.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler11.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean17 = switchingFunctionsHandler16.isEmpty();
        double[] doubleArray20 = new double[] { 100.0d };
        boolean boolean21 = switchingFunctionsHandler16.reset((double) 0L, doubleArray20);
        switchingFunctionsHandler11.stepAccepted((double) (byte) 10, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler11.add(switchingFunction23, (double) (-1), (double) 100.0f, 10);
        double double28 = switchingFunctionsHandler11.getEventTime();
        boolean boolean29 = switchingFunctionsHandler11.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean32 = switchingFunctionsHandler31.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler31.evaluateStep(stepInterpolator33);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        switchingFunctionsHandler31.add(switchingFunction35, (double) 0L, 1.0d, (int) (short) 1);
        double double40 = switchingFunctionsHandler31.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean46 = switchingFunctionsHandler45.isEmpty();
        double[] doubleArray49 = new double[] { 100.0d };
        boolean boolean50 = switchingFunctionsHandler45.reset((double) 0L, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean53 = switchingFunctionsHandler52.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = switchingFunctionsHandler52.evaluateStep(stepInterpolator54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean58 = switchingFunctionsHandler57.isEmpty();
        double[] doubleArray61 = new double[] { 100.0d };
        boolean boolean62 = switchingFunctionsHandler57.reset((double) 0L, doubleArray61);
        boolean boolean63 = switchingFunctionsHandler52.reset((double) 1, doubleArray61);
        boolean boolean64 = switchingFunctionsHandler45.reset((double) 100, doubleArray61);
        double double65 = switchingFunctionsHandler45.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean68 = switchingFunctionsHandler67.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        boolean boolean70 = switchingFunctionsHandler67.evaluateStep(stepInterpolator69);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean73 = switchingFunctionsHandler72.isEmpty();
        double[] doubleArray76 = new double[] { 100.0d };
        boolean boolean77 = switchingFunctionsHandler72.reset((double) 0L, doubleArray76);
        switchingFunctionsHandler67.stepAccepted((double) (byte) 10, doubleArray76);
        switchingFunctionsHandler45.stepAccepted(0.0d, doubleArray76);
        switchingFunctionsHandler42.stepAccepted((double) (short) 0, doubleArray76);
        boolean boolean81 = switchingFunctionsHandler31.reset((double) 100, doubleArray76);
        boolean boolean82 = switchingFunctionsHandler11.reset(35.0d, doubleArray76);
        boolean boolean83 = switchingFunctionsHandler0.reset((double) (short) 10, doubleArray76);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test09541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09541");
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "hi!", (java.lang.Throwable) mathException9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("", objArray25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray25);
        java.lang.Object[] objArray28 = new java.lang.Object[] { 2, switchingFunctionsHandler16, 1, objArray25 };
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray25, (java.lang.Throwable) mathException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray25, (java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray25, (java.lang.Throwable) functionEvaluationException38);
        java.lang.Object[] objArray47 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("", objArray47);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray47);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException49);
        java.lang.Throwable[] throwableArray51 = integratorException49.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException49);
        functionEvaluationException38.addSuppressed((java.lang.Throwable) integratorException49);
        functionEvaluationException10.addSuppressed((java.lang.Throwable) integratorException49);
        java.lang.Throwable[] throwableArray55 = integratorException49.getSuppressed();
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray55);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) throwableArray55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        double double63 = functionEvaluationException62.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException62);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException64);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException65);
        java.lang.Throwable[] throwableArray68 = mathException67.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "", (java.lang.Object[]) throwableArray55, (java.lang.Throwable) mathException67);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("", (java.lang.Throwable) functionEvaluationException69);
        double double71 = functionEvaluationException69.getArgument();
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 52.0d + "'", double63 == 52.0d);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 100.0d + "'", double71 == 100.0d);
    }

    @Test
    public void test09542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09542");
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException13);
        java.lang.Object[] objArray15 = mathException14.getArguments();
        java.lang.Throwable throwable16 = null;
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", objArray15, throwable16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray15);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException25);
        java.lang.Object[] objArray27 = mathException26.getArguments();
        java.lang.Throwable throwable28 = null;
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!", objArray27, throwable28);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException33);
        java.lang.Throwable[] throwableArray35 = convergenceException33.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException33);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: hi!", objArray27, (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray15, (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "", objArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray54 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("", objArray54);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray54);
        java.lang.Object[] objArray57 = new java.lang.Object[] { 2, switchingFunctionsHandler45, 1, objArray54 };
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray54, (java.lang.Throwable) mathException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray54, (java.lang.Throwable) functionEvaluationException64);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException64);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) convergenceException66);
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException67);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: hi!", objArray15, (java.lang.Throwable) integratorException68);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 52", (java.lang.Throwable) integratorException68);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException(52.0d, "", (java.lang.Throwable) convergenceException71);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray57);
    }

    @Test
    public void test09543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09543");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) 0, (double) (short) 1, (int) (byte) -1);
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        boolean boolean16 = switchingFunctionsHandler14.stop();
        double double17 = switchingFunctionsHandler14.getEventTime();
        boolean boolean18 = switchingFunctionsHandler14.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler14.add(switchingFunction19, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray25 = new double[] {};
        boolean boolean26 = switchingFunctionsHandler14.reset((double) (short) 1, doubleArray25);
        boolean boolean27 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray25);
        boolean boolean28 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean31 = switchingFunctionsHandler30.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        switchingFunctionsHandler30.add(switchingFunction32, (double) (-1), (double) 'a', (int) (short) 0);
        double[] doubleArray38 = null;
        boolean boolean39 = switchingFunctionsHandler30.reset((double) 3, doubleArray38);
        double double40 = switchingFunctionsHandler30.getEventTime();
        boolean boolean41 = switchingFunctionsHandler30.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean44 = switchingFunctionsHandler43.isEmpty();
        boolean boolean45 = switchingFunctionsHandler43.stop();
        double double46 = switchingFunctionsHandler43.getEventTime();
        boolean boolean47 = switchingFunctionsHandler43.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        switchingFunctionsHandler43.add(switchingFunction48, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray54 = new double[] {};
        boolean boolean55 = switchingFunctionsHandler43.reset((double) (short) 1, doubleArray54);
        boolean boolean56 = switchingFunctionsHandler30.reset((double) 2, doubleArray54);
        boolean boolean57 = switchingFunctionsHandler0.reset(Double.NaN, doubleArray54);
        double double58 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        switchingFunctionsHandler0.add(switchingFunction59, (double) 2, Double.NaN, (int) '#');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
    }

    @Test
    public void test09544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09544");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) 0, (double) (short) 1, (int) (byte) -1);
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, (double) 1, (double) 1, (int) 'a');
        double double18 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean21 = switchingFunctionsHandler20.isEmpty();
        double[] doubleArray24 = new double[] { 100.0d };
        boolean boolean25 = switchingFunctionsHandler20.reset((double) 0L, doubleArray24);
        boolean boolean26 = switchingFunctionsHandler20.stop();
        double double27 = switchingFunctionsHandler20.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean30 = switchingFunctionsHandler29.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler29.evaluateStep(stepInterpolator31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean35 = switchingFunctionsHandler34.isEmpty();
        double[] doubleArray38 = new double[] { 100.0d };
        boolean boolean39 = switchingFunctionsHandler34.reset((double) 0L, doubleArray38);
        switchingFunctionsHandler29.stepAccepted((double) (byte) 10, doubleArray38);
        boolean boolean41 = switchingFunctionsHandler20.reset((double) 1.0f, doubleArray38);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler20.evaluateStep(stepInterpolator42);
        double double44 = switchingFunctionsHandler20.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean47 = switchingFunctionsHandler46.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = switchingFunctionsHandler46.evaluateStep(stepInterpolator48);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        boolean boolean51 = switchingFunctionsHandler46.evaluateStep(stepInterpolator50);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        switchingFunctionsHandler46.add(switchingFunction52, (double) (short) -1, (double) (byte) 1, (int) (short) 10);
        boolean boolean57 = switchingFunctionsHandler46.stop();
        double double58 = switchingFunctionsHandler46.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean61 = switchingFunctionsHandler60.isEmpty();
        double[] doubleArray64 = new double[] { 100.0d };
        boolean boolean65 = switchingFunctionsHandler60.reset((double) 0L, doubleArray64);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean68 = switchingFunctionsHandler67.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        boolean boolean70 = switchingFunctionsHandler67.evaluateStep(stepInterpolator69);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean73 = switchingFunctionsHandler72.isEmpty();
        double[] doubleArray76 = new double[] { 100.0d };
        boolean boolean77 = switchingFunctionsHandler72.reset((double) 0L, doubleArray76);
        boolean boolean78 = switchingFunctionsHandler67.reset((double) 1, doubleArray76);
        boolean boolean79 = switchingFunctionsHandler60.reset((double) 100, doubleArray76);
        double double80 = switchingFunctionsHandler60.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler82 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean83 = switchingFunctionsHandler82.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator84 = null;
        boolean boolean85 = switchingFunctionsHandler82.evaluateStep(stepInterpolator84);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler87 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean88 = switchingFunctionsHandler87.isEmpty();
        double[] doubleArray91 = new double[] { 100.0d };
        boolean boolean92 = switchingFunctionsHandler87.reset((double) 0L, doubleArray91);
        switchingFunctionsHandler82.stepAccepted((double) (byte) 10, doubleArray91);
        switchingFunctionsHandler60.stepAccepted(0.0d, doubleArray91);
        boolean boolean95 = switchingFunctionsHandler46.reset(100.0d, doubleArray91);
        boolean boolean96 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted(1.0d, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test09545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09545");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler0.add(switchingFunction25, (double) (-1), 0.0d, (int) (short) 10);
        boolean boolean30 = switchingFunctionsHandler0.isEmpty();
        double double31 = switchingFunctionsHandler0.getEventTime();
        double double32 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler0.add(switchingFunction33, (double) 100.0f, 2.0d, (int) '#');
        boolean boolean38 = switchingFunctionsHandler0.isEmpty();
        double double39 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
    }

    @Test
    public void test09546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09546");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler0.evaluateStep(stepInterpolator20);
        double double22 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler0.add(switchingFunction23, 52.0d, (double) ' ', 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean30 = switchingFunctionsHandler29.isEmpty();
        double[] doubleArray33 = new double[] { 100.0d };
        boolean boolean34 = switchingFunctionsHandler29.reset((double) 0L, doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean37 = switchingFunctionsHandler36.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler36.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        double[] doubleArray45 = new double[] { 100.0d };
        boolean boolean46 = switchingFunctionsHandler41.reset((double) 0L, doubleArray45);
        boolean boolean47 = switchingFunctionsHandler36.reset((double) 1, doubleArray45);
        boolean boolean48 = switchingFunctionsHandler29.reset((double) 100, doubleArray45);
        double double49 = switchingFunctionsHandler29.getEventTime();
        boolean boolean50 = switchingFunctionsHandler29.stop();
        boolean boolean51 = switchingFunctionsHandler29.isEmpty();
        double double52 = switchingFunctionsHandler29.getEventTime();
        boolean boolean53 = switchingFunctionsHandler29.stop();
        boolean boolean54 = switchingFunctionsHandler29.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean57 = switchingFunctionsHandler56.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler56.evaluateStep(stepInterpolator58);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean62 = switchingFunctionsHandler61.isEmpty();
        double[] doubleArray65 = new double[] { 100.0d };
        boolean boolean66 = switchingFunctionsHandler61.reset((double) 0L, doubleArray65);
        switchingFunctionsHandler56.stepAccepted((double) (byte) 10, doubleArray65);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler69 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean70 = switchingFunctionsHandler69.isEmpty();
        double[] doubleArray73 = new double[] { 100.0d };
        boolean boolean74 = switchingFunctionsHandler69.reset((double) 0L, doubleArray73);
        switchingFunctionsHandler56.stepAccepted(100.0d, doubleArray73);
        switchingFunctionsHandler29.stepAccepted((double) 1, doubleArray73);
        boolean boolean77 = switchingFunctionsHandler0.reset((double) 10, doubleArray73);
        double double78 = switchingFunctionsHandler0.getEventTime();
        boolean boolean79 = switchingFunctionsHandler0.stop();
        double double80 = switchingFunctionsHandler0.getEventTime();
        boolean boolean81 = switchingFunctionsHandler0.stop();
        boolean boolean82 = switchingFunctionsHandler0.stop();
        boolean boolean83 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test09547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09547");
        java.lang.Object[] objArray8 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("", objArray8);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray8, (java.lang.Throwable) convergenceException10);
        java.lang.Object[] objArray12 = mathException11.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("", objArray29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray29);
        java.lang.Object[] objArray32 = new java.lang.Object[] { 2, switchingFunctionsHandler20, 1, objArray29 };
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) mathException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) functionEvaluationException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) functionEvaluationException42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray29);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray12, (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException44);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray32);
    }

    @Test
    public void test09548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09548");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler0.add(switchingFunction21, (double) 10, (double) (byte) 0, 3);
        double double26 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler28.add(switchingFunction29, (double) (-1), (double) 3, 0);
        double[] doubleArray41 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean42 = switchingFunctionsHandler28.reset((double) (-1), doubleArray41);
        boolean boolean43 = switchingFunctionsHandler28.isEmpty();
        boolean boolean44 = switchingFunctionsHandler28.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        switchingFunctionsHandler28.add(switchingFunction45, (double) (byte) 0, 0.0d, (int) ' ');
        double[] doubleArray54 = new double[] { 1.0f, (-1.0f), 100.0d };
        boolean boolean55 = switchingFunctionsHandler28.reset((double) 1L, doubleArray54);
        boolean boolean56 = switchingFunctionsHandler0.reset((double) (byte) -1, doubleArray54);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        switchingFunctionsHandler0.add(switchingFunction57, 0.0d, (double) 10.0f, 2);
        double[] doubleArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted(1.0d, doubleArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test09549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09549");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler0.evaluateStep(stepInterpolator24);
        double double26 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler0.evaluateStep(stepInterpolator27);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test09550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09550");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray22 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("", objArray22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray22);
        java.lang.Object[] objArray25 = new java.lang.Object[] { 2, switchingFunctionsHandler13, 1, objArray22 };
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray22, (java.lang.Throwable) mathException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray22, (java.lang.Throwable) functionEvaluationException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray22, (java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray22);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray48);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray48);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray48);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException51);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", objArray22, (java.lang.Throwable) convergenceException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("", objArray22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "");
        java.lang.Object[] objArray59 = functionEvaluationException58.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException58);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray22, (java.lang.Throwable) functionEvaluationException58);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException67);
        java.lang.Object[] objArray69 = mathException68.getArguments();
        java.lang.Throwable throwable70 = null;
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("hi!", objArray69, throwable70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) convergenceException71);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray22, (java.lang.Throwable) functionEvaluationException72);
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) 2, (java.lang.Throwable) functionEvaluationException72);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 10", (java.lang.Throwable) functionEvaluationException75);
        java.lang.String str77 = functionEvaluationException75.getPattern();
        java.lang.Class<?> wildcardClass78 = functionEvaluationException75.getClass();
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str77, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test09551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09551");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        double double22 = switchingFunctionsHandler0.getEventTime();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        double double25 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler0.add(switchingFunction26, (double) 1L, (double) (short) 1, (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean33 = switchingFunctionsHandler32.isEmpty();
        boolean boolean34 = switchingFunctionsHandler32.stop();
        double double35 = switchingFunctionsHandler32.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        switchingFunctionsHandler32.add(switchingFunction36, (double) (byte) -1, (-1.0d), (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        switchingFunctionsHandler32.add(switchingFunction41, (double) (byte) 100, (double) '#', (int) (byte) 10);
        double double46 = switchingFunctionsHandler32.getEventTime();
        boolean boolean47 = switchingFunctionsHandler32.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        switchingFunctionsHandler49.add(switchingFunction50, (double) (-1), (double) 3, 0);
        double[] doubleArray62 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean63 = switchingFunctionsHandler49.reset((double) (-1), doubleArray62);
        boolean boolean64 = switchingFunctionsHandler49.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean67 = switchingFunctionsHandler66.isEmpty();
        double[] doubleArray70 = new double[] { 100.0d };
        boolean boolean71 = switchingFunctionsHandler66.reset((double) 0L, doubleArray70);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler73 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean74 = switchingFunctionsHandler73.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator75 = null;
        boolean boolean76 = switchingFunctionsHandler73.evaluateStep(stepInterpolator75);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler78 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean79 = switchingFunctionsHandler78.isEmpty();
        double[] doubleArray82 = new double[] { 100.0d };
        boolean boolean83 = switchingFunctionsHandler78.reset((double) 0L, doubleArray82);
        boolean boolean84 = switchingFunctionsHandler73.reset((double) 1, doubleArray82);
        boolean boolean85 = switchingFunctionsHandler66.reset((double) 100, doubleArray82);
        boolean boolean86 = switchingFunctionsHandler49.reset((double) (-1.0f), doubleArray82);
        boolean boolean87 = switchingFunctionsHandler32.reset(0.0d, doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((double) '#', doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test09552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09552");
        java.lang.Object[] objArray13 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray13);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException15);
        java.lang.Throwable[] throwableArray17 = integratorException15.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", (java.lang.Object[]) throwableArray17);
        java.lang.Object[] objArray20 = functionEvaluationException19.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", objArray42);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray42);
        java.lang.Object[] objArray45 = new java.lang.Object[] { 2, switchingFunctionsHandler33, 1, objArray42 };
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray42, (java.lang.Throwable) mathException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray42, (java.lang.Throwable) functionEvaluationException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray42, (java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray42);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray68);
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray68);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray68);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException71);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException71);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("hi!", objArray42, (java.lang.Throwable) convergenceException73);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("", objArray42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray42);
        double double77 = functionEvaluationException76.getArgument();
        java.lang.Object[] objArray78 = functionEvaluationException76.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException79 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException76);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException76);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", objArray20, (java.lang.Throwable) functionEvaluationException76);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, (java.lang.Throwable) functionEvaluationException76);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[1, a, 10, a, -1]");
    }

    @Test
    public void test09553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09553");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray26 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("", objArray26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray26);
        java.lang.Object[] objArray29 = new java.lang.Object[] { 2, switchingFunctionsHandler17, 1, objArray26 };
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray26, (java.lang.Throwable) mathException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray26, (java.lang.Throwable) functionEvaluationException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray26, (java.lang.Throwable) functionEvaluationException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray9, (java.lang.Throwable) functionEvaluationException39);
        java.lang.Throwable[] throwableArray42 = functionEvaluationException39.getSuppressed();
        java.lang.Throwable[] throwableArray43 = functionEvaluationException39.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException(32.0d);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray43, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException46);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray43);
    }

    @Test
    public void test09554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09554");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler0.evaluateStep(stepInterpolator20);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        double double24 = switchingFunctionsHandler0.getEventTime();
        double double25 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler0.add(switchingFunction26, (double) 100L, 1.0d, (int) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        switchingFunctionsHandler0.add(switchingFunction31, 1.0d, (double) (short) 0, (int) ' ');
        java.lang.Class<?> wildcardClass36 = switchingFunctionsHandler0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test09555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09555");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler0.add(switchingFunction22, (double) 0, (double) (short) 1, (int) (short) 10);
        boolean boolean27 = switchingFunctionsHandler0.stop();
        boolean boolean28 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler0.add(switchingFunction29, (double) 10.0f, Double.NaN, (int) (byte) 0);
        boolean boolean34 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test09556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09556");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double double2 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean5 = switchingFunctionsHandler4.isEmpty();
        double[] doubleArray8 = new double[] { 100.0d };
        boolean boolean9 = switchingFunctionsHandler4.reset((double) 0L, doubleArray8);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean12 = switchingFunctionsHandler11.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler11.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean17 = switchingFunctionsHandler16.isEmpty();
        double[] doubleArray20 = new double[] { 100.0d };
        boolean boolean21 = switchingFunctionsHandler16.reset((double) 0L, doubleArray20);
        boolean boolean22 = switchingFunctionsHandler11.reset((double) 1, doubleArray20);
        boolean boolean23 = switchingFunctionsHandler4.reset((double) 100, doubleArray20);
        double double24 = switchingFunctionsHandler4.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean27 = switchingFunctionsHandler26.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler26.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean32 = switchingFunctionsHandler31.isEmpty();
        double[] doubleArray35 = new double[] { 100.0d };
        boolean boolean36 = switchingFunctionsHandler31.reset((double) 0L, doubleArray35);
        switchingFunctionsHandler26.stepAccepted((double) (byte) 10, doubleArray35);
        switchingFunctionsHandler4.stepAccepted(0.0d, doubleArray35);
        boolean boolean39 = switchingFunctionsHandler4.isEmpty();
        boolean boolean40 = switchingFunctionsHandler4.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction43 = null;
        switchingFunctionsHandler42.add(switchingFunction43, (double) (-1), (double) 3, 0);
        double[] doubleArray55 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean56 = switchingFunctionsHandler42.reset((double) (-1), doubleArray55);
        switchingFunctionsHandler4.stepAccepted((double) 'a', doubleArray55);
        boolean boolean58 = switchingFunctionsHandler0.reset((double) 3, doubleArray55);
        double[] doubleArray60 = null;
        switchingFunctionsHandler0.stepAccepted((double) (short) 1, doubleArray60);
        double double62 = switchingFunctionsHandler0.getEventTime();
        boolean boolean63 = switchingFunctionsHandler0.isEmpty();
        double double64 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
    }

    @Test
    public void test09557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09557");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean17 = switchingFunctionsHandler16.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler16.evaluateStep(stepInterpolator18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        double[] doubleArray25 = new double[] { 100.0d };
        boolean boolean26 = switchingFunctionsHandler21.reset((double) 0L, doubleArray25);
        switchingFunctionsHandler16.stepAccepted((double) (byte) 10, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        switchingFunctionsHandler16.add(switchingFunction28, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean35 = switchingFunctionsHandler34.isEmpty();
        double[] doubleArray38 = new double[] { 100.0d };
        boolean boolean39 = switchingFunctionsHandler34.reset((double) 0L, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler41.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean47 = switchingFunctionsHandler46.isEmpty();
        double[] doubleArray50 = new double[] { 100.0d };
        boolean boolean51 = switchingFunctionsHandler46.reset((double) 0L, doubleArray50);
        boolean boolean52 = switchingFunctionsHandler41.reset((double) 1, doubleArray50);
        boolean boolean53 = switchingFunctionsHandler34.reset((double) 100, doubleArray50);
        boolean boolean54 = switchingFunctionsHandler16.reset((double) (byte) -1, doubleArray50);
        boolean boolean55 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray50);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean58 = switchingFunctionsHandler57.isEmpty();
        double[] doubleArray61 = new double[] { 100.0d };
        boolean boolean62 = switchingFunctionsHandler57.reset((double) 0L, doubleArray61);
        boolean boolean63 = switchingFunctionsHandler0.reset((double) (byte) -1, doubleArray61);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        switchingFunctionsHandler0.add(switchingFunction64, (double) 1L, 0.0d, 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        switchingFunctionsHandler0.add(switchingFunction69, (double) 1.0f, 35.0d, 0);
        boolean boolean74 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction75 = null;
        switchingFunctionsHandler0.add(switchingFunction75, (double) (-1), (-1.0d), (int) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test09558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09558");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        double double6 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler0.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler0.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler12.stop();
        boolean boolean19 = switchingFunctionsHandler12.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler21.add(switchingFunction22, (double) (-1), (double) 3, 0);
        double[] doubleArray34 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean35 = switchingFunctionsHandler21.reset((double) (-1), doubleArray34);
        boolean boolean36 = switchingFunctionsHandler21.isEmpty();
        double double37 = switchingFunctionsHandler21.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        switchingFunctionsHandler21.add(switchingFunction38, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean43 = switchingFunctionsHandler21.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean46 = switchingFunctionsHandler45.isEmpty();
        double[] doubleArray49 = new double[] { 100.0d };
        boolean boolean50 = switchingFunctionsHandler45.reset((double) 0L, doubleArray49);
        boolean boolean51 = switchingFunctionsHandler21.reset((double) 100L, doubleArray49);
        switchingFunctionsHandler12.stepAccepted((double) 10.0f, doubleArray49);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray49);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = switchingFunctionsHandler0.evaluateStep(stepInterpolator54);
        java.lang.Class<?> wildcardClass56 = switchingFunctionsHandler0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test09559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09559");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean10 = switchingFunctionsHandler9.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler9.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        double[] doubleArray18 = new double[] { 100.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) 0L, doubleArray18);
        boolean boolean20 = switchingFunctionsHandler9.reset((double) 1, doubleArray18);
        boolean boolean21 = switchingFunctionsHandler9.stop();
        double double22 = switchingFunctionsHandler9.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean25 = switchingFunctionsHandler24.isEmpty();
        double[] doubleArray28 = new double[] { 100.0d };
        boolean boolean29 = switchingFunctionsHandler24.reset((double) 0L, doubleArray28);
        boolean boolean30 = switchingFunctionsHandler24.stop();
        double double31 = switchingFunctionsHandler24.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean34 = switchingFunctionsHandler33.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler33.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean39 = switchingFunctionsHandler38.isEmpty();
        double[] doubleArray42 = new double[] { 100.0d };
        boolean boolean43 = switchingFunctionsHandler38.reset((double) 0L, doubleArray42);
        switchingFunctionsHandler33.stepAccepted((double) (byte) 10, doubleArray42);
        boolean boolean45 = switchingFunctionsHandler24.reset((double) 1.0f, doubleArray42);
        switchingFunctionsHandler9.stepAccepted((double) 2, doubleArray42);
        switchingFunctionsHandler0.stepAccepted((double) (-1.0f), doubleArray42);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        switchingFunctionsHandler0.add(switchingFunction48, 0.0d, 100.0d, (int) '#');
        double double53 = switchingFunctionsHandler0.getEventTime();
        double double54 = switchingFunctionsHandler0.getEventTime();
        boolean boolean55 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test09560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09560");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "");
        org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", (java.lang.Throwable) functionEvaluationException5);
        java.lang.Object[] objArray7 = mathException6.getArguments();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", objArray41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray41);
        java.lang.Object[] objArray44 = new java.lang.Object[] { 2, switchingFunctionsHandler32, 1, objArray41 };
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray41, (java.lang.Throwable) mathException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray41, (java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray41, (java.lang.Throwable) functionEvaluationException54);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray41);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray22, (java.lang.Throwable) convergenceException57);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("", strArray22);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "hi!");
        java.lang.String str66 = functionEvaluationException65.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) functionEvaluationException65);
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException67);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray22, (java.lang.Throwable) integratorException68);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", objArray7, (java.lang.Throwable) integratorException68);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) integratorException68);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException68);
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException72);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
    }

    @Test
    public void test09561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09561");
        java.lang.Object[] objArray10 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("", objArray10);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray10, (java.lang.Throwable) convergenceException12);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray23);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray10, (java.lang.Throwable) mathException28);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray46);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray65 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("", objArray65);
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray65);
        java.lang.Object[] objArray68 = new java.lang.Object[] { 2, switchingFunctionsHandler56, 1, objArray65 };
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray65, (java.lang.Throwable) mathException72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray65, (java.lang.Throwable) functionEvaluationException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray65, (java.lang.Throwable) functionEvaluationException78);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray65);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray46, (java.lang.Throwable) convergenceException81);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException("", strArray46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray46);
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException87 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException", strArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException88 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException87);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException", objArray10, (java.lang.Throwable) derivativeException87);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException87);
        java.lang.String str91 = derivativeException87.getPattern();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException" + "'", str91, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException");
    }

    @Test
    public void test09562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09562");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray16 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray16);
        java.lang.Object[] objArray19 = new java.lang.Object[] { 2, switchingFunctionsHandler7, 1, objArray16 };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray16, (java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray16);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray16);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = {0}", objArray16);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", strArray40);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray56);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: hi!", strArray56);
        java.lang.Object[] objArray64 = new java.lang.Object[] { (-1L) };
        java.lang.Object[] objArray72 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("", objArray72);
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray72);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException74);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("hi!", objArray64, (java.lang.Throwable) mathException75);
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException75);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray56, (java.lang.Throwable) mathException75);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray40, (java.lang.Throwable) mathException75);
        java.lang.Object[] objArray80 = mathException75.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException75);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", objArray16, (java.lang.Throwable) mathException75);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException75);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException75);
        org.apache.commons.math.ode.IntegratorException integratorException85 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException75);
        java.lang.String str86 = mathException75.getPattern();
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[-1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[-1]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str86, "org.apache.commons.math.MathException: hi!");
    }

    @Test
    public void test09563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09563");
        java.lang.Object[] objArray7 = new java.lang.Object[] { 100.0f, (byte) 10 };
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray7);
        java.lang.Object[] objArray19 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", objArray19, (java.lang.Throwable) functionEvaluationException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException25);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", objArray7, (java.lang.Throwable) mathException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) mathException27);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException30);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ");
        java.lang.Object[] objArray41 = convergenceException40.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray54 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("", objArray54);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray54);
        java.lang.Object[] objArray57 = new java.lang.Object[] { 2, switchingFunctionsHandler45, 1, objArray54 };
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray54, (java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", objArray41, (java.lang.Throwable) mathException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler69 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("", objArray78);
        org.apache.commons.math.ode.IntegratorException integratorException80 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray78);
        java.lang.Object[] objArray81 = new java.lang.Object[] { 2, switchingFunctionsHandler69, 1, objArray78 };
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException84);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray78, (java.lang.Throwable) mathException85);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException88 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray78, (java.lang.Throwable) functionEvaluationException88);
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException88);
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException("", objArray41, (java.lang.Throwable) functionEvaluationException88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException92 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray41);
        functionEvaluationException30.addSuppressed((java.lang.Throwable) functionEvaluationException92);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[100.0, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[100.0, 10]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray81);
    }

    @Test
    public void test09564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09564");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.FunctionEvaluationException: hi!");
        double double3 = functionEvaluationException2.getArgument();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("", objArray25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray25);
        java.lang.Object[] objArray28 = new java.lang.Object[] { 2, switchingFunctionsHandler16, 1, objArray25 };
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray25, (java.lang.Throwable) mathException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray25, (java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray25, (java.lang.Throwable) functionEvaluationException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray25);
        java.lang.String str41 = functionEvaluationException40.getPattern();
        java.lang.Object[] objArray42 = functionEvaluationException40.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double45 = functionEvaluationException44.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray42, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray42);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException52);
        java.lang.Throwable[] throwableArray54 = convergenceException52.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray54);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException62);
        java.lang.Throwable[] throwableArray64 = convergenceException62.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray64);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray64);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray54, (java.lang.Throwable) functionEvaluationException67);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray42, (java.lang.Throwable) convergenceException68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, (java.lang.Throwable) convergenceException69);
        functionEvaluationException2.addSuppressed((java.lang.Throwable) functionEvaluationException70);
        java.lang.Throwable[] throwableArray72 = functionEvaluationException70.getSuppressed();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1.0d) + "'", double45 == (-1.0d));
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray72);
    }

    @Test
    public void test09565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09565");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler0.evaluateStep(stepInterpolator24);
        boolean boolean26 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        switchingFunctionsHandler0.add(switchingFunction27, (double) (byte) 0, (double) 100L, (int) (byte) 100);
        boolean boolean32 = switchingFunctionsHandler0.stop();
        double double33 = switchingFunctionsHandler0.getEventTime();
        double double34 = switchingFunctionsHandler0.getEventTime();
        boolean boolean35 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean38 = switchingFunctionsHandler37.isEmpty();
        double[] doubleArray41 = new double[] { 100.0d };
        boolean boolean42 = switchingFunctionsHandler37.reset((double) 0L, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean45 = switchingFunctionsHandler44.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler44.evaluateStep(stepInterpolator46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean50 = switchingFunctionsHandler49.isEmpty();
        double[] doubleArray53 = new double[] { 100.0d };
        boolean boolean54 = switchingFunctionsHandler49.reset((double) 0L, doubleArray53);
        boolean boolean55 = switchingFunctionsHandler44.reset((double) 1, doubleArray53);
        boolean boolean56 = switchingFunctionsHandler37.reset((double) 100, doubleArray53);
        double double57 = switchingFunctionsHandler37.getEventTime();
        boolean boolean58 = switchingFunctionsHandler37.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean61 = switchingFunctionsHandler60.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler60.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean66 = switchingFunctionsHandler65.isEmpty();
        double[] doubleArray69 = new double[] { 100.0d };
        boolean boolean70 = switchingFunctionsHandler65.reset((double) 0L, doubleArray69);
        switchingFunctionsHandler60.stepAccepted((double) (byte) 10, doubleArray69);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction72 = null;
        switchingFunctionsHandler60.add(switchingFunction72, (double) (-1), (double) 100.0f, 10);
        boolean boolean77 = switchingFunctionsHandler60.isEmpty();
        boolean boolean78 = switchingFunctionsHandler60.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler80 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean81 = switchingFunctionsHandler80.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator82 = null;
        boolean boolean83 = switchingFunctionsHandler80.evaluateStep(stepInterpolator82);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler85 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean86 = switchingFunctionsHandler85.isEmpty();
        double[] doubleArray89 = new double[] { 100.0d };
        boolean boolean90 = switchingFunctionsHandler85.reset((double) 0L, doubleArray89);
        boolean boolean91 = switchingFunctionsHandler80.reset((double) 1, doubleArray89);
        boolean boolean92 = switchingFunctionsHandler60.reset((double) (-1L), doubleArray89);
        boolean boolean93 = switchingFunctionsHandler37.reset((double) 0.0f, doubleArray89);
        boolean boolean94 = switchingFunctionsHandler0.reset((double) (short) 100, doubleArray89);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test09566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09566");
        java.lang.Object[] objArray13 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("", objArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", objArray13, (java.lang.Throwable) functionEvaluationException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException19);
        java.lang.Object[] objArray22 = functionEvaluationException19.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray22, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray47 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("", objArray47);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray47);
        java.lang.Object[] objArray50 = new java.lang.Object[] { 2, switchingFunctionsHandler38, 1, objArray47 };
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray47, (java.lang.Throwable) mathException54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray47, (java.lang.Throwable) functionEvaluationException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray47, (java.lang.Throwable) functionEvaluationException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray47);
        java.lang.String str63 = functionEvaluationException62.getPattern();
        java.lang.Object[] objArray64 = functionEvaluationException62.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double67 = functionEvaluationException66.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray64, (java.lang.Throwable) functionEvaluationException66);
        org.apache.commons.math.ode.IntegratorException integratorException69 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, (java.lang.Throwable) integratorException69);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("Evaluation failed for argument = 100", objArray22, (java.lang.Throwable) functionEvaluationException70);
        java.lang.Object[] objArray72 = functionEvaluationException70.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException("Convergence failed", objArray72);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException73);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-1.0d) + "'", double67 == (-1.0d));
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
    }

    @Test
    public void test09567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09567");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray31);
        java.lang.Object[] objArray34 = new java.lang.Object[] { 2, switchingFunctionsHandler22, 1, objArray31 };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) mathException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException44);
        java.lang.Throwable[] throwableArray47 = functionEvaluationException44.getSuppressed();
        java.lang.Throwable[] throwableArray48 = functionEvaluationException44.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) throwableArray48);
        java.lang.Throwable throwable50 = null;
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException(throwable50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!");
        mathException51.addSuppressed((java.lang.Throwable) mathException53);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException51);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException51);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException51);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray48, (java.lang.Throwable) mathException51);
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray69);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray69);
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException("", strArray69);
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray69);
        java.lang.Throwable[] throwableArray74 = derivativeException73.getSuppressed();
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray48, (java.lang.Throwable) mathException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException76);
        double double78 = functionEvaluationException77.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException84 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!");
        java.lang.Object[] objArray85 = functionEvaluationException84.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException86 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray85);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException87 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", objArray85);
        functionEvaluationException77.addSuppressed((java.lang.Throwable) functionEvaluationException87);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-1.0d) + "'", double78 == (-1.0d));
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
    }

    @Test
    public void test09568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09568");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.stop();
        boolean boolean5 = switchingFunctionsHandler0.stop();
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler8.add(switchingFunction9, (double) (-1), (double) 3, 0);
        double[] doubleArray21 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean22 = switchingFunctionsHandler8.reset((double) (-1), doubleArray21);
        boolean boolean23 = switchingFunctionsHandler8.isEmpty();
        boolean boolean24 = switchingFunctionsHandler8.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler8.add(switchingFunction25, (double) (byte) 0, 0.0d, (int) ' ');
        double[] doubleArray34 = new double[] { 1.0f, (-1.0f), 100.0d };
        boolean boolean35 = switchingFunctionsHandler8.reset((double) 1L, doubleArray34);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray34);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler0.evaluateStep(stepInterpolator37);
        boolean boolean39 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test09569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09569");
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException(throwable4);
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!");
        mathException5.addSuppressed((java.lang.Throwable) mathException7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException5);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException5);
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 1, (java.lang.Throwable) mathException5);
        java.lang.Object[] objArray13 = mathException5.getArguments();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray43 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("", objArray43);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray43);
        java.lang.Object[] objArray46 = new java.lang.Object[] { 2, switchingFunctionsHandler34, 1, objArray43 };
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray43, (java.lang.Throwable) mathException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray43, (java.lang.Throwable) functionEvaluationException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray43, (java.lang.Throwable) functionEvaluationException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray26, (java.lang.Throwable) functionEvaluationException56);
        java.lang.Throwable[] throwableArray59 = functionEvaluationException56.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray59, (java.lang.Throwable) convergenceException61);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray59);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray59);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 100", objArray13, (java.lang.Throwable) convergenceException64);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: Evaluation failed for argument = -1", objArray13);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(throwableArray59);
    }

    @Test
    public void test09570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09570");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray20 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray20);
        java.lang.Object[] objArray23 = new java.lang.Object[] { 2, switchingFunctionsHandler11, 1, objArray20 };
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray20, (java.lang.Throwable) mathException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray20, (java.lang.Throwable) functionEvaluationException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray20, (java.lang.Throwable) functionEvaluationException33);
        java.lang.Object[] objArray42 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", objArray42);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray42);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException44);
        java.lang.Throwable[] throwableArray46 = integratorException44.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException44);
        functionEvaluationException33.addSuppressed((java.lang.Throwable) integratorException44);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "org.apache.commons.math.MathException: ", (java.lang.Throwable) functionEvaluationException33);
        java.lang.Object[] objArray53 = functionEvaluationException33.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray53);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", objArray53);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[100.0]");
    }

    @Test
    public void test09571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09571");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler0.evaluateStep(stepInterpolator25);
        boolean boolean27 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler0.evaluateStep(stepInterpolator28);
        boolean boolean30 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        switchingFunctionsHandler0.add(switchingFunction31, (double) 100.0f, (double) (short) -1, (int) (byte) 1);
        boolean boolean36 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        switchingFunctionsHandler0.add(switchingFunction37, 3.0d, (double) ' ', (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test09572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09572");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean4 = switchingFunctionsHandler3.isEmpty();
        double[] doubleArray7 = new double[] { 100.0d };
        boolean boolean8 = switchingFunctionsHandler3.reset((double) 0L, doubleArray7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean11 = switchingFunctionsHandler10.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler10.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean16 = switchingFunctionsHandler15.isEmpty();
        double[] doubleArray19 = new double[] { 100.0d };
        boolean boolean20 = switchingFunctionsHandler15.reset((double) 0L, doubleArray19);
        boolean boolean21 = switchingFunctionsHandler10.reset((double) 1, doubleArray19);
        boolean boolean22 = switchingFunctionsHandler3.reset((double) 100, doubleArray19);
        double double23 = switchingFunctionsHandler3.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean26 = switchingFunctionsHandler25.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler25.evaluateStep(stepInterpolator27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean31 = switchingFunctionsHandler30.isEmpty();
        double[] doubleArray34 = new double[] { 100.0d };
        boolean boolean35 = switchingFunctionsHandler30.reset((double) 0L, doubleArray34);
        switchingFunctionsHandler25.stepAccepted((double) (byte) 10, doubleArray34);
        switchingFunctionsHandler3.stepAccepted(0.0d, doubleArray34);
        switchingFunctionsHandler0.stepAccepted((double) (short) 0, doubleArray34);
        double double39 = switchingFunctionsHandler0.getEventTime();
        boolean boolean40 = switchingFunctionsHandler0.isEmpty();
        boolean boolean41 = switchingFunctionsHandler0.stop();
        boolean boolean42 = switchingFunctionsHandler0.isEmpty();
        double double43 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
    }

    @Test
    public void test09573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09573");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        double double22 = switchingFunctionsHandler0.getEventTime();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        double double25 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
    }

    @Test
    public void test09574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09574");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        double double24 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test09575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09575");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        double double8 = switchingFunctionsHandler0.getEventTime();
        boolean boolean9 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, 3.0d, (double) ' ', 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler0.add(switchingFunction15, (double) '4', (double) 10, (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test09576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09576");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        boolean boolean22 = switchingFunctionsHandler0.stop();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        boolean boolean25 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler0.add(switchingFunction26, (double) 100L, (double) '#', (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        switchingFunctionsHandler0.add(switchingFunction31, (double) '4', (double) (short) 1, (int) '4');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test09577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09577");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("", objArray25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray25);
        java.lang.Object[] objArray28 = new java.lang.Object[] { 2, switchingFunctionsHandler16, 1, objArray25 };
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray25, (java.lang.Throwable) mathException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray25, (java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray25, (java.lang.Throwable) functionEvaluationException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray25);
        java.lang.String str41 = functionEvaluationException40.getPattern();
        java.lang.Object[] objArray42 = functionEvaluationException40.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double45 = functionEvaluationException44.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray42, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray42);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("", objArray42);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray42);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray42);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Throwable) functionEvaluationException51);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1.0d) + "'", double45 == (-1.0d));
    }

    @Test
    public void test09578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09578");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (byte) 0, 0.0d, (int) ' ');
        boolean boolean22 = switchingFunctionsHandler0.stop();
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, (double) 0.0f, 0.0d, (int) '#');
        double double29 = switchingFunctionsHandler0.getEventTime();
        boolean boolean30 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        switchingFunctionsHandler0.add(switchingFunction31, (double) 1.0f, (double) 100.0f, 100);
        double double36 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
    }

    @Test
    public void test09579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09579");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction2 = null;
        switchingFunctionsHandler0.add(switchingFunction2, (double) (-1), (double) 'a', (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) (byte) -1, 100.0d, (int) ' ');
        double double12 = switchingFunctionsHandler0.getEventTime();
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean16 = switchingFunctionsHandler15.isEmpty();
        double[] doubleArray19 = new double[] { 100.0d };
        boolean boolean20 = switchingFunctionsHandler15.reset((double) 0L, doubleArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        boolean boolean33 = switchingFunctionsHandler22.reset((double) 1, doubleArray31);
        boolean boolean34 = switchingFunctionsHandler15.reset((double) 100, doubleArray31);
        double double35 = switchingFunctionsHandler15.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean38 = switchingFunctionsHandler37.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = switchingFunctionsHandler37.evaluateStep(stepInterpolator39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean43 = switchingFunctionsHandler42.isEmpty();
        double[] doubleArray46 = new double[] { 100.0d };
        boolean boolean47 = switchingFunctionsHandler42.reset((double) 0L, doubleArray46);
        switchingFunctionsHandler37.stepAccepted((double) (byte) 10, doubleArray46);
        switchingFunctionsHandler15.stepAccepted(0.0d, doubleArray46);
        double double50 = switchingFunctionsHandler15.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        switchingFunctionsHandler15.add(switchingFunction51, (double) 10L, (double) 'a', (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean58 = switchingFunctionsHandler57.isEmpty();
        double[] doubleArray61 = new double[] { 100.0d };
        boolean boolean62 = switchingFunctionsHandler57.reset((double) 0L, doubleArray61);
        boolean boolean63 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray61);
        boolean boolean64 = switchingFunctionsHandler0.reset((double) 3, doubleArray61);
        boolean boolean65 = switchingFunctionsHandler0.isEmpty();
        boolean boolean66 = switchingFunctionsHandler0.isEmpty();
        boolean boolean67 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test09580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09580");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean9 = switchingFunctionsHandler8.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler8.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler8.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler8.add(switchingFunction14, (double) (short) -1, (double) (byte) 1, (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler8.add(switchingFunction19, 52.0d, (double) (-1), (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean26 = switchingFunctionsHandler25.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler25.evaluateStep(stepInterpolator27);
        boolean boolean29 = switchingFunctionsHandler25.stop();
        boolean boolean30 = switchingFunctionsHandler25.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean36 = switchingFunctionsHandler35.isEmpty();
        double[] doubleArray39 = new double[] { 100.0d };
        boolean boolean40 = switchingFunctionsHandler35.reset((double) 0L, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean43 = switchingFunctionsHandler42.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler42.evaluateStep(stepInterpolator44);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean48 = switchingFunctionsHandler47.isEmpty();
        double[] doubleArray51 = new double[] { 100.0d };
        boolean boolean52 = switchingFunctionsHandler47.reset((double) 0L, doubleArray51);
        boolean boolean53 = switchingFunctionsHandler42.reset((double) 1, doubleArray51);
        boolean boolean54 = switchingFunctionsHandler35.reset((double) 100, doubleArray51);
        double double55 = switchingFunctionsHandler35.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean58 = switchingFunctionsHandler57.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        boolean boolean60 = switchingFunctionsHandler57.evaluateStep(stepInterpolator59);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean63 = switchingFunctionsHandler62.isEmpty();
        double[] doubleArray66 = new double[] { 100.0d };
        boolean boolean67 = switchingFunctionsHandler62.reset((double) 0L, doubleArray66);
        switchingFunctionsHandler57.stepAccepted((double) (byte) 10, doubleArray66);
        switchingFunctionsHandler35.stepAccepted(0.0d, doubleArray66);
        switchingFunctionsHandler32.stepAccepted((double) (short) 0, doubleArray66);
        switchingFunctionsHandler25.stepAccepted(52.0d, doubleArray66);
        boolean boolean72 = switchingFunctionsHandler8.reset(0.0d, doubleArray66);
        boolean boolean73 = switchingFunctionsHandler0.reset((double) 0.0f, doubleArray66);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction74 = null;
        switchingFunctionsHandler0.add(switchingFunction74, (double) (byte) -1, (double) (-1), (int) '#');
        boolean boolean79 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test09581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09581");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        double double25 = functionEvaluationException24.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException24);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", objArray40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray40);
        java.lang.Object[] objArray43 = new java.lang.Object[] { 2, switchingFunctionsHandler31, 1, objArray40 };
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray40, (java.lang.Throwable) mathException47);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException47);
        mathException27.addSuppressed((java.lang.Throwable) integratorException49);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException49);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) strArray15, (java.lang.Throwable) mathException51);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) 1, (java.lang.Throwable) derivativeException54);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 52.0d + "'", double25 == 52.0d);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray43);
    }

    @Test
    public void test09582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09582");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray19 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray19);
        java.lang.Object[] objArray22 = new java.lang.Object[] { 2, switchingFunctionsHandler10, 1, objArray19 };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) mathException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) functionEvaluationException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) functionEvaluationException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray19);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray45);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray45);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray45);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException48);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", objArray19, (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("", objArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "");
        java.lang.Object[] objArray56 = functionEvaluationException55.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray19, (java.lang.Throwable) functionEvaluationException55);
        double double59 = functionEvaluationException55.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException60);
        java.lang.String str62 = mathException61.getPattern();
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
    }

    @Test
    public void test09583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09583");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.stop();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler0.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler0.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        switchingFunctionsHandler0.add(switchingFunction28, (double) ' ', (double) (byte) 10, (int) ' ');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test09584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09584");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) (byte) -1, (-1.0d), (int) 'a');
        boolean boolean9 = switchingFunctionsHandler0.stop();
        boolean boolean10 = switchingFunctionsHandler0.isEmpty();
        boolean boolean11 = switchingFunctionsHandler0.stop();
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, (double) (short) 1, (double) 100.0f, (int) (byte) 0);
        boolean boolean18 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test09585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09585");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean10 = switchingFunctionsHandler9.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler9.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        double[] doubleArray18 = new double[] { 100.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) 0L, doubleArray18);
        switchingFunctionsHandler9.stepAccepted((double) (byte) 10, doubleArray18);
        boolean boolean21 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray18);
        boolean boolean22 = switchingFunctionsHandler0.stop();
        double double23 = switchingFunctionsHandler0.getEventTime();
        double double24 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        switchingFunctionsHandler26.add(switchingFunction27, (double) (-1), (double) 3, 0);
        double[] doubleArray39 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean40 = switchingFunctionsHandler26.reset((double) (-1), doubleArray39);
        boolean boolean41 = switchingFunctionsHandler26.isEmpty();
        double double42 = switchingFunctionsHandler26.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction43 = null;
        switchingFunctionsHandler26.add(switchingFunction43, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean48 = switchingFunctionsHandler26.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean51 = switchingFunctionsHandler50.isEmpty();
        double[] doubleArray54 = new double[] { 100.0d };
        boolean boolean55 = switchingFunctionsHandler50.reset((double) 0L, doubleArray54);
        boolean boolean56 = switchingFunctionsHandler26.reset((double) 100L, doubleArray54);
        switchingFunctionsHandler0.stepAccepted((double) (short) 0, doubleArray54);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        switchingFunctionsHandler0.add(switchingFunction58, (double) 100, 1.0d, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        switchingFunctionsHandler64.add(switchingFunction65, (double) (-1), (double) 3, 0);
        double[] doubleArray77 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean78 = switchingFunctionsHandler64.reset((double) (-1), doubleArray77);
        boolean boolean79 = switchingFunctionsHandler64.isEmpty();
        boolean boolean80 = switchingFunctionsHandler64.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction81 = null;
        switchingFunctionsHandler64.add(switchingFunction81, (double) (byte) 0, 0.0d, (int) ' ');
        double[] doubleArray90 = new double[] { 1.0f, (-1.0f), 100.0d };
        boolean boolean91 = switchingFunctionsHandler64.reset((double) 1L, doubleArray90);
        boolean boolean92 = switchingFunctionsHandler0.reset((-1.0d), doubleArray90);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction93 = null;
        switchingFunctionsHandler0.add(switchingFunction93, (double) ' ', 10.0d, (int) (short) -1);
        boolean boolean98 = switchingFunctionsHandler0.isEmpty();
        double double99 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double99));
    }

    @Test
    public void test09586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09586");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray19 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray19);
        java.lang.Object[] objArray22 = new java.lang.Object[] { 2, switchingFunctionsHandler10, 1, objArray19 };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) mathException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) functionEvaluationException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) functionEvaluationException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray19);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray45);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray45);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray45);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException48);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", objArray19, (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("", objArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "");
        java.lang.Object[] objArray56 = functionEvaluationException55.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray19, (java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException58);
        java.lang.String str60 = convergenceException59.getPattern();
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: " + "'", str60, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test09587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09587");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler24.add(switchingFunction25, (double) (-1), (double) 3, 0);
        double[] doubleArray37 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean38 = switchingFunctionsHandler24.reset((double) (-1), doubleArray37);
        boolean boolean39 = switchingFunctionsHandler24.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler41.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean47 = switchingFunctionsHandler46.isEmpty();
        double[] doubleArray50 = new double[] { 100.0d };
        boolean boolean51 = switchingFunctionsHandler46.reset((double) 0L, doubleArray50);
        switchingFunctionsHandler41.stepAccepted((double) (byte) 10, doubleArray50);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.isEmpty();
        double[] doubleArray58 = new double[] { 100.0d };
        boolean boolean59 = switchingFunctionsHandler54.reset((double) 0L, doubleArray58);
        switchingFunctionsHandler41.stepAccepted(100.0d, doubleArray58);
        boolean boolean61 = switchingFunctionsHandler24.reset((-1.0d), doubleArray58);
        boolean boolean62 = switchingFunctionsHandler0.reset((double) 100, doubleArray58);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler0.evaluateStep(stepInterpolator63);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        switchingFunctionsHandler0.add(switchingFunction65, 2.0d, (double) (byte) 1, (int) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        switchingFunctionsHandler0.add(switchingFunction70, (double) 1.0f, (double) 10.0f, 10);
        double[] doubleArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test09588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09588");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) 100L, (double) 10, (int) 'a');
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        boolean boolean18 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler20.add(switchingFunction21, (double) (-1), (double) 3, 0);
        boolean boolean26 = switchingFunctionsHandler20.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean29 = switchingFunctionsHandler28.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        switchingFunctionsHandler28.add(switchingFunction30, (double) (-1), (double) 'a', (int) (short) 0);
        double[] doubleArray36 = null;
        boolean boolean37 = switchingFunctionsHandler28.reset((double) 3, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean40 = switchingFunctionsHandler39.isEmpty();
        double[] doubleArray43 = new double[] { 100.0d };
        boolean boolean44 = switchingFunctionsHandler39.reset((double) 0L, doubleArray43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean47 = switchingFunctionsHandler46.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = switchingFunctionsHandler46.evaluateStep(stepInterpolator48);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean52 = switchingFunctionsHandler51.isEmpty();
        double[] doubleArray55 = new double[] { 100.0d };
        boolean boolean56 = switchingFunctionsHandler51.reset((double) 0L, doubleArray55);
        boolean boolean57 = switchingFunctionsHandler46.reset((double) 1, doubleArray55);
        boolean boolean58 = switchingFunctionsHandler39.reset((double) 100, doubleArray55);
        double double59 = switchingFunctionsHandler39.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean62 = switchingFunctionsHandler61.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler61.evaluateStep(stepInterpolator63);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean67 = switchingFunctionsHandler66.isEmpty();
        double[] doubleArray70 = new double[] { 100.0d };
        boolean boolean71 = switchingFunctionsHandler66.reset((double) 0L, doubleArray70);
        switchingFunctionsHandler61.stepAccepted((double) (byte) 10, doubleArray70);
        switchingFunctionsHandler39.stepAccepted(0.0d, doubleArray70);
        boolean boolean74 = switchingFunctionsHandler39.isEmpty();
        boolean boolean75 = switchingFunctionsHandler39.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler77 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction78 = null;
        switchingFunctionsHandler77.add(switchingFunction78, (double) (-1), (double) 3, 0);
        double[] doubleArray90 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean91 = switchingFunctionsHandler77.reset((double) (-1), doubleArray90);
        switchingFunctionsHandler39.stepAccepted((double) 'a', doubleArray90);
        boolean boolean93 = switchingFunctionsHandler28.reset((double) (short) 100, doubleArray90);
        boolean boolean94 = switchingFunctionsHandler20.reset((double) 3, doubleArray90);
        boolean boolean95 = switchingFunctionsHandler0.reset(Double.NaN, doubleArray90);
        double double96 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean98 = switchingFunctionsHandler0.evaluateStep(stepInterpolator97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double96));
    }

    @Test
    public void test09589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09589");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) (-1));
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException4);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Throwable) functionEvaluationException4);
        java.lang.Object[] objArray19 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray19);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        double double26 = functionEvaluationException25.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException25);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", objArray41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray41);
        java.lang.Object[] objArray44 = new java.lang.Object[] { 2, switchingFunctionsHandler32, 1, objArray41 };
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray41, (java.lang.Throwable) mathException48);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException48);
        mathException28.addSuppressed((java.lang.Throwable) integratorException50);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray19, (java.lang.Throwable) integratorException50);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = {0}", objArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException(0.0d);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", objArray19, (java.lang.Throwable) functionEvaluationException55);
        functionEvaluationException6.addSuppressed((java.lang.Throwable) functionEvaluationException55);
        java.lang.Object[] objArray58 = functionEvaluationException55.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("", objArray73);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray73);
        java.lang.Object[] objArray76 = new java.lang.Object[] { 2, switchingFunctionsHandler64, 1, objArray73 };
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException79);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray73, (java.lang.Throwable) mathException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException81);
        java.lang.Object[] objArray83 = functionEvaluationException81.getArguments();
        double double84 = functionEvaluationException81.getArgument();
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) functionEvaluationException81);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", objArray58, (java.lang.Throwable) mathException85);
        org.apache.commons.math.ode.DerivativeException derivativeException87 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException85);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 52.0d + "'", double26 == 52.0d);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[0.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[0.0]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
    }

    @Test
    public void test09590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09590");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray32 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("", objArray32);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray32);
        java.lang.Object[] objArray35 = new java.lang.Object[] { 2, switchingFunctionsHandler23, 1, objArray32 };
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) mathException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) functionEvaluationException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray15, (java.lang.Throwable) functionEvaluationException45);
        java.lang.Throwable[] throwableArray48 = functionEvaluationException45.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) (-1));
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray48, (java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) throwableArray48);
        double double55 = functionEvaluationException54.getArgument();
        java.lang.String str56 = functionEvaluationException54.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = hi!", (java.lang.Throwable) functionEvaluationException54);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 2", (java.lang.Throwable) functionEvaluationException54);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException58);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35" + "'", str56, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35");
    }

    @Test
    public void test09591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09591");
        java.lang.Object[] objArray16 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray16);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", objArray16, (java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException22);
        java.lang.Object[] objArray25 = functionEvaluationException22.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray25, (java.lang.Throwable) convergenceException28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("", objArray50);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray50);
        java.lang.Object[] objArray53 = new java.lang.Object[] { 2, switchingFunctionsHandler41, 1, objArray50 };
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray50, (java.lang.Throwable) mathException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray50, (java.lang.Throwable) functionEvaluationException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray50, (java.lang.Throwable) functionEvaluationException63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray50);
        java.lang.String str66 = functionEvaluationException65.getPattern();
        java.lang.Object[] objArray67 = functionEvaluationException65.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double70 = functionEvaluationException69.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray67, (java.lang.Throwable) functionEvaluationException69);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, (java.lang.Throwable) integratorException72);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("Evaluation failed for argument = 100", objArray25, (java.lang.Throwable) functionEvaluationException73);
        java.lang.Object[] objArray75 = functionEvaluationException73.getArguments();
        java.lang.Throwable throwable76 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray75, throwable76);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "", objArray75);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-1.0d) + "'", double70 == (-1.0d));
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
    }

    @Test
    public void test09592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09592");
        java.lang.Object[] objArray21 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("", objArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray21);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray21, (java.lang.Throwable) functionEvaluationException27);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.String str31 = convergenceException30.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray21, (java.lang.Throwable) convergenceException30);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) functionEvaluationException32);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException33);
        java.lang.Throwable[] throwableArray35 = convergenceException33.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray35);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) throwableArray35);
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray47);
        java.lang.Object[] objArray49 = derivativeException48.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray64 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("", objArray64);
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray64);
        java.lang.Object[] objArray67 = new java.lang.Object[] { 2, switchingFunctionsHandler55, 1, objArray64 };
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray64, (java.lang.Throwable) mathException71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray64, (java.lang.Throwable) functionEvaluationException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray64, (java.lang.Throwable) functionEvaluationException77);
        java.lang.Object[] objArray86 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("", objArray86);
        org.apache.commons.math.ode.IntegratorException integratorException88 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray86);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException88);
        java.lang.Throwable[] throwableArray90 = integratorException88.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException91 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException88);
        functionEvaluationException77.addSuppressed((java.lang.Throwable) integratorException88);
        org.apache.commons.math.ConvergenceException convergenceException93 = new org.apache.commons.math.ConvergenceException("hi!", objArray49, (java.lang.Throwable) integratorException88);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ");
        org.apache.commons.math.ConvergenceException convergenceException96 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray49, (java.lang.Throwable) mathException95);
        org.apache.commons.math.MathException mathException97 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray35, (java.lang.Throwable) mathException95);
        org.apache.commons.math.ode.IntegratorException integratorException98 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException99 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray35);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray90);
    }

    @Test
    public void test09593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09593");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, 0.0d, 3.0d, (int) (short) 10);
        double double8 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler0.add(switchingFunction9, (-1.0d), Double.NaN, (int) ' ');
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = switchingFunctionsHandler0.evaluateStep(stepInterpolator14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test09594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09594");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException12);
        java.lang.Object[] objArray14 = mathException13.getArguments();
        java.lang.Throwable throwable15 = null;
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", objArray14, throwable15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray14);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray34 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray34);
        java.lang.Object[] objArray37 = new java.lang.Object[] { 2, switchingFunctionsHandler25, 1, objArray34 };
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) mathException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) functionEvaluationException47);
        java.lang.Object[] objArray56 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("", objArray56);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray56);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException58);
        java.lang.Throwable[] throwableArray60 = integratorException58.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException58);
        functionEvaluationException47.addSuppressed((java.lang.Throwable) integratorException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.IntegratorException: ", objArray14, (java.lang.Throwable) integratorException58);
        java.lang.Object[] objArray74 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("", objArray74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, (java.lang.Throwable) functionEvaluationException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray14, (java.lang.Throwable) functionEvaluationException76);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException83);
        java.lang.Object[] objArray85 = mathException84.getArguments();
        java.lang.Throwable throwable86 = null;
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("hi!", objArray85, throwable86);
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException87);
        org.apache.commons.math.ode.DerivativeException derivativeException89 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray14, (java.lang.Throwable) derivativeException89);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
    }

    @Test
    public void test09595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09595");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        double double3 = switchingFunctionsHandler0.getEventTime();
        boolean boolean4 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler0.add(switchingFunction5, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray11 = new double[] {};
        boolean boolean12 = switchingFunctionsHandler0.reset((double) (short) 1, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        double[] doubleArray18 = new double[] { 100.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) 0L, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler21.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean27 = switchingFunctionsHandler26.isEmpty();
        double[] doubleArray30 = new double[] { 100.0d };
        boolean boolean31 = switchingFunctionsHandler26.reset((double) 0L, doubleArray30);
        boolean boolean32 = switchingFunctionsHandler21.reset((double) 1, doubleArray30);
        boolean boolean33 = switchingFunctionsHandler14.reset((double) 100, doubleArray30);
        boolean boolean34 = switchingFunctionsHandler0.reset((double) (-1L), doubleArray30);
        boolean boolean35 = switchingFunctionsHandler0.isEmpty();
        boolean boolean36 = switchingFunctionsHandler0.stop();
        boolean boolean37 = switchingFunctionsHandler0.stop();
        boolean boolean38 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean41 = switchingFunctionsHandler40.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler40.evaluateStep(stepInterpolator42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean46 = switchingFunctionsHandler45.isEmpty();
        double[] doubleArray49 = new double[] { 100.0d };
        boolean boolean50 = switchingFunctionsHandler45.reset((double) 0L, doubleArray49);
        switchingFunctionsHandler40.stepAccepted((double) (byte) 10, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        switchingFunctionsHandler40.add(switchingFunction52, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean59 = switchingFunctionsHandler58.isEmpty();
        double[] doubleArray62 = new double[] { 100.0d };
        boolean boolean63 = switchingFunctionsHandler58.reset((double) 0L, doubleArray62);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean66 = switchingFunctionsHandler65.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator67 = null;
        boolean boolean68 = switchingFunctionsHandler65.evaluateStep(stepInterpolator67);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler70 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean71 = switchingFunctionsHandler70.isEmpty();
        double[] doubleArray74 = new double[] { 100.0d };
        boolean boolean75 = switchingFunctionsHandler70.reset((double) 0L, doubleArray74);
        boolean boolean76 = switchingFunctionsHandler65.reset((double) 1, doubleArray74);
        boolean boolean77 = switchingFunctionsHandler58.reset((double) 100, doubleArray74);
        boolean boolean78 = switchingFunctionsHandler40.reset((double) (byte) -1, doubleArray74);
        boolean boolean79 = switchingFunctionsHandler0.reset(100.0d, doubleArray74);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction80 = null;
        switchingFunctionsHandler0.add(switchingFunction80, (double) 1.0f, 2.0d, (int) (byte) -1);
        boolean boolean85 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test09596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09596");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler0.evaluateStep(stepInterpolator20);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        double double24 = switchingFunctionsHandler0.getEventTime();
        double double25 = switchingFunctionsHandler0.getEventTime();
        double double26 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean29 = switchingFunctionsHandler28.isEmpty();
        boolean boolean30 = switchingFunctionsHandler28.stop();
        double double31 = switchingFunctionsHandler28.getEventTime();
        boolean boolean32 = switchingFunctionsHandler28.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler28.add(switchingFunction33, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray39 = new double[] {};
        boolean boolean40 = switchingFunctionsHandler28.reset((double) (short) 1, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean43 = switchingFunctionsHandler42.isEmpty();
        double[] doubleArray46 = new double[] { 100.0d };
        boolean boolean47 = switchingFunctionsHandler42.reset((double) 0L, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean50 = switchingFunctionsHandler49.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler49.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.isEmpty();
        double[] doubleArray58 = new double[] { 100.0d };
        boolean boolean59 = switchingFunctionsHandler54.reset((double) 0L, doubleArray58);
        boolean boolean60 = switchingFunctionsHandler49.reset((double) 1, doubleArray58);
        boolean boolean61 = switchingFunctionsHandler42.reset((double) 100, doubleArray58);
        boolean boolean62 = switchingFunctionsHandler28.reset((double) (-1L), doubleArray58);
        boolean boolean63 = switchingFunctionsHandler0.reset((double) '#', doubleArray58);
        double double64 = switchingFunctionsHandler0.getEventTime();
        boolean boolean65 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction66 = null;
        switchingFunctionsHandler0.add(switchingFunction66, 10.0d, (double) (byte) 10, (int) '4');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test09597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09597");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray17 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray17);
        java.lang.Object[] objArray20 = new java.lang.Object[] { 2, switchingFunctionsHandler8, 1, objArray17 };
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) mathException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) functionEvaluationException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) functionEvaluationException30);
        java.lang.Object[] objArray39 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("", objArray39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray39);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException41);
        java.lang.Throwable[] throwableArray43 = integratorException41.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException41);
        functionEvaluationException30.addSuppressed((java.lang.Throwable) integratorException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException41);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException53);
        java.lang.Object[] objArray55 = mathException54.getArguments();
        java.lang.Throwable throwable56 = null;
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!", objArray55, throwable56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray55);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("", objArray55);
        integratorException41.addSuppressed((java.lang.Throwable) integratorException59);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray70);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "hi!", (java.lang.Object[]) strArray70);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException73);
        integratorException41.addSuppressed((java.lang.Throwable) functionEvaluationException73);
        java.lang.Throwable[] throwableArray76 = integratorException41.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 2", (java.lang.Object[]) throwableArray76);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(throwableArray76);
    }

    @Test
    public void test09598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09598");
        java.lang.Object[] objArray9 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("", objArray9);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray9, (java.lang.Throwable) convergenceException11);
        java.lang.Object[] objArray13 = mathException12.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray30);
        java.lang.Object[] objArray33 = new java.lang.Object[] { 2, switchingFunctionsHandler21, 1, objArray30 };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) mathException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray13, (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) convergenceException45);
        java.lang.Object[] objArray50 = mathException49.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException49);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
    }

    @Test
    public void test09599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09599");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", strArray14);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = 52", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = 100", strArray14);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray36 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("", objArray36);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray36);
        java.lang.Object[] objArray39 = new java.lang.Object[] { 2, switchingFunctionsHandler27, 1, objArray36 };
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray36, (java.lang.Throwable) mathException43);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException(3.0d, (java.lang.Throwable) integratorException45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException46);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException46);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException46);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray39);
    }

    @Test
    public void test09600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09600");
        java.lang.Object[] objArray16 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        double double23 = functionEvaluationException22.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray38 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("", objArray38);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray38);
        java.lang.Object[] objArray41 = new java.lang.Object[] { 2, switchingFunctionsHandler29, 1, objArray38 };
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray38, (java.lang.Throwable) mathException45);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException45);
        mathException25.addSuppressed((java.lang.Throwable) integratorException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray16, (java.lang.Throwable) integratorException47);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray61);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("", strArray61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray61);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray61);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) derivativeException66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("", (java.lang.Throwable) functionEvaluationException70);
        java.lang.String str72 = mathException71.getPattern();
        derivativeException66.addSuppressed((java.lang.Throwable) mathException71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: ", objArray16, (java.lang.Throwable) derivativeException66);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException74);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 100", (java.lang.Throwable) functionEvaluationException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        java.lang.Object[] objArray80 = functionEvaluationException79.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException83);
        double double85 = functionEvaluationException83.getArgument();
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) functionEvaluationException83);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray80, (java.lang.Throwable) mathException86);
        convergenceException76.addSuppressed((java.lang.Throwable) convergenceException87);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, (java.lang.Throwable) convergenceException87);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, (java.lang.Throwable) functionEvaluationException89);
        double double91 = functionEvaluationException89.getArgument();
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 52.0d + "'", double23 == 52.0d);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[52.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[52.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 52.0d + "'", double85 == 52.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.0d + "'", double91 == 1.0d);
    }

    @Test
    public void test09601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09601");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        double double6 = switchingFunctionsHandler0.getEventTime();
        boolean boolean7 = switchingFunctionsHandler0.stop();
        boolean boolean8 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean11 = switchingFunctionsHandler10.isEmpty();
        boolean boolean12 = switchingFunctionsHandler10.stop();
        double double13 = switchingFunctionsHandler10.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler10.add(switchingFunction14, (double) (-1.0f), (double) (short) 10, (int) (byte) 100);
        boolean boolean19 = switchingFunctionsHandler10.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler21.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean27 = switchingFunctionsHandler26.isEmpty();
        double[] doubleArray30 = new double[] { 100.0d };
        boolean boolean31 = switchingFunctionsHandler26.reset((double) 0L, doubleArray30);
        switchingFunctionsHandler21.stepAccepted((double) (byte) 10, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean35 = switchingFunctionsHandler34.isEmpty();
        double[] doubleArray38 = new double[] { 100.0d };
        boolean boolean39 = switchingFunctionsHandler34.reset((double) 0L, doubleArray38);
        switchingFunctionsHandler21.stepAccepted(100.0d, doubleArray38);
        double double41 = switchingFunctionsHandler21.getEventTime();
        double double42 = switchingFunctionsHandler21.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        switchingFunctionsHandler44.add(switchingFunction45, (double) (-1), (double) 3, 0);
        double[] doubleArray57 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean58 = switchingFunctionsHandler44.reset((double) (-1), doubleArray57);
        switchingFunctionsHandler21.stepAccepted((double) 100L, doubleArray57);
        boolean boolean60 = switchingFunctionsHandler10.reset(52.0d, doubleArray57);
        boolean boolean61 = switchingFunctionsHandler0.reset((-1.0d), doubleArray57);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler0.evaluateStep(stepInterpolator62);
        double double64 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
    }

    @Test
    public void test09602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09602");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ");
        java.lang.Object[] objArray8 = convergenceException7.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray21 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("", objArray21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray21);
        java.lang.Object[] objArray24 = new java.lang.Object[] { 2, switchingFunctionsHandler12, 1, objArray21 };
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) mathException28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", objArray8, (java.lang.Throwable) mathException28);
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray42);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray42);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray42);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray42);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", strArray42);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "", objArray8, (java.lang.Throwable) mathException48);
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", objArray8);
        java.lang.String str51 = mathException50.getPattern();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("", (java.lang.Throwable) mathException50);
        java.lang.Throwable[] throwableArray53 = mathException52.getSuppressed();
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray53);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: " + "'", str51, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ");
        org.junit.Assert.assertNotNull(throwableArray53);
    }

    @Test
    public void test09603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09603");
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "hi!", (java.lang.Throwable) mathException7);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException8);
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray26 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("", objArray26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray26);
        java.lang.Object[] objArray29 = new java.lang.Object[] { 2, switchingFunctionsHandler17, 1, objArray26 };
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray26, (java.lang.Throwable) mathException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray26, (java.lang.Throwable) functionEvaluationException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray26, (java.lang.Throwable) functionEvaluationException39);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) functionEvaluationException39);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("", strArray56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray56);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray56);
        java.lang.Object[] objArray75 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("", objArray75);
        org.apache.commons.math.ode.IntegratorException integratorException77 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray75);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException77);
        java.lang.Throwable[] throwableArray79 = integratorException77.getSuppressed();
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray79);
        java.lang.Throwable[] throwableArray81 = mathException80.getSuppressed();
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) functionEvaluationException85);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException87 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) throwableArray81, (java.lang.Throwable) functionEvaluationException85);
        java.lang.Throwable throwable90 = null;
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("hi!", throwable90);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", throwable90);
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray81, (java.lang.Throwable) mathException92);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException94 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", (java.lang.Object[]) strArray56, (java.lang.Throwable) mathException93);
        java.lang.String str95 = mathException93.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException96 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) mathException93);
        org.apache.commons.math.ConvergenceException convergenceException97 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 0", (java.lang.Throwable) convergenceException96);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "" + "'", str95, "");
    }

    @Test
    public void test09604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09604");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        double double20 = switchingFunctionsHandler0.getEventTime();
        double double21 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        boolean boolean25 = switchingFunctionsHandler0.stop();
        boolean boolean26 = switchingFunctionsHandler0.isEmpty();
        boolean boolean27 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test09605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09605");
        java.lang.Object[] objArray16 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray16);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", objArray16, (java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException22);
        java.lang.Object[] objArray25 = functionEvaluationException22.getArguments();
        java.lang.Throwable[] throwableArray26 = functionEvaluationException22.getSuppressed();
        java.lang.Object[] objArray27 = functionEvaluationException22.getArguments();
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray27);
        java.lang.Object[] objArray44 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("", objArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray44);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("", objArray44, (java.lang.Throwable) functionEvaluationException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException50);
        java.lang.Object[] objArray53 = functionEvaluationException50.getArguments();
        java.lang.Throwable[] throwableArray54 = functionEvaluationException50.getSuppressed();
        java.lang.Object[] objArray55 = functionEvaluationException50.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("", objArray69);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray69);
        java.lang.Object[] objArray72 = new java.lang.Object[] { 2, switchingFunctionsHandler60, 1, objArray69 };
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray69, (java.lang.Throwable) mathException76);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException77);
        java.lang.Object[] objArray79 = functionEvaluationException77.getArguments();
        double double80 = functionEvaluationException77.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: hi!", objArray55, (java.lang.Throwable) functionEvaluationException77);
        java.lang.Object[] objArray89 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException("", objArray89);
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray89, (java.lang.Throwable) convergenceException91);
        java.lang.Object[] objArray93 = mathException92.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException94 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", objArray55, (java.lang.Throwable) mathException92);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: ", objArray55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException96 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray27, (java.lang.Throwable) mathException95);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException97 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException96);
        java.lang.Throwable[] throwableArray98 = functionEvaluationException97.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException99 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException97);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray98);
    }

    @Test
    public void test09606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09606");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        switchingFunctionsHandler22.stepAccepted((double) (byte) 10, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray31);
        boolean boolean35 = switchingFunctionsHandler0.isEmpty();
        boolean boolean36 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        switchingFunctionsHandler38.add(switchingFunction39, (double) (-1), (double) 3, 0);
        double[] doubleArray51 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean52 = switchingFunctionsHandler38.reset((double) (-1), doubleArray51);
        switchingFunctionsHandler0.stepAccepted((double) 'a', doubleArray51);
        boolean boolean54 = switchingFunctionsHandler0.stop();
        double double55 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        switchingFunctionsHandler0.add(switchingFunction56, (double) 100L, (double) 10, 10);
        double double61 = switchingFunctionsHandler0.getEventTime();
        boolean boolean62 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        switchingFunctionsHandler0.add(switchingFunction63, (-1.0d), (double) (byte) 100, (int) (byte) -1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator68 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean69 = switchingFunctionsHandler0.evaluateStep(stepInterpolator68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test09607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09607");
        java.lang.Object[] objArray13 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("", objArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", objArray13, (java.lang.Throwable) functionEvaluationException19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException19);
        java.lang.Object[] objArray22 = functionEvaluationException19.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray22, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray47 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("", objArray47);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray47);
        java.lang.Object[] objArray50 = new java.lang.Object[] { 2, switchingFunctionsHandler38, 1, objArray47 };
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray47, (java.lang.Throwable) mathException54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray47, (java.lang.Throwable) functionEvaluationException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray47, (java.lang.Throwable) functionEvaluationException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray47);
        java.lang.String str63 = functionEvaluationException62.getPattern();
        java.lang.Object[] objArray64 = functionEvaluationException62.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double67 = functionEvaluationException66.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray64, (java.lang.Throwable) functionEvaluationException66);
        org.apache.commons.math.ode.IntegratorException integratorException69 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, (java.lang.Throwable) integratorException69);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("Evaluation failed for argument = 100", objArray22, (java.lang.Throwable) functionEvaluationException70);
        java.lang.Object[] objArray72 = functionEvaluationException70.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: ", objArray72);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-1.0d) + "'", double67 == (-1.0d));
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
    }

    @Test
    public void test09608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09608");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler0.evaluateStep(stepInterpolator20);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler0.evaluateStep(stepInterpolator24);
        boolean boolean26 = switchingFunctionsHandler0.stop();
        double double27 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler0.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler0.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler33.add(switchingFunction34, (double) (-1), (double) 3, 0);
        double[] doubleArray46 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean47 = switchingFunctionsHandler33.reset((double) (-1), doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean50 = switchingFunctionsHandler49.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler49.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.isEmpty();
        double[] doubleArray58 = new double[] { 100.0d };
        boolean boolean59 = switchingFunctionsHandler54.reset((double) 0L, doubleArray58);
        switchingFunctionsHandler49.stepAccepted((double) (byte) 10, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction61 = null;
        switchingFunctionsHandler49.add(switchingFunction61, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean68 = switchingFunctionsHandler67.isEmpty();
        double[] doubleArray71 = new double[] { 100.0d };
        boolean boolean72 = switchingFunctionsHandler67.reset((double) 0L, doubleArray71);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler74 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean75 = switchingFunctionsHandler74.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator76 = null;
        boolean boolean77 = switchingFunctionsHandler74.evaluateStep(stepInterpolator76);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler79 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean80 = switchingFunctionsHandler79.isEmpty();
        double[] doubleArray83 = new double[] { 100.0d };
        boolean boolean84 = switchingFunctionsHandler79.reset((double) 0L, doubleArray83);
        boolean boolean85 = switchingFunctionsHandler74.reset((double) 1, doubleArray83);
        boolean boolean86 = switchingFunctionsHandler67.reset((double) 100, doubleArray83);
        boolean boolean87 = switchingFunctionsHandler49.reset((double) (byte) -1, doubleArray83);
        boolean boolean88 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray83);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler90 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean91 = switchingFunctionsHandler90.isEmpty();
        double[] doubleArray94 = new double[] { 100.0d };
        boolean boolean95 = switchingFunctionsHandler90.reset((double) 0L, doubleArray94);
        boolean boolean96 = switchingFunctionsHandler33.reset((double) (byte) -1, doubleArray94);
        switchingFunctionsHandler0.stepAccepted((double) 0, doubleArray94);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test09609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09609");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler24.add(switchingFunction25, (double) (-1), (double) 3, 0);
        double[] doubleArray37 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean38 = switchingFunctionsHandler24.reset((double) (-1), doubleArray37);
        boolean boolean39 = switchingFunctionsHandler24.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler41.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean47 = switchingFunctionsHandler46.isEmpty();
        double[] doubleArray50 = new double[] { 100.0d };
        boolean boolean51 = switchingFunctionsHandler46.reset((double) 0L, doubleArray50);
        switchingFunctionsHandler41.stepAccepted((double) (byte) 10, doubleArray50);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.isEmpty();
        double[] doubleArray58 = new double[] { 100.0d };
        boolean boolean59 = switchingFunctionsHandler54.reset((double) 0L, doubleArray58);
        switchingFunctionsHandler41.stepAccepted(100.0d, doubleArray58);
        boolean boolean61 = switchingFunctionsHandler24.reset((-1.0d), doubleArray58);
        boolean boolean62 = switchingFunctionsHandler0.reset((double) 100, doubleArray58);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler0.evaluateStep(stepInterpolator63);
        double double65 = switchingFunctionsHandler0.getEventTime();
        boolean boolean66 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        switchingFunctionsHandler0.add(switchingFunction67, (double) (short) 100, 10.0d, 100);
        boolean boolean72 = switchingFunctionsHandler0.isEmpty();
        double double73 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
    }

    @Test
    public void test09610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09610");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler0.evaluateStep(stepInterpolator24);
        double double26 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        switchingFunctionsHandler0.add(switchingFunction27, 0.0d, (-1.0d), 100);
        boolean boolean32 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        switchingFunctionsHandler34.add(switchingFunction35, (double) (-1), (double) 3, 0);
        double[] doubleArray47 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean48 = switchingFunctionsHandler34.reset((double) (-1), doubleArray47);
        boolean boolean49 = switchingFunctionsHandler34.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean52 = switchingFunctionsHandler51.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = switchingFunctionsHandler51.evaluateStep(stepInterpolator53);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean57 = switchingFunctionsHandler56.isEmpty();
        double[] doubleArray60 = new double[] { 100.0d };
        boolean boolean61 = switchingFunctionsHandler56.reset((double) 0L, doubleArray60);
        switchingFunctionsHandler51.stepAccepted((double) (byte) 10, doubleArray60);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean65 = switchingFunctionsHandler64.isEmpty();
        double[] doubleArray68 = new double[] { 100.0d };
        boolean boolean69 = switchingFunctionsHandler64.reset((double) 0L, doubleArray68);
        switchingFunctionsHandler51.stepAccepted(100.0d, doubleArray68);
        boolean boolean71 = switchingFunctionsHandler34.reset((-1.0d), doubleArray68);
        boolean boolean72 = switchingFunctionsHandler0.reset(35.0d, doubleArray68);
        double double73 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
    }

    @Test
    public void test09611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09611");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction2 = null;
        switchingFunctionsHandler0.add(switchingFunction2, (double) (-1), (double) 'a', (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) (byte) -1, 100.0d, (int) ' ');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler13.add(switchingFunction15, (double) (-1), (double) 'a', (int) (short) 0);
        double[] doubleArray21 = null;
        boolean boolean22 = switchingFunctionsHandler13.reset((double) 3, doubleArray21);
        double double23 = switchingFunctionsHandler13.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler25.add(switchingFunction26, (double) (-1), (double) 3, 0);
        double[] doubleArray38 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean39 = switchingFunctionsHandler25.reset((double) (-1), doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler41.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean47 = switchingFunctionsHandler46.isEmpty();
        double[] doubleArray50 = new double[] { 100.0d };
        boolean boolean51 = switchingFunctionsHandler46.reset((double) 0L, doubleArray50);
        switchingFunctionsHandler41.stepAccepted((double) (byte) 10, doubleArray50);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        switchingFunctionsHandler41.add(switchingFunction53, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean60 = switchingFunctionsHandler59.isEmpty();
        double[] doubleArray63 = new double[] { 100.0d };
        boolean boolean64 = switchingFunctionsHandler59.reset((double) 0L, doubleArray63);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean67 = switchingFunctionsHandler66.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator68 = null;
        boolean boolean69 = switchingFunctionsHandler66.evaluateStep(stepInterpolator68);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler71 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean72 = switchingFunctionsHandler71.isEmpty();
        double[] doubleArray75 = new double[] { 100.0d };
        boolean boolean76 = switchingFunctionsHandler71.reset((double) 0L, doubleArray75);
        boolean boolean77 = switchingFunctionsHandler66.reset((double) 1, doubleArray75);
        boolean boolean78 = switchingFunctionsHandler59.reset((double) 100, doubleArray75);
        boolean boolean79 = switchingFunctionsHandler41.reset((double) (byte) -1, doubleArray75);
        boolean boolean80 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray75);
        boolean boolean81 = switchingFunctionsHandler13.reset((double) (byte) 10, doubleArray75);
        boolean boolean82 = switchingFunctionsHandler0.reset((double) 10.0f, doubleArray75);
        boolean boolean83 = switchingFunctionsHandler0.isEmpty();
        boolean boolean84 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction85 = null;
        switchingFunctionsHandler0.add(switchingFunction85, (double) (-1L), (double) (-1), 1);
        double double90 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction91 = null;
        switchingFunctionsHandler0.add(switchingFunction91, 0.0d, 32.0d, (int) (byte) 100);
        double double96 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue(Double.isNaN(double96));
    }

    @Test
    public void test09612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09612");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("", objArray35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray35);
        java.lang.Object[] objArray38 = new java.lang.Object[] { 2, switchingFunctionsHandler26, 1, objArray35 };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) mathException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) functionEvaluationException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray16, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}", strArray16);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) strArray16);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray38);
    }

    @Test
    public void test09613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09613");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.reset((double) 1, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = switchingFunctionsHandler13.evaluateStep(stepInterpolator15);
        boolean boolean17 = switchingFunctionsHandler13.isEmpty();
        boolean boolean18 = switchingFunctionsHandler13.isEmpty();
        boolean boolean19 = switchingFunctionsHandler13.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler21.add(switchingFunction23, (double) (-1), (double) 'a', (int) (short) 0);
        double[] doubleArray29 = null;
        boolean boolean30 = switchingFunctionsHandler21.reset((double) 3, doubleArray29);
        double double31 = switchingFunctionsHandler21.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler33.add(switchingFunction34, (double) (-1), (double) 3, 0);
        double[] doubleArray46 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean47 = switchingFunctionsHandler33.reset((double) (-1), doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean50 = switchingFunctionsHandler49.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler49.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.isEmpty();
        double[] doubleArray58 = new double[] { 100.0d };
        boolean boolean59 = switchingFunctionsHandler54.reset((double) 0L, doubleArray58);
        switchingFunctionsHandler49.stepAccepted((double) (byte) 10, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction61 = null;
        switchingFunctionsHandler49.add(switchingFunction61, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean68 = switchingFunctionsHandler67.isEmpty();
        double[] doubleArray71 = new double[] { 100.0d };
        boolean boolean72 = switchingFunctionsHandler67.reset((double) 0L, doubleArray71);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler74 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean75 = switchingFunctionsHandler74.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator76 = null;
        boolean boolean77 = switchingFunctionsHandler74.evaluateStep(stepInterpolator76);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler79 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean80 = switchingFunctionsHandler79.isEmpty();
        double[] doubleArray83 = new double[] { 100.0d };
        boolean boolean84 = switchingFunctionsHandler79.reset((double) 0L, doubleArray83);
        boolean boolean85 = switchingFunctionsHandler74.reset((double) 1, doubleArray83);
        boolean boolean86 = switchingFunctionsHandler67.reset((double) 100, doubleArray83);
        boolean boolean87 = switchingFunctionsHandler49.reset((double) (byte) -1, doubleArray83);
        boolean boolean88 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray83);
        boolean boolean89 = switchingFunctionsHandler21.reset((double) (byte) 10, doubleArray83);
        boolean boolean90 = switchingFunctionsHandler13.reset((double) (-1L), doubleArray83);
        switchingFunctionsHandler0.stepAccepted(2.0d, doubleArray83);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator92 = null;
        boolean boolean93 = switchingFunctionsHandler0.evaluateStep(stepInterpolator92);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator94 = null;
        boolean boolean95 = switchingFunctionsHandler0.evaluateStep(stepInterpolator94);
        boolean boolean96 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator97 = null;
        boolean boolean98 = switchingFunctionsHandler0.evaluateStep(stepInterpolator97);
        double double99 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double99));
    }

    @Test
    public void test09614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09614");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        boolean boolean20 = switchingFunctionsHandler0.stop();
        double double21 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler0.add(switchingFunction22, 2.0d, 1.0d, (int) (short) 100);
        double double27 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        switchingFunctionsHandler0.add(switchingFunction28, (double) 10, (double) (byte) -1, (int) (short) 0);
        boolean boolean33 = switchingFunctionsHandler0.stop();
        boolean boolean34 = switchingFunctionsHandler0.stop();
        double double35 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        switchingFunctionsHandler0.add(switchingFunction36, (-1.0d), (double) 3, 100);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
    }

    @Test
    public void test09615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09615");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) (byte) -1, (-1.0d), (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler0.add(switchingFunction9, (double) (byte) 100, (double) '#', (int) (byte) 10);
        double double14 = switchingFunctionsHandler0.getEventTime();
        boolean boolean15 = switchingFunctionsHandler0.stop();
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean20 = switchingFunctionsHandler19.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler19.evaluateStep(stepInterpolator21);
        boolean boolean23 = switchingFunctionsHandler19.isEmpty();
        boolean boolean24 = switchingFunctionsHandler19.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler19.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        switchingFunctionsHandler19.add(switchingFunction27, 1.0d, (double) 'a', 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean34 = switchingFunctionsHandler33.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler33.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean39 = switchingFunctionsHandler38.isEmpty();
        double[] doubleArray42 = new double[] { 100.0d };
        boolean boolean43 = switchingFunctionsHandler38.reset((double) 0L, doubleArray42);
        switchingFunctionsHandler33.stepAccepted((double) (byte) 10, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        switchingFunctionsHandler33.add(switchingFunction45, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean52 = switchingFunctionsHandler51.isEmpty();
        double[] doubleArray55 = new double[] { 100.0d };
        boolean boolean56 = switchingFunctionsHandler51.reset((double) 0L, doubleArray55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean59 = switchingFunctionsHandler58.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler58.evaluateStep(stepInterpolator60);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler63 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean64 = switchingFunctionsHandler63.isEmpty();
        double[] doubleArray67 = new double[] { 100.0d };
        boolean boolean68 = switchingFunctionsHandler63.reset((double) 0L, doubleArray67);
        boolean boolean69 = switchingFunctionsHandler58.reset((double) 1, doubleArray67);
        boolean boolean70 = switchingFunctionsHandler51.reset((double) 100, doubleArray67);
        boolean boolean71 = switchingFunctionsHandler33.reset((double) (byte) -1, doubleArray67);
        boolean boolean72 = switchingFunctionsHandler19.reset(3.0d, doubleArray67);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((double) (byte) 100, doubleArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test09616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09616");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("", objArray35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray35);
        java.lang.Object[] objArray38 = new java.lang.Object[] { 2, switchingFunctionsHandler26, 1, objArray35 };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) mathException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) functionEvaluationException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray16, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray38);
    }

    @Test
    public void test09617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09617");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        double double22 = switchingFunctionsHandler0.getEventTime();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, 1.0d, (double) 1, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean31 = switchingFunctionsHandler30.isEmpty();
        boolean boolean32 = switchingFunctionsHandler30.stop();
        double double33 = switchingFunctionsHandler30.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean36 = switchingFunctionsHandler35.isEmpty();
        double[] doubleArray39 = new double[] { 100.0d };
        boolean boolean40 = switchingFunctionsHandler35.reset((double) 0L, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        switchingFunctionsHandler35.add(switchingFunction41, (double) (short) 10, (-1.0d), (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        switchingFunctionsHandler47.add(switchingFunction48, (double) (-1), (double) 3, 0);
        double[] doubleArray60 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean61 = switchingFunctionsHandler47.reset((double) (-1), doubleArray60);
        boolean boolean62 = switchingFunctionsHandler47.isEmpty();
        boolean boolean63 = switchingFunctionsHandler47.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        switchingFunctionsHandler47.add(switchingFunction64, (double) (byte) 0, 0.0d, (int) ' ');
        double[] doubleArray73 = new double[] { 1.0f, (-1.0f), 100.0d };
        boolean boolean74 = switchingFunctionsHandler47.reset((double) 1L, doubleArray73);
        boolean boolean75 = switchingFunctionsHandler35.reset(10.0d, doubleArray73);
        switchingFunctionsHandler30.stepAccepted((double) (-1), doubleArray73);
        boolean boolean77 = switchingFunctionsHandler0.reset(35.0d, doubleArray73);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test09618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09618");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) 0, (double) (short) 1, (int) (byte) -1);
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        boolean boolean16 = switchingFunctionsHandler14.stop();
        double double17 = switchingFunctionsHandler14.getEventTime();
        boolean boolean18 = switchingFunctionsHandler14.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler14.add(switchingFunction19, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray25 = new double[] {};
        boolean boolean26 = switchingFunctionsHandler14.reset((double) (short) 1, doubleArray25);
        boolean boolean27 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray25);
        boolean boolean28 = switchingFunctionsHandler0.stop();
        double[] doubleArray30 = null;
        boolean boolean31 = switchingFunctionsHandler0.reset((-1.0d), doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean34 = switchingFunctionsHandler33.isEmpty();
        double[] doubleArray37 = new double[] { 100.0d };
        boolean boolean38 = switchingFunctionsHandler33.reset((double) 0L, doubleArray37);
        boolean boolean39 = switchingFunctionsHandler33.stop();
        double double40 = switchingFunctionsHandler33.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean43 = switchingFunctionsHandler42.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler42.evaluateStep(stepInterpolator44);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean48 = switchingFunctionsHandler47.isEmpty();
        double[] doubleArray51 = new double[] { 100.0d };
        boolean boolean52 = switchingFunctionsHandler47.reset((double) 0L, doubleArray51);
        switchingFunctionsHandler42.stepAccepted((double) (byte) 10, doubleArray51);
        boolean boolean54 = switchingFunctionsHandler33.reset((double) 1.0f, doubleArray51);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler33.evaluateStep(stepInterpolator55);
        double double57 = switchingFunctionsHandler33.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean60 = switchingFunctionsHandler59.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        boolean boolean62 = switchingFunctionsHandler59.evaluateStep(stepInterpolator61);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean65 = switchingFunctionsHandler64.isEmpty();
        double[] doubleArray68 = new double[] { 100.0d };
        boolean boolean69 = switchingFunctionsHandler64.reset((double) 0L, doubleArray68);
        switchingFunctionsHandler59.stepAccepted((double) (byte) 10, doubleArray68);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean73 = switchingFunctionsHandler72.isEmpty();
        double[] doubleArray76 = new double[] { 100.0d };
        boolean boolean77 = switchingFunctionsHandler72.reset((double) 0L, doubleArray76);
        switchingFunctionsHandler59.stepAccepted(100.0d, doubleArray76);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        boolean boolean80 = switchingFunctionsHandler59.evaluateStep(stepInterpolator79);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator81 = null;
        boolean boolean82 = switchingFunctionsHandler59.evaluateStep(stepInterpolator81);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler84 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean85 = switchingFunctionsHandler84.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator86 = null;
        boolean boolean87 = switchingFunctionsHandler84.evaluateStep(stepInterpolator86);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler89 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean90 = switchingFunctionsHandler89.isEmpty();
        double[] doubleArray93 = new double[] { 100.0d };
        boolean boolean94 = switchingFunctionsHandler89.reset((double) 0L, doubleArray93);
        switchingFunctionsHandler84.stepAccepted((double) (byte) 10, doubleArray93);
        boolean boolean96 = switchingFunctionsHandler59.reset((double) (-1L), doubleArray93);
        switchingFunctionsHandler33.stepAccepted((double) (byte) 100, doubleArray93);
        boolean boolean98 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray93);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test09619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09619");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.Object[] objArray14 = derivativeException13.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("", objArray29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray29);
        java.lang.Object[] objArray32 = new java.lang.Object[] { 2, switchingFunctionsHandler20, 1, objArray29 };
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) mathException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) functionEvaluationException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) functionEvaluationException42);
        java.lang.Object[] objArray51 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("", objArray51);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray51);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException53);
        java.lang.Throwable[] throwableArray55 = integratorException53.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException53);
        functionEvaluationException42.addSuppressed((java.lang.Throwable) integratorException53);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!", objArray14, (java.lang.Throwable) integratorException53);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ");
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray14, (java.lang.Throwable) mathException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100");
        java.lang.String str65 = functionEvaluationException64.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", objArray14, (java.lang.Throwable) functionEvaluationException64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", (java.lang.Throwable) functionEvaluationException66);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100" + "'", str65, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100");
    }

    @Test
    public void test09620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09620");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) 0, (double) (short) 1, (int) (byte) -1);
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        boolean boolean16 = switchingFunctionsHandler14.stop();
        double double17 = switchingFunctionsHandler14.getEventTime();
        boolean boolean18 = switchingFunctionsHandler14.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler14.add(switchingFunction19, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray25 = new double[] {};
        boolean boolean26 = switchingFunctionsHandler14.reset((double) (short) 1, doubleArray25);
        boolean boolean27 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray25);
        boolean boolean28 = switchingFunctionsHandler0.isEmpty();
        boolean boolean29 = switchingFunctionsHandler0.stop();
        boolean boolean30 = switchingFunctionsHandler0.stop();
        boolean boolean31 = switchingFunctionsHandler0.isEmpty();
        boolean boolean32 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test09621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09621");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler5.add(switchingFunction6, (double) (-1), (double) 3, 0);
        double[] doubleArray18 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean19 = switchingFunctionsHandler5.reset((double) (-1), doubleArray18);
        boolean boolean20 = switchingFunctionsHandler5.isEmpty();
        boolean boolean21 = switchingFunctionsHandler5.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler5.add(switchingFunction22, (double) (byte) 0, 0.0d, (int) ' ');
        double[] doubleArray31 = new double[] { 1.0f, (-1.0f), 100.0d };
        boolean boolean32 = switchingFunctionsHandler5.reset((double) 1L, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(52.0d, doubleArray31);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler0.evaluateStep(stepInterpolator34);
        boolean boolean36 = switchingFunctionsHandler0.stop();
        boolean boolean37 = switchingFunctionsHandler0.stop();
        double[] doubleArray39 = null;
        switchingFunctionsHandler0.stepAccepted((double) (byte) 0, doubleArray39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler0.evaluateStep(stepInterpolator41);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler0.evaluateStep(stepInterpolator43);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test09622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09622");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) (short) -1, (double) (byte) 1, (int) (short) 10);
        boolean boolean11 = switchingFunctionsHandler0.stop();
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        double[] doubleArray18 = new double[] { 100.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) 0L, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler21.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean27 = switchingFunctionsHandler26.isEmpty();
        double[] doubleArray30 = new double[] { 100.0d };
        boolean boolean31 = switchingFunctionsHandler26.reset((double) 0L, doubleArray30);
        boolean boolean32 = switchingFunctionsHandler21.reset((double) 1, doubleArray30);
        boolean boolean33 = switchingFunctionsHandler14.reset((double) 100, doubleArray30);
        double double34 = switchingFunctionsHandler14.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean37 = switchingFunctionsHandler36.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler36.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        double[] doubleArray45 = new double[] { 100.0d };
        boolean boolean46 = switchingFunctionsHandler41.reset((double) 0L, doubleArray45);
        switchingFunctionsHandler36.stepAccepted((double) (byte) 10, doubleArray45);
        switchingFunctionsHandler14.stepAccepted(0.0d, doubleArray45);
        boolean boolean49 = switchingFunctionsHandler0.reset(100.0d, doubleArray45);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        switchingFunctionsHandler0.add(switchingFunction50, (double) (short) -1, 0.0d, 1);
        double double55 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
    }

    @Test
    public void test09623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09623");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        double double16 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, Double.NaN, (double) 'a', 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean31 = switchingFunctionsHandler30.isEmpty();
        double[] doubleArray34 = new double[] { 100.0d };
        boolean boolean35 = switchingFunctionsHandler30.reset((double) 0L, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean38 = switchingFunctionsHandler37.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = switchingFunctionsHandler37.evaluateStep(stepInterpolator39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean43 = switchingFunctionsHandler42.isEmpty();
        double[] doubleArray46 = new double[] { 100.0d };
        boolean boolean47 = switchingFunctionsHandler42.reset((double) 0L, doubleArray46);
        boolean boolean48 = switchingFunctionsHandler37.reset((double) 1, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler30.reset((double) 100, doubleArray46);
        double double50 = switchingFunctionsHandler30.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler30.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        switchingFunctionsHandler30.add(switchingFunction53, 3.0d, (double) 1.0f, (int) (byte) -1);
        boolean boolean58 = switchingFunctionsHandler30.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean61 = switchingFunctionsHandler60.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler60.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean66 = switchingFunctionsHandler65.isEmpty();
        double[] doubleArray69 = new double[] { 100.0d };
        boolean boolean70 = switchingFunctionsHandler65.reset((double) 0L, doubleArray69);
        switchingFunctionsHandler60.stepAccepted((double) (byte) 10, doubleArray69);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler73 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean74 = switchingFunctionsHandler73.isEmpty();
        double[] doubleArray77 = new double[] { 100.0d };
        boolean boolean78 = switchingFunctionsHandler73.reset((double) 0L, doubleArray77);
        switchingFunctionsHandler60.stepAccepted(100.0d, doubleArray77);
        boolean boolean80 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray77);
        boolean boolean81 = switchingFunctionsHandler0.reset((double) (-1L), doubleArray77);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator82 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = switchingFunctionsHandler0.evaluateStep(stepInterpolator82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test09624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09624");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) (byte) -1, (-1.0d), (int) 'a');
        boolean boolean9 = switchingFunctionsHandler0.stop();
        boolean boolean10 = switchingFunctionsHandler0.stop();
        double double11 = switchingFunctionsHandler0.getEventTime();
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, (double) '#', (double) 100, (int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test09625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09625");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", objArray27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray27);
        java.lang.Object[] objArray30 = new java.lang.Object[] { 2, switchingFunctionsHandler18, 1, objArray27 };
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) mathException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray10, (java.lang.Throwable) functionEvaluationException40);
        java.lang.Throwable[] throwableArray43 = functionEvaluationException40.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray43, (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException46);
        double double48 = functionEvaluationException46.getArgument();
        double double49 = functionEvaluationException46.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException46);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
    }

    @Test
    public void test09626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09626");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray30);
        java.lang.Object[] objArray33 = new java.lang.Object[] { 2, switchingFunctionsHandler21, 1, objArray30 };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) mathException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray13, (java.lang.Throwable) functionEvaluationException43);
        java.lang.Throwable[] throwableArray46 = functionEvaluationException43.getSuppressed();
        java.lang.Throwable[] throwableArray47 = functionEvaluationException43.getSuppressed();
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray47);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Throwable) integratorException49);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) mathException51);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray47);
    }

    @Test
    public void test09627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09627");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        boolean boolean11 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler13.add(switchingFunction14, (double) (-1), (double) 3, 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler20.add(switchingFunction21, (double) (-1), (double) 3, 0);
        double[] doubleArray33 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean34 = switchingFunctionsHandler20.reset((double) (-1), doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean37 = switchingFunctionsHandler36.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler36.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        double[] doubleArray45 = new double[] { 100.0d };
        boolean boolean46 = switchingFunctionsHandler41.reset((double) 0L, doubleArray45);
        switchingFunctionsHandler36.stepAccepted((double) (byte) 10, doubleArray45);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        switchingFunctionsHandler36.add(switchingFunction48, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.isEmpty();
        double[] doubleArray58 = new double[] { 100.0d };
        boolean boolean59 = switchingFunctionsHandler54.reset((double) 0L, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean62 = switchingFunctionsHandler61.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler61.evaluateStep(stepInterpolator63);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean67 = switchingFunctionsHandler66.isEmpty();
        double[] doubleArray70 = new double[] { 100.0d };
        boolean boolean71 = switchingFunctionsHandler66.reset((double) 0L, doubleArray70);
        boolean boolean72 = switchingFunctionsHandler61.reset((double) 1, doubleArray70);
        boolean boolean73 = switchingFunctionsHandler54.reset((double) 100, doubleArray70);
        boolean boolean74 = switchingFunctionsHandler36.reset((double) (byte) -1, doubleArray70);
        boolean boolean75 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray70);
        boolean boolean76 = switchingFunctionsHandler13.reset((double) 10L, doubleArray70);
        switchingFunctionsHandler7.stepAccepted(1.0d, doubleArray70);
        boolean boolean78 = switchingFunctionsHandler0.reset(10.0d, doubleArray70);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        boolean boolean80 = switchingFunctionsHandler0.evaluateStep(stepInterpolator79);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction81 = null;
        switchingFunctionsHandler0.add(switchingFunction81, (double) 1L, (double) 3, (int) (short) 10);
        boolean boolean86 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test09628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09628");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray19 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray19);
        java.lang.Object[] objArray22 = new java.lang.Object[] { 2, switchingFunctionsHandler10, 1, objArray19 };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) mathException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) functionEvaluationException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) functionEvaluationException32);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray19);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray19);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", objArray19);
        java.lang.Object[] objArray54 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("", objArray54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray54);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray54);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray54);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray54);
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray69);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray69);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray69);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: ", objArray54, (java.lang.Throwable) integratorException72);
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException("", objArray54);
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException87 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray86);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray86);
        org.apache.commons.math.ode.DerivativeException derivativeException89 = new org.apache.commons.math.ode.DerivativeException("", strArray86);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray86);
        org.apache.commons.math.ode.DerivativeException derivativeException91 = new org.apache.commons.math.ode.DerivativeException("", strArray86);
        org.apache.commons.math.ConvergenceException convergenceException92 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray54, (java.lang.Throwable) derivativeException91);
        org.apache.commons.math.ode.IntegratorException integratorException93 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", objArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException94 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException93);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray19, (java.lang.Throwable) derivativeException94);
        org.apache.commons.math.ConvergenceException convergenceException96 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) mathException95);
        java.lang.String str97 = mathException95.toString();
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35" + "'", str97, "org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35");
    }

    @Test
    public void test09629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09629");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        switchingFunctionsHandler22.stepAccepted((double) (byte) 10, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray31);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler0.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler0.evaluateStep(stepInterpolator37);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = switchingFunctionsHandler0.evaluateStep(stepInterpolator39);
        boolean boolean41 = switchingFunctionsHandler0.stop();
        boolean boolean42 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test09630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09630");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        double double20 = switchingFunctionsHandler0.getEventTime();
        double double21 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean24 = switchingFunctionsHandler23.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler23.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean29 = switchingFunctionsHandler28.isEmpty();
        double[] doubleArray32 = new double[] { 100.0d };
        boolean boolean33 = switchingFunctionsHandler28.reset((double) 0L, doubleArray32);
        switchingFunctionsHandler23.stepAccepted((double) (byte) 10, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean37 = switchingFunctionsHandler36.isEmpty();
        double[] doubleArray40 = new double[] { 100.0d };
        boolean boolean41 = switchingFunctionsHandler36.reset((double) 0L, doubleArray40);
        switchingFunctionsHandler23.stepAccepted(100.0d, doubleArray40);
        double double43 = switchingFunctionsHandler23.getEventTime();
        double double44 = switchingFunctionsHandler23.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction47 = null;
        switchingFunctionsHandler46.add(switchingFunction47, (double) (-1), (double) 3, 0);
        double[] doubleArray59 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean60 = switchingFunctionsHandler46.reset((double) (-1), doubleArray59);
        switchingFunctionsHandler23.stepAccepted((double) 100L, doubleArray59);
        boolean boolean62 = switchingFunctionsHandler0.reset(0.0d, doubleArray59);
        double double63 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
    }

    @Test
    public void test09631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09631");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray16 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray16);
        java.lang.Object[] objArray19 = new java.lang.Object[] { 2, switchingFunctionsHandler7, 1, objArray16 };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray16, (java.lang.Throwable) mathException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException26);
        java.lang.Throwable[] throwableArray28 = functionEvaluationException27.getSuppressed();
        double double29 = functionEvaluationException27.getArgument();
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
    }

    @Test
    public void test09632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09632");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray23 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("", objArray23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray23);
        java.lang.Object[] objArray26 = new java.lang.Object[] { 2, switchingFunctionsHandler14, 1, objArray23 };
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray23, (java.lang.Throwable) mathException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray23, (java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray23, (java.lang.Throwable) functionEvaluationException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray23);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray49);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray49);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray49);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException52);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException52);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", objArray23, (java.lang.Throwable) convergenceException54);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("", objArray23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException65);
        java.lang.Object[] objArray67 = mathException66.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray67);
        functionEvaluationException59.addSuppressed((java.lang.Throwable) convergenceException68);
        java.lang.Throwable[] throwableArray70 = convergenceException68.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException68);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", objArray23, (java.lang.Throwable) convergenceException71);
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: hi!", objArray23);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("", objArray23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray23);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(throwableArray70);
    }

    @Test
    public void test09633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09633");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray19);
        java.lang.Object[] objArray34 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray34);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException36);
        java.lang.Throwable[] throwableArray38 = integratorException36.getSuppressed();
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) mathException39);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException39);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray19, (java.lang.Throwable) mathException39);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52");
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray19, (java.lang.Throwable) mathException44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray62 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("", objArray62);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray62);
        java.lang.Object[] objArray65 = new java.lang.Object[] { 2, switchingFunctionsHandler53, 1, objArray62 };
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) mathException69);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException70);
        java.lang.Object[] objArray72 = integratorException71.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray72);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("", objArray72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray19, (java.lang.Throwable) convergenceException74);
        org.apache.commons.math.ode.IntegratorException integratorException76 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray19);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException76);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException", (java.lang.Throwable) integratorException76);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Throwable) functionEvaluationException78);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
    }

    @Test
    public void test09634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09634");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray20 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray20);
        java.lang.Object[] objArray23 = new java.lang.Object[] { 2, switchingFunctionsHandler11, 1, objArray20 };
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray20, (java.lang.Throwable) mathException27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException28);
        java.lang.Object[] objArray30 = integratorException29.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", objArray30);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", objArray30);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: ", objArray30);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray50);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray50);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray50);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("", objArray69);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray69);
        java.lang.Object[] objArray72 = new java.lang.Object[] { 2, switchingFunctionsHandler60, 1, objArray69 };
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray69, (java.lang.Throwable) mathException76);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray69, (java.lang.Throwable) functionEvaluationException79);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray69, (java.lang.Throwable) functionEvaluationException82);
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray69);
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException84);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray50, (java.lang.Throwable) convergenceException85);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException91);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException93 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException91);
        java.lang.Throwable[] throwableArray94 = functionEvaluationException91.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException95 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray50, (java.lang.Throwable) functionEvaluationException91);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException96 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Throwable) convergenceException95);
        org.apache.commons.math.ConvergenceException convergenceException97 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 10", objArray30, (java.lang.Throwable) convergenceException95);
        java.lang.Object[] objArray98 = convergenceException95.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException99 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray98);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertNotNull(objArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray98), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray98), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
    }

    @Test
    public void test09635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09635");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler0.evaluateStep(stepInterpolator24);
        boolean boolean26 = switchingFunctionsHandler0.stop();
        boolean boolean27 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler0.evaluateStep(stepInterpolator28);
        boolean boolean30 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test09636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09636");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ");
        java.lang.Object[] objArray8 = convergenceException7.getArguments();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray34 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray34);
        java.lang.Object[] objArray37 = new java.lang.Object[] { 2, switchingFunctionsHandler25, 1, objArray34 };
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) mathException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) functionEvaluationException47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray17, (java.lang.Throwable) functionEvaluationException47);
        java.lang.Throwable[] throwableArray50 = functionEvaluationException47.getSuppressed();
        java.lang.Throwable[] throwableArray51 = functionEvaluationException47.getSuppressed();
        java.lang.String str52 = functionEvaluationException47.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "", objArray8, (java.lang.Throwable) functionEvaluationException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray8);
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray66);
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray66);
        org.apache.commons.math.ode.IntegratorException integratorException69 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray66);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray66);
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray66);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ode.IntegratorException", objArray8, (java.lang.Throwable) mathException72);
        java.lang.String str74 = mathException72.getPattern();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Evaluation failed for argument = {0}" + "'", str52, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str74, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test09637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09637");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        boolean boolean16 = switchingFunctionsHandler0.stop();
        double double17 = switchingFunctionsHandler0.getEventTime();
        boolean boolean18 = switchingFunctionsHandler0.stop();
        boolean boolean19 = switchingFunctionsHandler0.isEmpty();
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        double double21 = switchingFunctionsHandler0.getEventTime();
        boolean boolean22 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler0.add(switchingFunction23, (double) (byte) -1, (double) 'a', (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        switchingFunctionsHandler0.add(switchingFunction28, (double) '4', (double) 10L, (int) '4');
        boolean boolean33 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test09638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09638");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean9 = switchingFunctionsHandler8.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler8.add(switchingFunction10, (double) (-1), (double) 'a', (int) (short) 0);
        double[] doubleArray16 = null;
        boolean boolean17 = switchingFunctionsHandler8.reset((double) 3, doubleArray16);
        double double18 = switchingFunctionsHandler8.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler20.add(switchingFunction21, (double) (-1), (double) 3, 0);
        double[] doubleArray33 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean34 = switchingFunctionsHandler20.reset((double) (-1), doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean37 = switchingFunctionsHandler36.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler36.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        double[] doubleArray45 = new double[] { 100.0d };
        boolean boolean46 = switchingFunctionsHandler41.reset((double) 0L, doubleArray45);
        switchingFunctionsHandler36.stepAccepted((double) (byte) 10, doubleArray45);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        switchingFunctionsHandler36.add(switchingFunction48, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.isEmpty();
        double[] doubleArray58 = new double[] { 100.0d };
        boolean boolean59 = switchingFunctionsHandler54.reset((double) 0L, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean62 = switchingFunctionsHandler61.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler61.evaluateStep(stepInterpolator63);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean67 = switchingFunctionsHandler66.isEmpty();
        double[] doubleArray70 = new double[] { 100.0d };
        boolean boolean71 = switchingFunctionsHandler66.reset((double) 0L, doubleArray70);
        boolean boolean72 = switchingFunctionsHandler61.reset((double) 1, doubleArray70);
        boolean boolean73 = switchingFunctionsHandler54.reset((double) 100, doubleArray70);
        boolean boolean74 = switchingFunctionsHandler36.reset((double) (byte) -1, doubleArray70);
        boolean boolean75 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray70);
        boolean boolean76 = switchingFunctionsHandler8.reset((double) (byte) 10, doubleArray70);
        boolean boolean77 = switchingFunctionsHandler0.reset((double) (-1L), doubleArray70);
        boolean boolean78 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler80 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean81 = switchingFunctionsHandler80.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator82 = null;
        boolean boolean83 = switchingFunctionsHandler80.evaluateStep(stepInterpolator82);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler85 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean86 = switchingFunctionsHandler85.isEmpty();
        double[] doubleArray89 = new double[] { 100.0d };
        boolean boolean90 = switchingFunctionsHandler85.reset((double) 0L, doubleArray89);
        boolean boolean91 = switchingFunctionsHandler80.reset((double) 1, doubleArray89);
        boolean boolean92 = switchingFunctionsHandler0.reset((double) (-1.0f), doubleArray89);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction93 = null;
        switchingFunctionsHandler0.add(switchingFunction93, (double) 0.0f, 2.0d, (-1));
        boolean boolean98 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test09639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09639");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        double double16 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        double double24 = switchingFunctionsHandler0.getEventTime();
        boolean boolean25 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler0.add(switchingFunction26, 0.0d, (double) ' ', (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        switchingFunctionsHandler0.add(switchingFunction31, (double) (byte) -1, (double) (short) 100, (int) (byte) -1);
        boolean boolean36 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        switchingFunctionsHandler0.add(switchingFunction37, (double) (short) 1, 0.0d, (int) (short) 10);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean43 = switchingFunctionsHandler0.evaluateStep(stepInterpolator42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test09640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09640");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler5.add(switchingFunction6, (double) (-1), (double) 3, 0);
        double[] doubleArray18 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean19 = switchingFunctionsHandler5.reset((double) (-1), doubleArray18);
        boolean boolean20 = switchingFunctionsHandler5.isEmpty();
        boolean boolean21 = switchingFunctionsHandler5.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler5.add(switchingFunction22, (double) (byte) 0, 0.0d, (int) ' ');
        double[] doubleArray31 = new double[] { 1.0f, (-1.0f), 100.0d };
        boolean boolean32 = switchingFunctionsHandler5.reset((double) 1L, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(52.0d, doubleArray31);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler0.evaluateStep(stepInterpolator34);
        double double36 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean39 = switchingFunctionsHandler38.isEmpty();
        double[] doubleArray42 = new double[] { 100.0d };
        boolean boolean43 = switchingFunctionsHandler38.reset((double) 0L, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean46 = switchingFunctionsHandler45.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler45.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean51 = switchingFunctionsHandler50.isEmpty();
        double[] doubleArray54 = new double[] { 100.0d };
        boolean boolean55 = switchingFunctionsHandler50.reset((double) 0L, doubleArray54);
        boolean boolean56 = switchingFunctionsHandler45.reset((double) 1, doubleArray54);
        boolean boolean57 = switchingFunctionsHandler38.reset((double) 100, doubleArray54);
        double double58 = switchingFunctionsHandler38.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean61 = switchingFunctionsHandler60.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler60.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean66 = switchingFunctionsHandler65.isEmpty();
        double[] doubleArray69 = new double[] { 100.0d };
        boolean boolean70 = switchingFunctionsHandler65.reset((double) 0L, doubleArray69);
        switchingFunctionsHandler60.stepAccepted((double) (byte) 10, doubleArray69);
        switchingFunctionsHandler38.stepAccepted(0.0d, doubleArray69);
        boolean boolean73 = switchingFunctionsHandler0.reset((double) 10.0f, doubleArray69);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction74 = null;
        switchingFunctionsHandler0.add(switchingFunction74, (double) 0L, (double) (short) 10, (int) (short) -1);
        boolean boolean79 = switchingFunctionsHandler0.stop();
        boolean boolean80 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test09641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09641");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.stop();
        double double5 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) 'a', (double) 0L, (int) 'a');
        boolean boolean11 = switchingFunctionsHandler0.stop();
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        double[] doubleArray18 = new double[] { 100.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) 0L, doubleArray18);
        boolean boolean20 = switchingFunctionsHandler14.stop();
        double double21 = switchingFunctionsHandler14.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean24 = switchingFunctionsHandler23.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler23.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean29 = switchingFunctionsHandler28.isEmpty();
        double[] doubleArray32 = new double[] { 100.0d };
        boolean boolean33 = switchingFunctionsHandler28.reset((double) 0L, doubleArray32);
        switchingFunctionsHandler23.stepAccepted((double) (byte) 10, doubleArray32);
        boolean boolean35 = switchingFunctionsHandler14.reset((double) 1.0f, doubleArray32);
        boolean boolean36 = switchingFunctionsHandler0.reset((double) 'a', doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        switchingFunctionsHandler0.add(switchingFunction37, 0.0d, (double) (-1L), (int) '#');
        double double42 = switchingFunctionsHandler0.getEventTime();
        boolean boolean43 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test09642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09642");
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException11);
        java.lang.Throwable[] throwableArray13 = convergenceException11.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        double double17 = functionEvaluationException16.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) functionEvaluationException16);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray30);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray30);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "hi!", (java.lang.Throwable) mathException37);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("", objArray53);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray53);
        java.lang.Object[] objArray56 = new java.lang.Object[] { 2, switchingFunctionsHandler44, 1, objArray53 };
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray53, (java.lang.Throwable) mathException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray53, (java.lang.Throwable) functionEvaluationException63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray53, (java.lang.Throwable) functionEvaluationException66);
        java.lang.Object[] objArray75 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("", objArray75);
        org.apache.commons.math.ode.IntegratorException integratorException77 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray75);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException77);
        java.lang.Throwable[] throwableArray79 = integratorException77.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException80 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException77);
        functionEvaluationException66.addSuppressed((java.lang.Throwable) integratorException77);
        functionEvaluationException38.addSuppressed((java.lang.Throwable) integratorException77);
        java.lang.Object[] objArray83 = functionEvaluationException38.getArguments();
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray30, (java.lang.Throwable) functionEvaluationException38);
        double double85 = functionEvaluationException38.getArgument();
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) functionEvaluationException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException87 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.ode.IntegratorException integratorException88 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = -1", (java.lang.Object[]) throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 52.0d + "'", double17 == 52.0d);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 10.0d + "'", double85 == 10.0d);
    }

    @Test
    public void test09643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09643");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler0.evaluateStep(stepInterpolator24);
        boolean boolean26 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler0.evaluateStep(stepInterpolator27);
        boolean boolean29 = switchingFunctionsHandler0.isEmpty();
        boolean boolean30 = switchingFunctionsHandler0.stop();
        boolean boolean31 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test09644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09644");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) (-1.0f), (double) (short) 10, (int) (byte) 100);
        double double9 = switchingFunctionsHandler0.getEventTime();
        boolean boolean10 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        switchingFunctionsHandler0.add(switchingFunction11, (double) 'a', (double) 100, (int) '4');
        boolean boolean16 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (byte) 0, 100.0d, (int) (byte) 0);
        boolean boolean22 = switchingFunctionsHandler0.stop();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test09645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09645");
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ");
        java.lang.Object[] objArray9 = convergenceException8.getArguments();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35");
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("", objArray9, (java.lang.Throwable) functionEvaluationException13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("", objArray35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray35);
        java.lang.Object[] objArray38 = new java.lang.Object[] { 2, switchingFunctionsHandler26, 1, objArray35 };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) mathException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) functionEvaluationException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray35);
        java.lang.String str51 = functionEvaluationException50.getPattern();
        java.lang.Object[] objArray52 = functionEvaluationException50.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double55 = functionEvaluationException54.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray52, (java.lang.Throwable) functionEvaluationException54);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray52);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("", objArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray9, (java.lang.Throwable) mathException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", objArray9, (java.lang.Throwable) functionEvaluationException63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) functionEvaluationException64);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException64);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException66);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException67);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1.0d) + "'", double55 == (-1.0d));
    }

    @Test
    public void test09646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09646");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        switchingFunctionsHandler22.stepAccepted((double) (byte) 10, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray31);
        boolean boolean35 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        switchingFunctionsHandler0.add(switchingFunction36, (double) (byte) -1, (double) (byte) 1, (int) ' ');
        boolean boolean41 = switchingFunctionsHandler0.isEmpty();
        double double42 = switchingFunctionsHandler0.getEventTime();
        boolean boolean43 = switchingFunctionsHandler0.stop();
        double double44 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
    }

    @Test
    public void test09647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09647");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler0.evaluateStep(stepInterpolator25);
        boolean boolean27 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean30 = switchingFunctionsHandler29.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        switchingFunctionsHandler29.add(switchingFunction31, (double) (-1), (double) 'a', (int) (short) 0);
        double[] doubleArray37 = null;
        boolean boolean38 = switchingFunctionsHandler29.reset((double) 3, doubleArray37);
        double double39 = switchingFunctionsHandler29.getEventTime();
        boolean boolean40 = switchingFunctionsHandler29.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean43 = switchingFunctionsHandler42.isEmpty();
        boolean boolean44 = switchingFunctionsHandler42.stop();
        double double45 = switchingFunctionsHandler42.getEventTime();
        boolean boolean46 = switchingFunctionsHandler42.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction47 = null;
        switchingFunctionsHandler42.add(switchingFunction47, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray53 = new double[] {};
        boolean boolean54 = switchingFunctionsHandler42.reset((double) (short) 1, doubleArray53);
        boolean boolean55 = switchingFunctionsHandler29.reset((double) 2, doubleArray53);
        boolean boolean56 = switchingFunctionsHandler0.reset(3.0d, doubleArray53);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test09648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09648");
        java.lang.Object[] objArray21 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("", objArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray21);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", objArray21, (java.lang.Throwable) functionEvaluationException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException27);
        java.lang.Object[] objArray30 = functionEvaluationException27.getArguments();
        java.lang.Throwable[] throwableArray31 = functionEvaluationException27.getSuppressed();
        java.lang.Object[] objArray32 = functionEvaluationException27.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray46 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("", objArray46);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray46);
        java.lang.Object[] objArray49 = new java.lang.Object[] { 2, switchingFunctionsHandler37, 1, objArray46 };
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray46, (java.lang.Throwable) mathException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException54);
        java.lang.Object[] objArray56 = functionEvaluationException54.getArguments();
        double double57 = functionEvaluationException54.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: hi!", objArray32, (java.lang.Throwable) functionEvaluationException54);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray32);
        java.lang.Object[] objArray70 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("", objArray70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "", (java.lang.Throwable) convergenceException71);
        double double73 = functionEvaluationException72.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.MathException", (java.lang.Throwable) functionEvaluationException72);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException72);
        org.apache.commons.math.ode.IntegratorException integratorException76 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.ode.DerivativeException: ", objArray32, (java.lang.Throwable) integratorException75);
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException90 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray89);
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray89);
        org.apache.commons.math.ode.DerivativeException derivativeException92 = new org.apache.commons.math.ode.DerivativeException("", strArray89);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException93 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray89);
        org.apache.commons.math.ConvergenceException convergenceException94 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException93);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException93);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException96 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray32, (java.lang.Throwable) mathException95);
        org.apache.commons.math.MathException mathException97 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException96);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException98 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException97);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException99 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100", (java.lang.Throwable) functionEvaluationException98);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 97.0d + "'", double73 == 97.0d);
        org.junit.Assert.assertNotNull(strArray89);
    }

    @Test
    public void test09649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09649");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler0.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler0.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        switchingFunctionsHandler0.add(switchingFunction27, (double) (short) 10, 100.0d, 1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test09650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09650");
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "hi!", (java.lang.Throwable) mathException5);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray21 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("", objArray21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray21);
        java.lang.Object[] objArray24 = new java.lang.Object[] { 2, switchingFunctionsHandler12, 1, objArray21 };
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) mathException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) functionEvaluationException34);
        java.lang.Object[] objArray43 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("", objArray43);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray43);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException45);
        java.lang.Throwable[] throwableArray47 = integratorException45.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException45);
        functionEvaluationException34.addSuppressed((java.lang.Throwable) integratorException45);
        functionEvaluationException6.addSuppressed((java.lang.Throwable) integratorException45);
        java.lang.Throwable[] throwableArray51 = integratorException45.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Object[]) throwableArray51);
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray66);
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray66);
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray66);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: hi!", strArray66);
        java.lang.Object[] objArray74 = new java.lang.Object[] { (-1L) };
        java.lang.Object[] objArray82 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("", objArray82);
        org.apache.commons.math.ode.IntegratorException integratorException84 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray82);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException84);
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("hi!", objArray74, (java.lang.Throwable) mathException85);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException85);
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray66, (java.lang.Throwable) mathException85);
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException88);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Throwable) convergenceException88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) mathException90);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Throwable) mathException90);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException93 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray51, (java.lang.Throwable) mathException92);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[-1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[-1]");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[1, a, 10, a, -1]");
    }

    @Test
    public void test09651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09651");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        java.lang.Object[] objArray16 = derivativeException15.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray31);
        java.lang.Object[] objArray34 = new java.lang.Object[] { 2, switchingFunctionsHandler22, 1, objArray31 };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) mathException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException44);
        java.lang.Object[] objArray53 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("", objArray53);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray53);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException55);
        java.lang.Throwable[] throwableArray57 = integratorException55.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException55);
        functionEvaluationException44.addSuppressed((java.lang.Throwable) integratorException55);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!", objArray16, (java.lang.Throwable) integratorException55);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", objArray16);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray16);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray16);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray16);
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray78);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray78);
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", strArray78);
        org.apache.commons.math.ode.IntegratorException integratorException82 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray78);
        java.lang.Throwable[] throwableArray83 = integratorException82.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException84 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray83);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException88 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "");
        java.lang.Object[] objArray89 = functionEvaluationException88.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException90 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException88);
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = -1", (java.lang.Object[]) throwableArray83, (java.lang.Throwable) functionEvaluationException88);
        org.apache.commons.math.ConvergenceException convergenceException92 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException93 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: ", objArray16, (java.lang.Throwable) convergenceException92);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException94 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, (java.lang.Throwable) convergenceException92);
        java.lang.String str95 = convergenceException92.toString();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: " + "'", str95, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test09652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09652");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction2 = null;
        switchingFunctionsHandler0.add(switchingFunction2, (double) (-1), (double) 'a', (int) (short) 0);
        boolean boolean7 = switchingFunctionsHandler0.isEmpty();
        double double8 = switchingFunctionsHandler0.getEventTime();
        boolean boolean9 = switchingFunctionsHandler0.isEmpty();
        boolean boolean10 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = switchingFunctionsHandler0.evaluateStep(stepInterpolator11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09653");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray31);
        java.lang.Object[] objArray34 = new java.lang.Object[] { 2, switchingFunctionsHandler22, 1, objArray31 };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) mathException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray12, (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException50);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException50);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray34);
    }

    @Test
    public void test09654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09654");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray17 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray17);
        java.lang.Object[] objArray20 = new java.lang.Object[] { 2, switchingFunctionsHandler8, 1, objArray17 };
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) mathException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException25);
        java.lang.Object[] objArray27 = functionEvaluationException25.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: ", objArray27);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", objArray27);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException30);
        java.lang.String str32 = integratorException31.getPattern();
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }

    @Test
    public void test09655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09655");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler5.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean11 = switchingFunctionsHandler10.isEmpty();
        double[] doubleArray14 = new double[] { 100.0d };
        boolean boolean15 = switchingFunctionsHandler10.reset((double) 0L, doubleArray14);
        switchingFunctionsHandler5.stepAccepted((double) (byte) 10, doubleArray14);
        boolean boolean17 = switchingFunctionsHandler0.reset(0.0d, doubleArray14);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler0.evaluateStep(stepInterpolator18);
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler0.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler0.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler0.add(switchingFunction25, (double) (byte) -1, 3.0d, 2);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test09656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09656");
        java.lang.Object[] objArray7 = new java.lang.Object[] { 100.0f, (byte) 10 };
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "", objArray7);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException");
        java.lang.Throwable[] throwableArray13 = convergenceException12.getSuppressed();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("", objArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray29);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("", objArray29, (java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException35);
        java.lang.Object[] objArray38 = functionEvaluationException35.getArguments();
        java.lang.Throwable[] throwableArray39 = functionEvaluationException35.getSuppressed();
        java.lang.Object[] objArray40 = functionEvaluationException35.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray54 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("", objArray54);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray54);
        java.lang.Object[] objArray57 = new java.lang.Object[] { 2, switchingFunctionsHandler45, 1, objArray54 };
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray54, (java.lang.Throwable) mathException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException62);
        java.lang.Object[] objArray64 = functionEvaluationException62.getArguments();
        double double65 = functionEvaluationException62.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: hi!", objArray40, (java.lang.Throwable) functionEvaluationException62);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("", objArray40);
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException(3.0d, (java.lang.Throwable) functionEvaluationException71);
        java.lang.Object[] objArray74 = functionEvaluationException73.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException73);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!", objArray40, (java.lang.Throwable) derivativeException75);
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) derivativeException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", objArray7, (java.lang.Throwable) derivativeException75);
        double double79 = functionEvaluationException78.getArgument();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[100.0, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[100.0, 10]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
    }

    @Test
    public void test09657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09657");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray32 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("", objArray32);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray32);
        java.lang.Object[] objArray35 = new java.lang.Object[] { 2, switchingFunctionsHandler23, 1, objArray32 };
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) mathException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) functionEvaluationException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray15, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray15);
        java.lang.Object[] objArray56 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("", objArray56);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray56);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException58);
        java.lang.Throwable[] throwableArray60 = integratorException58.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException58);
        java.lang.Object[] objArray62 = integratorException61.getArguments();
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray15, (java.lang.Throwable) integratorException61);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray15);
        java.lang.Throwable[] throwableArray65 = mathException64.getSuppressed();
        java.lang.Throwable throwable66 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray65, throwable66);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray65);
        org.apache.commons.math.ode.IntegratorException integratorException69 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 2", (java.lang.Object[]) throwableArray65);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray65);
    }

    @Test
    public void test09658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09658");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler0.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean35 = switchingFunctionsHandler34.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler34.evaluateStep(stepInterpolator36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean40 = switchingFunctionsHandler39.isEmpty();
        double[] doubleArray43 = new double[] { 100.0d };
        boolean boolean44 = switchingFunctionsHandler39.reset((double) 0L, doubleArray43);
        boolean boolean45 = switchingFunctionsHandler34.reset((double) 1, doubleArray43);
        boolean boolean46 = switchingFunctionsHandler27.reset((double) 100, doubleArray43);
        double double47 = switchingFunctionsHandler27.getEventTime();
        boolean boolean48 = switchingFunctionsHandler27.stop();
        boolean boolean49 = switchingFunctionsHandler27.isEmpty();
        double double50 = switchingFunctionsHandler27.getEventTime();
        boolean boolean51 = switchingFunctionsHandler27.stop();
        boolean boolean52 = switchingFunctionsHandler27.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler54.evaluateStep(stepInterpolator56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean60 = switchingFunctionsHandler59.isEmpty();
        double[] doubleArray63 = new double[] { 100.0d };
        boolean boolean64 = switchingFunctionsHandler59.reset((double) 0L, doubleArray63);
        switchingFunctionsHandler54.stepAccepted((double) (byte) 10, doubleArray63);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean68 = switchingFunctionsHandler67.isEmpty();
        double[] doubleArray71 = new double[] { 100.0d };
        boolean boolean72 = switchingFunctionsHandler67.reset((double) 0L, doubleArray71);
        switchingFunctionsHandler54.stepAccepted(100.0d, doubleArray71);
        switchingFunctionsHandler27.stepAccepted((double) 1, doubleArray71);
        boolean boolean75 = switchingFunctionsHandler0.reset(1.0d, doubleArray71);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test09659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09659");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler0.add(switchingFunction22, (double) 0, (double) (short) 1, (int) (short) 10);
        double double27 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        switchingFunctionsHandler0.add(switchingFunction28, (double) 0.0f, (double) 10L, (int) (byte) -1);
        double double33 = switchingFunctionsHandler0.getEventTime();
        boolean boolean34 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        switchingFunctionsHandler0.add(switchingFunction35, (double) 100.0f, 0.0d, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        switchingFunctionsHandler0.add(switchingFunction40, (double) (byte) 0, (double) 100.0f, (int) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test09660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09660");
        java.lang.Object[] objArray17 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", objArray17, (java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException23);
        java.lang.Object[] objArray26 = functionEvaluationException23.getArguments();
        java.lang.Throwable[] throwableArray27 = functionEvaluationException23.getSuppressed();
        java.lang.Object[] objArray28 = functionEvaluationException23.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", objArray42);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray42);
        java.lang.Object[] objArray45 = new java.lang.Object[] { 2, switchingFunctionsHandler33, 1, objArray42 };
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray42, (java.lang.Throwable) mathException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException50);
        java.lang.Object[] objArray52 = functionEvaluationException50.getArguments();
        double double53 = functionEvaluationException50.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: hi!", objArray28, (java.lang.Throwable) functionEvaluationException50);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("", objArray28);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray28);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", objArray28);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 100", objArray28);
        java.lang.Object[] objArray59 = convergenceException58.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), (java.lang.Throwable) convergenceException58);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
    }

    @Test
    public void test09661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09661");
        java.lang.Object[] objArray11 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", objArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) integratorException14);
        java.lang.Throwable[] throwableArray16 = integratorException14.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray33 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("", objArray33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray33);
        java.lang.Object[] objArray36 = new java.lang.Object[] { 2, switchingFunctionsHandler24, 1, objArray33 };
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) mathException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) functionEvaluationException46);
        java.lang.Object[] objArray55 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("", objArray55);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray55);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException57);
        java.lang.Throwable[] throwableArray59 = integratorException57.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException57);
        functionEvaluationException46.addSuppressed((java.lang.Throwable) integratorException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException57);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException69);
        java.lang.Object[] objArray71 = mathException70.getArguments();
        java.lang.Throwable throwable72 = null;
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("hi!", objArray71, throwable72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray71);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException("", objArray71);
        integratorException57.addSuppressed((java.lang.Throwable) integratorException75);
        java.lang.Object[] objArray77 = integratorException57.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException57);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException57);
        functionEvaluationException17.addSuppressed((java.lang.Throwable) convergenceException79);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100", (java.lang.Throwable) functionEvaluationException17);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Throwable) functionEvaluationException17);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[1, a, 10, a, -1]");
    }

    @Test
    public void test09662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09662");
        java.lang.Object[] objArray12 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("", objArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("", objArray12, (java.lang.Throwable) functionEvaluationException18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray34 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray34);
        java.lang.Object[] objArray37 = new java.lang.Object[] { 2, switchingFunctionsHandler25, 1, objArray34 };
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) mathException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) functionEvaluationException47);
        java.lang.Object[] objArray56 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("", objArray56);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray56);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException58);
        java.lang.Throwable[] throwableArray60 = integratorException58.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException58);
        functionEvaluationException47.addSuppressed((java.lang.Throwable) integratorException58);
        double double63 = functionEvaluationException47.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException", objArray12, (java.lang.Throwable) functionEvaluationException47);
        double double65 = functionEvaluationException47.getArgument();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException47);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 100.0d + "'", double63 == 100.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 100.0d + "'", double65 == 100.0d);
    }

    @Test
    public void test09663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09663");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.reset((double) 1, doubleArray9);
        boolean boolean12 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler0.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean17 = switchingFunctionsHandler16.isEmpty();
        double[] doubleArray20 = new double[] { 100.0d };
        boolean boolean21 = switchingFunctionsHandler16.reset((double) 0L, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean24 = switchingFunctionsHandler23.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler23.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean29 = switchingFunctionsHandler28.isEmpty();
        double[] doubleArray32 = new double[] { 100.0d };
        boolean boolean33 = switchingFunctionsHandler28.reset((double) 0L, doubleArray32);
        boolean boolean34 = switchingFunctionsHandler23.reset((double) 1, doubleArray32);
        boolean boolean35 = switchingFunctionsHandler16.reset((double) 100, doubleArray32);
        double double36 = switchingFunctionsHandler16.getEventTime();
        boolean boolean37 = switchingFunctionsHandler16.stop();
        boolean boolean38 = switchingFunctionsHandler16.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        switchingFunctionsHandler40.add(switchingFunction41, (double) (-1), (double) 3, 0);
        double[] doubleArray53 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean54 = switchingFunctionsHandler40.reset((double) (-1), doubleArray53);
        boolean boolean55 = switchingFunctionsHandler40.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean58 = switchingFunctionsHandler57.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        boolean boolean60 = switchingFunctionsHandler57.evaluateStep(stepInterpolator59);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean63 = switchingFunctionsHandler62.isEmpty();
        double[] doubleArray66 = new double[] { 100.0d };
        boolean boolean67 = switchingFunctionsHandler62.reset((double) 0L, doubleArray66);
        switchingFunctionsHandler57.stepAccepted((double) (byte) 10, doubleArray66);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler70 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean71 = switchingFunctionsHandler70.isEmpty();
        double[] doubleArray74 = new double[] { 100.0d };
        boolean boolean75 = switchingFunctionsHandler70.reset((double) 0L, doubleArray74);
        switchingFunctionsHandler57.stepAccepted(100.0d, doubleArray74);
        boolean boolean77 = switchingFunctionsHandler40.reset((-1.0d), doubleArray74);
        boolean boolean78 = switchingFunctionsHandler16.reset((double) 100, doubleArray74);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler80 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean81 = switchingFunctionsHandler80.isEmpty();
        double[] doubleArray84 = new double[] { 100.0d };
        boolean boolean85 = switchingFunctionsHandler80.reset((double) 0L, doubleArray84);
        switchingFunctionsHandler16.stepAccepted(100.0d, doubleArray84);
        boolean boolean87 = switchingFunctionsHandler0.reset((double) 'a', doubleArray84);
        boolean boolean88 = switchingFunctionsHandler0.stop();
        boolean boolean89 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test09664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09664");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler0.add(switchingFunction21, (double) 10, (double) (byte) 0, 3);
        double double26 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        switchingFunctionsHandler0.add(switchingFunction27, (double) (short) 0, (double) 100L, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray35 = null;
        switchingFunctionsHandler33.stepAccepted((double) 0, doubleArray35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler33.evaluateStep(stepInterpolator37);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean41 = switchingFunctionsHandler40.isEmpty();
        double[] doubleArray44 = new double[] { 100.0d };
        boolean boolean45 = switchingFunctionsHandler40.reset((double) 0L, doubleArray44);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean48 = switchingFunctionsHandler47.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler47.evaluateStep(stepInterpolator49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean53 = switchingFunctionsHandler52.isEmpty();
        double[] doubleArray56 = new double[] { 100.0d };
        boolean boolean57 = switchingFunctionsHandler52.reset((double) 0L, doubleArray56);
        boolean boolean58 = switchingFunctionsHandler47.reset((double) 1, doubleArray56);
        boolean boolean59 = switchingFunctionsHandler40.reset((double) 100, doubleArray56);
        double double60 = switchingFunctionsHandler40.getEventTime();
        boolean boolean61 = switchingFunctionsHandler40.stop();
        boolean boolean62 = switchingFunctionsHandler40.isEmpty();
        double double63 = switchingFunctionsHandler40.getEventTime();
        boolean boolean64 = switchingFunctionsHandler40.stop();
        boolean boolean65 = switchingFunctionsHandler40.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean68 = switchingFunctionsHandler67.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        boolean boolean70 = switchingFunctionsHandler67.evaluateStep(stepInterpolator69);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean73 = switchingFunctionsHandler72.isEmpty();
        double[] doubleArray76 = new double[] { 100.0d };
        boolean boolean77 = switchingFunctionsHandler72.reset((double) 0L, doubleArray76);
        switchingFunctionsHandler67.stepAccepted((double) (byte) 10, doubleArray76);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler80 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean81 = switchingFunctionsHandler80.isEmpty();
        double[] doubleArray84 = new double[] { 100.0d };
        boolean boolean85 = switchingFunctionsHandler80.reset((double) 0L, doubleArray84);
        switchingFunctionsHandler67.stepAccepted(100.0d, doubleArray84);
        switchingFunctionsHandler40.stepAccepted((double) 1, doubleArray84);
        boolean boolean88 = switchingFunctionsHandler33.reset(97.0d, doubleArray84);
        boolean boolean89 = switchingFunctionsHandler0.reset(Double.NaN, doubleArray84);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction90 = null;
        switchingFunctionsHandler0.add(switchingFunction90, 2.0d, 52.0d, 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction95 = null;
        switchingFunctionsHandler0.add(switchingFunction95, (double) (byte) 1, 3.0d, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test09665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09665");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ");
        java.lang.Object[] objArray7 = convergenceException6.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray20 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray20);
        java.lang.Object[] objArray23 = new java.lang.Object[] { 2, switchingFunctionsHandler11, 1, objArray20 };
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray20, (java.lang.Throwable) mathException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", objArray7, (java.lang.Throwable) mathException27);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray41);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray41);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", strArray41);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "", objArray7, (java.lang.Throwable) mathException47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) functionEvaluationException48);
        double double50 = functionEvaluationException48.getArgument();
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: Evaluation failed for argument = 100", (java.lang.Throwable) functionEvaluationException48);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException48);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException52);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
    }

    @Test
    public void test09666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09666");
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException12 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException11);
        java.lang.Object[] objArray13 = mathException12.getArguments();
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", objArray13, throwable14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", objArray13);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException23);
        java.lang.Object[] objArray25 = mathException24.getArguments();
        java.lang.Throwable throwable26 = null;
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!", objArray25, throwable26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray25);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException31);
        java.lang.Throwable[] throwableArray33 = convergenceException31.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException31);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: hi!", objArray25, (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray13, (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "", objArray13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray52 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("", objArray52);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray52);
        java.lang.Object[] objArray55 = new java.lang.Object[] { 2, switchingFunctionsHandler43, 1, objArray52 };
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray52, (java.lang.Throwable) mathException59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray52, (java.lang.Throwable) functionEvaluationException62);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException62);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) convergenceException64);
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException65);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: hi!", objArray13, (java.lang.Throwable) integratorException66);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 52", (java.lang.Throwable) integratorException66);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException66);
        java.lang.String str70 = integratorException66.toString();
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str70, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test09667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09667");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray30);
        java.lang.Object[] objArray33 = new java.lang.Object[] { 2, switchingFunctionsHandler21, 1, objArray30 };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) mathException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray13, (java.lang.Throwable) functionEvaluationException43);
        java.lang.Throwable[] throwableArray46 = functionEvaluationException43.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (-1));
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray46, (java.lang.Throwable) functionEvaluationException49);
        java.lang.Throwable throwable51 = null;
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray46, throwable51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 2", (java.lang.Object[]) throwableArray46);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray46);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(throwableArray46);
    }

    @Test
    public void test09668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09668");
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100.0f, (byte) 10 };
        org.apache.commons.math.MathException mathException11 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "", objArray10);
        java.lang.Throwable[] throwableArray13 = functionEvaluationException12.getSuppressed();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("", objArray29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray29);
        java.lang.Object[] objArray32 = new java.lang.Object[] { 2, switchingFunctionsHandler20, 1, objArray29 };
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) mathException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) functionEvaluationException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) functionEvaluationException42);
        java.lang.Object[] objArray51 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("", objArray51);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray51);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException53);
        java.lang.Throwable[] throwableArray55 = integratorException53.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException53);
        functionEvaluationException42.addSuppressed((java.lang.Throwable) integratorException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException53);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException65);
        java.lang.Object[] objArray67 = mathException66.getArguments();
        java.lang.Throwable throwable68 = null;
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("hi!", objArray67, throwable68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray67);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException("", objArray67);
        integratorException53.addSuppressed((java.lang.Throwable) integratorException71);
        java.lang.Object[] objArray73 = integratorException53.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException53);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ");
        derivativeException74.addSuppressed((java.lang.Throwable) convergenceException76);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) derivativeException74);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException(52.0d);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) functionEvaluationException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException82);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) 2, (java.lang.Throwable) mathException84);
        java.lang.String str86 = functionEvaluationException85.toString();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100.0, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100.0, 10]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52" + "'", str86, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52");
    }

    @Test
    public void test09669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09669");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler0.add(switchingFunction20, (double) (byte) 100, 35.0d, 0);
        boolean boolean25 = switchingFunctionsHandler0.stop();
        boolean boolean26 = switchingFunctionsHandler0.stop();
        double double27 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
    }

    @Test
    public void test09670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09670");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean10 = switchingFunctionsHandler9.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler9.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        double[] doubleArray18 = new double[] { 100.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) 0L, doubleArray18);
        switchingFunctionsHandler9.stepAccepted((double) (byte) 10, doubleArray18);
        boolean boolean21 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray18);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        double double24 = switchingFunctionsHandler0.getEventTime();
        boolean boolean25 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler0.evaluateStep(stepInterpolator26);
        boolean boolean28 = switchingFunctionsHandler0.stop();
        boolean boolean29 = switchingFunctionsHandler0.isEmpty();
        double double30 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler0.evaluateStep(stepInterpolator31);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test09671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09671");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        switchingFunctionsHandler0.add(switchingFunction8, Double.NaN, (-1.0d), 2);
        boolean boolean13 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler0.add(switchingFunction14, (double) 10.0f, (double) (byte) 1, (int) (byte) 1);
        boolean boolean19 = switchingFunctionsHandler0.isEmpty();
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        double double22 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler0.add(switchingFunction23, (double) (-1), (double) 0L, (int) (short) 1);
        double double28 = switchingFunctionsHandler0.getEventTime();
        double double29 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
    }

    @Test
    public void test09672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09672");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray19 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray19);
        java.lang.Object[] objArray22 = new java.lang.Object[] { 2, switchingFunctionsHandler10, 1, objArray19 };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) mathException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException27);
        java.lang.Object[] objArray29 = functionEvaluationException27.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: ", objArray29);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", objArray29);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException", (java.lang.Throwable) mathException32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = -1", (java.lang.Throwable) mathException32);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[1, a, 10, a, -1]");
    }

    @Test
    public void test09673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09673");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (byte) 0, 0.0d, (int) ' ');
        boolean boolean22 = switchingFunctionsHandler0.stop();
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, (double) ' ', 0.0d, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean31 = switchingFunctionsHandler30.isEmpty();
        double[] doubleArray34 = new double[] { 100.0d };
        boolean boolean35 = switchingFunctionsHandler30.reset((double) 0L, doubleArray34);
        boolean boolean36 = switchingFunctionsHandler30.stop();
        double double37 = switchingFunctionsHandler30.getEventTime();
        double double38 = switchingFunctionsHandler30.getEventTime();
        boolean boolean39 = switchingFunctionsHandler30.stop();
        double[] doubleArray46 = new double[] { 3, 100, (-1.0f), (byte) -1, 1.0d };
        switchingFunctionsHandler30.stepAccepted((-1.0d), doubleArray46);
        boolean boolean48 = switchingFunctionsHandler0.reset((double) 0, doubleArray46);
        double double49 = switchingFunctionsHandler0.getEventTime();
        boolean boolean50 = switchingFunctionsHandler0.isEmpty();
        double double51 = switchingFunctionsHandler0.getEventTime();
        boolean boolean52 = switchingFunctionsHandler0.stop();
        double double53 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        switchingFunctionsHandler0.add(switchingFunction54, (double) (byte) 0, 3.0d, (int) (byte) 100);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[3.0, 100.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
    }

    @Test
    public void test09674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09674");
        java.lang.Object[] objArray19 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", objArray19, (java.lang.Throwable) functionEvaluationException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException25);
        java.lang.Object[] objArray28 = functionEvaluationException25.getArguments();
        java.lang.Throwable[] throwableArray29 = functionEvaluationException25.getSuppressed();
        java.lang.Object[] objArray30 = functionEvaluationException25.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray44 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("", objArray44);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray44);
        java.lang.Object[] objArray47 = new java.lang.Object[] { 2, switchingFunctionsHandler35, 1, objArray44 };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray44, (java.lang.Throwable) mathException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException52);
        java.lang.Object[] objArray54 = functionEvaluationException52.getArguments();
        double double55 = functionEvaluationException52.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException52);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray30);
        java.lang.Object[] objArray68 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("", objArray68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "", (java.lang.Throwable) convergenceException69);
        double double71 = functionEvaluationException70.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.MathException", (java.lang.Throwable) functionEvaluationException70);
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException70);
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException73);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.ode.DerivativeException: ", objArray30, (java.lang.Throwable) integratorException73);
        java.lang.String[] strArray87 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException88 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray87);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray87);
        org.apache.commons.math.ode.DerivativeException derivativeException90 = new org.apache.commons.math.ode.DerivativeException("", strArray87);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray87);
        org.apache.commons.math.ConvergenceException convergenceException92 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException91);
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException91);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException94 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray30, (java.lang.Throwable) mathException93);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException94);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException96 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException95);
        org.apache.commons.math.ConvergenceException convergenceException97 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException95);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 97.0d + "'", double71 == 97.0d);
        org.junit.Assert.assertNotNull(strArray87);
    }

    @Test
    public void test09675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09675");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction2 = null;
        switchingFunctionsHandler0.add(switchingFunction2, (double) (-1), (double) 'a', (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) (byte) -1, 100.0d, (int) ' ');
        double double12 = switchingFunctionsHandler0.getEventTime();
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean16 = switchingFunctionsHandler15.isEmpty();
        double[] doubleArray19 = new double[] { 100.0d };
        boolean boolean20 = switchingFunctionsHandler15.reset((double) 0L, doubleArray19);
        boolean boolean21 = switchingFunctionsHandler15.stop();
        double double22 = switchingFunctionsHandler15.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean25 = switchingFunctionsHandler24.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler24.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean30 = switchingFunctionsHandler29.isEmpty();
        double[] doubleArray33 = new double[] { 100.0d };
        boolean boolean34 = switchingFunctionsHandler29.reset((double) 0L, doubleArray33);
        switchingFunctionsHandler24.stepAccepted((double) (byte) 10, doubleArray33);
        boolean boolean36 = switchingFunctionsHandler15.reset((double) 1.0f, doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean39 = switchingFunctionsHandler38.isEmpty();
        double[] doubleArray42 = new double[] { 100.0d };
        boolean boolean43 = switchingFunctionsHandler38.reset((double) 0L, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean46 = switchingFunctionsHandler45.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler45.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean51 = switchingFunctionsHandler50.isEmpty();
        double[] doubleArray54 = new double[] { 100.0d };
        boolean boolean55 = switchingFunctionsHandler50.reset((double) 0L, doubleArray54);
        boolean boolean56 = switchingFunctionsHandler45.reset((double) 1, doubleArray54);
        boolean boolean57 = switchingFunctionsHandler38.reset((double) 100, doubleArray54);
        double double58 = switchingFunctionsHandler38.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean61 = switchingFunctionsHandler60.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler60.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean66 = switchingFunctionsHandler65.isEmpty();
        double[] doubleArray69 = new double[] { 100.0d };
        boolean boolean70 = switchingFunctionsHandler65.reset((double) 0L, doubleArray69);
        switchingFunctionsHandler60.stepAccepted((double) (byte) 10, doubleArray69);
        switchingFunctionsHandler38.stepAccepted(0.0d, doubleArray69);
        double double73 = switchingFunctionsHandler38.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction74 = null;
        switchingFunctionsHandler38.add(switchingFunction74, (double) 10L, (double) 'a', (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler80 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean81 = switchingFunctionsHandler80.isEmpty();
        double[] doubleArray84 = new double[] { 100.0d };
        boolean boolean85 = switchingFunctionsHandler80.reset((double) 0L, doubleArray84);
        boolean boolean86 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray84);
        switchingFunctionsHandler15.stepAccepted(1.0d, doubleArray84);
        boolean boolean88 = switchingFunctionsHandler0.reset((double) (short) 0, doubleArray84);
        double double89 = switchingFunctionsHandler0.getEventTime();
        double double90 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertTrue(Double.isNaN(double90));
    }

    @Test
    public void test09676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09676");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray8 = null;
        switchingFunctionsHandler0.stepAccepted((double) (byte) 100, doubleArray8);
        boolean boolean10 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler0.evaluateStep(stepInterpolator11);
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test09677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09677");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("", objArray37);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray37);
        java.lang.Object[] objArray40 = new java.lang.Object[] { 2, switchingFunctionsHandler28, 1, objArray37 };
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray37, (java.lang.Throwable) mathException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray37, (java.lang.Throwable) functionEvaluationException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray37, (java.lang.Throwable) functionEvaluationException50);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray37);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray18, (java.lang.Throwable) convergenceException53);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        java.lang.Object[] objArray63 = new java.lang.Object[] { 100.0f, (byte) 10 };
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray63);
        java.lang.Object[] objArray75 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("", objArray75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray75);
        org.apache.commons.math.ode.IntegratorException integratorException78 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("", objArray75, (java.lang.Throwable) functionEvaluationException81);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException81);
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("", objArray63, (java.lang.Throwable) mathException83);
        java.lang.Object[] objArray85 = mathException83.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException83);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException87 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) convergenceException86);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray18, (java.lang.Throwable) convergenceException86);
        org.apache.commons.math.ode.IntegratorException integratorException89 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException90 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException91 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", strArray18);
        org.apache.commons.math.ConvergenceException convergenceException92 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ConvergenceException convergenceException93 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException94 = new org.apache.commons.math.FunctionEvaluationException((double) 3, (java.lang.Throwable) convergenceException93);
        java.lang.Object[] objArray95 = convergenceException93.getArguments();
        java.lang.Throwable[] throwableArray96 = convergenceException93.getSuppressed();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[100.0, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[100.0, 10]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertNotNull(throwableArray96);
    }

    @Test
    public void test09678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09678");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        java.lang.Object[] objArray13 = derivativeException12.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("", objArray28);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray28);
        java.lang.Object[] objArray31 = new java.lang.Object[] { 2, switchingFunctionsHandler19, 1, objArray28 };
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray28, (java.lang.Throwable) mathException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray28, (java.lang.Throwable) functionEvaluationException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray28, (java.lang.Throwable) functionEvaluationException41);
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("", objArray50);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray50);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException52);
        java.lang.Throwable[] throwableArray54 = integratorException52.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException52);
        functionEvaluationException41.addSuppressed((java.lang.Throwable) integratorException52);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!", objArray13, (java.lang.Throwable) integratorException52);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ");
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray13, (java.lang.Throwable) mathException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = -1", (java.lang.Throwable) convergenceException60);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray54);
    }

    @Test
    public void test09679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09679");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.stop();
        double double5 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) (-1L), (double) 2, 3);
        double double11 = switchingFunctionsHandler0.getEventTime();
        boolean boolean12 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler14.evaluateStep(stepInterpolator16);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler14.evaluateStep(stepInterpolator18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler14.add(switchingFunction20, (double) (short) -1, (double) (byte) 1, (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        switchingFunctionsHandler26.add(switchingFunction27, (double) (-1), (double) 3, 0);
        double[] doubleArray39 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean40 = switchingFunctionsHandler26.reset((double) (-1), doubleArray39);
        boolean boolean41 = switchingFunctionsHandler26.isEmpty();
        double double42 = switchingFunctionsHandler26.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction43 = null;
        switchingFunctionsHandler26.add(switchingFunction43, (double) (-1.0f), 0.0d, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        switchingFunctionsHandler49.add(switchingFunction50, (double) (-1), (double) 3, 0);
        double[] doubleArray62 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean63 = switchingFunctionsHandler49.reset((double) (-1), doubleArray62);
        boolean boolean64 = switchingFunctionsHandler26.reset(0.0d, doubleArray62);
        boolean boolean65 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray62);
        boolean boolean66 = switchingFunctionsHandler0.reset((double) 2, doubleArray62);
        boolean boolean67 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test09680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09680");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        switchingFunctionsHandler22.stepAccepted((double) (byte) 10, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray31);
        boolean boolean35 = switchingFunctionsHandler0.isEmpty();
        boolean boolean36 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler0.evaluateStep(stepInterpolator37);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        switchingFunctionsHandler0.add(switchingFunction39, (double) (byte) 1, (double) 1, 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        switchingFunctionsHandler0.add(switchingFunction44, (double) (short) 1, (double) (-1), (int) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        switchingFunctionsHandler0.add(switchingFunction49, (double) (byte) 10, Double.NaN, 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        switchingFunctionsHandler0.add(switchingFunction54, (double) (short) 0, (double) 1, (int) (byte) 100);
        double double59 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
    }

    @Test
    public void test09681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09681");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        boolean boolean22 = switchingFunctionsHandler0.stop();
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        boolean boolean25 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler0.evaluateStep(stepInterpolator26);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test09682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09682");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) (-1), (double) 100.0f, 10);
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        boolean boolean18 = switchingFunctionsHandler0.stop();
        boolean boolean19 = switchingFunctionsHandler0.stop();
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        double[] doubleArray26 = new double[] { 100.0d };
        boolean boolean27 = switchingFunctionsHandler22.reset((double) 0L, doubleArray26);
        boolean boolean28 = switchingFunctionsHandler22.stop();
        double double29 = switchingFunctionsHandler22.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean32 = switchingFunctionsHandler31.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler31.evaluateStep(stepInterpolator33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean37 = switchingFunctionsHandler36.isEmpty();
        double[] doubleArray40 = new double[] { 100.0d };
        boolean boolean41 = switchingFunctionsHandler36.reset((double) 0L, doubleArray40);
        switchingFunctionsHandler31.stepAccepted((double) (byte) 10, doubleArray40);
        boolean boolean43 = switchingFunctionsHandler22.reset((double) 1.0f, doubleArray40);
        boolean boolean44 = switchingFunctionsHandler0.reset((double) 100L, doubleArray40);
        double double45 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        switchingFunctionsHandler0.add(switchingFunction46, (double) (-1L), (double) 100.0f, (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        switchingFunctionsHandler0.add(switchingFunction51, (double) (-1L), (double) 10L, 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
    }

    @Test
    public void test09683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09683");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray18 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", objArray18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray18);
        java.lang.Object[] objArray21 = new java.lang.Object[] { 2, switchingFunctionsHandler9, 1, objArray18 };
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) mathException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) functionEvaluationException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) functionEvaluationException31);
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", objArray40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray40);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException42);
        java.lang.Throwable[] throwableArray44 = integratorException42.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException42);
        functionEvaluationException31.addSuppressed((java.lang.Throwable) integratorException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException42);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException54);
        java.lang.Object[] objArray56 = mathException55.getArguments();
        java.lang.Throwable throwable57 = null;
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!", objArray56, throwable57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray56);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException("", objArray56);
        integratorException42.addSuppressed((java.lang.Throwable) integratorException60);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException42);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) integratorException42);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException63);
        java.lang.Object[] objArray65 = convergenceException63.getArguments();
        java.lang.String str66 = convergenceException63.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) convergenceException63);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException67);
        double double69 = functionEvaluationException67.getArgument();
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str66, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
    }

    @Test
    public void test09684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09684");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, Double.NaN, (double) (byte) 0, 1);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test09685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09685");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean9 = switchingFunctionsHandler8.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler8.add(switchingFunction10, (double) (-1), (double) 'a', (int) (short) 0);
        double[] doubleArray16 = null;
        boolean boolean17 = switchingFunctionsHandler8.reset((double) 3, doubleArray16);
        double double18 = switchingFunctionsHandler8.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler20.add(switchingFunction21, (double) (-1), (double) 3, 0);
        double[] doubleArray33 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean34 = switchingFunctionsHandler20.reset((double) (-1), doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean37 = switchingFunctionsHandler36.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler36.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        double[] doubleArray45 = new double[] { 100.0d };
        boolean boolean46 = switchingFunctionsHandler41.reset((double) 0L, doubleArray45);
        switchingFunctionsHandler36.stepAccepted((double) (byte) 10, doubleArray45);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        switchingFunctionsHandler36.add(switchingFunction48, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.isEmpty();
        double[] doubleArray58 = new double[] { 100.0d };
        boolean boolean59 = switchingFunctionsHandler54.reset((double) 0L, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean62 = switchingFunctionsHandler61.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler61.evaluateStep(stepInterpolator63);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean67 = switchingFunctionsHandler66.isEmpty();
        double[] doubleArray70 = new double[] { 100.0d };
        boolean boolean71 = switchingFunctionsHandler66.reset((double) 0L, doubleArray70);
        boolean boolean72 = switchingFunctionsHandler61.reset((double) 1, doubleArray70);
        boolean boolean73 = switchingFunctionsHandler54.reset((double) 100, doubleArray70);
        boolean boolean74 = switchingFunctionsHandler36.reset((double) (byte) -1, doubleArray70);
        boolean boolean75 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray70);
        boolean boolean76 = switchingFunctionsHandler8.reset((double) (byte) 10, doubleArray70);
        boolean boolean77 = switchingFunctionsHandler0.reset((double) (-1L), doubleArray70);
        double double78 = switchingFunctionsHandler0.getEventTime();
        boolean boolean79 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction80 = null;
        switchingFunctionsHandler0.add(switchingFunction80, (double) '4', (double) 100, (int) (byte) 100);
        double double85 = switchingFunctionsHandler0.getEventTime();
        double double86 = switchingFunctionsHandler0.getEventTime();
        boolean boolean87 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test09686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09686");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        switchingFunctionsHandler22.stepAccepted((double) (byte) 10, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray31);
        boolean boolean35 = switchingFunctionsHandler0.isEmpty();
        boolean boolean36 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        switchingFunctionsHandler38.add(switchingFunction39, (double) (-1), (double) 3, 0);
        double[] doubleArray51 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean52 = switchingFunctionsHandler38.reset((double) (-1), doubleArray51);
        switchingFunctionsHandler0.stepAccepted((double) 'a', doubleArray51);
        boolean boolean54 = switchingFunctionsHandler0.stop();
        boolean boolean55 = switchingFunctionsHandler0.stop();
        double double56 = switchingFunctionsHandler0.getEventTime();
        double double57 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler0.evaluateStep(stepInterpolator58);
        boolean boolean60 = switchingFunctionsHandler0.isEmpty();
        double double61 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler0.evaluateStep(stepInterpolator62);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test09687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09687");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        double double16 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean25 = switchingFunctionsHandler24.isEmpty();
        double[] doubleArray28 = new double[] { 100.0d };
        boolean boolean29 = switchingFunctionsHandler24.reset((double) 0L, doubleArray28);
        boolean boolean30 = switchingFunctionsHandler0.reset((double) 100L, doubleArray28);
        boolean boolean31 = switchingFunctionsHandler0.isEmpty();
        boolean boolean32 = switchingFunctionsHandler0.isEmpty();
        boolean boolean33 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler0.add(switchingFunction34, (double) 1.0f, 100.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean41 = switchingFunctionsHandler40.isEmpty();
        double[] doubleArray44 = new double[] { 100.0d };
        boolean boolean45 = switchingFunctionsHandler40.reset((double) 0L, doubleArray44);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean48 = switchingFunctionsHandler47.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler47.evaluateStep(stepInterpolator49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean53 = switchingFunctionsHandler52.isEmpty();
        double[] doubleArray56 = new double[] { 100.0d };
        boolean boolean57 = switchingFunctionsHandler52.reset((double) 0L, doubleArray56);
        boolean boolean58 = switchingFunctionsHandler47.reset((double) 1, doubleArray56);
        boolean boolean59 = switchingFunctionsHandler40.reset((double) 100, doubleArray56);
        double double60 = switchingFunctionsHandler40.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean63 = switchingFunctionsHandler62.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        boolean boolean65 = switchingFunctionsHandler62.evaluateStep(stepInterpolator64);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean68 = switchingFunctionsHandler67.isEmpty();
        double[] doubleArray71 = new double[] { 100.0d };
        boolean boolean72 = switchingFunctionsHandler67.reset((double) 0L, doubleArray71);
        switchingFunctionsHandler62.stepAccepted((double) (byte) 10, doubleArray71);
        switchingFunctionsHandler40.stepAccepted(0.0d, doubleArray71);
        double double75 = switchingFunctionsHandler40.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction76 = null;
        switchingFunctionsHandler40.add(switchingFunction76, (double) 10L, (double) 'a', (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler82 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean83 = switchingFunctionsHandler82.isEmpty();
        double[] doubleArray86 = new double[] { 100.0d };
        boolean boolean87 = switchingFunctionsHandler82.reset((double) 0L, doubleArray86);
        boolean boolean88 = switchingFunctionsHandler40.reset((double) (byte) 1, doubleArray86);
        boolean boolean89 = switchingFunctionsHandler0.reset((double) (byte) 0, doubleArray86);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator90 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean91 = switchingFunctionsHandler0.evaluateStep(stepInterpolator90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test09688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09688");
        java.lang.Object[] objArray10 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("", objArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException11);
        java.lang.Throwable[] throwableArray13 = derivativeException12.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) convergenceException15);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray46 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("", objArray46);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray46);
        java.lang.Object[] objArray49 = new java.lang.Object[] { 2, switchingFunctionsHandler37, 1, objArray46 };
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray46, (java.lang.Throwable) mathException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray46, (java.lang.Throwable) functionEvaluationException56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray46, (java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray29, (java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!", strArray29);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray73);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray73);
        org.apache.commons.math.ode.IntegratorException integratorException76 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray73);
        org.apache.commons.math.ode.IntegratorException integratorException77 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray73);
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException77);
        java.lang.Throwable[] throwableArray79 = derivativeException78.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException78);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray29, (java.lang.Throwable) derivativeException80);
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException80);
        convergenceException15.addSuppressed((java.lang.Throwable) derivativeException80);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(throwableArray79);
    }

    @Test
    public void test09689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09689");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray2 = null;
        switchingFunctionsHandler0.stepAccepted((double) 0, doubleArray2);
        double double4 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler0.add(switchingFunction5, 35.0d, (double) (short) -1, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, (double) 1.0f, (double) 3, (int) (short) -1);
        double double15 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler17.add(switchingFunction18, (double) (-1), (double) 3, 0);
        double[] doubleArray30 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean31 = switchingFunctionsHandler17.reset((double) (-1), doubleArray30);
        boolean boolean32 = switchingFunctionsHandler17.isEmpty();
        boolean boolean33 = switchingFunctionsHandler17.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler17.add(switchingFunction34, (double) (byte) 0, 0.0d, (int) ' ');
        double[] doubleArray43 = new double[] { 1.0f, (-1.0f), 100.0d };
        boolean boolean44 = switchingFunctionsHandler17.reset((double) 1L, doubleArray43);
        boolean boolean45 = switchingFunctionsHandler0.reset(Double.NaN, doubleArray43);
        boolean boolean46 = switchingFunctionsHandler0.isEmpty();
        boolean boolean47 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test09690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09690");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray17 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray17);
        java.lang.Object[] objArray20 = new java.lang.Object[] { 2, switchingFunctionsHandler8, 1, objArray17 };
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) mathException24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException25);
        java.lang.Object[] objArray27 = integratorException26.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("", objArray27);
        java.lang.Throwable[] throwableArray30 = convergenceException29.getSuppressed();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray40);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray40);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) integratorException44);
        java.lang.Object[] objArray46 = integratorException44.getArguments();
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: Evaluation failed for argument = -1", (java.lang.Object[]) throwableArray30, (java.lang.Throwable) integratorException44);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException47);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
    }

    @Test
    public void test09691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09691");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray18 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", objArray18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray18);
        java.lang.Object[] objArray21 = new java.lang.Object[] { 2, switchingFunctionsHandler9, 1, objArray18 };
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) mathException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) functionEvaluationException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) functionEvaluationException31);
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", objArray40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray40);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException42);
        java.lang.Throwable[] throwableArray44 = integratorException42.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException42);
        functionEvaluationException31.addSuppressed((java.lang.Throwable) integratorException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException42);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException54);
        java.lang.Object[] objArray56 = mathException55.getArguments();
        java.lang.Throwable throwable57 = null;
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!", objArray56, throwable57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray56);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException("", objArray56);
        integratorException42.addSuppressed((java.lang.Throwable) integratorException60);
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray71);
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "hi!", (java.lang.Object[]) strArray71);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException74);
        integratorException42.addSuppressed((java.lang.Throwable) functionEvaluationException74);
        double double77 = functionEvaluationException74.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), (java.lang.Throwable) functionEvaluationException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException78);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException78);
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException78);
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException81);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-1.0d) + "'", double77 == (-1.0d));
    }

    @Test
    public void test09692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09692");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        double double8 = switchingFunctionsHandler0.getEventTime();
        boolean boolean9 = switchingFunctionsHandler0.stop();
        double[] doubleArray16 = new double[] { 3, 100, (-1.0f), (byte) -1, 1.0d };
        switchingFunctionsHandler0.stepAccepted((-1.0d), doubleArray16);
        double[] doubleArray19 = null;
        boolean boolean20 = switchingFunctionsHandler0.reset((double) ' ', doubleArray19);
        double double21 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler0.add(switchingFunction22, (double) 10L, (double) (short) 100, (-1));
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[3.0, 100.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
    }

    @Test
    public void test09693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09693");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException9);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", objArray11, throwable12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray11);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", objArray11);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray33 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("", objArray33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray33);
        java.lang.Object[] objArray36 = new java.lang.Object[] { 2, switchingFunctionsHandler24, 1, objArray33 };
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) mathException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray33);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray11, (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException45);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray36);
    }

    @Test
    public void test09694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09694");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray19);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", strArray19);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("", objArray50);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray50);
        java.lang.Object[] objArray53 = new java.lang.Object[] { 2, switchingFunctionsHandler41, 1, objArray50 };
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray50, (java.lang.Throwable) mathException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray50, (java.lang.Throwable) functionEvaluationException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray50, (java.lang.Throwable) functionEvaluationException63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray50);
        java.lang.String str66 = functionEvaluationException65.getPattern();
        java.lang.Object[] objArray67 = functionEvaluationException65.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double70 = functionEvaluationException69.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray67, (java.lang.Throwable) functionEvaluationException69);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray67);
        java.lang.Throwable throwable73 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray67, throwable73);
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "Evaluation failed for argument = 100", (java.lang.Object[]) strArray19, (java.lang.Throwable) convergenceException75);
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 10", strArray19);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-1.0d) + "'", double70 == (-1.0d));
    }

    @Test
    public void test09695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09695");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: hi!", strArray11);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Object[]) strArray11);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray44 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("", objArray44);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray44);
        java.lang.Object[] objArray47 = new java.lang.Object[] { 2, switchingFunctionsHandler35, 1, objArray44 };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray44, (java.lang.Throwable) mathException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray44, (java.lang.Throwable) functionEvaluationException54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray44, (java.lang.Throwable) functionEvaluationException57);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray27, (java.lang.Throwable) functionEvaluationException57);
        java.lang.Throwable[] throwableArray60 = functionEvaluationException57.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray60, (java.lang.Throwable) convergenceException62);
        double double64 = functionEvaluationException63.getArgument();
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray11, (java.lang.Throwable) functionEvaluationException63);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException63);
        double double67 = functionEvaluationException63.getArgument();
        java.lang.Throwable[] throwableArray68 = functionEvaluationException63.getSuppressed();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(throwableArray68);
    }

    @Test
    public void test09696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09696");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) (-1), (double) 100.0f, 10);
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        boolean boolean18 = switchingFunctionsHandler0.stop();
        double double19 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler21.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean27 = switchingFunctionsHandler26.isEmpty();
        double[] doubleArray30 = new double[] { 100.0d };
        boolean boolean31 = switchingFunctionsHandler26.reset((double) 0L, doubleArray30);
        switchingFunctionsHandler21.stepAccepted((double) (byte) 10, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler21.add(switchingFunction33, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean40 = switchingFunctionsHandler39.isEmpty();
        double[] doubleArray43 = new double[] { 100.0d };
        boolean boolean44 = switchingFunctionsHandler39.reset((double) 0L, doubleArray43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean47 = switchingFunctionsHandler46.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = switchingFunctionsHandler46.evaluateStep(stepInterpolator48);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean52 = switchingFunctionsHandler51.isEmpty();
        double[] doubleArray55 = new double[] { 100.0d };
        boolean boolean56 = switchingFunctionsHandler51.reset((double) 0L, doubleArray55);
        boolean boolean57 = switchingFunctionsHandler46.reset((double) 1, doubleArray55);
        boolean boolean58 = switchingFunctionsHandler39.reset((double) 100, doubleArray55);
        boolean boolean59 = switchingFunctionsHandler21.reset((double) (byte) -1, doubleArray55);
        boolean boolean60 = switchingFunctionsHandler0.reset(2.0d, doubleArray55);
        boolean boolean61 = switchingFunctionsHandler0.stop();
        boolean boolean62 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test09697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09697");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (byte) 0, 0.0d, (int) ' ');
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler0.add(switchingFunction25, (double) '4', (double) (-1L), (-1));
        boolean boolean30 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test09698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09698");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction2 = null;
        switchingFunctionsHandler0.add(switchingFunction2, (double) (-1), (double) 'a', (int) (short) 0);
        boolean boolean7 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        switchingFunctionsHandler0.add(switchingFunction8, (double) 1, 3.0d, (-1));
        boolean boolean13 = switchingFunctionsHandler0.stop();
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean17 = switchingFunctionsHandler16.isEmpty();
        boolean boolean18 = switchingFunctionsHandler16.stop();
        double double19 = switchingFunctionsHandler16.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler16.add(switchingFunction20, (double) (-1.0f), (double) (short) 10, (int) (byte) 100);
        double double25 = switchingFunctionsHandler16.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = switchingFunctionsHandler27.evaluateStep(stepInterpolator29);
        boolean boolean31 = switchingFunctionsHandler27.isEmpty();
        boolean boolean32 = switchingFunctionsHandler27.isEmpty();
        boolean boolean33 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray35 = null;
        switchingFunctionsHandler27.stepAccepted((double) (byte) 100, doubleArray35);
        boolean boolean37 = switchingFunctionsHandler27.isEmpty();
        boolean boolean38 = switchingFunctionsHandler27.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean41 = switchingFunctionsHandler40.isEmpty();
        double[] doubleArray44 = new double[] { 100.0d };
        boolean boolean45 = switchingFunctionsHandler40.reset((double) 0L, doubleArray44);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean48 = switchingFunctionsHandler47.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler47.evaluateStep(stepInterpolator49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean53 = switchingFunctionsHandler52.isEmpty();
        double[] doubleArray56 = new double[] { 100.0d };
        boolean boolean57 = switchingFunctionsHandler52.reset((double) 0L, doubleArray56);
        boolean boolean58 = switchingFunctionsHandler47.reset((double) 1, doubleArray56);
        boolean boolean59 = switchingFunctionsHandler40.reset((double) 100, doubleArray56);
        double double60 = switchingFunctionsHandler40.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean63 = switchingFunctionsHandler62.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        boolean boolean65 = switchingFunctionsHandler62.evaluateStep(stepInterpolator64);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean68 = switchingFunctionsHandler67.isEmpty();
        double[] doubleArray71 = new double[] { 100.0d };
        boolean boolean72 = switchingFunctionsHandler67.reset((double) 0L, doubleArray71);
        switchingFunctionsHandler62.stepAccepted((double) (byte) 10, doubleArray71);
        switchingFunctionsHandler40.stepAccepted(0.0d, doubleArray71);
        boolean boolean75 = switchingFunctionsHandler40.isEmpty();
        boolean boolean76 = switchingFunctionsHandler40.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler78 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction79 = null;
        switchingFunctionsHandler78.add(switchingFunction79, (double) (-1), (double) 3, 0);
        double[] doubleArray91 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean92 = switchingFunctionsHandler78.reset((double) (-1), doubleArray91);
        switchingFunctionsHandler40.stepAccepted((double) 'a', doubleArray91);
        boolean boolean94 = switchingFunctionsHandler27.reset((double) '4', doubleArray91);
        boolean boolean95 = switchingFunctionsHandler16.reset((double) 100, doubleArray91);
        boolean boolean96 = switchingFunctionsHandler0.reset((double) 2, doubleArray91);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test09699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09699");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        double double16 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler0.add(switchingFunction23, (double) (short) -1, (-1.0d), (int) (short) -1);
        boolean boolean28 = switchingFunctionsHandler0.isEmpty();
        boolean boolean29 = switchingFunctionsHandler0.isEmpty();
        double double30 = switchingFunctionsHandler0.getEventTime();
        boolean boolean31 = switchingFunctionsHandler0.isEmpty();
        boolean boolean32 = switchingFunctionsHandler0.isEmpty();
        double double33 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = switchingFunctionsHandler0.evaluateStep(stepInterpolator34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
    }

    @Test
    public void test09700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09700");
        java.lang.Object[] objArray2 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray31);
        java.lang.Object[] objArray34 = new java.lang.Object[] { 2, switchingFunctionsHandler22, 1, objArray31 };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) mathException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException44);
        java.lang.Throwable[] throwableArray47 = functionEvaluationException44.getSuppressed();
        java.lang.Throwable[] throwableArray48 = functionEvaluationException44.getSuppressed();
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray48);
        java.lang.String str50 = mathException49.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException49);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray2, (java.lang.Throwable) functionEvaluationException51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str50, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!");
    }

    @Test
    public void test09701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09701");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.stop();
        double double5 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) 'a', (double) 0L, (int) 'a');
        boolean boolean11 = switchingFunctionsHandler0.stop();
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        double[] doubleArray18 = new double[] { 100.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) 0L, doubleArray18);
        boolean boolean20 = switchingFunctionsHandler14.stop();
        double double21 = switchingFunctionsHandler14.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean24 = switchingFunctionsHandler23.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler23.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean29 = switchingFunctionsHandler28.isEmpty();
        double[] doubleArray32 = new double[] { 100.0d };
        boolean boolean33 = switchingFunctionsHandler28.reset((double) 0L, doubleArray32);
        switchingFunctionsHandler23.stepAccepted((double) (byte) 10, doubleArray32);
        boolean boolean35 = switchingFunctionsHandler14.reset((double) 1.0f, doubleArray32);
        boolean boolean36 = switchingFunctionsHandler0.reset((double) 'a', doubleArray32);
        boolean boolean37 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean40 = switchingFunctionsHandler39.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler39.evaluateStep(stepInterpolator41);
        boolean boolean43 = switchingFunctionsHandler39.stop();
        double double44 = switchingFunctionsHandler39.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        switchingFunctionsHandler39.add(switchingFunction45, (double) 'a', (double) 0L, (int) 'a');
        boolean boolean50 = switchingFunctionsHandler39.stop();
        boolean boolean51 = switchingFunctionsHandler39.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean54 = switchingFunctionsHandler53.isEmpty();
        double[] doubleArray57 = new double[] { 100.0d };
        boolean boolean58 = switchingFunctionsHandler53.reset((double) 0L, doubleArray57);
        boolean boolean59 = switchingFunctionsHandler53.stop();
        double double60 = switchingFunctionsHandler53.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean63 = switchingFunctionsHandler62.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        boolean boolean65 = switchingFunctionsHandler62.evaluateStep(stepInterpolator64);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean68 = switchingFunctionsHandler67.isEmpty();
        double[] doubleArray71 = new double[] { 100.0d };
        boolean boolean72 = switchingFunctionsHandler67.reset((double) 0L, doubleArray71);
        switchingFunctionsHandler62.stepAccepted((double) (byte) 10, doubleArray71);
        boolean boolean74 = switchingFunctionsHandler53.reset((double) 1.0f, doubleArray71);
        boolean boolean75 = switchingFunctionsHandler39.reset((double) 'a', doubleArray71);
        boolean boolean76 = switchingFunctionsHandler0.reset(0.0d, doubleArray71);
        boolean boolean77 = switchingFunctionsHandler0.stop();
        double double78 = switchingFunctionsHandler0.getEventTime();
        boolean boolean79 = switchingFunctionsHandler0.isEmpty();
        boolean boolean80 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test09702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09702");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", objArray27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray27);
        java.lang.Object[] objArray30 = new java.lang.Object[] { 2, switchingFunctionsHandler18, 1, objArray27 };
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) mathException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray27);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray53);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray53);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray53);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException56);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException56);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("hi!", objArray27, (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("", objArray27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "");
        java.lang.Object[] objArray64 = functionEvaluationException63.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException63);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray27, (java.lang.Throwable) functionEvaluationException63);
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "hi!");
        java.lang.String str72 = functionEvaluationException71.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) functionEvaluationException71);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException", objArray27, (java.lang.Throwable) functionEvaluationException71);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException81);
        java.lang.Object[] objArray83 = mathException82.getArguments();
        java.lang.Throwable throwable84 = null;
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException("hi!", objArray83, throwable84);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray83);
        org.apache.commons.math.ode.IntegratorException integratorException87 = new org.apache.commons.math.ode.IntegratorException("", objArray83);
        java.lang.Throwable[] throwableArray88 = integratorException87.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray27, (java.lang.Throwable) integratorException87);
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", objArray27);
        org.apache.commons.math.ode.IntegratorException integratorException91 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", objArray27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException92 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: hi!", objArray27);
        double double93 = functionEvaluationException92.getArgument();
        org.apache.commons.math.ode.IntegratorException integratorException94 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException92);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertNotNull(throwableArray88);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1.0d + "'", double93 == 1.0d);
    }

    @Test
    public void test09703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09703");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!");
        java.lang.Throwable[] throwableArray2 = mathException1.getSuppressed();
        org.apache.commons.math.MathException mathException3 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("", objArray29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray29);
        java.lang.Object[] objArray32 = new java.lang.Object[] { 2, switchingFunctionsHandler20, 1, objArray29 };
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) mathException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) functionEvaluationException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) functionEvaluationException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray29);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray55);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray55);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray55);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException58);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException58);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("hi!", objArray29, (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("", objArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "");
        java.lang.Object[] objArray66 = functionEvaluationException65.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException65);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray29, (java.lang.Throwable) functionEvaluationException65);
        org.apache.commons.math.ode.IntegratorException integratorException69 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "hi!");
        java.lang.String str74 = functionEvaluationException73.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) functionEvaluationException73);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException", objArray29, (java.lang.Throwable) functionEvaluationException73);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException83);
        java.lang.Object[] objArray85 = mathException84.getArguments();
        java.lang.Throwable throwable86 = null;
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("hi!", objArray85, throwable86);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException88 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray85);
        org.apache.commons.math.ode.IntegratorException integratorException89 = new org.apache.commons.math.ode.IntegratorException("", objArray85);
        java.lang.Throwable[] throwableArray90 = integratorException89.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray29, (java.lang.Throwable) integratorException89);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException91);
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) mathException92);
        org.apache.commons.math.ode.IntegratorException integratorException94 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException93);
        org.apache.commons.math.ode.DerivativeException derivativeException95 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException93);
        org.apache.commons.math.ConvergenceException convergenceException96 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException93);
        mathException1.addSuppressed((java.lang.Throwable) mathException93);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertNotNull(throwableArray90);
    }

    @Test
    public void test09704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09704");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ");
        java.lang.Object[] objArray6 = convergenceException5.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray19 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray19);
        java.lang.Object[] objArray22 = new java.lang.Object[] { 2, switchingFunctionsHandler10, 1, objArray19 };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) mathException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", objArray6, (java.lang.Throwable) mathException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 2, (java.lang.Throwable) functionEvaluationException29);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray22);
    }

    @Test
    public void test09705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09705");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler0.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double double29 = switchingFunctionsHandler27.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean32 = switchingFunctionsHandler31.isEmpty();
        double[] doubleArray35 = new double[] { 100.0d };
        boolean boolean36 = switchingFunctionsHandler31.reset((double) 0L, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean39 = switchingFunctionsHandler38.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler38.evaluateStep(stepInterpolator40);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean44 = switchingFunctionsHandler43.isEmpty();
        double[] doubleArray47 = new double[] { 100.0d };
        boolean boolean48 = switchingFunctionsHandler43.reset((double) 0L, doubleArray47);
        boolean boolean49 = switchingFunctionsHandler38.reset((double) 1, doubleArray47);
        boolean boolean50 = switchingFunctionsHandler31.reset((double) 100, doubleArray47);
        double double51 = switchingFunctionsHandler31.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean54 = switchingFunctionsHandler53.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler53.evaluateStep(stepInterpolator55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean59 = switchingFunctionsHandler58.isEmpty();
        double[] doubleArray62 = new double[] { 100.0d };
        boolean boolean63 = switchingFunctionsHandler58.reset((double) 0L, doubleArray62);
        switchingFunctionsHandler53.stepAccepted((double) (byte) 10, doubleArray62);
        switchingFunctionsHandler31.stepAccepted(0.0d, doubleArray62);
        boolean boolean66 = switchingFunctionsHandler31.isEmpty();
        boolean boolean67 = switchingFunctionsHandler31.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler69 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        switchingFunctionsHandler69.add(switchingFunction70, (double) (-1), (double) 3, 0);
        double[] doubleArray82 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean83 = switchingFunctionsHandler69.reset((double) (-1), doubleArray82);
        switchingFunctionsHandler31.stepAccepted((double) 'a', doubleArray82);
        boolean boolean85 = switchingFunctionsHandler27.reset((double) 3, doubleArray82);
        switchingFunctionsHandler0.stepAccepted((double) (short) 0, doubleArray82);
        boolean boolean87 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test09706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09706");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        java.lang.Object[] objArray11 = derivativeException10.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray26 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("", objArray26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray26);
        java.lang.Object[] objArray29 = new java.lang.Object[] { 2, switchingFunctionsHandler17, 1, objArray26 };
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray26, (java.lang.Throwable) mathException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray26, (java.lang.Throwable) functionEvaluationException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray26, (java.lang.Throwable) functionEvaluationException39);
        java.lang.Object[] objArray48 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("", objArray48);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray48);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException50);
        java.lang.Throwable[] throwableArray52 = integratorException50.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException50);
        functionEvaluationException39.addSuppressed((java.lang.Throwable) integratorException50);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!", objArray11, (java.lang.Throwable) integratorException50);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) integratorException50);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException50);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) mathException57);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test09707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09707");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray19 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray19);
        java.lang.Object[] objArray22 = new java.lang.Object[] { 2, switchingFunctionsHandler10, 1, objArray19 };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) mathException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) functionEvaluationException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) functionEvaluationException32);
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", objArray41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray41);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException43);
        java.lang.Throwable[] throwableArray45 = integratorException43.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException43);
        functionEvaluationException32.addSuppressed((java.lang.Throwable) integratorException43);
        double double48 = functionEvaluationException32.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException();
        functionEvaluationException32.addSuppressed((java.lang.Throwable) convergenceException49);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) functionEvaluationException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException32);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException32);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Throwable) functionEvaluationException32);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 100.0d + "'", double48 == 100.0d);
    }

    @Test
    public void test09708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09708");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray23);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray23);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray45 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("", objArray45);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray45);
        java.lang.Object[] objArray48 = new java.lang.Object[] { 2, switchingFunctionsHandler36, 1, objArray45 };
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray45, (java.lang.Throwable) mathException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray45, (java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray45, (java.lang.Throwable) functionEvaluationException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, (java.lang.Throwable) convergenceException59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray23, (java.lang.Throwable) functionEvaluationException60);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: Convergence failed", strArray23);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray23);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray23);
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray23);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray48);
    }

    @Test
    public void test09709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09709");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray19 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray19);
        java.lang.Object[] objArray22 = new java.lang.Object[] { 2, switchingFunctionsHandler10, 1, objArray19 };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) mathException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) functionEvaluationException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) functionEvaluationException32);
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", objArray41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray41);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException43);
        java.lang.Throwable[] throwableArray45 = integratorException43.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException43);
        functionEvaluationException32.addSuppressed((java.lang.Throwable) integratorException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException43);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException55);
        java.lang.Object[] objArray57 = mathException56.getArguments();
        java.lang.Throwable throwable58 = null;
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!", objArray57, throwable58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray57);
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException("", objArray57);
        integratorException43.addSuppressed((java.lang.Throwable) integratorException61);
        java.lang.Object[] objArray63 = integratorException43.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: hi!", objArray63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException65);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[1, a, 10, a, -1]");
    }

    @Test
    public void test09710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09710");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray18 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", objArray18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray18);
        java.lang.Object[] objArray21 = new java.lang.Object[] { 2, switchingFunctionsHandler9, 1, objArray18 };
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) mathException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) functionEvaluationException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) functionEvaluationException31);
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", objArray40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray40);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException42);
        java.lang.Throwable[] throwableArray44 = integratorException42.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException42);
        functionEvaluationException31.addSuppressed((java.lang.Throwable) integratorException42);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, (java.lang.Throwable) derivativeException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Throwable) functionEvaluationException49);
        java.lang.Object[] objArray51 = convergenceException50.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: hi!", objArray51);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
    }

    @Test
    public void test09711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09711");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean4 = switchingFunctionsHandler3.isEmpty();
        double[] doubleArray7 = new double[] { 100.0d };
        boolean boolean8 = switchingFunctionsHandler3.reset((double) 0L, doubleArray7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean11 = switchingFunctionsHandler10.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler10.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean16 = switchingFunctionsHandler15.isEmpty();
        double[] doubleArray19 = new double[] { 100.0d };
        boolean boolean20 = switchingFunctionsHandler15.reset((double) 0L, doubleArray19);
        boolean boolean21 = switchingFunctionsHandler10.reset((double) 1, doubleArray19);
        boolean boolean22 = switchingFunctionsHandler3.reset((double) 100, doubleArray19);
        double double23 = switchingFunctionsHandler3.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean26 = switchingFunctionsHandler25.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler25.evaluateStep(stepInterpolator27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean31 = switchingFunctionsHandler30.isEmpty();
        double[] doubleArray34 = new double[] { 100.0d };
        boolean boolean35 = switchingFunctionsHandler30.reset((double) 0L, doubleArray34);
        switchingFunctionsHandler25.stepAccepted((double) (byte) 10, doubleArray34);
        switchingFunctionsHandler3.stepAccepted(0.0d, doubleArray34);
        switchingFunctionsHandler0.stepAccepted((double) (short) 0, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        switchingFunctionsHandler40.add(switchingFunction41, (double) (-1), (double) 3, 0);
        double[] doubleArray53 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean54 = switchingFunctionsHandler40.reset((double) (-1), doubleArray53);
        switchingFunctionsHandler0.stepAccepted((double) 100, doubleArray53);
        boolean boolean56 = switchingFunctionsHandler0.stop();
        double double57 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler0.evaluateStep(stepInterpolator58);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test09712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09712");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) (-1), (double) 100.0f, 10);
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        double double18 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler0.add(switchingFunction19, 35.0d, (double) (byte) 100, 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, (double) (byte) 10, (double) 0, 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler0.add(switchingFunction29, (double) (byte) -1, (double) '#', (int) ' ');
        double double34 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = switchingFunctionsHandler0.evaluateStep(stepInterpolator35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
    }

    @Test
    public void test09713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09713");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        switchingFunctionsHandler7.add(switchingFunction8, (double) (-1), (double) 3, 0);
        double[] doubleArray20 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean21 = switchingFunctionsHandler7.reset((double) (-1), doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean24 = switchingFunctionsHandler23.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler23.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean29 = switchingFunctionsHandler28.isEmpty();
        double[] doubleArray32 = new double[] { 100.0d };
        boolean boolean33 = switchingFunctionsHandler28.reset((double) 0L, doubleArray32);
        switchingFunctionsHandler23.stepAccepted((double) (byte) 10, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        switchingFunctionsHandler23.add(switchingFunction35, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        double[] doubleArray45 = new double[] { 100.0d };
        boolean boolean46 = switchingFunctionsHandler41.reset((double) 0L, doubleArray45);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean49 = switchingFunctionsHandler48.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        boolean boolean51 = switchingFunctionsHandler48.evaluateStep(stepInterpolator50);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean54 = switchingFunctionsHandler53.isEmpty();
        double[] doubleArray57 = new double[] { 100.0d };
        boolean boolean58 = switchingFunctionsHandler53.reset((double) 0L, doubleArray57);
        boolean boolean59 = switchingFunctionsHandler48.reset((double) 1, doubleArray57);
        boolean boolean60 = switchingFunctionsHandler41.reset((double) 100, doubleArray57);
        boolean boolean61 = switchingFunctionsHandler23.reset((double) (byte) -1, doubleArray57);
        boolean boolean62 = switchingFunctionsHandler7.reset((double) (byte) 1, doubleArray57);
        boolean boolean63 = switchingFunctionsHandler0.reset((double) 10L, doubleArray57);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        switchingFunctionsHandler0.add(switchingFunction64, (double) (-1.0f), (double) 'a', (int) '4');
        double double69 = switchingFunctionsHandler0.getEventTime();
        boolean boolean70 = switchingFunctionsHandler0.isEmpty();
        boolean boolean71 = switchingFunctionsHandler0.stop();
        double double72 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction73 = null;
        switchingFunctionsHandler0.add(switchingFunction73, (double) 10L, 1.0d, 1);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
    }

    @Test
    public void test09714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09714");
        java.lang.Object[] objArray11 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", objArray11);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray11, (java.lang.Throwable) convergenceException13);
        java.lang.Object[] objArray15 = mathException14.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray32 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("", objArray32);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray32);
        java.lang.Object[] objArray35 = new java.lang.Object[] { 2, switchingFunctionsHandler23, 1, objArray32 };
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) mathException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) functionEvaluationException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray32);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray15, (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Evaluation failed for argument = -1");
        convergenceException50.addSuppressed((java.lang.Throwable) mathException52);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException52);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException52);
        java.lang.Object[] objArray56 = mathException55.getArguments();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("", objArray69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray69);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("", objArray69, (java.lang.Throwable) functionEvaluationException75);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.String str79 = convergenceException78.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException80 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray69, (java.lang.Throwable) convergenceException78);
        java.lang.String str81 = functionEvaluationException80.getPattern();
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", objArray56, (java.lang.Throwable) functionEvaluationException80);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) mathException82);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
    }

    @Test
    public void test09715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09715");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray17 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray17);
        java.lang.Object[] objArray20 = new java.lang.Object[] { 2, switchingFunctionsHandler8, 1, objArray17 };
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) mathException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) functionEvaluationException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) functionEvaluationException30);
        java.lang.Object[] objArray39 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("", objArray39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray39);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException41);
        java.lang.Throwable[] throwableArray43 = integratorException41.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException41);
        functionEvaluationException30.addSuppressed((java.lang.Throwable) integratorException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException41);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException53);
        java.lang.Object[] objArray55 = mathException54.getArguments();
        java.lang.Throwable throwable56 = null;
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!", objArray55, throwable56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray55);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("", objArray55);
        integratorException41.addSuppressed((java.lang.Throwable) integratorException59);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray70);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "hi!", (java.lang.Object[]) strArray70);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException73);
        integratorException41.addSuppressed((java.lang.Throwable) functionEvaluationException73);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Throwable) integratorException41);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException41);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) mathException77);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException78);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(strArray70);
    }

    @Test
    public void test09716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09716");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("", objArray35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray35);
        java.lang.Object[] objArray38 = new java.lang.Object[] { 2, switchingFunctionsHandler26, 1, objArray35 };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) mathException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) functionEvaluationException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray16, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException57);
        java.lang.Throwable[] throwableArray60 = functionEvaluationException57.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray16, (java.lang.Throwable) functionEvaluationException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 100", (java.lang.Object[]) strArray16);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, (java.lang.Throwable) mathException63);
        java.lang.Throwable[] throwableArray65 = functionEvaluationException64.getSuppressed();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray65);
    }

    @Test
    public void test09717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09717");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        double double15 = switchingFunctionsHandler0.getEventTime();
        double double16 = switchingFunctionsHandler0.getEventTime();
        boolean boolean17 = switchingFunctionsHandler0.stop();
        double[] doubleArray19 = null;
        boolean boolean20 = switchingFunctionsHandler0.reset((double) 0L, doubleArray19);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = switchingFunctionsHandler0.evaluateStep(stepInterpolator21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09718");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) (byte) -1, (-1.0d), (int) 'a');
        boolean boolean9 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, (double) (short) 0, (double) '#', (int) (short) 0);
        boolean boolean15 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, 97.0d, (double) 100.0f, (int) 'a');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test09719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09719");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) (-1), (double) 100.0f, 10);
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        double double18 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler0.add(switchingFunction19, 35.0d, (double) (byte) 100, 3);
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler0.add(switchingFunction25, (double) (byte) 0, (double) 1, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        switchingFunctionsHandler31.add(switchingFunction32, (double) (-1), (double) 3, 0);
        double[] doubleArray44 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean45 = switchingFunctionsHandler31.reset((double) (-1), doubleArray44);
        boolean boolean46 = switchingFunctionsHandler31.isEmpty();
        boolean boolean47 = switchingFunctionsHandler31.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        switchingFunctionsHandler31.add(switchingFunction48, (double) (byte) 0, 0.0d, (int) ' ');
        boolean boolean53 = switchingFunctionsHandler31.stop();
        boolean boolean54 = switchingFunctionsHandler31.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        switchingFunctionsHandler31.add(switchingFunction55, (double) ' ', 0.0d, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean62 = switchingFunctionsHandler61.isEmpty();
        double[] doubleArray65 = new double[] { 100.0d };
        boolean boolean66 = switchingFunctionsHandler61.reset((double) 0L, doubleArray65);
        boolean boolean67 = switchingFunctionsHandler61.stop();
        double double68 = switchingFunctionsHandler61.getEventTime();
        double double69 = switchingFunctionsHandler61.getEventTime();
        boolean boolean70 = switchingFunctionsHandler61.stop();
        double[] doubleArray77 = new double[] { 3, 100, (-1.0f), (byte) -1, 1.0d };
        switchingFunctionsHandler61.stepAccepted((-1.0d), doubleArray77);
        boolean boolean79 = switchingFunctionsHandler31.reset((double) 0, doubleArray77);
        boolean boolean80 = switchingFunctionsHandler0.reset((double) 10L, doubleArray77);
        boolean boolean81 = switchingFunctionsHandler0.stop();
        double double82 = switchingFunctionsHandler0.getEventTime();
        double double83 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[3.0, 100.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertTrue(Double.isNaN(double83));
    }

    @Test
    public void test09720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09720");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.reset((double) 1, doubleArray9);
        boolean boolean12 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler0.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double17 = switchingFunctionsHandler16.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean20 = switchingFunctionsHandler19.isEmpty();
        double[] doubleArray23 = new double[] { 100.0d };
        boolean boolean24 = switchingFunctionsHandler19.reset((double) 0L, doubleArray23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean27 = switchingFunctionsHandler26.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler26.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean32 = switchingFunctionsHandler31.isEmpty();
        double[] doubleArray35 = new double[] { 100.0d };
        boolean boolean36 = switchingFunctionsHandler31.reset((double) 0L, doubleArray35);
        boolean boolean37 = switchingFunctionsHandler26.reset((double) 1, doubleArray35);
        boolean boolean38 = switchingFunctionsHandler19.reset((double) 100, doubleArray35);
        double double39 = switchingFunctionsHandler19.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler41.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean47 = switchingFunctionsHandler46.isEmpty();
        double[] doubleArray50 = new double[] { 100.0d };
        boolean boolean51 = switchingFunctionsHandler46.reset((double) 0L, doubleArray50);
        switchingFunctionsHandler41.stepAccepted((double) (byte) 10, doubleArray50);
        switchingFunctionsHandler19.stepAccepted(0.0d, doubleArray50);
        switchingFunctionsHandler16.stepAccepted((double) (short) 0, doubleArray50);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        switchingFunctionsHandler56.add(switchingFunction57, (double) (-1), (double) 3, 0);
        double[] doubleArray69 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean70 = switchingFunctionsHandler56.reset((double) (-1), doubleArray69);
        switchingFunctionsHandler16.stepAccepted((double) 100, doubleArray69);
        switchingFunctionsHandler0.stepAccepted(1.0d, doubleArray69);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator73 = null;
        boolean boolean74 = switchingFunctionsHandler0.evaluateStep(stepInterpolator73);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test09721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09721");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: hi!", strArray13);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Object[]) strArray13);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray46 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("", objArray46);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray46);
        java.lang.Object[] objArray49 = new java.lang.Object[] { 2, switchingFunctionsHandler37, 1, objArray46 };
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray46, (java.lang.Throwable) mathException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray46, (java.lang.Throwable) functionEvaluationException56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray46, (java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray29, (java.lang.Throwable) functionEvaluationException59);
        java.lang.Throwable[] throwableArray62 = functionEvaluationException59.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray62, (java.lang.Throwable) convergenceException64);
        double double66 = functionEvaluationException65.getArgument();
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray13, (java.lang.Throwable) functionEvaluationException65);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        double double70 = functionEvaluationException69.getArgument();
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException69);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray13, (java.lang.Throwable) functionEvaluationException69);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: Evaluation failed for argument = {0}", (java.lang.Throwable) functionEvaluationException69);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 52.0d + "'", double70 == 52.0d);
    }

    @Test
    public void test09722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09722");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray10);
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException(throwable14);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("hi!");
        mathException15.addSuppressed((java.lang.Throwable) mathException17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException15);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray10, (java.lang.Throwable) derivativeException19);
        java.lang.Object[] objArray33 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("", objArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException34);
        java.lang.Throwable[] throwableArray36 = derivativeException35.getSuppressed();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray45);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray62 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("", objArray62);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray62);
        java.lang.Object[] objArray65 = new java.lang.Object[] { 2, switchingFunctionsHandler53, 1, objArray62 };
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) mathException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) functionEvaluationException72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) functionEvaluationException75);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray45, (java.lang.Throwable) functionEvaluationException75);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray36, (java.lang.Throwable) mathException77);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) mathException78);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException79);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) convergenceException80);
        java.lang.String str82 = convergenceException80.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException80);
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray10, (java.lang.Throwable) convergenceException80);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException84);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: " + "'", str82, "org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test09723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09723");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean26 = switchingFunctionsHandler25.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler25.evaluateStep(stepInterpolator27);
        boolean boolean29 = switchingFunctionsHandler25.stop();
        double double30 = switchingFunctionsHandler25.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean33 = switchingFunctionsHandler32.isEmpty();
        double[] doubleArray36 = new double[] { 100.0d };
        boolean boolean37 = switchingFunctionsHandler32.reset((double) 0L, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean40 = switchingFunctionsHandler39.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler39.evaluateStep(stepInterpolator41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean45 = switchingFunctionsHandler44.isEmpty();
        double[] doubleArray48 = new double[] { 100.0d };
        boolean boolean49 = switchingFunctionsHandler44.reset((double) 0L, doubleArray48);
        boolean boolean50 = switchingFunctionsHandler39.reset((double) 1, doubleArray48);
        boolean boolean51 = switchingFunctionsHandler32.reset((double) 100, doubleArray48);
        double double52 = switchingFunctionsHandler32.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler54.evaluateStep(stepInterpolator56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean60 = switchingFunctionsHandler59.isEmpty();
        double[] doubleArray63 = new double[] { 100.0d };
        boolean boolean64 = switchingFunctionsHandler59.reset((double) 0L, doubleArray63);
        switchingFunctionsHandler54.stepAccepted((double) (byte) 10, doubleArray63);
        switchingFunctionsHandler32.stepAccepted(0.0d, doubleArray63);
        double double67 = switchingFunctionsHandler32.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction68 = null;
        switchingFunctionsHandler32.add(switchingFunction68, (double) 10L, (double) 'a', (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler74 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean75 = switchingFunctionsHandler74.isEmpty();
        double[] doubleArray78 = new double[] { 100.0d };
        boolean boolean79 = switchingFunctionsHandler74.reset((double) 0L, doubleArray78);
        boolean boolean80 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray78);
        switchingFunctionsHandler25.stepAccepted((double) 10L, doubleArray78);
        boolean boolean82 = switchingFunctionsHandler0.reset(52.0d, doubleArray78);
        boolean boolean83 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction84 = null;
        switchingFunctionsHandler0.add(switchingFunction84, (double) 10, 1.0d, (int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test09724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09724");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray22 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("", objArray22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray22);
        java.lang.Object[] objArray25 = new java.lang.Object[] { 2, switchingFunctionsHandler13, 1, objArray22 };
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray22, (java.lang.Throwable) mathException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException30);
        java.lang.Object[] objArray32 = functionEvaluationException30.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        double double36 = functionEvaluationException35.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray51 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("", objArray51);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray51);
        java.lang.Object[] objArray54 = new java.lang.Object[] { 2, switchingFunctionsHandler42, 1, objArray51 };
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray51, (java.lang.Throwable) mathException58);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException58);
        mathException38.addSuppressed((java.lang.Throwable) integratorException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) mathException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "");
        java.lang.Object[] objArray66 = functionEvaluationException65.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException65);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100", objArray32, (java.lang.Throwable) integratorException67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException72);
        java.lang.Throwable[] throwableArray75 = functionEvaluationException72.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", objArray32, (java.lang.Throwable) functionEvaluationException72);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", objArray32);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException", objArray32);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", objArray32);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 52.0d + "'", double36 == 52.0d);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertNotNull(throwableArray75);
    }

    @Test
    public void test09725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09725");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        switchingFunctionsHandler22.stepAccepted((double) (byte) 10, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray31);
        boolean boolean35 = switchingFunctionsHandler0.isEmpty();
        boolean boolean36 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        switchingFunctionsHandler0.add(switchingFunction37, (double) (short) 0, 3.0d, (int) 'a');
        double double42 = switchingFunctionsHandler0.getEventTime();
        boolean boolean43 = switchingFunctionsHandler0.stop();
        boolean boolean44 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        switchingFunctionsHandler0.add(switchingFunction45, 0.0d, (double) (byte) 100, (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test09726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09726");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean18 = switchingFunctionsHandler17.isEmpty();
        double[] doubleArray21 = new double[] { 100.0d };
        boolean boolean22 = switchingFunctionsHandler17.reset((double) 0L, doubleArray21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean25 = switchingFunctionsHandler24.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler24.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean30 = switchingFunctionsHandler29.isEmpty();
        double[] doubleArray33 = new double[] { 100.0d };
        boolean boolean34 = switchingFunctionsHandler29.reset((double) 0L, doubleArray33);
        boolean boolean35 = switchingFunctionsHandler24.reset((double) 1, doubleArray33);
        boolean boolean36 = switchingFunctionsHandler17.reset((double) 100, doubleArray33);
        boolean boolean37 = switchingFunctionsHandler0.reset((double) (-1.0f), doubleArray33);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        switchingFunctionsHandler0.add(switchingFunction38, (double) '4', (double) 0L, (int) '4');
        double double43 = switchingFunctionsHandler0.getEventTime();
        double double44 = switchingFunctionsHandler0.getEventTime();
        boolean boolean45 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        switchingFunctionsHandler0.add(switchingFunction46, 100.0d, (double) 1L, 0);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = switchingFunctionsHandler0.evaluateStep(stepInterpolator51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test09727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09727");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray21 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("", objArray21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray21);
        java.lang.Object[] objArray24 = new java.lang.Object[] { 2, switchingFunctionsHandler12, 1, objArray21 };
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) mathException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) functionEvaluationException34);
        java.lang.Object[] objArray43 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("", objArray43);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray43);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException45);
        java.lang.Throwable[] throwableArray47 = integratorException45.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException45);
        functionEvaluationException34.addSuppressed((java.lang.Throwable) integratorException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException45);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException57);
        java.lang.Object[] objArray59 = mathException58.getArguments();
        java.lang.Throwable throwable60 = null;
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("hi!", objArray59, throwable60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray59);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException("", objArray59);
        integratorException45.addSuppressed((java.lang.Throwable) integratorException63);
        java.lang.Object[] objArray65 = integratorException45.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100");
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", objArray65, (java.lang.Throwable) functionEvaluationException68);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray65);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray65);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", objArray65);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}", objArray65);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = hi!", (java.lang.Throwable) convergenceException73);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[1, a, 10, a, -1]");
    }

    @Test
    public void test09728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09728");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        boolean boolean20 = switchingFunctionsHandler0.stop();
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        boolean boolean22 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler0.evaluateStep(stepInterpolator23);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test09729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09729");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray17);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray17);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "hi!", (java.lang.Throwable) mathException30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException31);
        java.lang.Throwable[] throwableArray33 = convergenceException32.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray49 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("", objArray49);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray49);
        java.lang.Object[] objArray52 = new java.lang.Object[] { 2, switchingFunctionsHandler40, 1, objArray49 };
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray49, (java.lang.Throwable) mathException56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray49, (java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) convergenceException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.MathException: Evaluation failed for argument = -1", (java.lang.Object[]) throwableArray33, (java.lang.Throwable) convergenceException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "Evaluation failed for argument = 100", (java.lang.Object[]) strArray17, (java.lang.Throwable) convergenceException61);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray17);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException70);
        java.lang.Object[] objArray72 = mathException71.getArguments();
        java.lang.Throwable throwable73 = null;
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("hi!", objArray72, throwable73);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray72);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) strArray17, (java.lang.Throwable) integratorException75);
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", strArray17);
        java.lang.Throwable[] throwableArray78 = derivativeException77.getSuppressed();
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) derivativeException77);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(throwableArray78);
    }

    @Test
    public void test09730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09730");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray30);
        java.lang.Object[] objArray33 = new java.lang.Object[] { 2, switchingFunctionsHandler21, 1, objArray30 };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) mathException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray13, (java.lang.Throwable) functionEvaluationException43);
        java.lang.Throwable[] throwableArray46 = functionEvaluationException43.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (-1));
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray46, (java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray46);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", (java.lang.Object[]) throwableArray46);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray46);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(throwableArray46);
    }

    @Test
    public void test09731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09731");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler22.add(switchingFunction23, (double) (-1), (double) 3, 0);
        double[] doubleArray35 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean36 = switchingFunctionsHandler22.reset((double) (-1), doubleArray35);
        boolean boolean37 = switchingFunctionsHandler22.isEmpty();
        double double38 = switchingFunctionsHandler22.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        switchingFunctionsHandler22.add(switchingFunction39, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean44 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean47 = switchingFunctionsHandler46.isEmpty();
        double[] doubleArray50 = new double[] { 100.0d };
        boolean boolean51 = switchingFunctionsHandler46.reset((double) 0L, doubleArray50);
        boolean boolean52 = switchingFunctionsHandler22.reset((double) 100L, doubleArray50);
        switchingFunctionsHandler0.stepAccepted((double) (short) -1, doubleArray50);
        boolean boolean54 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler0.evaluateStep(stepInterpolator55);
        boolean boolean57 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler0.evaluateStep(stepInterpolator58);
        double double60 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction61 = null;
        switchingFunctionsHandler0.add(switchingFunction61, (double) (short) 1, 0.0d, (int) (short) -1);
        double[] doubleArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((double) 0.0f, doubleArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
    }

    @Test
    public void test09732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09732");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", objArray40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray40);
        java.lang.Object[] objArray43 = new java.lang.Object[] { 2, switchingFunctionsHandler31, 1, objArray40 };
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray40, (java.lang.Throwable) mathException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray40, (java.lang.Throwable) functionEvaluationException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray40, (java.lang.Throwable) functionEvaluationException53);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray40);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray21, (java.lang.Throwable) convergenceException56);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", strArray21);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", strArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", strArray21);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray43);
    }

    @Test
    public void test09733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09733");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray33 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("", objArray33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray33);
        java.lang.Object[] objArray36 = new java.lang.Object[] { 2, switchingFunctionsHandler24, 1, objArray33 };
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) mathException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) functionEvaluationException46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray33);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray14, (java.lang.Throwable) convergenceException49);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray62);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("", strArray62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray62);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 100", (java.lang.Object[]) strArray14, (java.lang.Throwable) derivativeException67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException73);
        java.lang.Object[] objArray75 = functionEvaluationException73.getArguments();
        java.lang.Throwable throwable76 = null;
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("hi!", objArray75, throwable76);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException80 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException80);
        double double82 = functionEvaluationException80.getArgument();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) functionEvaluationException80);
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray75, (java.lang.Throwable) functionEvaluationException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, (java.lang.Throwable) functionEvaluationException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException85);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray14);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 52.0d + "'", double82 == 52.0d);
    }

    @Test
    public void test09734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09734");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        switchingFunctionsHandler22.stepAccepted((double) (byte) 10, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean36 = switchingFunctionsHandler35.isEmpty();
        double[] doubleArray39 = new double[] { 100.0d };
        boolean boolean40 = switchingFunctionsHandler35.reset((double) 0L, doubleArray39);
        switchingFunctionsHandler22.stepAccepted(100.0d, doubleArray39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler22.evaluateStep(stepInterpolator42);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler22.evaluateStep(stepInterpolator44);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean48 = switchingFunctionsHandler47.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler47.evaluateStep(stepInterpolator49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean53 = switchingFunctionsHandler52.isEmpty();
        double[] doubleArray56 = new double[] { 100.0d };
        boolean boolean57 = switchingFunctionsHandler52.reset((double) 0L, doubleArray56);
        switchingFunctionsHandler47.stepAccepted((double) (byte) 10, doubleArray56);
        boolean boolean59 = switchingFunctionsHandler22.reset((double) (-1L), doubleArray56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        switchingFunctionsHandler61.add(switchingFunction62, (double) (-1), (double) 3, 0);
        double[] doubleArray74 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean75 = switchingFunctionsHandler61.reset((double) (-1), doubleArray74);
        boolean boolean76 = switchingFunctionsHandler61.isEmpty();
        double double77 = switchingFunctionsHandler61.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction78 = null;
        switchingFunctionsHandler61.add(switchingFunction78, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean83 = switchingFunctionsHandler61.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler85 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean86 = switchingFunctionsHandler85.isEmpty();
        double[] doubleArray89 = new double[] { 100.0d };
        boolean boolean90 = switchingFunctionsHandler85.reset((double) 0L, doubleArray89);
        boolean boolean91 = switchingFunctionsHandler61.reset((double) 100L, doubleArray89);
        switchingFunctionsHandler22.stepAccepted((double) (byte) -1, doubleArray89);
        boolean boolean93 = switchingFunctionsHandler0.reset(52.0d, doubleArray89);
        double double94 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator95 = null;
        boolean boolean96 = switchingFunctionsHandler0.evaluateStep(stepInterpolator95);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double94));
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test09735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09735");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", strArray15);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = 52", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = 100", strArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("", objArray37);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray37);
        java.lang.Object[] objArray40 = new java.lang.Object[] { 2, switchingFunctionsHandler28, 1, objArray37 };
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray37, (java.lang.Throwable) mathException44);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException(3.0d, (java.lang.Throwable) integratorException46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray15, (java.lang.Throwable) functionEvaluationException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray15);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray40);
    }

    @Test
    public void test09736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09736");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray23 = null;
        switchingFunctionsHandler0.stepAccepted((double) (-1L), doubleArray23);
        boolean boolean25 = switchingFunctionsHandler0.isEmpty();
        double double26 = switchingFunctionsHandler0.getEventTime();
        boolean boolean27 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test09737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09737");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray38 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("", objArray38);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray38);
        java.lang.Object[] objArray41 = new java.lang.Object[] { 2, switchingFunctionsHandler29, 1, objArray38 };
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray38, (java.lang.Throwable) mathException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray38, (java.lang.Throwable) functionEvaluationException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray38, (java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray38);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray19, (java.lang.Throwable) convergenceException54);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException67);
        java.lang.Object[] objArray69 = mathException68.getArguments();
        java.lang.Throwable throwable70 = null;
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("hi!", objArray69, throwable70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray69);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("", objArray69);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("", objArray69);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ");
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 100", objArray69, (java.lang.Throwable) convergenceException76);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray19, (java.lang.Throwable) convergenceException77);
        org.apache.commons.math.ode.IntegratorException integratorException79 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray19);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 100", (java.lang.Object[]) strArray19);
        java.lang.Throwable throwable81 = null;
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray19, throwable81);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Convergence failed", (java.lang.Object[]) strArray19);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
    }

    @Test
    public void test09738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09738");
        java.lang.Object[] objArray20 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", objArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", objArray20, (java.lang.Throwable) functionEvaluationException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException26);
        java.lang.Object[] objArray29 = functionEvaluationException26.getArguments();
        java.lang.Throwable[] throwableArray30 = functionEvaluationException26.getSuppressed();
        java.lang.Object[] objArray31 = functionEvaluationException26.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray45 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("", objArray45);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray45);
        java.lang.Object[] objArray48 = new java.lang.Object[] { 2, switchingFunctionsHandler36, 1, objArray45 };
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray45, (java.lang.Throwable) mathException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException53);
        java.lang.Object[] objArray55 = functionEvaluationException53.getArguments();
        double double56 = functionEvaluationException53.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException53);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray31);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", objArray31);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", objArray31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray31);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", objArray31);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test09739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09739");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (byte) 0, 0.0d, (int) ' ');
        boolean boolean22 = switchingFunctionsHandler0.stop();
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, (double) ' ', 0.0d, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean31 = switchingFunctionsHandler30.isEmpty();
        double[] doubleArray34 = new double[] { 100.0d };
        boolean boolean35 = switchingFunctionsHandler30.reset((double) 0L, doubleArray34);
        boolean boolean36 = switchingFunctionsHandler30.stop();
        double double37 = switchingFunctionsHandler30.getEventTime();
        double double38 = switchingFunctionsHandler30.getEventTime();
        boolean boolean39 = switchingFunctionsHandler30.stop();
        double[] doubleArray46 = new double[] { 3, 100, (-1.0f), (byte) -1, 1.0d };
        switchingFunctionsHandler30.stepAccepted((-1.0d), doubleArray46);
        boolean boolean48 = switchingFunctionsHandler0.reset((double) 0, doubleArray46);
        double double49 = switchingFunctionsHandler0.getEventTime();
        boolean boolean50 = switchingFunctionsHandler0.isEmpty();
        double double51 = switchingFunctionsHandler0.getEventTime();
        boolean boolean52 = switchingFunctionsHandler0.stop();
        boolean boolean53 = switchingFunctionsHandler0.isEmpty();
        boolean boolean54 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[3.0, 100.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test09740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09740");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        switchingFunctionsHandler22.stepAccepted((double) (byte) 10, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray31);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler0.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler0.evaluateStep(stepInterpolator37);
        boolean boolean39 = switchingFunctionsHandler0.stop();
        boolean boolean40 = switchingFunctionsHandler0.isEmpty();
        boolean boolean41 = switchingFunctionsHandler0.isEmpty();
        double double42 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction43 = null;
        switchingFunctionsHandler0.add(switchingFunction43, (double) (-1L), (double) (byte) 100, (int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
    }

    @Test
    public void test09741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09741");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray21 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("", objArray21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray21);
        java.lang.Object[] objArray24 = new java.lang.Object[] { 2, switchingFunctionsHandler12, 1, objArray21 };
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) mathException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) functionEvaluationException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray21);
        java.lang.String str37 = functionEvaluationException36.getPattern();
        java.lang.Object[] objArray38 = functionEvaluationException36.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double41 = functionEvaluationException40.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray38, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, (java.lang.Throwable) integratorException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException44);
        java.lang.Throwable[] throwableArray47 = functionEvaluationException44.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException44);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1.0d) + "'", double41 == (-1.0d));
        org.junit.Assert.assertNotNull(throwableArray47);
    }

    @Test
    public void test09742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09742");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean10 = switchingFunctionsHandler9.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler9.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        double[] doubleArray18 = new double[] { 100.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) 0L, doubleArray18);
        switchingFunctionsHandler9.stepAccepted((double) (byte) 10, doubleArray18);
        boolean boolean21 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray18);
        boolean boolean22 = switchingFunctionsHandler0.stop();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean27 = switchingFunctionsHandler26.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler26.evaluateStep(stepInterpolator28);
        boolean boolean30 = switchingFunctionsHandler26.stop();
        double double31 = switchingFunctionsHandler26.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean34 = switchingFunctionsHandler33.isEmpty();
        double[] doubleArray37 = new double[] { 100.0d };
        boolean boolean38 = switchingFunctionsHandler33.reset((double) 0L, doubleArray37);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean41 = switchingFunctionsHandler40.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler40.evaluateStep(stepInterpolator42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean46 = switchingFunctionsHandler45.isEmpty();
        double[] doubleArray49 = new double[] { 100.0d };
        boolean boolean50 = switchingFunctionsHandler45.reset((double) 0L, doubleArray49);
        boolean boolean51 = switchingFunctionsHandler40.reset((double) 1, doubleArray49);
        boolean boolean52 = switchingFunctionsHandler33.reset((double) 100, doubleArray49);
        double double53 = switchingFunctionsHandler33.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean56 = switchingFunctionsHandler55.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler55.evaluateStep(stepInterpolator57);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean61 = switchingFunctionsHandler60.isEmpty();
        double[] doubleArray64 = new double[] { 100.0d };
        boolean boolean65 = switchingFunctionsHandler60.reset((double) 0L, doubleArray64);
        switchingFunctionsHandler55.stepAccepted((double) (byte) 10, doubleArray64);
        switchingFunctionsHandler33.stepAccepted(0.0d, doubleArray64);
        double double68 = switchingFunctionsHandler33.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        switchingFunctionsHandler33.add(switchingFunction69, (double) 10L, (double) 'a', (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean76 = switchingFunctionsHandler75.isEmpty();
        double[] doubleArray79 = new double[] { 100.0d };
        boolean boolean80 = switchingFunctionsHandler75.reset((double) 0L, doubleArray79);
        boolean boolean81 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray79);
        switchingFunctionsHandler26.stepAccepted((double) 10L, doubleArray79);
        switchingFunctionsHandler0.stepAccepted((double) 100L, doubleArray79);
        boolean boolean84 = switchingFunctionsHandler0.isEmpty();
        double double85 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction86 = null;
        switchingFunctionsHandler0.add(switchingFunction86, 0.0d, (double) (short) 100, (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
    }

    @Test
    public void test09743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09743");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        switchingFunctionsHandler22.stepAccepted((double) (byte) 10, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray31);
        boolean boolean35 = switchingFunctionsHandler0.isEmpty();
        double double36 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray38 = null;
        boolean boolean39 = switchingFunctionsHandler0.reset((double) 3, doubleArray38);
        double double40 = switchingFunctionsHandler0.getEventTime();
        boolean boolean41 = switchingFunctionsHandler0.isEmpty();
        boolean boolean42 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler0.evaluateStep(stepInterpolator43);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test09744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09744");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray18 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", objArray18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray18);
        java.lang.Object[] objArray21 = new java.lang.Object[] { 2, switchingFunctionsHandler9, 1, objArray18 };
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) mathException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) functionEvaluationException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) functionEvaluationException31);
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", objArray40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray40);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException42);
        java.lang.Throwable[] throwableArray44 = integratorException42.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException42);
        functionEvaluationException31.addSuppressed((java.lang.Throwable) integratorException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException42);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException54);
        java.lang.Object[] objArray56 = mathException55.getArguments();
        java.lang.Throwable throwable57 = null;
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!", objArray56, throwable57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray56);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException("", objArray56);
        integratorException42.addSuppressed((java.lang.Throwable) integratorException60);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException42);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) integratorException42);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, (java.lang.Throwable) convergenceException63);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", (java.lang.Throwable) functionEvaluationException65);
        double double67 = functionEvaluationException65.getArgument();
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double67));
    }

    @Test
    public void test09745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09745");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray30);
        java.lang.Object[] objArray33 = new java.lang.Object[] { 2, switchingFunctionsHandler21, 1, objArray30 };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) mathException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray13, (java.lang.Throwable) functionEvaluationException43);
        java.lang.Throwable[] throwableArray46 = functionEvaluationException43.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (-1));
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray46, (java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray68 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("", objArray68);
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray68);
        java.lang.Object[] objArray71 = new java.lang.Object[] { 2, switchingFunctionsHandler59, 1, objArray68 };
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray68, (java.lang.Throwable) mathException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray68, (java.lang.Throwable) functionEvaluationException78);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray68, (java.lang.Throwable) functionEvaluationException81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray68);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray46, (java.lang.Throwable) functionEvaluationException83);
        java.lang.Object[] objArray85 = mathException84.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException86 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}", (java.lang.Throwable) derivativeException86);
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException87);
        java.lang.String str89 = convergenceException88.getPattern();
        java.lang.Throwable[] throwableArray90 = convergenceException88.getSuppressed();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}" + "'", str89, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}");
        org.junit.Assert.assertNotNull(throwableArray90);
    }

    @Test
    public void test09746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09746");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100");
        java.lang.Throwable[] throwableArray4 = functionEvaluationException3.getSuppressed();
        java.lang.Object[] objArray20 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", objArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("", objArray20, (java.lang.Throwable) functionEvaluationException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException26);
        java.lang.Object[] objArray29 = functionEvaluationException26.getArguments();
        java.lang.Throwable[] throwableArray30 = functionEvaluationException26.getSuppressed();
        java.lang.Object[] objArray31 = functionEvaluationException26.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray45 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("", objArray45);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray45);
        java.lang.Object[] objArray48 = new java.lang.Object[] { 2, switchingFunctionsHandler36, 1, objArray45 };
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray45, (java.lang.Throwable) mathException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException53);
        java.lang.Object[] objArray55 = functionEvaluationException53.getArguments();
        double double56 = functionEvaluationException53.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException53);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray31);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", objArray31);
        java.lang.Throwable throwable62 = null;
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", throwable62);
        mathException60.addSuppressed((java.lang.Throwable) mathException63);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray4, (java.lang.Throwable) mathException60);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test09747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09747");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean10 = switchingFunctionsHandler9.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler9.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        double[] doubleArray18 = new double[] { 100.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) 0L, doubleArray18);
        switchingFunctionsHandler9.stepAccepted((double) (byte) 10, doubleArray18);
        boolean boolean21 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray18);
        boolean boolean22 = switchingFunctionsHandler0.stop();
        double double23 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, 0.0d, (double) 'a', (int) (byte) 100);
        boolean boolean29 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test09748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09748");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException7);
        java.lang.Throwable[] throwableArray9 = convergenceException7.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("", objArray35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray35);
        java.lang.Object[] objArray38 = new java.lang.Object[] { 2, switchingFunctionsHandler26, 1, objArray35 };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) mathException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) functionEvaluationException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray35);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray61);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray61);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray61);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException64);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException64);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("hi!", objArray35, (java.lang.Throwable) convergenceException66);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("", objArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray35);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException69);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = -1", (java.lang.Throwable) convergenceException70);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) functionEvaluationException72);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertNotNull(strArray61);
    }

    @Test
    public void test09749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09749");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) (byte) -1, (-1.0d), (int) 'a');
        boolean boolean9 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, (double) (short) 0, (double) '#', (int) (short) 0);
        boolean boolean15 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler17.add(switchingFunction18, (double) (-1), (double) 3, 0);
        double[] doubleArray30 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean31 = switchingFunctionsHandler17.reset((double) (-1), doubleArray30);
        boolean boolean32 = switchingFunctionsHandler17.isEmpty();
        boolean boolean33 = switchingFunctionsHandler17.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler17.add(switchingFunction34, (double) (byte) 0, 0.0d, (int) ' ');
        double[] doubleArray43 = new double[] { 1.0f, (-1.0f), 100.0d };
        boolean boolean44 = switchingFunctionsHandler17.reset((double) 1L, doubleArray43);
        boolean boolean45 = switchingFunctionsHandler0.reset((double) 10.0f, doubleArray43);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        switchingFunctionsHandler0.add(switchingFunction46, (double) (short) 10, (-1.0d), (int) (byte) -1);
        double double51 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        switchingFunctionsHandler0.add(switchingFunction52, (double) (byte) 0, (double) (-1), (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test09750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09750");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler0.evaluateStep(stepInterpolator20);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        boolean boolean25 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        switchingFunctionsHandler27.add(switchingFunction28, (double) (-1), (double) 3, 0);
        double[] doubleArray40 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean41 = switchingFunctionsHandler27.reset((double) (-1), doubleArray40);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean44 = switchingFunctionsHandler43.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        boolean boolean46 = switchingFunctionsHandler43.evaluateStep(stepInterpolator45);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean49 = switchingFunctionsHandler48.isEmpty();
        double[] doubleArray52 = new double[] { 100.0d };
        boolean boolean53 = switchingFunctionsHandler48.reset((double) 0L, doubleArray52);
        switchingFunctionsHandler43.stepAccepted((double) (byte) 10, doubleArray52);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        switchingFunctionsHandler43.add(switchingFunction55, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean62 = switchingFunctionsHandler61.isEmpty();
        double[] doubleArray65 = new double[] { 100.0d };
        boolean boolean66 = switchingFunctionsHandler61.reset((double) 0L, doubleArray65);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler68 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean69 = switchingFunctionsHandler68.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator70 = null;
        boolean boolean71 = switchingFunctionsHandler68.evaluateStep(stepInterpolator70);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler73 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean74 = switchingFunctionsHandler73.isEmpty();
        double[] doubleArray77 = new double[] { 100.0d };
        boolean boolean78 = switchingFunctionsHandler73.reset((double) 0L, doubleArray77);
        boolean boolean79 = switchingFunctionsHandler68.reset((double) 1, doubleArray77);
        boolean boolean80 = switchingFunctionsHandler61.reset((double) 100, doubleArray77);
        boolean boolean81 = switchingFunctionsHandler43.reset((double) (byte) -1, doubleArray77);
        boolean boolean82 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray77);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler84 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean85 = switchingFunctionsHandler84.isEmpty();
        double[] doubleArray88 = new double[] { 100.0d };
        boolean boolean89 = switchingFunctionsHandler84.reset((double) 0L, doubleArray88);
        boolean boolean90 = switchingFunctionsHandler27.reset((double) (byte) -1, doubleArray88);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 100, doubleArray88);
        double double92 = switchingFunctionsHandler0.getEventTime();
        double double93 = switchingFunctionsHandler0.getEventTime();
        boolean boolean94 = switchingFunctionsHandler0.isEmpty();
        boolean boolean95 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertTrue(Double.isNaN(double93));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test09751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09751");
        java.lang.Object[] objArray15 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", objArray15);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray15);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException17);
        java.lang.Throwable[] throwableArray19 = integratorException17.getSuppressed();
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray19);
        java.lang.Throwable[] throwableArray21 = mathException20.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray21);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException35);
        java.lang.Object[] objArray37 = mathException36.getArguments();
        java.lang.Throwable throwable38 = null;
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!", objArray37, throwable38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray37);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", objArray37);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray57 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("", objArray57);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray57);
        java.lang.Object[] objArray60 = new java.lang.Object[] { 2, switchingFunctionsHandler48, 1, objArray57 };
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray57, (java.lang.Throwable) mathException64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray57, (java.lang.Throwable) functionEvaluationException67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray57, (java.lang.Throwable) functionEvaluationException70);
        java.lang.Object[] objArray79 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("", objArray79);
        org.apache.commons.math.ode.IntegratorException integratorException81 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray79);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException81);
        java.lang.Throwable[] throwableArray83 = integratorException81.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException84 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException81);
        functionEvaluationException70.addSuppressed((java.lang.Throwable) integratorException81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException87 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.IntegratorException: ", objArray37, (java.lang.Throwable) integratorException81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException88 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "", (java.lang.Throwable) functionEvaluationException87);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray21, (java.lang.Throwable) functionEvaluationException87);
        org.apache.commons.math.ode.IntegratorException integratorException90 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray21);
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException90);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray83);
    }

    @Test
    public void test09752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09752");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) (-1), (double) 100.0f, 10);
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        double double18 = switchingFunctionsHandler0.getEventTime();
        double double19 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler0.add(switchingFunction20, (double) (byte) 1, (double) 0, (int) (short) 0);
        boolean boolean25 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = switchingFunctionsHandler27.evaluateStep(stepInterpolator29);
        boolean boolean31 = switchingFunctionsHandler27.stop();
        double double32 = switchingFunctionsHandler27.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        switchingFunctionsHandler34.add(switchingFunction35, (double) (-1), (double) 3, 0);
        double[] doubleArray47 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean48 = switchingFunctionsHandler34.reset((double) (-1), doubleArray47);
        switchingFunctionsHandler27.stepAccepted(0.0d, doubleArray47);
        boolean boolean50 = switchingFunctionsHandler0.reset((double) (short) 10, doubleArray47);
        double double51 = switchingFunctionsHandler0.getEventTime();
        double double52 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
    }

    @Test
    public void test09753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09753");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.ode.DerivativeException");
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", (java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 10", (java.lang.Object[]) strArray14);
        java.lang.Object[] objArray49 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("", objArray49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray49);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("", objArray49, (java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException55);
        java.lang.Object[] objArray58 = functionEvaluationException55.getArguments();
        java.lang.Throwable[] throwableArray59 = functionEvaluationException55.getSuppressed();
        java.lang.Object[] objArray60 = functionEvaluationException55.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray74 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("", objArray74);
        org.apache.commons.math.ode.IntegratorException integratorException76 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray74);
        java.lang.Object[] objArray77 = new java.lang.Object[] { 2, switchingFunctionsHandler65, 1, objArray74 };
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray74, (java.lang.Throwable) mathException81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException82);
        java.lang.Object[] objArray84 = functionEvaluationException82.getArguments();
        double double85 = functionEvaluationException82.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: hi!", objArray60, (java.lang.Throwable) functionEvaluationException82);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("", objArray60);
        org.apache.commons.math.ode.IntegratorException integratorException88 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray60);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", objArray60);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", objArray60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray60);
        java.lang.Object[] objArray92 = functionEvaluationException91.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException93 = new org.apache.commons.math.FunctionEvaluationException((double) 3, (java.lang.Throwable) functionEvaluationException91);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Throwable) functionEvaluationException93);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException95 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), (java.lang.Throwable) mathException94);
        org.apache.commons.math.MathException mathException96 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray14, (java.lang.Throwable) mathException94);
        java.lang.String str97 = mathException96.getPattern();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52" + "'", str97, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52");
    }

    @Test
    public void test09754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09754");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        double double16 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (short) 10, 0.0d, 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler0.add(switchingFunction22, Double.NaN, (double) (short) 1, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        switchingFunctionsHandler0.add(switchingFunction27, 97.0d, (double) (byte) 1, (int) ' ');
        boolean boolean32 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler0.add(switchingFunction33, (double) (byte) -1, 52.0d, (int) ' ');
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test09755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09755");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        boolean boolean5 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, 0.0d, (double) 0L, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler12.add(switchingFunction13, (double) (-1), (double) 3, 0);
        double[] doubleArray25 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean26 = switchingFunctionsHandler12.reset((double) (-1), doubleArray25);
        boolean boolean27 = switchingFunctionsHandler12.isEmpty();
        double double28 = switchingFunctionsHandler12.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler12.add(switchingFunction29, (double) (-1.0f), 0.0d, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        switchingFunctionsHandler35.add(switchingFunction36, (double) (-1), (double) 3, 0);
        double[] doubleArray48 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean49 = switchingFunctionsHandler35.reset((double) (-1), doubleArray48);
        boolean boolean50 = switchingFunctionsHandler12.reset(0.0d, doubleArray48);
        boolean boolean51 = switchingFunctionsHandler0.reset((double) 2, doubleArray48);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        switchingFunctionsHandler0.add(switchingFunction52, (double) 100.0f, (double) (-1L), (int) 'a');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test09756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09756");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray18 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", objArray18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray18);
        java.lang.Object[] objArray21 = new java.lang.Object[] { 2, switchingFunctionsHandler9, 1, objArray18 };
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) mathException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) functionEvaluationException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", objArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException34);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException34);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) convergenceException34);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray21);
    }

    @Test
    public void test09757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09757");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double double6 = switchingFunctionsHandler0.getEventTime();
        boolean boolean7 = switchingFunctionsHandler0.stop();
        double double8 = switchingFunctionsHandler0.getEventTime();
        boolean boolean9 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = switchingFunctionsHandler0.evaluateStep(stepInterpolator10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test09758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09758");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) 0L, 1.0d, (int) (short) 1);
        double double9 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, Double.NaN, 0.0d, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler0.add(switchingFunction15, (double) (byte) -1, 1.0d, (int) (byte) 100);
        double double20 = switchingFunctionsHandler0.getEventTime();
        double double21 = switchingFunctionsHandler0.getEventTime();
        boolean boolean22 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean25 = switchingFunctionsHandler24.isEmpty();
        boolean boolean26 = switchingFunctionsHandler24.stop();
        double double27 = switchingFunctionsHandler24.getEventTime();
        boolean boolean28 = switchingFunctionsHandler24.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler24.add(switchingFunction29, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray35 = new double[] {};
        boolean boolean36 = switchingFunctionsHandler24.reset((double) (short) 1, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean39 = switchingFunctionsHandler38.isEmpty();
        double[] doubleArray42 = new double[] { 100.0d };
        boolean boolean43 = switchingFunctionsHandler38.reset((double) 0L, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean46 = switchingFunctionsHandler45.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler45.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean51 = switchingFunctionsHandler50.isEmpty();
        double[] doubleArray54 = new double[] { 100.0d };
        boolean boolean55 = switchingFunctionsHandler50.reset((double) 0L, doubleArray54);
        boolean boolean56 = switchingFunctionsHandler45.reset((double) 1, doubleArray54);
        boolean boolean57 = switchingFunctionsHandler38.reset((double) 100, doubleArray54);
        boolean boolean58 = switchingFunctionsHandler24.reset((double) (-1L), doubleArray54);
        boolean boolean59 = switchingFunctionsHandler0.reset((double) 1, doubleArray54);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test09759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09759");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) (short) -1, (double) (byte) 1, (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler12.add(switchingFunction14, (double) (-1), (double) 'a', (int) (short) 0);
        double double19 = switchingFunctionsHandler12.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler21.add(switchingFunction23, (double) (-1), (double) 'a', (int) (short) 0);
        double[] doubleArray29 = null;
        boolean boolean30 = switchingFunctionsHandler21.reset((double) 3, doubleArray29);
        double double31 = switchingFunctionsHandler21.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler33.add(switchingFunction34, (double) (-1), (double) 3, 0);
        double[] doubleArray46 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean47 = switchingFunctionsHandler33.reset((double) (-1), doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean50 = switchingFunctionsHandler49.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler49.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.isEmpty();
        double[] doubleArray58 = new double[] { 100.0d };
        boolean boolean59 = switchingFunctionsHandler54.reset((double) 0L, doubleArray58);
        switchingFunctionsHandler49.stepAccepted((double) (byte) 10, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction61 = null;
        switchingFunctionsHandler49.add(switchingFunction61, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean68 = switchingFunctionsHandler67.isEmpty();
        double[] doubleArray71 = new double[] { 100.0d };
        boolean boolean72 = switchingFunctionsHandler67.reset((double) 0L, doubleArray71);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler74 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean75 = switchingFunctionsHandler74.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator76 = null;
        boolean boolean77 = switchingFunctionsHandler74.evaluateStep(stepInterpolator76);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler79 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean80 = switchingFunctionsHandler79.isEmpty();
        double[] doubleArray83 = new double[] { 100.0d };
        boolean boolean84 = switchingFunctionsHandler79.reset((double) 0L, doubleArray83);
        boolean boolean85 = switchingFunctionsHandler74.reset((double) 1, doubleArray83);
        boolean boolean86 = switchingFunctionsHandler67.reset((double) 100, doubleArray83);
        boolean boolean87 = switchingFunctionsHandler49.reset((double) (byte) -1, doubleArray83);
        boolean boolean88 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray83);
        boolean boolean89 = switchingFunctionsHandler21.reset((double) (byte) 10, doubleArray83);
        boolean boolean90 = switchingFunctionsHandler12.reset((double) 3, doubleArray83);
        boolean boolean91 = switchingFunctionsHandler0.reset(35.0d, doubleArray83);
        boolean boolean92 = switchingFunctionsHandler0.stop();
        boolean boolean93 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = switchingFunctionsHandler0.evaluateStep(stepInterpolator94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test09760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09760");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray34 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray34);
        java.lang.Object[] objArray37 = new java.lang.Object[] { 2, switchingFunctionsHandler25, 1, objArray34 };
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) mathException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) functionEvaluationException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray34);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray15, (java.lang.Throwable) convergenceException50);
        java.lang.Object[] objArray58 = new java.lang.Object[] { 100.0f, (byte) 10 };
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray58);
        java.lang.Object[] objArray70 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("", objArray70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray70);
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("", objArray70, (java.lang.Throwable) functionEvaluationException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException76);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("", objArray58, (java.lang.Throwable) mathException78);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException80 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException79);
        functionEvaluationException51.addSuppressed((java.lang.Throwable) convergenceException79);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Throwable) mathException82);
        java.lang.Object[] objArray84 = functionEvaluationException83.getArguments();
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) mathException87);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", objArray84, (java.lang.Throwable) convergenceException88);
        org.apache.commons.math.ode.DerivativeException derivativeException90 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException88);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[100.0, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[100.0, 10]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
    }

    @Test
    public void test09761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09761");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        java.lang.Object[] objArray15 = derivativeException14.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray30);
        java.lang.Object[] objArray33 = new java.lang.Object[] { 2, switchingFunctionsHandler21, 1, objArray30 };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) mathException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException43);
        java.lang.Object[] objArray52 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("", objArray52);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray52);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException54);
        java.lang.Throwable[] throwableArray56 = integratorException54.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException54);
        functionEvaluationException43.addSuppressed((java.lang.Throwable) integratorException54);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!", objArray15, (java.lang.Throwable) integratorException54);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", objArray15);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray15);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", objArray15);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = -1", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: Evaluation failed for argument = {0}", objArray15);
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = -1", objArray15);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray56);
    }

    @Test
    public void test09762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09762");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.ode.DerivativeException");
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", (java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 10", (java.lang.Object[]) strArray14);
        java.lang.Object[] objArray49 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("", objArray49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray49);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("", objArray49, (java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException55);
        java.lang.Object[] objArray58 = functionEvaluationException55.getArguments();
        java.lang.Throwable[] throwableArray59 = functionEvaluationException55.getSuppressed();
        java.lang.Object[] objArray60 = functionEvaluationException55.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray74 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("", objArray74);
        org.apache.commons.math.ode.IntegratorException integratorException76 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray74);
        java.lang.Object[] objArray77 = new java.lang.Object[] { 2, switchingFunctionsHandler65, 1, objArray74 };
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray74, (java.lang.Throwable) mathException81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException82);
        java.lang.Object[] objArray84 = functionEvaluationException82.getArguments();
        double double85 = functionEvaluationException82.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: hi!", objArray60, (java.lang.Throwable) functionEvaluationException82);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("", objArray60);
        org.apache.commons.math.ode.IntegratorException integratorException88 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray60);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", objArray60);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", objArray60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray60);
        java.lang.Object[] objArray92 = functionEvaluationException91.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException93 = new org.apache.commons.math.FunctionEvaluationException((double) 3, (java.lang.Throwable) functionEvaluationException91);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Throwable) functionEvaluationException93);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException95 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), (java.lang.Throwable) mathException94);
        org.apache.commons.math.MathException mathException96 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray14, (java.lang.Throwable) mathException94);
        org.apache.commons.math.ConvergenceException convergenceException97 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException94);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
    }

    @Test
    public void test09763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09763");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray22 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("", objArray22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray22);
        java.lang.Object[] objArray25 = new java.lang.Object[] { 2, switchingFunctionsHandler13, 1, objArray22 };
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray22, (java.lang.Throwable) mathException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray22, (java.lang.Throwable) functionEvaluationException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray22, (java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray22);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray48);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray48);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray48);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException51);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", objArray22, (java.lang.Throwable) convergenceException53);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("", objArray22);
        java.lang.Object[] objArray64 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("", objArray64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray64);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", objArray22, (java.lang.Throwable) functionEvaluationException66);
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray22);
        org.apache.commons.math.ode.IntegratorException integratorException69 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException68);
        java.lang.Object[] objArray70 = integratorException69.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray70);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
    }

    @Test
    public void test09764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09764");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean24 = switchingFunctionsHandler23.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler23.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean29 = switchingFunctionsHandler28.isEmpty();
        double[] doubleArray32 = new double[] { 100.0d };
        boolean boolean33 = switchingFunctionsHandler28.reset((double) 0L, doubleArray32);
        switchingFunctionsHandler23.stepAccepted((double) (byte) 10, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        switchingFunctionsHandler23.add(switchingFunction35, (double) (-1), (double) 100.0f, 10);
        boolean boolean40 = switchingFunctionsHandler23.isEmpty();
        boolean boolean41 = switchingFunctionsHandler23.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean44 = switchingFunctionsHandler43.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        boolean boolean46 = switchingFunctionsHandler43.evaluateStep(stepInterpolator45);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean49 = switchingFunctionsHandler48.isEmpty();
        double[] doubleArray52 = new double[] { 100.0d };
        boolean boolean53 = switchingFunctionsHandler48.reset((double) 0L, doubleArray52);
        boolean boolean54 = switchingFunctionsHandler43.reset((double) 1, doubleArray52);
        boolean boolean55 = switchingFunctionsHandler23.reset((double) (-1L), doubleArray52);
        switchingFunctionsHandler0.stepAccepted((double) (short) 1, doubleArray52);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler0.evaluateStep(stepInterpolator57);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean61 = switchingFunctionsHandler60.isEmpty();
        double[] doubleArray64 = new double[] { 100.0d };
        boolean boolean65 = switchingFunctionsHandler60.reset((double) 0L, doubleArray64);
        boolean boolean66 = switchingFunctionsHandler60.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        switchingFunctionsHandler60.add(switchingFunction67, (double) 0, (double) (short) 1, (int) (byte) -1);
        double double72 = switchingFunctionsHandler60.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler74 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean75 = switchingFunctionsHandler74.isEmpty();
        boolean boolean76 = switchingFunctionsHandler74.stop();
        double double77 = switchingFunctionsHandler74.getEventTime();
        boolean boolean78 = switchingFunctionsHandler74.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction79 = null;
        switchingFunctionsHandler74.add(switchingFunction79, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray85 = new double[] {};
        boolean boolean86 = switchingFunctionsHandler74.reset((double) (short) 1, doubleArray85);
        boolean boolean87 = switchingFunctionsHandler60.reset((double) (byte) 10, doubleArray85);
        switchingFunctionsHandler0.stepAccepted(52.0d, doubleArray85);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator89 = null;
        boolean boolean90 = switchingFunctionsHandler0.evaluateStep(stepInterpolator89);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test09765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09765");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ");
        java.lang.Object[] objArray7 = convergenceException6.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray20 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray20);
        java.lang.Object[] objArray23 = new java.lang.Object[] { 2, switchingFunctionsHandler11, 1, objArray20 };
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray20, (java.lang.Throwable) mathException27);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", objArray7, (java.lang.Throwable) mathException27);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray41);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray41);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", strArray41);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "", objArray7, (java.lang.Throwable) mathException47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) functionEvaluationException48);
        java.lang.Object[] objArray50 = mathException49.getArguments();
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray61);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray61);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray61);
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray61);
        java.lang.Throwable[] throwableArray66 = integratorException65.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 52", (java.lang.Object[]) throwableArray66);
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException67);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray50, (java.lang.Throwable) derivativeException68);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) derivativeException68);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(throwableArray66);
    }

    @Test
    public void test09766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09766");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) 0, (double) (short) 1, (int) (byte) -1);
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        boolean boolean16 = switchingFunctionsHandler14.stop();
        double double17 = switchingFunctionsHandler14.getEventTime();
        boolean boolean18 = switchingFunctionsHandler14.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler14.add(switchingFunction19, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray25 = new double[] {};
        boolean boolean26 = switchingFunctionsHandler14.reset((double) (short) 1, doubleArray25);
        boolean boolean27 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray25);
        double double28 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler0.add(switchingFunction29, 0.0d, (double) 1L, (int) (short) 100);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = switchingFunctionsHandler0.evaluateStep(stepInterpolator34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
    }

    @Test
    public void test09767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09767");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, (java.lang.Throwable) integratorException18);
        java.lang.Object[] objArray20 = integratorException18.getArguments();
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray20, (java.lang.Throwable) mathException22);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException");
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: hi!", objArray20, (java.lang.Throwable) integratorException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 100", objArray20);
        java.lang.Object[] objArray49 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("", objArray49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray49);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("", objArray49, (java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException55);
        java.lang.Object[] objArray58 = functionEvaluationException55.getArguments();
        java.lang.Throwable[] throwableArray59 = functionEvaluationException55.getSuppressed();
        java.lang.Object[] objArray60 = functionEvaluationException55.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray74 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("", objArray74);
        org.apache.commons.math.ode.IntegratorException integratorException76 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray74);
        java.lang.Object[] objArray77 = new java.lang.Object[] { 2, switchingFunctionsHandler65, 1, objArray74 };
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray74, (java.lang.Throwable) mathException81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException82);
        java.lang.Object[] objArray84 = functionEvaluationException82.getArguments();
        double double85 = functionEvaluationException82.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: hi!", objArray60, (java.lang.Throwable) functionEvaluationException82);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("", objArray60);
        org.apache.commons.math.ode.IntegratorException integratorException88 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray60);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", objArray60);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray60);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException93 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: hi!", objArray60, (java.lang.Throwable) mathException92);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException94 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray20, (java.lang.Throwable) functionEvaluationException93);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
    }

    @Test
    public void test09768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09768");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        switchingFunctionsHandler22.stepAccepted((double) (byte) 10, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray31);
        boolean boolean35 = switchingFunctionsHandler0.isEmpty();
        boolean boolean36 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        switchingFunctionsHandler38.add(switchingFunction39, (double) (-1), (double) 3, 0);
        double[] doubleArray51 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean52 = switchingFunctionsHandler38.reset((double) (-1), doubleArray51);
        switchingFunctionsHandler0.stepAccepted((double) 'a', doubleArray51);
        boolean boolean54 = switchingFunctionsHandler0.stop();
        boolean boolean55 = switchingFunctionsHandler0.stop();
        double double56 = switchingFunctionsHandler0.getEventTime();
        double double57 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler0.evaluateStep(stepInterpolator58);
        double[] doubleArray65 = new double[] { 100L, 10, 2.0d, 10.0d };
        boolean boolean66 = switchingFunctionsHandler0.reset((double) 3, doubleArray65);
        boolean boolean67 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator68 = null;
        boolean boolean69 = switchingFunctionsHandler0.evaluateStep(stepInterpolator68);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 10.0, 2.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test09769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09769");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        double double3 = switchingFunctionsHandler0.getEventTime();
        boolean boolean4 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler0.add(switchingFunction5, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray11 = new double[] {};
        boolean boolean12 = switchingFunctionsHandler0.reset((double) (short) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean16 = switchingFunctionsHandler15.isEmpty();
        double[] doubleArray19 = new double[] { 100.0d };
        boolean boolean20 = switchingFunctionsHandler15.reset((double) 0L, doubleArray19);
        boolean boolean21 = switchingFunctionsHandler15.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler15.add(switchingFunction22, (double) 0, (double) (short) 1, (int) (byte) -1);
        double double27 = switchingFunctionsHandler15.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean30 = switchingFunctionsHandler29.isEmpty();
        boolean boolean31 = switchingFunctionsHandler29.stop();
        double double32 = switchingFunctionsHandler29.getEventTime();
        boolean boolean33 = switchingFunctionsHandler29.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler29.add(switchingFunction34, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray40 = new double[] {};
        boolean boolean41 = switchingFunctionsHandler29.reset((double) (short) 1, doubleArray40);
        boolean boolean42 = switchingFunctionsHandler15.reset((double) (byte) 10, doubleArray40);
        boolean boolean43 = switchingFunctionsHandler15.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean46 = switchingFunctionsHandler45.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler45.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean51 = switchingFunctionsHandler50.isEmpty();
        double[] doubleArray54 = new double[] { 100.0d };
        boolean boolean55 = switchingFunctionsHandler50.reset((double) 0L, doubleArray54);
        switchingFunctionsHandler45.stepAccepted((double) (byte) 10, doubleArray54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean59 = switchingFunctionsHandler58.isEmpty();
        double[] doubleArray62 = new double[] { 100.0d };
        boolean boolean63 = switchingFunctionsHandler58.reset((double) 0L, doubleArray62);
        switchingFunctionsHandler45.stepAccepted(100.0d, doubleArray62);
        boolean boolean65 = switchingFunctionsHandler15.reset(Double.NaN, doubleArray62);
        boolean boolean66 = switchingFunctionsHandler0.reset((double) (-1.0f), doubleArray62);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator67 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = switchingFunctionsHandler0.evaluateStep(stepInterpolator67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test09770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09770");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray14);
        java.lang.Object[] objArray29 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("", objArray29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray29);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException31);
        java.lang.Throwable[] throwableArray33 = integratorException31.getSuppressed();
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) mathException34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException34);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray14, (java.lang.Throwable) mathException34);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52");
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray14, (java.lang.Throwable) mathException39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray14);
        java.lang.Object[] objArray56 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("", objArray56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray56);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("", objArray56, (java.lang.Throwable) functionEvaluationException62);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException62);
        java.lang.Object[] objArray65 = functionEvaluationException62.getArguments();
        java.lang.Throwable[] throwableArray66 = functionEvaluationException62.getSuppressed();
        java.lang.Object[] objArray67 = functionEvaluationException62.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray81 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("", objArray81);
        org.apache.commons.math.ode.IntegratorException integratorException83 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray81);
        java.lang.Object[] objArray84 = new java.lang.Object[] { 2, switchingFunctionsHandler72, 1, objArray81 };
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException87);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray81, (java.lang.Throwable) mathException88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException89);
        java.lang.Object[] objArray91 = functionEvaluationException89.getArguments();
        double double92 = functionEvaluationException89.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException93 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: hi!", objArray67, (java.lang.Throwable) functionEvaluationException89);
        org.apache.commons.math.ConvergenceException convergenceException94 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray67);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Throwable) convergenceException94);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException96 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray14, (java.lang.Throwable) convergenceException94);
        org.apache.commons.math.ode.IntegratorException integratorException97 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException94);
        org.apache.commons.math.ConvergenceException convergenceException98 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException94);
        java.lang.String str99 = convergenceException98.toString();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str99, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!");
    }

    @Test
    public void test09771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09771");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        double double16 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (short) 10, 0.0d, 1);
        double double22 = switchingFunctionsHandler0.getEventTime();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler0.add(switchingFunction25, 1.0d, 1.0d, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean32 = switchingFunctionsHandler31.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler31.evaluateStep(stepInterpolator33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean37 = switchingFunctionsHandler36.isEmpty();
        double[] doubleArray40 = new double[] { 100.0d };
        boolean boolean41 = switchingFunctionsHandler36.reset((double) 0L, doubleArray40);
        switchingFunctionsHandler31.stepAccepted((double) (byte) 10, doubleArray40);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean45 = switchingFunctionsHandler44.isEmpty();
        double[] doubleArray48 = new double[] { 100.0d };
        boolean boolean49 = switchingFunctionsHandler44.reset((double) 0L, doubleArray48);
        switchingFunctionsHandler31.stepAccepted(100.0d, doubleArray48);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler31.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = switchingFunctionsHandler31.evaluateStep(stepInterpolator53);
        double double55 = switchingFunctionsHandler31.getEventTime();
        double double56 = switchingFunctionsHandler31.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        switchingFunctionsHandler31.add(switchingFunction57, 0.0d, Double.NaN, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler63 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean64 = switchingFunctionsHandler63.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        boolean boolean66 = switchingFunctionsHandler63.evaluateStep(stepInterpolator65);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler68 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean69 = switchingFunctionsHandler68.isEmpty();
        double[] doubleArray72 = new double[] { 100.0d };
        boolean boolean73 = switchingFunctionsHandler68.reset((double) 0L, doubleArray72);
        boolean boolean74 = switchingFunctionsHandler63.reset((double) 1, doubleArray72);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction75 = null;
        switchingFunctionsHandler63.add(switchingFunction75, (double) (short) 1, (double) 0, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler81 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean82 = switchingFunctionsHandler81.isEmpty();
        double[] doubleArray85 = new double[] { 100.0d };
        boolean boolean86 = switchingFunctionsHandler81.reset((double) 0L, doubleArray85);
        boolean boolean87 = switchingFunctionsHandler63.reset((double) ' ', doubleArray85);
        boolean boolean88 = switchingFunctionsHandler31.reset((double) (-1.0f), doubleArray85);
        boolean boolean89 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray85);
        double double90 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator91 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean92 = switchingFunctionsHandler0.evaluateStep(stepInterpolator91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
    }

    @Test
    public void test09772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09772");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray18);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray18);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "hi!", (java.lang.Throwable) mathException31);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException32);
        java.lang.Throwable[] throwableArray34 = convergenceException33.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("", objArray50);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray50);
        java.lang.Object[] objArray53 = new java.lang.Object[] { 2, switchingFunctionsHandler41, 1, objArray50 };
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray50, (java.lang.Throwable) mathException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray50, (java.lang.Throwable) functionEvaluationException60);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException60);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) convergenceException62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.MathException: Evaluation failed for argument = -1", (java.lang.Object[]) throwableArray34, (java.lang.Throwable) convergenceException62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "Evaluation failed for argument = 100", (java.lang.Object[]) strArray18, (java.lang.Throwable) convergenceException62);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", strArray18);
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray77);
        org.apache.commons.math.ode.IntegratorException integratorException79 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray77);
        org.apache.commons.math.ode.IntegratorException integratorException80 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray77);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException80);
        java.lang.Throwable[] throwableArray82 = convergenceException81.getSuppressed();
        java.lang.Throwable[] throwableArray83 = convergenceException81.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException84 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) throwableArray83);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray18, (java.lang.Throwable) integratorException84);
        org.apache.commons.math.ode.DerivativeException derivativeException86 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 32", strArray18);
        org.apache.commons.math.ode.IntegratorException integratorException87 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.IntegratorException integratorException88 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException87);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(throwableArray83);
    }

    @Test
    public void test09773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09773");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) (-1), (double) 100.0f, 10);
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        double double18 = switchingFunctionsHandler0.getEventTime();
        double double19 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler0.add(switchingFunction20, (double) (byte) 1, (double) 0, (int) (short) 0);
        boolean boolean25 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = switchingFunctionsHandler27.evaluateStep(stepInterpolator29);
        boolean boolean31 = switchingFunctionsHandler27.stop();
        double double32 = switchingFunctionsHandler27.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        switchingFunctionsHandler34.add(switchingFunction35, (double) (-1), (double) 3, 0);
        double[] doubleArray47 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean48 = switchingFunctionsHandler34.reset((double) (-1), doubleArray47);
        switchingFunctionsHandler27.stepAccepted(0.0d, doubleArray47);
        boolean boolean50 = switchingFunctionsHandler0.reset((double) (short) 10, doubleArray47);
        boolean boolean51 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        switchingFunctionsHandler0.add(switchingFunction52, 100.0d, (double) 10L, (int) (short) 100);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = switchingFunctionsHandler0.evaluateStep(stepInterpolator57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test09774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09774");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler0.add(switchingFunction21, (double) 0.0f, (double) 10, (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler0.add(switchingFunction26, (double) (-1.0f), (double) (-1L), 2);
        boolean boolean31 = switchingFunctionsHandler0.stop();
        double double32 = switchingFunctionsHandler0.getEventTime();
        boolean boolean33 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler0.add(switchingFunction34, (double) 2, 97.0d, (int) '4');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test09775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09775");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) (-1), (double) 100.0f, 10);
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        double double18 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler0.add(switchingFunction19, 35.0d, (double) (byte) 100, 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, (double) (byte) 10, (double) 0, 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler0.add(switchingFunction29, (double) (byte) -1, (double) '#', (int) ' ');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean36 = switchingFunctionsHandler35.isEmpty();
        double[] doubleArray39 = new double[] { 100.0d };
        boolean boolean40 = switchingFunctionsHandler35.reset((double) 0L, doubleArray39);
        boolean boolean41 = switchingFunctionsHandler35.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        switchingFunctionsHandler35.add(switchingFunction42, (double) 0, (double) (short) 1, (int) (byte) -1);
        double double47 = switchingFunctionsHandler35.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean50 = switchingFunctionsHandler49.isEmpty();
        boolean boolean51 = switchingFunctionsHandler49.stop();
        double double52 = switchingFunctionsHandler49.getEventTime();
        boolean boolean53 = switchingFunctionsHandler49.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        switchingFunctionsHandler49.add(switchingFunction54, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray60 = new double[] {};
        boolean boolean61 = switchingFunctionsHandler49.reset((double) (short) 1, doubleArray60);
        boolean boolean62 = switchingFunctionsHandler35.reset((double) (byte) 10, doubleArray60);
        boolean boolean63 = switchingFunctionsHandler35.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean66 = switchingFunctionsHandler65.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator67 = null;
        boolean boolean68 = switchingFunctionsHandler65.evaluateStep(stepInterpolator67);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler70 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean71 = switchingFunctionsHandler70.isEmpty();
        double[] doubleArray74 = new double[] { 100.0d };
        boolean boolean75 = switchingFunctionsHandler70.reset((double) 0L, doubleArray74);
        switchingFunctionsHandler65.stepAccepted((double) (byte) 10, doubleArray74);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler78 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean79 = switchingFunctionsHandler78.isEmpty();
        double[] doubleArray82 = new double[] { 100.0d };
        boolean boolean83 = switchingFunctionsHandler78.reset((double) 0L, doubleArray82);
        switchingFunctionsHandler65.stepAccepted(100.0d, doubleArray82);
        boolean boolean85 = switchingFunctionsHandler35.reset(Double.NaN, doubleArray82);
        boolean boolean86 = switchingFunctionsHandler0.reset((double) (byte) -1, doubleArray82);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction87 = null;
        switchingFunctionsHandler0.add(switchingFunction87, Double.NaN, 2.0d, 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test09776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09776");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray18 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", objArray18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray18);
        java.lang.Object[] objArray21 = new java.lang.Object[] { 2, switchingFunctionsHandler9, 1, objArray18 };
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) mathException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) functionEvaluationException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) functionEvaluationException31);
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", objArray40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray40);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException42);
        java.lang.Throwable[] throwableArray44 = integratorException42.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException42);
        functionEvaluationException31.addSuppressed((java.lang.Throwable) integratorException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException42);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException54);
        java.lang.Object[] objArray56 = mathException55.getArguments();
        java.lang.Throwable throwable57 = null;
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!", objArray56, throwable57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray56);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException("", objArray56);
        integratorException42.addSuppressed((java.lang.Throwable) integratorException60);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException42);
        java.lang.Throwable[] throwableArray63 = derivativeException62.getSuppressed();
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray63, throwable64);
        java.lang.String str66 = convergenceException65.getPattern();
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException65);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) convergenceException65);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, (java.lang.Throwable) convergenceException65);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org.apache.commons.math.MathException: " + "'", str66, "org.apache.commons.math.MathException: ");
    }

    @Test
    public void test09777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09777");
        java.lang.Object[] objArray15 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray15);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", objArray15, (java.lang.Throwable) functionEvaluationException21);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.String str25 = convergenceException24.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray15, (java.lang.Throwable) convergenceException24);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray40);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray40);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", strArray40);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray40);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) strArray40);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray63 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("", objArray63);
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray63);
        java.lang.Object[] objArray66 = new java.lang.Object[] { 2, switchingFunctionsHandler54, 1, objArray63 };
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray63, (java.lang.Throwable) mathException70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray63, (java.lang.Throwable) functionEvaluationException73);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray63, (java.lang.Throwable) functionEvaluationException76);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray63);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException78);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException", (java.lang.Object[]) strArray40, (java.lang.Throwable) convergenceException79);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("hi!", objArray15, (java.lang.Throwable) mathException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, (java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("", (java.lang.Throwable) functionEvaluationException82);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray66);
    }

    @Test
    public void test09778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09778");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        double double20 = switchingFunctionsHandler0.getEventTime();
        double double21 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        boolean boolean25 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler0.add(switchingFunction26, (double) 0.0f, (double) (short) 100, (int) 'a');
        double double31 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test09779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09779");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) (-1), (double) 100.0f, 10);
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        boolean boolean18 = switchingFunctionsHandler0.stop();
        boolean boolean19 = switchingFunctionsHandler0.stop();
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test09780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09780");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) (short) -1, (double) (byte) 1, (int) (short) 10);
        boolean boolean11 = switchingFunctionsHandler0.stop();
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        boolean boolean13 = switchingFunctionsHandler0.stop();
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09781");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "");
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", (java.lang.Throwable) functionEvaluationException7);
        java.lang.Object[] objArray9 = mathException8.getArguments();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray43 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("", objArray43);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray43);
        java.lang.Object[] objArray46 = new java.lang.Object[] { 2, switchingFunctionsHandler34, 1, objArray43 };
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException50 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray43, (java.lang.Throwable) mathException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray43, (java.lang.Throwable) functionEvaluationException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray43, (java.lang.Throwable) functionEvaluationException56);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray43);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray24, (java.lang.Throwable) convergenceException59);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("", strArray24);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "hi!");
        java.lang.String str68 = functionEvaluationException67.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) functionEvaluationException67);
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException69);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray24, (java.lang.Throwable) integratorException70);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", objArray9, (java.lang.Throwable) integratorException70);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}", (java.lang.Throwable) mathException72);
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException73);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) convergenceException73);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
    }

    @Test
    public void test09782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09782");
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!");
        java.lang.Object[] objArray3 = convergenceException2.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: Evaluation failed for argument = 100");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", objArray27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray27);
        java.lang.Object[] objArray30 = new java.lang.Object[] { 2, switchingFunctionsHandler18, 1, objArray27 };
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) mathException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException40);
        java.lang.Object[] objArray49 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("", objArray49);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray49);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException51);
        java.lang.Throwable[] throwableArray53 = integratorException51.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException51);
        functionEvaluationException40.addSuppressed((java.lang.Throwable) integratorException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException51);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException63);
        java.lang.Object[] objArray65 = mathException64.getArguments();
        java.lang.Throwable throwable66 = null;
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("hi!", objArray65, throwable66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray65);
        org.apache.commons.math.ode.IntegratorException integratorException69 = new org.apache.commons.math.ode.IntegratorException("", objArray65);
        integratorException51.addSuppressed((java.lang.Throwable) integratorException69);
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException51);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) integratorException51);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException72);
        java.lang.Object[] objArray74 = convergenceException72.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.MathException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray74, (java.lang.Throwable) functionEvaluationException77);
        org.apache.commons.math.ode.IntegratorException integratorException79 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100", objArray74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException84 = new org.apache.commons.math.FunctionEvaluationException(52.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException84);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: Evaluation failed for argument = 100", objArray74, (java.lang.Throwable) functionEvaluationException85);
        functionEvaluationException6.addSuppressed((java.lang.Throwable) functionEvaluationException85);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray3, (java.lang.Throwable) functionEvaluationException85);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
    }

    @Test
    public void test09783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09783");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", strArray17);
        java.lang.Object[] objArray29 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("", objArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException30);
        java.lang.Throwable[] throwableArray32 = derivativeException31.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray17, (java.lang.Throwable) derivativeException31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray49 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("", objArray49);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray49);
        java.lang.Object[] objArray52 = new java.lang.Object[] { 2, switchingFunctionsHandler40, 1, objArray49 };
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray49, (java.lang.Throwable) mathException56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray49, (java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray49, (java.lang.Throwable) functionEvaluationException62);
        java.lang.Object[] objArray71 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("", objArray71);
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray71);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException73);
        java.lang.Throwable[] throwableArray75 = integratorException73.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException76 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException73);
        functionEvaluationException62.addSuppressed((java.lang.Throwable) integratorException73);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException73);
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException85);
        java.lang.Object[] objArray87 = mathException86.getArguments();
        java.lang.Throwable throwable88 = null;
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException("hi!", objArray87, throwable88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray87);
        org.apache.commons.math.ode.IntegratorException integratorException91 = new org.apache.commons.math.ode.IntegratorException("", objArray87);
        integratorException73.addSuppressed((java.lang.Throwable) integratorException91);
        java.lang.Object[] objArray93 = integratorException73.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException94 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException73);
        org.apache.commons.math.ConvergenceException convergenceException95 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException73);
        org.apache.commons.math.ConvergenceException convergenceException96 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray17, (java.lang.Throwable) integratorException73);
        org.apache.commons.math.ConvergenceException convergenceException97 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Object[]) strArray17);
        org.apache.commons.math.MathException mathException98 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException99 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Object[]) strArray17);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[1, a, 10, a, -1]");
    }

    @Test
    public void test09784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09784");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException9);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("hi!", throwable14);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", throwable14);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray11, throwable14);
        java.lang.Object[] objArray29 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("", objArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray29);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray29);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray29);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray29);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray11, (java.lang.Throwable) convergenceException34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray52 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("", objArray52);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray52);
        java.lang.Object[] objArray55 = new java.lang.Object[] { 2, switchingFunctionsHandler43, 1, objArray52 };
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray52, (java.lang.Throwable) mathException59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray52, (java.lang.Throwable) functionEvaluationException62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray52, (java.lang.Throwable) functionEvaluationException65);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray52);
        java.lang.String str68 = functionEvaluationException67.getPattern();
        java.lang.Object[] objArray69 = functionEvaluationException67.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "Evaluation failed for argument = 100", objArray11, (java.lang.Throwable) functionEvaluationException67);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", objArray11);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!");
        java.lang.Throwable[] throwableArray77 = mathException76.getSuppressed();
        java.lang.Throwable throwable78 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) throwableArray77, throwable78);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) throwableArray77, (java.lang.Throwable) convergenceException81);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("", objArray11, (java.lang.Throwable) convergenceException82);
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ");
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray11, (java.lang.Throwable) convergenceException85);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray77);
    }

    @Test
    public void test09785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09785");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) (short) -1, (double) (byte) 1, (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        switchingFunctionsHandler0.add(switchingFunction11, 52.0d, (double) (-1), (int) (short) -1);
        double double16 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean19 = switchingFunctionsHandler18.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler18.evaluateStep(stepInterpolator20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean24 = switchingFunctionsHandler23.isEmpty();
        double[] doubleArray27 = new double[] { 100.0d };
        boolean boolean28 = switchingFunctionsHandler23.reset((double) 0L, doubleArray27);
        switchingFunctionsHandler18.stepAccepted((double) (byte) 10, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean32 = switchingFunctionsHandler31.isEmpty();
        double[] doubleArray35 = new double[] { 100.0d };
        boolean boolean36 = switchingFunctionsHandler31.reset((double) 0L, doubleArray35);
        switchingFunctionsHandler18.stepAccepted(100.0d, doubleArray35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler18.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler18.evaluateStep(stepInterpolator40);
        boolean boolean42 = switchingFunctionsHandler18.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean45 = switchingFunctionsHandler44.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler44.evaluateStep(stepInterpolator46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean50 = switchingFunctionsHandler49.isEmpty();
        double[] doubleArray53 = new double[] { 100.0d };
        boolean boolean54 = switchingFunctionsHandler49.reset((double) 0L, doubleArray53);
        switchingFunctionsHandler44.stepAccepted((double) (byte) 10, doubleArray53);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        switchingFunctionsHandler57.add(switchingFunction58, (double) (-1), (double) 3, 0);
        double[] doubleArray70 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean71 = switchingFunctionsHandler57.reset((double) (-1), doubleArray70);
        boolean boolean72 = switchingFunctionsHandler57.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler74 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean75 = switchingFunctionsHandler74.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator76 = null;
        boolean boolean77 = switchingFunctionsHandler74.evaluateStep(stepInterpolator76);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler79 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean80 = switchingFunctionsHandler79.isEmpty();
        double[] doubleArray83 = new double[] { 100.0d };
        boolean boolean84 = switchingFunctionsHandler79.reset((double) 0L, doubleArray83);
        switchingFunctionsHandler74.stepAccepted((double) (byte) 10, doubleArray83);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler87 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean88 = switchingFunctionsHandler87.isEmpty();
        double[] doubleArray91 = new double[] { 100.0d };
        boolean boolean92 = switchingFunctionsHandler87.reset((double) 0L, doubleArray91);
        switchingFunctionsHandler74.stepAccepted(100.0d, doubleArray91);
        boolean boolean94 = switchingFunctionsHandler57.reset((-1.0d), doubleArray91);
        boolean boolean95 = switchingFunctionsHandler44.reset((-1.0d), doubleArray91);
        boolean boolean96 = switchingFunctionsHandler18.reset((double) (byte) 0, doubleArray91);
        boolean boolean97 = switchingFunctionsHandler0.reset(100.0d, doubleArray91);
        double double98 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double98));
    }

    @Test
    public void test09786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09786");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) 0L, 1.0d, (int) (short) 1);
        double double9 = switchingFunctionsHandler0.getEventTime();
        boolean boolean10 = switchingFunctionsHandler0.isEmpty();
        boolean boolean11 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, 1.0d, (double) (short) 100, 10);
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        double double18 = switchingFunctionsHandler0.getEventTime();
        double double19 = switchingFunctionsHandler0.getEventTime();
        boolean boolean20 = switchingFunctionsHandler0.stop();
        double[] doubleArray22 = null;
        boolean boolean23 = switchingFunctionsHandler0.reset((double) (byte) 100, doubleArray22);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test09787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09787");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ");
        java.lang.Object[] objArray6 = convergenceException5.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray19 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray19);
        java.lang.Object[] objArray22 = new java.lang.Object[] { 2, switchingFunctionsHandler10, 1, objArray19 };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) mathException26);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", objArray6, (java.lang.Throwable) mathException26);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray6, (java.lang.Throwable) derivativeException42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", objArray6);
        java.lang.String str45 = mathException44.toString();
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: " + "'", str45, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test09788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09788");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray21 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("", objArray21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray21);
        java.lang.Object[] objArray24 = new java.lang.Object[] { 2, switchingFunctionsHandler12, 1, objArray21 };
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) mathException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) functionEvaluationException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray21);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", objArray21);
        java.lang.Object[] objArray55 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("", objArray55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray55);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray55);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray55);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray55);
        java.lang.Object[] objArray71 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray71);
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray71);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "hi!", objArray55, (java.lang.Throwable) mathException75);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray55);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}");
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray55, (java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException79);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) mathException81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray21, (java.lang.Throwable) functionEvaluationException82);
        org.apache.commons.math.ode.IntegratorException integratorException84 = new org.apache.commons.math.ode.IntegratorException("", objArray21);
        java.lang.Object[] objArray85 = integratorException84.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", objArray85);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[1, a, 10, a, -1]");
    }

    @Test
    public void test09789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09789");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction2 = null;
        switchingFunctionsHandler0.add(switchingFunction2, (double) (-1), (double) 'a', (int) (short) 0);
        double[] doubleArray8 = null;
        boolean boolean9 = switchingFunctionsHandler0.reset((double) 3, doubleArray8);
        double[] doubleArray11 = null;
        boolean boolean12 = switchingFunctionsHandler0.reset((double) 100, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler0.add(switchingFunction15, (double) 10L, (double) (byte) 100, (int) '#');
        java.lang.Class<?> wildcardClass20 = switchingFunctionsHandler0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test09790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09790");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        double double15 = switchingFunctionsHandler0.getEventTime();
        double double16 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler18.add(switchingFunction19, (double) (-1), (double) 3, 0);
        double[] doubleArray31 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean32 = switchingFunctionsHandler18.reset((double) (-1), doubleArray31);
        boolean boolean33 = switchingFunctionsHandler18.isEmpty();
        double double34 = switchingFunctionsHandler18.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        switchingFunctionsHandler18.add(switchingFunction35, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean40 = switchingFunctionsHandler18.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean43 = switchingFunctionsHandler42.isEmpty();
        double[] doubleArray46 = new double[] { 100.0d };
        boolean boolean47 = switchingFunctionsHandler42.reset((double) 0L, doubleArray46);
        boolean boolean48 = switchingFunctionsHandler18.reset((double) 100L, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler18.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean52 = switchingFunctionsHandler51.isEmpty();
        double[] doubleArray55 = new double[] { 100.0d };
        boolean boolean56 = switchingFunctionsHandler51.reset((double) 0L, doubleArray55);
        boolean boolean57 = switchingFunctionsHandler51.stop();
        double double58 = switchingFunctionsHandler51.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean61 = switchingFunctionsHandler60.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler60.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean66 = switchingFunctionsHandler65.isEmpty();
        double[] doubleArray69 = new double[] { 100.0d };
        boolean boolean70 = switchingFunctionsHandler65.reset((double) 0L, doubleArray69);
        switchingFunctionsHandler60.stepAccepted((double) (byte) 10, doubleArray69);
        boolean boolean72 = switchingFunctionsHandler51.reset((double) 1.0f, doubleArray69);
        boolean boolean73 = switchingFunctionsHandler18.reset(97.0d, doubleArray69);
        boolean boolean74 = switchingFunctionsHandler0.reset(35.0d, doubleArray69);
        boolean boolean75 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test09791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09791");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double double2 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean5 = switchingFunctionsHandler4.isEmpty();
        double[] doubleArray8 = new double[] { 100.0d };
        boolean boolean9 = switchingFunctionsHandler4.reset((double) 0L, doubleArray8);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean12 = switchingFunctionsHandler11.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler11.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean17 = switchingFunctionsHandler16.isEmpty();
        double[] doubleArray20 = new double[] { 100.0d };
        boolean boolean21 = switchingFunctionsHandler16.reset((double) 0L, doubleArray20);
        boolean boolean22 = switchingFunctionsHandler11.reset((double) 1, doubleArray20);
        boolean boolean23 = switchingFunctionsHandler4.reset((double) 100, doubleArray20);
        double double24 = switchingFunctionsHandler4.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean27 = switchingFunctionsHandler26.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler26.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean32 = switchingFunctionsHandler31.isEmpty();
        double[] doubleArray35 = new double[] { 100.0d };
        boolean boolean36 = switchingFunctionsHandler31.reset((double) 0L, doubleArray35);
        switchingFunctionsHandler26.stepAccepted((double) (byte) 10, doubleArray35);
        switchingFunctionsHandler4.stepAccepted(0.0d, doubleArray35);
        boolean boolean39 = switchingFunctionsHandler4.isEmpty();
        boolean boolean40 = switchingFunctionsHandler4.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction43 = null;
        switchingFunctionsHandler42.add(switchingFunction43, (double) (-1), (double) 3, 0);
        double[] doubleArray55 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean56 = switchingFunctionsHandler42.reset((double) (-1), doubleArray55);
        switchingFunctionsHandler4.stepAccepted((double) 'a', doubleArray55);
        boolean boolean58 = switchingFunctionsHandler0.reset((double) 3, doubleArray55);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        boolean boolean60 = switchingFunctionsHandler0.evaluateStep(stepInterpolator59);
        boolean boolean61 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler0.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean66 = switchingFunctionsHandler65.isEmpty();
        boolean boolean67 = switchingFunctionsHandler65.stop();
        double double68 = switchingFunctionsHandler65.getEventTime();
        boolean boolean69 = switchingFunctionsHandler65.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        switchingFunctionsHandler65.add(switchingFunction70, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray76 = new double[] {};
        boolean boolean77 = switchingFunctionsHandler65.reset((double) (short) 1, doubleArray76);
        boolean boolean78 = switchingFunctionsHandler65.isEmpty();
        boolean boolean79 = switchingFunctionsHandler65.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler81 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean82 = switchingFunctionsHandler81.isEmpty();
        boolean boolean83 = switchingFunctionsHandler81.stop();
        double double84 = switchingFunctionsHandler81.getEventTime();
        boolean boolean85 = switchingFunctionsHandler81.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction86 = null;
        switchingFunctionsHandler81.add(switchingFunction86, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray92 = new double[] {};
        boolean boolean93 = switchingFunctionsHandler81.reset((double) (short) 1, doubleArray92);
        boolean boolean94 = switchingFunctionsHandler65.reset((double) '4', doubleArray92);
        boolean boolean95 = switchingFunctionsHandler0.reset((double) 3, doubleArray92);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator96 = null;
        boolean boolean97 = switchingFunctionsHandler0.evaluateStep(stepInterpolator96);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test09792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09792");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        double double22 = switchingFunctionsHandler0.getEventTime();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        boolean boolean25 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler0.add(switchingFunction26, (double) (byte) 100, (double) (byte) -1, 10);
        double double31 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test09793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09793");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction2 = null;
        switchingFunctionsHandler0.add(switchingFunction2, (double) (-1), (double) 'a', (int) (short) 0);
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean10 = switchingFunctionsHandler9.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        switchingFunctionsHandler9.add(switchingFunction11, (double) (-1), (double) 'a', (int) (short) 0);
        double[] doubleArray17 = null;
        boolean boolean18 = switchingFunctionsHandler9.reset((double) 3, doubleArray17);
        double double19 = switchingFunctionsHandler9.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler21.add(switchingFunction22, (double) (-1), (double) 3, 0);
        double[] doubleArray34 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean35 = switchingFunctionsHandler21.reset((double) (-1), doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean38 = switchingFunctionsHandler37.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = switchingFunctionsHandler37.evaluateStep(stepInterpolator39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean43 = switchingFunctionsHandler42.isEmpty();
        double[] doubleArray46 = new double[] { 100.0d };
        boolean boolean47 = switchingFunctionsHandler42.reset((double) 0L, doubleArray46);
        switchingFunctionsHandler37.stepAccepted((double) (byte) 10, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        switchingFunctionsHandler37.add(switchingFunction49, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean56 = switchingFunctionsHandler55.isEmpty();
        double[] doubleArray59 = new double[] { 100.0d };
        boolean boolean60 = switchingFunctionsHandler55.reset((double) 0L, doubleArray59);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean63 = switchingFunctionsHandler62.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        boolean boolean65 = switchingFunctionsHandler62.evaluateStep(stepInterpolator64);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean68 = switchingFunctionsHandler67.isEmpty();
        double[] doubleArray71 = new double[] { 100.0d };
        boolean boolean72 = switchingFunctionsHandler67.reset((double) 0L, doubleArray71);
        boolean boolean73 = switchingFunctionsHandler62.reset((double) 1, doubleArray71);
        boolean boolean74 = switchingFunctionsHandler55.reset((double) 100, doubleArray71);
        boolean boolean75 = switchingFunctionsHandler37.reset((double) (byte) -1, doubleArray71);
        boolean boolean76 = switchingFunctionsHandler21.reset((double) (byte) 1, doubleArray71);
        boolean boolean77 = switchingFunctionsHandler9.reset((double) (byte) 10, doubleArray71);
        boolean boolean78 = switchingFunctionsHandler0.reset((double) 3, doubleArray71);
        boolean boolean79 = switchingFunctionsHandler0.stop();
        double[] doubleArray81 = null;
        boolean boolean82 = switchingFunctionsHandler0.reset((double) 100L, doubleArray81);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction83 = null;
        switchingFunctionsHandler0.add(switchingFunction83, (double) (-1), (double) (short) 100, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test09794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09794");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (byte) 0, 0.0d, (int) ' ');
        boolean boolean22 = switchingFunctionsHandler0.stop();
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean26 = switchingFunctionsHandler25.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler25.evaluateStep(stepInterpolator27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean31 = switchingFunctionsHandler30.isEmpty();
        double[] doubleArray34 = new double[] { 100.0d };
        boolean boolean35 = switchingFunctionsHandler30.reset((double) 0L, doubleArray34);
        switchingFunctionsHandler25.stepAccepted((double) (byte) 10, doubleArray34);
        boolean boolean37 = switchingFunctionsHandler0.reset((double) 0.0f, doubleArray34);
        boolean boolean38 = switchingFunctionsHandler0.isEmpty();
        boolean boolean39 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        switchingFunctionsHandler0.add(switchingFunction40, 0.0d, (double) 10, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        switchingFunctionsHandler0.add(switchingFunction45, 2.0d, 100.0d, (int) (byte) 1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = switchingFunctionsHandler0.evaluateStep(stepInterpolator50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test09795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09795");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("", objArray29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray29);
        java.lang.Object[] objArray32 = new java.lang.Object[] { 2, switchingFunctionsHandler20, 1, objArray29 };
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) mathException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) functionEvaluationException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray29, (java.lang.Throwable) functionEvaluationException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray29);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray55);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray55);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray55);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException58);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException58);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("hi!", objArray29, (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("", objArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "");
        java.lang.Object[] objArray66 = functionEvaluationException65.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException65);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray29, (java.lang.Throwable) functionEvaluationException65);
        org.apache.commons.math.ode.IntegratorException integratorException69 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "hi!");
        java.lang.String str74 = functionEvaluationException73.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) functionEvaluationException73);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException", objArray29, (java.lang.Throwable) functionEvaluationException73);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException83);
        java.lang.Object[] objArray85 = mathException84.getArguments();
        java.lang.Throwable throwable86 = null;
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("hi!", objArray85, throwable86);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException88 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray85);
        org.apache.commons.math.ode.IntegratorException integratorException89 = new org.apache.commons.math.ode.IntegratorException("", objArray85);
        java.lang.Throwable[] throwableArray90 = integratorException89.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray29, (java.lang.Throwable) integratorException89);
        org.apache.commons.math.ConvergenceException convergenceException92 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", objArray29);
        org.apache.commons.math.ode.IntegratorException integratorException93 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", objArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException94 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: hi!", objArray29);
        org.apache.commons.math.ConvergenceException convergenceException95 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", objArray29);
        org.apache.commons.math.ConvergenceException convergenceException96 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 52", objArray29);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertNotNull(throwableArray90);
    }

    @Test
    public void test09796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09796");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction2 = null;
        switchingFunctionsHandler0.add(switchingFunction2, (double) (-1), (double) 'a', (int) (short) 0);
        double[] doubleArray8 = null;
        boolean boolean9 = switchingFunctionsHandler0.reset((double) 3, doubleArray8);
        double double10 = switchingFunctionsHandler0.getEventTime();
        double double11 = switchingFunctionsHandler0.getEventTime();
        double double12 = switchingFunctionsHandler0.getEventTime();
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler0.add(switchingFunction14, (double) (-1L), (double) (short) 0, (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test09797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09797");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray16 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray16);
        java.lang.Object[] objArray19 = new java.lang.Object[] { 2, switchingFunctionsHandler7, 1, objArray16 };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray16, (java.lang.Throwable) mathException23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException24);
        java.lang.Object[] objArray26 = integratorException25.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray26);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray40);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray40);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", strArray40);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100", (java.lang.Object[]) strArray40);
        java.lang.Throwable throwable47 = null;
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray40, throwable47);
        java.lang.String str49 = mathException48.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: hi!");
        mathException48.addSuppressed((java.lang.Throwable) functionEvaluationException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: ", objArray26, (java.lang.Throwable) functionEvaluationException52);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: " + "'", str49, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ");
    }

    @Test
    public void test09798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09798");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler0.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean16 = switchingFunctionsHandler15.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler15.add(switchingFunction17, (double) (-1), (double) 'a', (int) (short) 0);
        double[] doubleArray23 = null;
        boolean boolean24 = switchingFunctionsHandler15.reset((double) 3, doubleArray23);
        double double25 = switchingFunctionsHandler15.getEventTime();
        boolean boolean26 = switchingFunctionsHandler15.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean29 = switchingFunctionsHandler28.isEmpty();
        boolean boolean30 = switchingFunctionsHandler28.stop();
        double double31 = switchingFunctionsHandler28.getEventTime();
        boolean boolean32 = switchingFunctionsHandler28.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler28.add(switchingFunction33, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray39 = new double[] {};
        boolean boolean40 = switchingFunctionsHandler28.reset((double) (short) 1, doubleArray39);
        boolean boolean41 = switchingFunctionsHandler15.reset((double) 2, doubleArray39);
        switchingFunctionsHandler0.stepAccepted((double) ' ', doubleArray39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler0.evaluateStep(stepInterpolator43);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test09799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09799");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        double double16 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        double double24 = switchingFunctionsHandler0.getEventTime();
        boolean boolean25 = switchingFunctionsHandler0.isEmpty();
        boolean boolean26 = switchingFunctionsHandler0.stop();
        boolean boolean27 = switchingFunctionsHandler0.stop();
        boolean boolean28 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler0.add(switchingFunction29, (double) (byte) -1, (double) (byte) 100, 2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean36 = switchingFunctionsHandler35.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler35.evaluateStep(stepInterpolator37);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean41 = switchingFunctionsHandler40.isEmpty();
        double[] doubleArray44 = new double[] { 100.0d };
        boolean boolean45 = switchingFunctionsHandler40.reset((double) 0L, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler35.reset((double) 1, doubleArray44);
        boolean boolean47 = switchingFunctionsHandler35.stop();
        double double48 = switchingFunctionsHandler35.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean51 = switchingFunctionsHandler50.isEmpty();
        double[] doubleArray54 = new double[] { 100.0d };
        boolean boolean55 = switchingFunctionsHandler50.reset((double) 0L, doubleArray54);
        boolean boolean56 = switchingFunctionsHandler50.stop();
        double double57 = switchingFunctionsHandler50.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean60 = switchingFunctionsHandler59.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        boolean boolean62 = switchingFunctionsHandler59.evaluateStep(stepInterpolator61);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean65 = switchingFunctionsHandler64.isEmpty();
        double[] doubleArray68 = new double[] { 100.0d };
        boolean boolean69 = switchingFunctionsHandler64.reset((double) 0L, doubleArray68);
        switchingFunctionsHandler59.stepAccepted((double) (byte) 10, doubleArray68);
        boolean boolean71 = switchingFunctionsHandler50.reset((double) 1.0f, doubleArray68);
        switchingFunctionsHandler35.stepAccepted((double) 2, doubleArray68);
        boolean boolean73 = switchingFunctionsHandler35.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean76 = switchingFunctionsHandler75.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator77 = null;
        boolean boolean78 = switchingFunctionsHandler75.evaluateStep(stepInterpolator77);
        boolean boolean79 = switchingFunctionsHandler75.stop();
        double double80 = switchingFunctionsHandler75.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler82 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction83 = null;
        switchingFunctionsHandler82.add(switchingFunction83, (double) (-1), (double) 3, 0);
        double[] doubleArray95 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean96 = switchingFunctionsHandler82.reset((double) (-1), doubleArray95);
        switchingFunctionsHandler75.stepAccepted(0.0d, doubleArray95);
        boolean boolean98 = switchingFunctionsHandler35.reset((double) 10.0f, doubleArray95);
        boolean boolean99 = switchingFunctionsHandler0.reset((double) 0, doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test09800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09800");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray34 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray34);
        java.lang.Object[] objArray37 = new java.lang.Object[] { 2, switchingFunctionsHandler25, 1, objArray34 };
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) mathException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) functionEvaluationException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray34);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray15, (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray15, (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray15);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray73);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray73);
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException("", strArray73);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray73);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException79);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "", (java.lang.Object[]) strArray73, (java.lang.Throwable) functionEvaluationException79);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray73);
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", strArray73);
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray15, (java.lang.Throwable) derivativeException83);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException(2.0d, (java.lang.Throwable) derivativeException83);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(strArray73);
    }

    @Test
    public void test09801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09801");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        double double16 = switchingFunctionsHandler0.getEventTime();
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        boolean boolean18 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler0.add(switchingFunction19, (double) 0L, 1.0d, 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, (double) 1L, 0.0d, (int) (short) 1);
        boolean boolean29 = switchingFunctionsHandler0.stop();
        double[] doubleArray31 = null;
        boolean boolean32 = switchingFunctionsHandler0.reset((-1.0d), doubleArray31);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler0.add(switchingFunction33, (double) (byte) 10, (double) (short) 1, 0);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test09802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09802");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException4);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        double double9 = functionEvaluationException8.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException8);
        functionEvaluationException4.addSuppressed((java.lang.Throwable) convergenceException10);
        java.lang.Object[] objArray12 = functionEvaluationException4.getArguments();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("", objArray25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray25);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        double double32 = functionEvaluationException31.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray47 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("", objArray47);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray47);
        java.lang.Object[] objArray50 = new java.lang.Object[] { 2, switchingFunctionsHandler38, 1, objArray47 };
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray47, (java.lang.Throwable) mathException54);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException54);
        mathException34.addSuppressed((java.lang.Throwable) integratorException56);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray25, (java.lang.Throwable) integratorException56);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray70);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException("", strArray70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray70);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) derivativeException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("", (java.lang.Throwable) functionEvaluationException79);
        java.lang.String str81 = mathException80.getPattern();
        derivativeException75.addSuppressed((java.lang.Throwable) mathException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: ", objArray25, (java.lang.Throwable) derivativeException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException84 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray12, (java.lang.Throwable) functionEvaluationException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: ", objArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException86 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException85);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[52.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[52.0]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
    }

    @Test
    public void test09803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09803");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray19);
        java.lang.Object[] objArray34 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("", objArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException35);
        java.lang.Throwable[] throwableArray37 = derivativeException36.getSuppressed();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray63 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("", objArray63);
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray63);
        java.lang.Object[] objArray66 = new java.lang.Object[] { 2, switchingFunctionsHandler54, 1, objArray63 };
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray63, (java.lang.Throwable) mathException70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray63, (java.lang.Throwable) functionEvaluationException73);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray63, (java.lang.Throwable) functionEvaluationException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray46, (java.lang.Throwable) functionEvaluationException76);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray37, (java.lang.Throwable) mathException78);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException78);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, (java.lang.Throwable) convergenceException80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException81);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray19, (java.lang.Throwable) mathException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: Evaluation failed for argument = 100", (java.lang.Object[]) strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException87 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100", strArray19);
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, (java.lang.Throwable) convergenceException88);
        org.apache.commons.math.ode.DerivativeException derivativeException90 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException88);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray66);
    }

    @Test
    public void test09804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09804");
        java.lang.Object[] objArray11 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", objArray11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray11);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException13);
        java.lang.Throwable[] throwableArray15 = integratorException13.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.MathException mathException17 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray15);
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", objArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("", objArray30, (java.lang.Throwable) functionEvaluationException36);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException36);
        java.lang.Object[] objArray39 = functionEvaluationException36.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray39, (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray64 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("", objArray64);
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray64);
        java.lang.Object[] objArray67 = new java.lang.Object[] { 2, switchingFunctionsHandler55, 1, objArray64 };
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray64, (java.lang.Throwable) mathException71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray64, (java.lang.Throwable) functionEvaluationException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray64, (java.lang.Throwable) functionEvaluationException77);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray64);
        java.lang.String str80 = functionEvaluationException79.getPattern();
        java.lang.Object[] objArray81 = functionEvaluationException79.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double84 = functionEvaluationException83.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray81, (java.lang.Throwable) functionEvaluationException83);
        org.apache.commons.math.ode.IntegratorException integratorException86 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException87 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, (java.lang.Throwable) integratorException86);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("Evaluation failed for argument = 100", objArray39, (java.lang.Throwable) functionEvaluationException87);
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) functionEvaluationException87);
        double double90 = functionEvaluationException87.getArgument();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-1.0d) + "'", double84 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 10.0d + "'", double90 == 10.0d);
    }

    @Test
    public void test09805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09805");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) (-1), (double) 100.0f, 10);
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        double double18 = switchingFunctionsHandler0.getEventTime();
        double double19 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler0.add(switchingFunction20, (double) (byte) 1, (double) 0, (int) (short) 0);
        boolean boolean25 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = switchingFunctionsHandler27.evaluateStep(stepInterpolator29);
        boolean boolean31 = switchingFunctionsHandler27.stop();
        double double32 = switchingFunctionsHandler27.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        switchingFunctionsHandler34.add(switchingFunction35, (double) (-1), (double) 3, 0);
        double[] doubleArray47 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean48 = switchingFunctionsHandler34.reset((double) (-1), doubleArray47);
        switchingFunctionsHandler27.stepAccepted(0.0d, doubleArray47);
        boolean boolean50 = switchingFunctionsHandler0.reset((double) (short) 10, doubleArray47);
        boolean boolean51 = switchingFunctionsHandler0.stop();
        boolean boolean52 = switchingFunctionsHandler0.isEmpty();
        double double53 = switchingFunctionsHandler0.getEventTime();
        double double54 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
    }

    @Test
    public void test09806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09806");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.stop();
        double double5 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) 'a', (double) 0L, (int) 'a');
        boolean boolean11 = switchingFunctionsHandler0.stop();
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        double[] doubleArray18 = new double[] { 100.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) 0L, doubleArray18);
        boolean boolean20 = switchingFunctionsHandler14.stop();
        double double21 = switchingFunctionsHandler14.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean24 = switchingFunctionsHandler23.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler23.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean29 = switchingFunctionsHandler28.isEmpty();
        double[] doubleArray32 = new double[] { 100.0d };
        boolean boolean33 = switchingFunctionsHandler28.reset((double) 0L, doubleArray32);
        switchingFunctionsHandler23.stepAccepted((double) (byte) 10, doubleArray32);
        boolean boolean35 = switchingFunctionsHandler14.reset((double) 1.0f, doubleArray32);
        boolean boolean36 = switchingFunctionsHandler0.reset((double) 'a', doubleArray32);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean39 = switchingFunctionsHandler38.isEmpty();
        double[] doubleArray42 = new double[] { 100.0d };
        boolean boolean43 = switchingFunctionsHandler38.reset((double) 0L, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean46 = switchingFunctionsHandler45.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler45.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean51 = switchingFunctionsHandler50.isEmpty();
        double[] doubleArray54 = new double[] { 100.0d };
        boolean boolean55 = switchingFunctionsHandler50.reset((double) 0L, doubleArray54);
        boolean boolean56 = switchingFunctionsHandler45.reset((double) 1, doubleArray54);
        boolean boolean57 = switchingFunctionsHandler38.reset((double) 100, doubleArray54);
        double double58 = switchingFunctionsHandler38.getEventTime();
        boolean boolean59 = switchingFunctionsHandler38.stop();
        boolean boolean60 = switchingFunctionsHandler38.isEmpty();
        double double61 = switchingFunctionsHandler38.getEventTime();
        boolean boolean62 = switchingFunctionsHandler38.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler38.evaluateStep(stepInterpolator63);
        double double65 = switchingFunctionsHandler38.getEventTime();
        boolean boolean66 = switchingFunctionsHandler38.stop();
        boolean boolean67 = switchingFunctionsHandler38.stop();
        double double68 = switchingFunctionsHandler38.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler70 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean71 = switchingFunctionsHandler70.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator72 = null;
        boolean boolean73 = switchingFunctionsHandler70.evaluateStep(stepInterpolator72);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean76 = switchingFunctionsHandler75.isEmpty();
        double[] doubleArray79 = new double[] { 100.0d };
        boolean boolean80 = switchingFunctionsHandler75.reset((double) 0L, doubleArray79);
        boolean boolean81 = switchingFunctionsHandler70.reset((double) 1, doubleArray79);
        switchingFunctionsHandler38.stepAccepted(1.0d, doubleArray79);
        boolean boolean83 = switchingFunctionsHandler0.reset((double) 3, doubleArray79);
        boolean boolean84 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction85 = null;
        switchingFunctionsHandler0.add(switchingFunction85, (double) (short) 0, (double) 100L, (int) '#');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test09807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09807");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray23 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("", objArray23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray23);
        java.lang.Object[] objArray26 = new java.lang.Object[] { 2, switchingFunctionsHandler14, 1, objArray23 };
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray23, (java.lang.Throwable) mathException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray23, (java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray23, (java.lang.Throwable) functionEvaluationException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray23);
        java.lang.String str39 = functionEvaluationException38.getPattern();
        java.lang.Object[] objArray40 = functionEvaluationException38.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double43 = functionEvaluationException42.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray40, (java.lang.Throwable) functionEvaluationException42);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray40);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("", objArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) mathException46);
        double double50 = functionEvaluationException49.getArgument();
        java.lang.Throwable[] throwableArray51 = functionEvaluationException49.getSuppressed();
        double double52 = functionEvaluationException49.getArgument();
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1.0d) + "'", double43 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 10.0d + "'", double52 == 10.0d);
    }

    @Test
    public void test09808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09808");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ");
        java.lang.Object[] objArray4 = convergenceException3.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray17 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray17);
        java.lang.Object[] objArray20 = new java.lang.Object[] { 2, switchingFunctionsHandler8, 1, objArray17 };
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", objArray4, (java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException24);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException24);
        java.lang.Object[] objArray30 = mathException24.getArguments();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
    }

    @Test
    public void test09809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09809");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray34 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray34);
        java.lang.Object[] objArray37 = new java.lang.Object[] { 2, switchingFunctionsHandler25, 1, objArray34 };
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) mathException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) functionEvaluationException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray34);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray15, (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException56);
        java.lang.Throwable[] throwableArray59 = functionEvaluationException56.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray15, (java.lang.Throwable) functionEvaluationException56);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException63);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(throwableArray59);
    }

    @Test
    public void test09810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09810");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler0.evaluateStep(stepInterpolator20);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean26 = switchingFunctionsHandler25.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler25.evaluateStep(stepInterpolator27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean31 = switchingFunctionsHandler30.isEmpty();
        double[] doubleArray34 = new double[] { 100.0d };
        boolean boolean35 = switchingFunctionsHandler30.reset((double) 0L, doubleArray34);
        switchingFunctionsHandler25.stepAccepted((double) (byte) 10, doubleArray34);
        boolean boolean37 = switchingFunctionsHandler0.reset((double) (-1L), doubleArray34);
        double double38 = switchingFunctionsHandler0.getEventTime();
        double double39 = switchingFunctionsHandler0.getEventTime();
        double double40 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        switchingFunctionsHandler0.add(switchingFunction41, (double) (short) -1, (double) 2, 1);
        boolean boolean46 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test09811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09811");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        boolean boolean11 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler13.add(switchingFunction14, (double) (-1), (double) 3, 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler20.add(switchingFunction21, (double) (-1), (double) 3, 0);
        double[] doubleArray33 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean34 = switchingFunctionsHandler20.reset((double) (-1), doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean37 = switchingFunctionsHandler36.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler36.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        double[] doubleArray45 = new double[] { 100.0d };
        boolean boolean46 = switchingFunctionsHandler41.reset((double) 0L, doubleArray45);
        switchingFunctionsHandler36.stepAccepted((double) (byte) 10, doubleArray45);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        switchingFunctionsHandler36.add(switchingFunction48, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.isEmpty();
        double[] doubleArray58 = new double[] { 100.0d };
        boolean boolean59 = switchingFunctionsHandler54.reset((double) 0L, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean62 = switchingFunctionsHandler61.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler61.evaluateStep(stepInterpolator63);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean67 = switchingFunctionsHandler66.isEmpty();
        double[] doubleArray70 = new double[] { 100.0d };
        boolean boolean71 = switchingFunctionsHandler66.reset((double) 0L, doubleArray70);
        boolean boolean72 = switchingFunctionsHandler61.reset((double) 1, doubleArray70);
        boolean boolean73 = switchingFunctionsHandler54.reset((double) 100, doubleArray70);
        boolean boolean74 = switchingFunctionsHandler36.reset((double) (byte) -1, doubleArray70);
        boolean boolean75 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray70);
        boolean boolean76 = switchingFunctionsHandler13.reset((double) 10L, doubleArray70);
        switchingFunctionsHandler7.stepAccepted(1.0d, doubleArray70);
        boolean boolean78 = switchingFunctionsHandler0.reset(10.0d, doubleArray70);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        boolean boolean80 = switchingFunctionsHandler0.evaluateStep(stepInterpolator79);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction81 = null;
        switchingFunctionsHandler0.add(switchingFunction81, (double) 1L, (double) 3, (int) (short) 10);
        boolean boolean86 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test09812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09812");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler0.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        switchingFunctionsHandler0.add(switchingFunction27, (double) 0.0f, (double) (-1.0f), 2);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test09813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09813");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.reset((double) 1, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, 3.0d, (double) (short) 100, (int) '#');
        double double17 = switchingFunctionsHandler0.getEventTime();
        boolean boolean18 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean21 = switchingFunctionsHandler20.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler20.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean26 = switchingFunctionsHandler25.isEmpty();
        double[] doubleArray29 = new double[] { 100.0d };
        boolean boolean30 = switchingFunctionsHandler25.reset((double) 0L, doubleArray29);
        switchingFunctionsHandler20.stepAccepted((double) (byte) 10, doubleArray29);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        switchingFunctionsHandler20.add(switchingFunction32, (double) (-1), (double) 100.0f, 10);
        boolean boolean37 = switchingFunctionsHandler20.isEmpty();
        boolean boolean38 = switchingFunctionsHandler20.stop();
        boolean boolean39 = switchingFunctionsHandler20.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler41.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean47 = switchingFunctionsHandler46.isEmpty();
        double[] doubleArray50 = new double[] { 100.0d };
        boolean boolean51 = switchingFunctionsHandler46.reset((double) 0L, doubleArray50);
        boolean boolean52 = switchingFunctionsHandler41.reset((double) 1, doubleArray50);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        switchingFunctionsHandler41.add(switchingFunction53, (double) (short) 1, (double) 0, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean60 = switchingFunctionsHandler59.isEmpty();
        double[] doubleArray63 = new double[] { 100.0d };
        boolean boolean64 = switchingFunctionsHandler59.reset((double) 0L, doubleArray63);
        boolean boolean65 = switchingFunctionsHandler41.reset((double) ' ', doubleArray63);
        boolean boolean66 = switchingFunctionsHandler20.reset((double) (byte) 100, doubleArray63);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((double) 1.0f, doubleArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test09814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09814");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray39 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("", objArray39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray39);
        java.lang.Object[] objArray42 = new java.lang.Object[] { 2, switchingFunctionsHandler30, 1, objArray39 };
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray39, (java.lang.Throwable) mathException46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray39, (java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray39, (java.lang.Throwable) functionEvaluationException52);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray39);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray20, (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("", strArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("", objArray73);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray73);
        java.lang.Object[] objArray76 = new java.lang.Object[] { 2, switchingFunctionsHandler64, 1, objArray73 };
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException79);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray73, (java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray73);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray73);
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException83);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray20, (java.lang.Throwable) derivativeException84);
        org.apache.commons.math.ode.DerivativeException derivativeException86 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", strArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException87 = new org.apache.commons.math.FunctionEvaluationException(52.0d, "org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException88 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", strArray20);
        org.apache.commons.math.ode.IntegratorException integratorException89 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException90 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: Evaluation failed for argument = 52", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException91 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray20);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException91);
        java.lang.String str93 = mathException92.getPattern();
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str93, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: hi!");
    }

    @Test
    public void test09815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09815");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler0.evaluateStep(stepInterpolator25);
        double double27 = switchingFunctionsHandler0.getEventTime();
        boolean boolean28 = switchingFunctionsHandler0.stop();
        boolean boolean29 = switchingFunctionsHandler0.stop();
        double double30 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean33 = switchingFunctionsHandler32.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler32.evaluateStep(stepInterpolator34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean38 = switchingFunctionsHandler37.isEmpty();
        double[] doubleArray41 = new double[] { 100.0d };
        boolean boolean42 = switchingFunctionsHandler37.reset((double) 0L, doubleArray41);
        boolean boolean43 = switchingFunctionsHandler32.reset((double) 1, doubleArray41);
        switchingFunctionsHandler0.stepAccepted(1.0d, doubleArray41);
        boolean boolean45 = switchingFunctionsHandler0.isEmpty();
        double double46 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
    }

    @Test
    public void test09816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09816");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler0.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler0.add(switchingFunction23, (double) '4', (-1.0d), (int) (short) 1);
        boolean boolean28 = switchingFunctionsHandler0.isEmpty();
        boolean boolean29 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test09817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09817");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        boolean boolean20 = switchingFunctionsHandler0.stop();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.stop();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler25.add(switchingFunction26, (double) (-1), (double) 3, 0);
        double[] doubleArray38 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean39 = switchingFunctionsHandler25.reset((double) (-1), doubleArray38);
        boolean boolean40 = switchingFunctionsHandler25.isEmpty();
        double double41 = switchingFunctionsHandler25.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        switchingFunctionsHandler25.add(switchingFunction42, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean47 = switchingFunctionsHandler25.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        switchingFunctionsHandler25.add(switchingFunction48, (double) (short) -1, (-1.0d), (int) (short) -1);
        double double53 = switchingFunctionsHandler25.getEventTime();
        double double54 = switchingFunctionsHandler25.getEventTime();
        double double55 = switchingFunctionsHandler25.getEventTime();
        boolean boolean56 = switchingFunctionsHandler25.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        switchingFunctionsHandler58.add(switchingFunction59, (double) (-1), (double) 3, 0);
        double[] doubleArray71 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean72 = switchingFunctionsHandler58.reset((double) (-1), doubleArray71);
        boolean boolean73 = switchingFunctionsHandler58.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean76 = switchingFunctionsHandler75.isEmpty();
        double[] doubleArray79 = new double[] { 100.0d };
        boolean boolean80 = switchingFunctionsHandler75.reset((double) 0L, doubleArray79);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler82 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean83 = switchingFunctionsHandler82.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator84 = null;
        boolean boolean85 = switchingFunctionsHandler82.evaluateStep(stepInterpolator84);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler87 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean88 = switchingFunctionsHandler87.isEmpty();
        double[] doubleArray91 = new double[] { 100.0d };
        boolean boolean92 = switchingFunctionsHandler87.reset((double) 0L, doubleArray91);
        boolean boolean93 = switchingFunctionsHandler82.reset((double) 1, doubleArray91);
        boolean boolean94 = switchingFunctionsHandler75.reset((double) 100, doubleArray91);
        boolean boolean95 = switchingFunctionsHandler58.reset((double) (-1.0f), doubleArray91);
        boolean boolean96 = switchingFunctionsHandler25.reset(3.0d, doubleArray91);
        boolean boolean97 = switchingFunctionsHandler0.reset(Double.NaN, doubleArray91);
        double double98 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double98));
    }

    @Test
    public void test09818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09818");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, (java.lang.Throwable) mathException20);
        java.lang.String str22 = mathException20.getPattern();
        java.lang.Throwable[] throwableArray23 = mathException20.getSuppressed();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray51 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("", objArray51);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray51);
        java.lang.Object[] objArray54 = new java.lang.Object[] { 2, switchingFunctionsHandler42, 1, objArray51 };
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray51, (java.lang.Throwable) mathException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray51, (java.lang.Throwable) functionEvaluationException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray51, (java.lang.Throwable) functionEvaluationException64);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray34, (java.lang.Throwable) functionEvaluationException64);
        java.lang.Throwable[] throwableArray67 = functionEvaluationException64.getSuppressed();
        java.lang.Throwable[] throwableArray68 = functionEvaluationException64.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException69 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) throwableArray68);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) integratorException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) integratorException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "Convergence failed", (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException72);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str22, "org.apache.commons.math.FunctionEvaluationException: hi!");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray68);
    }

    @Test
    public void test09819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09819");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        switchingFunctionsHandler22.stepAccepted((double) (byte) 10, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray31);
        double double35 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        switchingFunctionsHandler37.add(switchingFunction38, (double) (-1), (double) 3, 0);
        double[] doubleArray50 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean51 = switchingFunctionsHandler37.reset((double) (-1), doubleArray50);
        boolean boolean52 = switchingFunctionsHandler37.isEmpty();
        boolean boolean53 = switchingFunctionsHandler37.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        switchingFunctionsHandler37.add(switchingFunction54, (double) (byte) 0, 0.0d, (int) ' ');
        double[] doubleArray63 = new double[] { 1.0f, (-1.0f), 100.0d };
        boolean boolean64 = switchingFunctionsHandler37.reset((double) 1L, doubleArray63);
        boolean boolean65 = switchingFunctionsHandler0.reset((double) (-1.0f), doubleArray63);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction66 = null;
        switchingFunctionsHandler0.add(switchingFunction66, 32.0d, 100.0d, (int) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction71 = null;
        switchingFunctionsHandler0.add(switchingFunction71, (double) (short) 1, (double) 100.0f, (int) (short) -1);
        boolean boolean76 = switchingFunctionsHandler0.isEmpty();
        boolean boolean77 = switchingFunctionsHandler0.stop();
        boolean boolean78 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test09820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09820");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray19 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray19);
        java.lang.Object[] objArray22 = new java.lang.Object[] { 2, switchingFunctionsHandler10, 1, objArray19 };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) mathException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) functionEvaluationException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) functionEvaluationException32);
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", objArray41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray41);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException43);
        java.lang.Throwable[] throwableArray45 = integratorException43.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException43);
        functionEvaluationException32.addSuppressed((java.lang.Throwable) integratorException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException43);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException55);
        java.lang.Object[] objArray57 = mathException56.getArguments();
        java.lang.Throwable throwable58 = null;
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!", objArray57, throwable58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray57);
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException("", objArray57);
        integratorException43.addSuppressed((java.lang.Throwable) integratorException61);
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray72);
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "hi!", (java.lang.Object[]) strArray72);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException75);
        integratorException43.addSuppressed((java.lang.Throwable) functionEvaluationException75);
        java.lang.Object[] objArray78 = functionEvaluationException75.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "", objArray78);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException80 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Throwable) functionEvaluationException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException80);
        java.lang.String str82 = mathException81.getPattern();
        java.lang.Object[] objArray83 = mathException81.getArguments();
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
    }

    @Test
    public void test09821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09821");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        double double16 = switchingFunctionsHandler0.getEventTime();
        double double17 = switchingFunctionsHandler0.getEventTime();
        boolean boolean18 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = switchingFunctionsHandler0.evaluateStep(stepInterpolator19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test09822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09822");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        boolean boolean20 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler22.add(switchingFunction23, (double) (-1), (double) 3, 0);
        double[] doubleArray35 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean36 = switchingFunctionsHandler22.reset((double) (-1), doubleArray35);
        boolean boolean37 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean40 = switchingFunctionsHandler39.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler39.evaluateStep(stepInterpolator41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean45 = switchingFunctionsHandler44.isEmpty();
        double[] doubleArray48 = new double[] { 100.0d };
        boolean boolean49 = switchingFunctionsHandler44.reset((double) 0L, doubleArray48);
        switchingFunctionsHandler39.stepAccepted((double) (byte) 10, doubleArray48);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean53 = switchingFunctionsHandler52.isEmpty();
        double[] doubleArray56 = new double[] { 100.0d };
        boolean boolean57 = switchingFunctionsHandler52.reset((double) 0L, doubleArray56);
        switchingFunctionsHandler39.stepAccepted(100.0d, doubleArray56);
        boolean boolean59 = switchingFunctionsHandler22.reset((-1.0d), doubleArray56);
        boolean boolean60 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray56);
        double double61 = switchingFunctionsHandler0.getEventTime();
        boolean boolean62 = switchingFunctionsHandler0.isEmpty();
        boolean boolean63 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test09823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09823");
        java.lang.Object[] objArray17 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", objArray17, (java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException23);
        java.lang.Object[] objArray26 = functionEvaluationException23.getArguments();
        java.lang.Throwable[] throwableArray27 = functionEvaluationException23.getSuppressed();
        java.lang.Object[] objArray28 = functionEvaluationException23.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", objArray42);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray42);
        java.lang.Object[] objArray45 = new java.lang.Object[] { 2, switchingFunctionsHandler33, 1, objArray42 };
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray42, (java.lang.Throwable) mathException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException50);
        java.lang.Object[] objArray52 = functionEvaluationException50.getArguments();
        double double53 = functionEvaluationException50.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: hi!", objArray28, (java.lang.Throwable) functionEvaluationException50);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray28);
        java.lang.Object[] objArray66 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("", objArray66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "", (java.lang.Throwable) convergenceException67);
        double double69 = functionEvaluationException68.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.MathException", (java.lang.Throwable) functionEvaluationException68);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException68);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.ode.DerivativeException: ", objArray28, (java.lang.Throwable) integratorException71);
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException71);
        java.lang.Object[] objArray75 = integratorException74.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException(52.0d, (java.lang.Throwable) integratorException74);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) integratorException74);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException74);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 97.0d + "'", double69 == 97.0d);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
    }

    @Test
    public void test09824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09824");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray33 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("", objArray33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray33);
        java.lang.Object[] objArray36 = new java.lang.Object[] { 2, switchingFunctionsHandler24, 1, objArray33 };
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) mathException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray33);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray33);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray33);
        convergenceException17.addSuppressed((java.lang.Throwable) integratorException44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException17);
        java.lang.Object[] objArray53 = new java.lang.Object[] { 100.0f, (byte) 10 };
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray53);
        java.lang.Object[] objArray65 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("", objArray65);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray65);
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray65);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("", objArray65, (java.lang.Throwable) functionEvaluationException71);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException71);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("", objArray53, (java.lang.Throwable) mathException73);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException74);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException75);
        convergenceException46.addSuppressed((java.lang.Throwable) mathException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException46);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[100.0, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[100.0, 10]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[1, a, 10, a, -1]");
    }

    @Test
    public void test09825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09825");
        java.lang.Object[] objArray13 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray13);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException15);
        java.lang.Throwable[] throwableArray17 = integratorException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException19);
        java.lang.Throwable[] throwableArray24 = mathException23.getSuppressed();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray44 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("", objArray44);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray44);
        java.lang.Object[] objArray47 = new java.lang.Object[] { 2, switchingFunctionsHandler35, 1, objArray44 };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray44, (java.lang.Throwable) mathException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray44, (java.lang.Throwable) functionEvaluationException54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray44, (java.lang.Throwable) functionEvaluationException57);
        java.lang.Object[] objArray66 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("", objArray66);
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray66);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException68);
        java.lang.Throwable[] throwableArray70 = integratorException68.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException68);
        functionEvaluationException57.addSuppressed((java.lang.Throwable) integratorException68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException68);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException80);
        java.lang.Object[] objArray82 = mathException81.getArguments();
        java.lang.Throwable throwable83 = null;
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("hi!", objArray82, throwable83);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray82);
        org.apache.commons.math.ode.IntegratorException integratorException86 = new org.apache.commons.math.ode.IntegratorException("", objArray82);
        integratorException68.addSuppressed((java.lang.Throwable) integratorException86);
        org.apache.commons.math.ode.DerivativeException derivativeException88 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException68);
        java.lang.Throwable[] throwableArray89 = derivativeException88.getSuppressed();
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, (java.lang.Throwable) mathException90);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException92 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}", (java.lang.Throwable) functionEvaluationException91);
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) functionEvaluationException92);
        double double94 = functionEvaluationException92.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException95 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) functionEvaluationException92);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertNotNull(throwableArray89);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2.0d + "'", double94 == 2.0d);
    }

    @Test
    public void test09826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09826");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray16 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray16);
        java.lang.Object[] objArray19 = new java.lang.Object[] { 2, switchingFunctionsHandler7, 1, objArray16 };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray16, (java.lang.Throwable) mathException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray16, (java.lang.Throwable) functionEvaluationException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray16, (java.lang.Throwable) functionEvaluationException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, (java.lang.Throwable) convergenceException30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, (java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ");
        java.lang.Object[] objArray37 = convergenceException36.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100", objArray37);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException38);
        functionEvaluationException31.addSuppressed((java.lang.Throwable) convergenceException39);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
    }

    @Test
    public void test09827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09827");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler0.add(switchingFunction21, (double) 10, (double) (byte) 0, 3);
        double double26 = switchingFunctionsHandler0.getEventTime();
        double double27 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean30 = switchingFunctionsHandler29.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        switchingFunctionsHandler29.add(switchingFunction31, (double) (-1), (double) 'a', (int) (short) 0);
        double[] doubleArray37 = null;
        boolean boolean38 = switchingFunctionsHandler29.reset((double) 3, doubleArray37);
        double double39 = switchingFunctionsHandler29.getEventTime();
        double double40 = switchingFunctionsHandler29.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        switchingFunctionsHandler29.add(switchingFunction41, Double.NaN, (double) (short) 100, (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean48 = switchingFunctionsHandler47.isEmpty();
        double[] doubleArray51 = new double[] { 100.0d };
        boolean boolean52 = switchingFunctionsHandler47.reset((double) 0L, doubleArray51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler54.evaluateStep(stepInterpolator56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean60 = switchingFunctionsHandler59.isEmpty();
        double[] doubleArray63 = new double[] { 100.0d };
        boolean boolean64 = switchingFunctionsHandler59.reset((double) 0L, doubleArray63);
        boolean boolean65 = switchingFunctionsHandler54.reset((double) 1, doubleArray63);
        boolean boolean66 = switchingFunctionsHandler47.reset((double) 100, doubleArray63);
        boolean boolean67 = switchingFunctionsHandler29.reset((double) 10.0f, doubleArray63);
        boolean boolean68 = switchingFunctionsHandler0.reset((double) (-1.0f), doubleArray63);
        boolean boolean69 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test09828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09828");
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "hi!", (java.lang.Throwable) mathException8);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException9);
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", objArray27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray27);
        java.lang.Object[] objArray30 = new java.lang.Object[] { 2, switchingFunctionsHandler18, 1, objArray27 };
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) mathException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) functionEvaluationException40);
        java.lang.Throwable throwable43 = null;
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", (java.lang.Object[]) throwableArray11, throwable43);
        java.lang.Throwable throwable45 = null;
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray11, throwable45);
        java.lang.Throwable[] throwableArray47 = mathException46.getSuppressed();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray58);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray58);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray58);
        java.lang.Object[] objArray67 = new java.lang.Object[] { 100.0f, (byte) 10 };
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "", objArray67);
        java.lang.Throwable[] throwableArray70 = functionEvaluationException69.getSuppressed();
        double double71 = functionEvaluationException69.getArgument();
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray58, (java.lang.Throwable) functionEvaluationException69);
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException", strArray58);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray47, (java.lang.Throwable) derivativeException73);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[100.0, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[100.0, 10]");
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 100.0d + "'", double71 == 100.0d);
    }

    @Test
    public void test09829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09829");
        java.lang.Object[] objArray23 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("", objArray23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray23);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("", objArray23, (java.lang.Throwable) functionEvaluationException29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException29);
        java.lang.Object[] objArray32 = functionEvaluationException29.getArguments();
        java.lang.Throwable[] throwableArray33 = functionEvaluationException29.getSuppressed();
        java.lang.Object[] objArray34 = functionEvaluationException29.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray48 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("", objArray48);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray48);
        java.lang.Object[] objArray51 = new java.lang.Object[] { 2, switchingFunctionsHandler39, 1, objArray48 };
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray48, (java.lang.Throwable) mathException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException56);
        java.lang.Object[] objArray58 = functionEvaluationException56.getArguments();
        double double59 = functionEvaluationException56.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: hi!", objArray34, (java.lang.Throwable) functionEvaluationException56);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "", objArray34);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException", objArray34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1);
        java.lang.Object[] objArray74 = functionEvaluationException73.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", objArray74);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", objArray74);
        org.apache.commons.math.ode.IntegratorException integratorException77 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray74);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("", objArray74);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) convergenceException78);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException80 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: ", objArray34, (java.lang.Throwable) convergenceException78);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: ");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException84 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException", objArray34, (java.lang.Throwable) functionEvaluationException83);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[-1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[-1.0]");
    }

    @Test
    public void test09830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09830");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray17);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray17);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "hi!", (java.lang.Throwable) mathException30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException31);
        java.lang.Throwable[] throwableArray33 = convergenceException32.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray49 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("", objArray49);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray49);
        java.lang.Object[] objArray52 = new java.lang.Object[] { 2, switchingFunctionsHandler40, 1, objArray49 };
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray49, (java.lang.Throwable) mathException56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray49, (java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) convergenceException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.MathException: Evaluation failed for argument = -1", (java.lang.Object[]) throwableArray33, (java.lang.Throwable) convergenceException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "Evaluation failed for argument = 100", (java.lang.Object[]) strArray17, (java.lang.Throwable) convergenceException61);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", strArray17);
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray76);
        org.apache.commons.math.ode.IntegratorException integratorException78 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray76);
        org.apache.commons.math.ode.IntegratorException integratorException79 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray76);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException79);
        java.lang.Throwable[] throwableArray81 = convergenceException80.getSuppressed();
        java.lang.Throwable[] throwableArray82 = convergenceException80.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException83 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) throwableArray82);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException84 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray17, (java.lang.Throwable) integratorException83);
        org.apache.commons.math.ode.DerivativeException derivativeException85 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 32", strArray17);
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) derivativeException85);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(throwableArray82);
    }

    @Test
    public void test09831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09831");
        java.lang.Object[] objArray6 = new java.lang.Object[] { 100.0f, (byte) 10 };
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray6);
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) mathException7);
        java.lang.Throwable[] throwableArray9 = mathException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException20);
        java.lang.Object[] objArray22 = mathException21.getArguments();
        java.lang.Throwable throwable23 = null;
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!", objArray22, throwable23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray22);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("", objArray22);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException32);
        java.lang.Object[] objArray34 = mathException33.getArguments();
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!", objArray34, throwable35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray34);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException40);
        java.lang.Throwable[] throwableArray42 = convergenceException40.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException40);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: hi!", objArray34, (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray22, (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "", objArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray61 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("", objArray61);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray61);
        java.lang.Object[] objArray64 = new java.lang.Object[] { 2, switchingFunctionsHandler52, 1, objArray61 };
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray61, (java.lang.Throwable) mathException68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray61, (java.lang.Throwable) functionEvaluationException71);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException71);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) convergenceException73);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException74);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: hi!", objArray22, (java.lang.Throwable) integratorException75);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) convergenceException76);
        org.apache.commons.math.ode.IntegratorException integratorException78 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException76);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), (java.lang.Throwable) convergenceException76);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[100.0, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[100.0, 10]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray64);
    }

    @Test
    public void test09832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09832");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler5.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean11 = switchingFunctionsHandler10.isEmpty();
        double[] doubleArray14 = new double[] { 100.0d };
        boolean boolean15 = switchingFunctionsHandler10.reset((double) 0L, doubleArray14);
        switchingFunctionsHandler5.stepAccepted((double) (byte) 10, doubleArray14);
        boolean boolean17 = switchingFunctionsHandler0.reset(0.0d, doubleArray14);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler0.evaluateStep(stepInterpolator18);
        boolean boolean20 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler0.add(switchingFunction21, (double) (byte) 0, (double) '#', (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean35 = switchingFunctionsHandler34.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler34.evaluateStep(stepInterpolator36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean40 = switchingFunctionsHandler39.isEmpty();
        double[] doubleArray43 = new double[] { 100.0d };
        boolean boolean44 = switchingFunctionsHandler39.reset((double) 0L, doubleArray43);
        boolean boolean45 = switchingFunctionsHandler34.reset((double) 1, doubleArray43);
        boolean boolean46 = switchingFunctionsHandler27.reset((double) 100, doubleArray43);
        double double47 = switchingFunctionsHandler27.getEventTime();
        boolean boolean48 = switchingFunctionsHandler27.stop();
        boolean boolean49 = switchingFunctionsHandler27.isEmpty();
        double double50 = switchingFunctionsHandler27.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler27.evaluateStep(stepInterpolator51);
        boolean boolean53 = switchingFunctionsHandler27.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        switchingFunctionsHandler27.add(switchingFunction54, (double) (byte) 0, (double) 100L, (int) (byte) 100);
        boolean boolean59 = switchingFunctionsHandler27.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean62 = switchingFunctionsHandler61.isEmpty();
        double[] doubleArray65 = new double[] { 100.0d };
        boolean boolean66 = switchingFunctionsHandler61.reset((double) 0L, doubleArray65);
        boolean boolean67 = switchingFunctionsHandler61.stop();
        double double68 = switchingFunctionsHandler61.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler70 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean71 = switchingFunctionsHandler70.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator72 = null;
        boolean boolean73 = switchingFunctionsHandler70.evaluateStep(stepInterpolator72);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean76 = switchingFunctionsHandler75.isEmpty();
        double[] doubleArray79 = new double[] { 100.0d };
        boolean boolean80 = switchingFunctionsHandler75.reset((double) 0L, doubleArray79);
        switchingFunctionsHandler70.stepAccepted((double) (byte) 10, doubleArray79);
        boolean boolean82 = switchingFunctionsHandler61.reset((double) 1.0f, doubleArray79);
        boolean boolean83 = switchingFunctionsHandler27.reset((double) 100, doubleArray79);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted(Double.NaN, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test09833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09833");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler0.evaluateStep(stepInterpolator25);
        boolean boolean27 = switchingFunctionsHandler0.isEmpty();
        double double28 = switchingFunctionsHandler0.getEventTime();
        boolean boolean29 = switchingFunctionsHandler0.stop();
        double double30 = switchingFunctionsHandler0.getEventTime();
        boolean boolean31 = switchingFunctionsHandler0.isEmpty();
        double double32 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test09834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09834");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray33 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("", objArray33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray33);
        java.lang.Object[] objArray36 = new java.lang.Object[] { 2, switchingFunctionsHandler24, 1, objArray33 };
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) mathException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) functionEvaluationException46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray33);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray14, (java.lang.Throwable) convergenceException49);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException55);
        java.lang.Throwable[] throwableArray58 = functionEvaluationException55.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), (java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException61);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(throwableArray58);
    }

    @Test
    public void test09835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09835");
        org.apache.commons.math.MathException mathException4 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!");
        java.lang.Throwable[] throwableArray5 = mathException4.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException(52.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray5);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray39 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("", objArray39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray39);
        java.lang.Object[] objArray42 = new java.lang.Object[] { 2, switchingFunctionsHandler30, 1, objArray39 };
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray39, (java.lang.Throwable) mathException46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray39, (java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray39, (java.lang.Throwable) functionEvaluationException52);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray39);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray20, (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException61);
        java.lang.Throwable[] throwableArray64 = functionEvaluationException61.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray20, (java.lang.Throwable) functionEvaluationException61);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException61);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) functionEvaluationException61);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(throwableArray64);
    }

    @Test
    public void test09836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09836");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray31);
        java.lang.Object[] objArray34 = new java.lang.Object[] { 2, switchingFunctionsHandler22, 1, objArray31 };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) mathException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) strArray14);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!");
        java.lang.Object[] objArray54 = functionEvaluationException53.getArguments();
        java.lang.Throwable[] throwableArray55 = functionEvaluationException53.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) throwableArray55);
        java.lang.Object[] objArray57 = integratorException56.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Object[]) strArray14, (java.lang.Throwable) integratorException56);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("", (java.lang.Throwable) integratorException56);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
    }

    @Test
    public void test09837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09837");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray18 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", objArray18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray18);
        java.lang.Object[] objArray21 = new java.lang.Object[] { 2, switchingFunctionsHandler9, 1, objArray18 };
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) mathException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) functionEvaluationException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) functionEvaluationException31);
        java.lang.Object[] objArray40 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", objArray40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray40);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException42);
        java.lang.Throwable[] throwableArray44 = integratorException42.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException42);
        functionEvaluationException31.addSuppressed((java.lang.Throwable) integratorException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException42);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException54);
        java.lang.Object[] objArray56 = mathException55.getArguments();
        java.lang.Throwable throwable57 = null;
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!", objArray56, throwable57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray56);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException("", objArray56);
        integratorException42.addSuppressed((java.lang.Throwable) integratorException60);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException42);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", (java.lang.Throwable) integratorException42);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) integratorException42);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException64);
        java.lang.Throwable[] throwableArray66 = mathException65.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 10", (java.lang.Object[]) throwableArray66);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(throwableArray66);
    }

    @Test
    public void test09838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09838");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("", objArray35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray35);
        java.lang.Object[] objArray38 = new java.lang.Object[] { 2, switchingFunctionsHandler26, 1, objArray35 };
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) mathException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35, (java.lang.Throwable) functionEvaluationException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray35);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray16, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("", objArray69);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray69);
        java.lang.Object[] objArray72 = new java.lang.Object[] { 2, switchingFunctionsHandler60, 1, objArray69 };
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray69, (java.lang.Throwable) mathException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray69);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray69);
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray16, (java.lang.Throwable) derivativeException80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) derivativeException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException", (java.lang.Throwable) derivativeException80);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray72);
    }

    @Test
    public void test09839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09839");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray24 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("", objArray24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray24);
        java.lang.Object[] objArray27 = new java.lang.Object[] { 2, switchingFunctionsHandler15, 1, objArray24 };
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray24, (java.lang.Throwable) mathException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray24, (java.lang.Throwable) functionEvaluationException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray24, (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray24);
        java.lang.String str40 = functionEvaluationException39.getPattern();
        java.lang.Object[] objArray41 = functionEvaluationException39.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double44 = functionEvaluationException43.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray41, (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", objArray41);
        java.lang.Throwable throwable47 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray41, throwable47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "", objArray41);
        java.lang.Object[] objArray50 = functionEvaluationException49.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException49);
        double double52 = functionEvaluationException49.getArgument();
        double double53 = functionEvaluationException49.getArgument();
        java.lang.Object[] objArray54 = functionEvaluationException49.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 100", objArray54);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1.0d) + "'", double44 == (-1.0d));
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[1, a, 10, a, -1]");
    }

    @Test
    public void test09840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09840");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException4);
        java.lang.Throwable[] throwableArray6 = convergenceException4.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException9);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray23);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray23);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray23);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray38);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray38);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "hi!", (java.lang.Throwable) mathException45);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray61 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("", objArray61);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray61);
        java.lang.Object[] objArray64 = new java.lang.Object[] { 2, switchingFunctionsHandler52, 1, objArray61 };
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray61, (java.lang.Throwable) mathException68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray61, (java.lang.Throwable) functionEvaluationException71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray61, (java.lang.Throwable) functionEvaluationException74);
        java.lang.Object[] objArray83 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("", objArray83);
        org.apache.commons.math.ode.IntegratorException integratorException85 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray83);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException85);
        java.lang.Throwable[] throwableArray87 = integratorException85.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException88 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException85);
        functionEvaluationException74.addSuppressed((java.lang.Throwable) integratorException85);
        functionEvaluationException46.addSuppressed((java.lang.Throwable) integratorException85);
        java.lang.Object[] objArray91 = functionEvaluationException46.getArguments();
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray38, (java.lang.Throwable) functionEvaluationException46);
        org.apache.commons.math.ConvergenceException convergenceException93 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray23, (java.lang.Throwable) functionEvaluationException46);
        org.apache.commons.math.ode.DerivativeException derivativeException94 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", strArray23);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray23);
        integratorException10.addSuppressed((java.lang.Throwable) mathException95);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[]");
    }

    @Test
    public void test09841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09841");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean17 = switchingFunctionsHandler16.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler16.evaluateStep(stepInterpolator18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        double[] doubleArray25 = new double[] { 100.0d };
        boolean boolean26 = switchingFunctionsHandler21.reset((double) 0L, doubleArray25);
        switchingFunctionsHandler16.stepAccepted((double) (byte) 10, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        switchingFunctionsHandler16.add(switchingFunction28, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean35 = switchingFunctionsHandler34.isEmpty();
        double[] doubleArray38 = new double[] { 100.0d };
        boolean boolean39 = switchingFunctionsHandler34.reset((double) 0L, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler41.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean47 = switchingFunctionsHandler46.isEmpty();
        double[] doubleArray50 = new double[] { 100.0d };
        boolean boolean51 = switchingFunctionsHandler46.reset((double) 0L, doubleArray50);
        boolean boolean52 = switchingFunctionsHandler41.reset((double) 1, doubleArray50);
        boolean boolean53 = switchingFunctionsHandler34.reset((double) 100, doubleArray50);
        boolean boolean54 = switchingFunctionsHandler16.reset((double) (byte) -1, doubleArray50);
        boolean boolean55 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray50);
        boolean boolean56 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        switchingFunctionsHandler0.add(switchingFunction57, 97.0d, (double) (short) 0, (int) (byte) 100);
        double double62 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
    }

    @Test
    public void test09842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09842");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray19);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", objArray41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray41);
        java.lang.Object[] objArray44 = new java.lang.Object[] { 2, switchingFunctionsHandler32, 1, objArray41 };
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray41, (java.lang.Throwable) mathException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray41, (java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray41, (java.lang.Throwable) functionEvaluationException54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray19, (java.lang.Throwable) functionEvaluationException56);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: Convergence failed", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray19);
        double double62 = functionEvaluationException61.getArgument();
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 100.0d + "'", double62 == 100.0d);
    }

    @Test
    public void test09843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09843");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        double double20 = switchingFunctionsHandler0.getEventTime();
        double double21 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        boolean boolean25 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler0.evaluateStep(stepInterpolator26);
        boolean boolean28 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test09844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09844");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) (-1), (double) 100.0f, 10);
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        boolean boolean18 = switchingFunctionsHandler0.stop();
        boolean boolean19 = switchingFunctionsHandler0.isEmpty();
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        double double21 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean24 = switchingFunctionsHandler23.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler23.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler23.evaluateStep(stepInterpolator27);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler23.add(switchingFunction29, (double) (short) -1, (double) (byte) 1, (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler23.add(switchingFunction34, 52.0d, (double) (-1), (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean41 = switchingFunctionsHandler40.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler40.evaluateStep(stepInterpolator42);
        boolean boolean44 = switchingFunctionsHandler40.stop();
        boolean boolean45 = switchingFunctionsHandler40.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double48 = switchingFunctionsHandler47.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean51 = switchingFunctionsHandler50.isEmpty();
        double[] doubleArray54 = new double[] { 100.0d };
        boolean boolean55 = switchingFunctionsHandler50.reset((double) 0L, doubleArray54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean58 = switchingFunctionsHandler57.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        boolean boolean60 = switchingFunctionsHandler57.evaluateStep(stepInterpolator59);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean63 = switchingFunctionsHandler62.isEmpty();
        double[] doubleArray66 = new double[] { 100.0d };
        boolean boolean67 = switchingFunctionsHandler62.reset((double) 0L, doubleArray66);
        boolean boolean68 = switchingFunctionsHandler57.reset((double) 1, doubleArray66);
        boolean boolean69 = switchingFunctionsHandler50.reset((double) 100, doubleArray66);
        double double70 = switchingFunctionsHandler50.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean73 = switchingFunctionsHandler72.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator74 = null;
        boolean boolean75 = switchingFunctionsHandler72.evaluateStep(stepInterpolator74);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler77 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean78 = switchingFunctionsHandler77.isEmpty();
        double[] doubleArray81 = new double[] { 100.0d };
        boolean boolean82 = switchingFunctionsHandler77.reset((double) 0L, doubleArray81);
        switchingFunctionsHandler72.stepAccepted((double) (byte) 10, doubleArray81);
        switchingFunctionsHandler50.stepAccepted(0.0d, doubleArray81);
        switchingFunctionsHandler47.stepAccepted((double) (short) 0, doubleArray81);
        switchingFunctionsHandler40.stepAccepted(52.0d, doubleArray81);
        boolean boolean87 = switchingFunctionsHandler23.reset(0.0d, doubleArray81);
        boolean boolean88 = switchingFunctionsHandler0.reset(3.0d, doubleArray81);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test09845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09845");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean10 = switchingFunctionsHandler9.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler9.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        double[] doubleArray18 = new double[] { 100.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) 0L, doubleArray18);
        switchingFunctionsHandler9.stepAccepted((double) (byte) 10, doubleArray18);
        boolean boolean21 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray18);
        boolean boolean22 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean25 = switchingFunctionsHandler24.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler24.evaluateStep(stepInterpolator26);
        boolean boolean28 = switchingFunctionsHandler24.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler24.add(switchingFunction29, (double) 0.0f, (double) (short) 10, (-1));
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean36 = switchingFunctionsHandler35.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler35.evaluateStep(stepInterpolator37);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean41 = switchingFunctionsHandler40.isEmpty();
        double[] doubleArray44 = new double[] { 100.0d };
        boolean boolean45 = switchingFunctionsHandler40.reset((double) 0L, doubleArray44);
        switchingFunctionsHandler35.stepAccepted((double) (byte) 10, doubleArray44);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean49 = switchingFunctionsHandler48.isEmpty();
        double[] doubleArray52 = new double[] { 100.0d };
        boolean boolean53 = switchingFunctionsHandler48.reset((double) 0L, doubleArray52);
        switchingFunctionsHandler35.stepAccepted(100.0d, doubleArray52);
        double double55 = switchingFunctionsHandler35.getEventTime();
        boolean boolean56 = switchingFunctionsHandler35.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean59 = switchingFunctionsHandler58.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler58.evaluateStep(stepInterpolator60);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler63 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean64 = switchingFunctionsHandler63.isEmpty();
        double[] doubleArray67 = new double[] { 100.0d };
        boolean boolean68 = switchingFunctionsHandler63.reset((double) 0L, doubleArray67);
        switchingFunctionsHandler58.stepAccepted((double) (byte) 10, doubleArray67);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        switchingFunctionsHandler58.add(switchingFunction70, (double) (-1), (double) 100.0f, 10);
        boolean boolean75 = switchingFunctionsHandler58.isEmpty();
        boolean boolean76 = switchingFunctionsHandler58.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler78 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean79 = switchingFunctionsHandler78.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator80 = null;
        boolean boolean81 = switchingFunctionsHandler78.evaluateStep(stepInterpolator80);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler83 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean84 = switchingFunctionsHandler83.isEmpty();
        double[] doubleArray87 = new double[] { 100.0d };
        boolean boolean88 = switchingFunctionsHandler83.reset((double) 0L, doubleArray87);
        boolean boolean89 = switchingFunctionsHandler78.reset((double) 1, doubleArray87);
        boolean boolean90 = switchingFunctionsHandler58.reset((double) (-1L), doubleArray87);
        switchingFunctionsHandler35.stepAccepted((double) (short) 1, doubleArray87);
        boolean boolean92 = switchingFunctionsHandler24.reset((-1.0d), doubleArray87);
        switchingFunctionsHandler0.stepAccepted((double) 10L, doubleArray87);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test09846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09846");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler0.evaluateStep(stepInterpolator20);
        double double22 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler0.add(switchingFunction23, 52.0d, (double) ' ', 100);
        boolean boolean28 = switchingFunctionsHandler0.isEmpty();
        boolean boolean29 = switchingFunctionsHandler0.stop();
        boolean boolean30 = switchingFunctionsHandler0.stop();
        double double31 = switchingFunctionsHandler0.getEventTime();
        boolean boolean32 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = switchingFunctionsHandler0.evaluateStep(stepInterpolator33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test09847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09847");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray17 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray17);
        java.lang.Object[] objArray20 = new java.lang.Object[] { 2, switchingFunctionsHandler8, 1, objArray17 };
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) mathException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) functionEvaluationException27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException27);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException30);
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Throwable) mathException30);
        java.lang.String str33 = mathException30.getPattern();
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Convergence failed", (java.lang.Throwable) mathException30);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) mathException34);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException34);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str33, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test09848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09848");
        java.lang.Object[] objArray10 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("", objArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException11);
        java.lang.Throwable[] throwableArray13 = derivativeException12.getSuppressed();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray39 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("", objArray39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray39);
        java.lang.Object[] objArray42 = new java.lang.Object[] { 2, switchingFunctionsHandler30, 1, objArray39 };
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray39, (java.lang.Throwable) mathException46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray39, (java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray39, (java.lang.Throwable) functionEvaluationException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray22, (java.lang.Throwable) functionEvaluationException52);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) mathException54);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, (java.lang.Throwable) convergenceException56);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "Evaluation failed for argument = 52", (java.lang.Throwable) mathException58);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray42);
    }

    @Test
    public void test09849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09849");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException24);
        java.lang.Object[] objArray26 = mathException25.getArguments();
        java.lang.Throwable throwable29 = null;
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", throwable29);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", throwable29);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray26, throwable29);
        java.lang.Object[] objArray44 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("", objArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray44);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray44);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray44);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray44);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray26, (java.lang.Throwable) convergenceException49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("", objArray67);
        org.apache.commons.math.ode.IntegratorException integratorException69 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray67);
        java.lang.Object[] objArray70 = new java.lang.Object[] { 2, switchingFunctionsHandler58, 1, objArray67 };
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException73);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray67, (java.lang.Throwable) mathException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray67, (java.lang.Throwable) functionEvaluationException77);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException80 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray67, (java.lang.Throwable) functionEvaluationException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray67);
        java.lang.String str83 = functionEvaluationException82.getPattern();
        java.lang.Object[] objArray84 = functionEvaluationException82.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "Evaluation failed for argument = 100", objArray26, (java.lang.Throwable) functionEvaluationException82);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) strArray13, (java.lang.Throwable) functionEvaluationException85);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = -1", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException88 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException89 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray13);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[1, a, 10, a, -1]");
    }

    @Test
    public void test09850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09850");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray13 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray13);
        java.lang.Object[] objArray16 = new java.lang.Object[] { 2, switchingFunctionsHandler4, 1, objArray13 };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray13, (java.lang.Throwable) mathException20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException21);
        java.lang.Object[] objArray23 = integratorException22.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) integratorException22);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException25);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
    }

    @Test
    public void test09851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09851");
        java.lang.Object[] objArray11 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", objArray11);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray11, (java.lang.Throwable) convergenceException13);
        java.lang.Object[] objArray15 = mathException14.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray32 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("", objArray32);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray32);
        java.lang.Object[] objArray35 = new java.lang.Object[] { 2, switchingFunctionsHandler23, 1, objArray32 };
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) mathException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) functionEvaluationException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray32);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray15, (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", objArray15);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException52);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray35);
    }

    @Test
    public void test09852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09852");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray23 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("", objArray23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray23);
        java.lang.Object[] objArray26 = new java.lang.Object[] { 2, switchingFunctionsHandler14, 1, objArray23 };
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray23, (java.lang.Throwable) mathException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray23, (java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray23, (java.lang.Throwable) functionEvaluationException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray23);
        java.lang.String str39 = functionEvaluationException38.getPattern();
        java.lang.Object[] objArray40 = functionEvaluationException38.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double43 = functionEvaluationException42.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray40, (java.lang.Throwable) functionEvaluationException42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray59 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("", objArray59);
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray59);
        java.lang.Object[] objArray62 = new java.lang.Object[] { 2, switchingFunctionsHandler50, 1, objArray59 };
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException65);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray59, (java.lang.Throwable) mathException66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray59, (java.lang.Throwable) functionEvaluationException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray59, (java.lang.Throwable) functionEvaluationException72);
        java.lang.Object[] objArray81 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("", objArray81);
        org.apache.commons.math.ode.IntegratorException integratorException83 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException83);
        java.lang.Throwable[] throwableArray85 = integratorException83.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException86 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException83);
        functionEvaluationException72.addSuppressed((java.lang.Throwable) integratorException83);
        double double88 = functionEvaluationException72.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException();
        functionEvaluationException72.addSuppressed((java.lang.Throwable) convergenceException89);
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException89);
        org.apache.commons.math.ConvergenceException convergenceException92 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray40, (java.lang.Throwable) convergenceException89);
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException", objArray40);
        org.apache.commons.math.ConvergenceException convergenceException94 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException95 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100", objArray40);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1.0d) + "'", double43 == (-1.0d));
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 100.0d + "'", double88 == 100.0d);
    }

    @Test
    public void test09853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09853");
        java.lang.Object[] objArray10 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("", objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray10);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray39 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("", objArray39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray39);
        java.lang.Object[] objArray42 = new java.lang.Object[] { 2, switchingFunctionsHandler30, 1, objArray39 };
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray39, (java.lang.Throwable) mathException46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray39, (java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray39, (java.lang.Throwable) functionEvaluationException52);
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray22, (java.lang.Throwable) functionEvaluationException52);
        java.lang.Throwable[] throwableArray55 = functionEvaluationException52.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, (java.lang.Throwable) functionEvaluationException52);
        functionEvaluationException12.addSuppressed((java.lang.Throwable) functionEvaluationException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) functionEvaluationException52);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException52);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException52);
        double double61 = functionEvaluationException52.getArgument();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 100.0d + "'", double61 == 100.0d);
    }

    @Test
    public void test09854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09854");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (byte) 0, 0.0d, (int) ' ');
        boolean boolean22 = switchingFunctionsHandler0.stop();
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, (double) 0.0f, 0.0d, (int) '#');
        double double29 = switchingFunctionsHandler0.getEventTime();
        double double30 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        switchingFunctionsHandler0.add(switchingFunction31, 2.0d, (double) 100.0f, 100);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean37 = switchingFunctionsHandler0.evaluateStep(stepInterpolator36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test09855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09855");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray21 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("", objArray21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray21);
        java.lang.Object[] objArray24 = new java.lang.Object[] { 2, switchingFunctionsHandler12, 1, objArray21 };
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) mathException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) integratorException35);
        java.lang.Object[] objArray37 = functionEvaluationException36.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", objArray37);
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray52);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray52);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray52);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray52);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException65);
        java.lang.Object[] objArray67 = functionEvaluationException65.getArguments();
        java.lang.Throwable throwable68 = null;
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", objArray67, throwable68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException72);
        double double74 = functionEvaluationException72.getArgument();
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) functionEvaluationException72);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray67, (java.lang.Throwable) functionEvaluationException72);
        org.apache.commons.math.ode.IntegratorException integratorException77 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException72);
        functionEvaluationException61.addSuppressed((java.lang.Throwable) functionEvaluationException72);
        double double79 = functionEvaluationException61.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray52, (java.lang.Throwable) functionEvaluationException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException", objArray37, (java.lang.Throwable) convergenceException80);
        java.lang.Object[] objArray82 = functionEvaluationException81.getArguments();
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!", objArray82);
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray82);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException84);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[100.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 52.0d + "'", double74 == 52.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-1.0d) + "'", double79 == (-1.0d));
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
    }

    @Test
    public void test09856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09856");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        boolean boolean16 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, 100.0d, (double) 100, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean24 = switchingFunctionsHandler23.isEmpty();
        double[] doubleArray27 = new double[] { 100.0d };
        boolean boolean28 = switchingFunctionsHandler23.reset((double) 0L, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean31 = switchingFunctionsHandler30.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = switchingFunctionsHandler30.evaluateStep(stepInterpolator32);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean36 = switchingFunctionsHandler35.isEmpty();
        double[] doubleArray39 = new double[] { 100.0d };
        boolean boolean40 = switchingFunctionsHandler35.reset((double) 0L, doubleArray39);
        boolean boolean41 = switchingFunctionsHandler30.reset((double) 1, doubleArray39);
        boolean boolean42 = switchingFunctionsHandler23.reset((double) 100, doubleArray39);
        double double43 = switchingFunctionsHandler23.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean46 = switchingFunctionsHandler45.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler45.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean51 = switchingFunctionsHandler50.isEmpty();
        double[] doubleArray54 = new double[] { 100.0d };
        boolean boolean55 = switchingFunctionsHandler50.reset((double) 0L, doubleArray54);
        switchingFunctionsHandler45.stepAccepted((double) (byte) 10, doubleArray54);
        switchingFunctionsHandler23.stepAccepted(0.0d, doubleArray54);
        boolean boolean58 = switchingFunctionsHandler23.isEmpty();
        boolean boolean59 = switchingFunctionsHandler23.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        switchingFunctionsHandler61.add(switchingFunction62, (double) (-1), (double) 3, 0);
        double[] doubleArray74 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean75 = switchingFunctionsHandler61.reset((double) (-1), doubleArray74);
        switchingFunctionsHandler23.stepAccepted((double) 'a', doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((double) 100L, doubleArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test09857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09857");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (byte) 0, 0.0d, (int) ' ');
        boolean boolean22 = switchingFunctionsHandler0.stop();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        double double25 = switchingFunctionsHandler0.getEventTime();
        boolean boolean26 = switchingFunctionsHandler0.stop();
        boolean boolean27 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test09858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09858");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "org.apache.commons.math.MathException: hi!");
        double double5 = functionEvaluationException4.getArgument();
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "hi!", (java.lang.Throwable) mathException8);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray24 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("", objArray24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray24);
        java.lang.Object[] objArray27 = new java.lang.Object[] { 2, switchingFunctionsHandler15, 1, objArray24 };
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray24, (java.lang.Throwable) mathException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray24, (java.lang.Throwable) functionEvaluationException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray24, (java.lang.Throwable) functionEvaluationException37);
        java.lang.Object[] objArray46 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("", objArray46);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray46);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException48);
        java.lang.Throwable[] throwableArray50 = integratorException48.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException48);
        functionEvaluationException37.addSuppressed((java.lang.Throwable) integratorException48);
        functionEvaluationException9.addSuppressed((java.lang.Throwable) integratorException48);
        double double54 = functionEvaluationException9.getArgument();
        functionEvaluationException4.addSuppressed((java.lang.Throwable) functionEvaluationException9);
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray67);
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray67);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("", strArray67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray67);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException71);
        functionEvaluationException4.addSuppressed((java.lang.Throwable) convergenceException72);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException4);
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) derivativeException75);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 100.0d + "'", double5 == 100.0d);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertNotNull(strArray67);
    }

    @Test
    public void test09859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09859");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException12);
        java.lang.Object[] objArray14 = mathException13.getArguments();
        java.lang.Throwable throwable15 = null;
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", objArray14, throwable15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray14);
        java.lang.Object[] objArray26 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("", objArray26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray26, (java.lang.Throwable) convergenceException28);
        java.lang.Throwable[] throwableArray30 = mathException29.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray14, (java.lang.Throwable) mathException29);
        java.lang.Object[] objArray42 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", objArray42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "", (java.lang.Throwable) convergenceException43);
        double double45 = functionEvaluationException44.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.MathException", (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray14, (java.lang.Throwable) functionEvaluationException44);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray56);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("", objArray73);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray73);
        java.lang.Object[] objArray76 = new java.lang.Object[] { 2, switchingFunctionsHandler64, 1, objArray73 };
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException79);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray73, (java.lang.Throwable) mathException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray73, (java.lang.Throwable) functionEvaluationException83);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray73, (java.lang.Throwable) functionEvaluationException86);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray56, (java.lang.Throwable) functionEvaluationException86);
        double double89 = functionEvaluationException86.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException86);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.MathException: ", objArray14, (java.lang.Throwable) functionEvaluationException86);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("", (java.lang.Throwable) functionEvaluationException91);
        org.apache.commons.math.ConvergenceException convergenceException93 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) mathException92);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException92);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 97.0d + "'", double45 == 97.0d);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 100.0d + "'", double89 == 100.0d);
    }

    @Test
    public void test09860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09860");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        boolean boolean20 = switchingFunctionsHandler0.stop();
        double double21 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler0.add(switchingFunction22, 2.0d, 1.0d, (int) (short) 100);
        double double27 = switchingFunctionsHandler0.getEventTime();
        boolean boolean28 = switchingFunctionsHandler0.stop();
        double[] doubleArray30 = null;
        boolean boolean31 = switchingFunctionsHandler0.reset((double) '#', doubleArray30);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        switchingFunctionsHandler0.add(switchingFunction32, (double) 10.0f, (double) (short) 10, (int) (byte) 1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean38 = switchingFunctionsHandler0.evaluateStep(stepInterpolator37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test09861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09861");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean9 = switchingFunctionsHandler8.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler8.add(switchingFunction10, (double) (-1), (double) 'a', (int) (short) 0);
        double[] doubleArray16 = null;
        boolean boolean17 = switchingFunctionsHandler8.reset((double) 3, doubleArray16);
        double double18 = switchingFunctionsHandler8.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler20.add(switchingFunction21, (double) (-1), (double) 3, 0);
        double[] doubleArray33 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean34 = switchingFunctionsHandler20.reset((double) (-1), doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean37 = switchingFunctionsHandler36.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler36.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        double[] doubleArray45 = new double[] { 100.0d };
        boolean boolean46 = switchingFunctionsHandler41.reset((double) 0L, doubleArray45);
        switchingFunctionsHandler36.stepAccepted((double) (byte) 10, doubleArray45);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        switchingFunctionsHandler36.add(switchingFunction48, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.isEmpty();
        double[] doubleArray58 = new double[] { 100.0d };
        boolean boolean59 = switchingFunctionsHandler54.reset((double) 0L, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean62 = switchingFunctionsHandler61.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler61.evaluateStep(stepInterpolator63);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean67 = switchingFunctionsHandler66.isEmpty();
        double[] doubleArray70 = new double[] { 100.0d };
        boolean boolean71 = switchingFunctionsHandler66.reset((double) 0L, doubleArray70);
        boolean boolean72 = switchingFunctionsHandler61.reset((double) 1, doubleArray70);
        boolean boolean73 = switchingFunctionsHandler54.reset((double) 100, doubleArray70);
        boolean boolean74 = switchingFunctionsHandler36.reset((double) (byte) -1, doubleArray70);
        boolean boolean75 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray70);
        boolean boolean76 = switchingFunctionsHandler8.reset((double) (byte) 10, doubleArray70);
        boolean boolean77 = switchingFunctionsHandler0.reset((double) (-1L), doubleArray70);
        double double78 = switchingFunctionsHandler0.getEventTime();
        boolean boolean79 = switchingFunctionsHandler0.isEmpty();
        double double80 = switchingFunctionsHandler0.getEventTime();
        double double81 = switchingFunctionsHandler0.getEventTime();
        double double82 = switchingFunctionsHandler0.getEventTime();
        double double83 = switchingFunctionsHandler0.getEventTime();
        boolean boolean84 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test09862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09862");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        double double16 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean25 = switchingFunctionsHandler24.isEmpty();
        double[] doubleArray28 = new double[] { 100.0d };
        boolean boolean29 = switchingFunctionsHandler24.reset((double) 0L, doubleArray28);
        boolean boolean30 = switchingFunctionsHandler0.reset((double) 100L, doubleArray28);
        boolean boolean31 = switchingFunctionsHandler0.isEmpty();
        double double32 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler0.add(switchingFunction33, (double) 0L, (double) (short) 10, 0);
        boolean boolean38 = switchingFunctionsHandler0.stop();
        boolean boolean39 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler41.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean47 = switchingFunctionsHandler46.isEmpty();
        double[] doubleArray50 = new double[] { 100.0d };
        boolean boolean51 = switchingFunctionsHandler46.reset((double) 0L, doubleArray50);
        switchingFunctionsHandler41.stepAccepted((double) (byte) 10, doubleArray50);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.isEmpty();
        double[] doubleArray58 = new double[] { 100.0d };
        boolean boolean59 = switchingFunctionsHandler54.reset((double) 0L, doubleArray58);
        switchingFunctionsHandler41.stepAccepted(100.0d, doubleArray58);
        double double61 = switchingFunctionsHandler41.getEventTime();
        double double62 = switchingFunctionsHandler41.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        switchingFunctionsHandler64.add(switchingFunction65, (double) (-1), (double) 3, 0);
        double[] doubleArray77 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean78 = switchingFunctionsHandler64.reset((double) (-1), doubleArray77);
        switchingFunctionsHandler41.stepAccepted((double) 100L, doubleArray77);
        boolean boolean80 = switchingFunctionsHandler0.reset((double) 100, doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test09863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09863");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray30);
        java.lang.Object[] objArray33 = new java.lang.Object[] { 2, switchingFunctionsHandler21, 1, objArray30 };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) mathException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray13, (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray13);
        java.lang.Object[] objArray54 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("", objArray54);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray54);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException56);
        java.lang.Throwable[] throwableArray58 = integratorException56.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException56);
        java.lang.Object[] objArray60 = integratorException59.getArguments();
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray13, (java.lang.Throwable) integratorException59);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: ", strArray13);
        java.lang.Object[] objArray77 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("", objArray77);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray77);
        org.apache.commons.math.ode.IntegratorException integratorException80 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray77);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("", objArray77, (java.lang.Throwable) functionEvaluationException83);
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.String str87 = convergenceException86.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException88 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray77, (java.lang.Throwable) convergenceException86);
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) functionEvaluationException88);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException88);
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray13, (java.lang.Throwable) functionEvaluationException88);
        org.apache.commons.math.ode.DerivativeException derivativeException92 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        java.lang.String str93 = derivativeException92.getPattern();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
    }

    @Test
    public void test09864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09864");
        java.lang.Object[] objArray15 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        double double22 = functionEvaluationException21.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException21);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("", objArray37);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray37);
        java.lang.Object[] objArray40 = new java.lang.Object[] { 2, switchingFunctionsHandler28, 1, objArray37 };
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray37, (java.lang.Throwable) mathException44);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException44);
        mathException24.addSuppressed((java.lang.Throwable) integratorException46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray15, (java.lang.Throwable) integratorException46);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = {0}", objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException(0.0d);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", objArray15, (java.lang.Throwable) functionEvaluationException51);
        java.lang.Throwable throwable53 = null;
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException(throwable53);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!");
        mathException54.addSuppressed((java.lang.Throwable) mathException56);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException54);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("", objArray15, (java.lang.Throwable) mathException54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray15);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException60);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException61);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray40);
    }

    @Test
    public void test09865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09865");
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "hi!", (java.lang.Throwable) mathException9);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException10);
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("", objArray28);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray28);
        java.lang.Object[] objArray31 = new java.lang.Object[] { 2, switchingFunctionsHandler19, 1, objArray28 };
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray28, (java.lang.Throwable) mathException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray28, (java.lang.Throwable) functionEvaluationException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray28, (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) functionEvaluationException41);
        java.lang.Throwable throwable44 = null;
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", (java.lang.Object[]) throwableArray12, throwable44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray31);
    }

    @Test
    public void test09866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09866");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        boolean boolean16 = switchingFunctionsHandler0.stop();
        double double17 = switchingFunctionsHandler0.getEventTime();
        boolean boolean18 = switchingFunctionsHandler0.stop();
        double double19 = switchingFunctionsHandler0.getEventTime();
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }

    @Test
    public void test09867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09867");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) 0L, 1.0d, (int) (short) 1);
        double double9 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        double[] doubleArray18 = new double[] { 100.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) 0L, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler21.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean27 = switchingFunctionsHandler26.isEmpty();
        double[] doubleArray30 = new double[] { 100.0d };
        boolean boolean31 = switchingFunctionsHandler26.reset((double) 0L, doubleArray30);
        boolean boolean32 = switchingFunctionsHandler21.reset((double) 1, doubleArray30);
        boolean boolean33 = switchingFunctionsHandler14.reset((double) 100, doubleArray30);
        double double34 = switchingFunctionsHandler14.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean37 = switchingFunctionsHandler36.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler36.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        double[] doubleArray45 = new double[] { 100.0d };
        boolean boolean46 = switchingFunctionsHandler41.reset((double) 0L, doubleArray45);
        switchingFunctionsHandler36.stepAccepted((double) (byte) 10, doubleArray45);
        switchingFunctionsHandler14.stepAccepted(0.0d, doubleArray45);
        switchingFunctionsHandler11.stepAccepted((double) (short) 0, doubleArray45);
        boolean boolean50 = switchingFunctionsHandler0.reset((double) 100, doubleArray45);
        boolean boolean51 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        switchingFunctionsHandler0.add(switchingFunction52, 0.0d, 97.0d, (int) (short) 1);
        boolean boolean57 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test09868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09868");
        java.lang.Object[] objArray1 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray20 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray20);
        java.lang.Object[] objArray23 = new java.lang.Object[] { 2, switchingFunctionsHandler11, 1, objArray20 };
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray20, (java.lang.Throwable) mathException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException28);
        java.lang.Object[] objArray30 = functionEvaluationException28.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        double double34 = functionEvaluationException33.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray49 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("", objArray49);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray49);
        java.lang.Object[] objArray52 = new java.lang.Object[] { 2, switchingFunctionsHandler40, 1, objArray49 };
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray49, (java.lang.Throwable) mathException56);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException56);
        mathException36.addSuppressed((java.lang.Throwable) integratorException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) mathException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "");
        java.lang.Object[] objArray64 = functionEvaluationException63.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100", objArray30, (java.lang.Throwable) integratorException65);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException(3.0d, (java.lang.Throwable) integratorException65);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray1, (java.lang.Throwable) integratorException65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
    }

    @Test
    public void test09869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09869");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler0.add(switchingFunction21, (double) 0.0f, (double) 10, (int) (byte) 0);
        boolean boolean26 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean29 = switchingFunctionsHandler28.isEmpty();
        boolean boolean30 = switchingFunctionsHandler28.stop();
        double double31 = switchingFunctionsHandler28.getEventTime();
        boolean boolean32 = switchingFunctionsHandler28.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler28.add(switchingFunction33, (double) 0L, (double) 1.0f, (int) (short) 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean40 = switchingFunctionsHandler39.isEmpty();
        double[] doubleArray43 = new double[] { 100.0d };
        boolean boolean44 = switchingFunctionsHandler39.reset((double) 0L, doubleArray43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean47 = switchingFunctionsHandler46.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = switchingFunctionsHandler46.evaluateStep(stepInterpolator48);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean52 = switchingFunctionsHandler51.isEmpty();
        double[] doubleArray55 = new double[] { 100.0d };
        boolean boolean56 = switchingFunctionsHandler51.reset((double) 0L, doubleArray55);
        boolean boolean57 = switchingFunctionsHandler46.reset((double) 1, doubleArray55);
        boolean boolean58 = switchingFunctionsHandler39.reset((double) 100, doubleArray55);
        double double59 = switchingFunctionsHandler39.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean62 = switchingFunctionsHandler61.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler61.evaluateStep(stepInterpolator63);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean67 = switchingFunctionsHandler66.isEmpty();
        double[] doubleArray70 = new double[] { 100.0d };
        boolean boolean71 = switchingFunctionsHandler66.reset((double) 0L, doubleArray70);
        switchingFunctionsHandler61.stepAccepted((double) (byte) 10, doubleArray70);
        switchingFunctionsHandler39.stepAccepted(0.0d, doubleArray70);
        double double74 = switchingFunctionsHandler39.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction75 = null;
        switchingFunctionsHandler39.add(switchingFunction75, (double) 10L, (double) 'a', (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler81 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean82 = switchingFunctionsHandler81.isEmpty();
        double[] doubleArray85 = new double[] { 100.0d };
        boolean boolean86 = switchingFunctionsHandler81.reset((double) 0L, doubleArray85);
        boolean boolean87 = switchingFunctionsHandler39.reset((double) (byte) 1, doubleArray85);
        boolean boolean88 = switchingFunctionsHandler28.reset((double) (short) 100, doubleArray85);
        boolean boolean89 = switchingFunctionsHandler0.reset((double) (-1.0f), doubleArray85);
        double double90 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction91 = null;
        switchingFunctionsHandler0.add(switchingFunction91, (double) (short) 0, (double) 0, (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
    }

    @Test
    public void test09870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09870");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, (double) (short) 100, (double) (-1L), (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler22.add(switchingFunction24, (double) (-1.0f), 10.0d, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean31 = switchingFunctionsHandler30.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = switchingFunctionsHandler30.evaluateStep(stepInterpolator32);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean36 = switchingFunctionsHandler35.isEmpty();
        double[] doubleArray39 = new double[] { 100.0d };
        boolean boolean40 = switchingFunctionsHandler35.reset((double) 0L, doubleArray39);
        switchingFunctionsHandler30.stepAccepted((double) (byte) 10, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean44 = switchingFunctionsHandler43.isEmpty();
        double[] doubleArray47 = new double[] { 100.0d };
        boolean boolean48 = switchingFunctionsHandler43.reset((double) 0L, doubleArray47);
        switchingFunctionsHandler30.stepAccepted(100.0d, doubleArray47);
        double double50 = switchingFunctionsHandler30.getEventTime();
        double double51 = switchingFunctionsHandler30.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        switchingFunctionsHandler53.add(switchingFunction54, (double) (-1), (double) 3, 0);
        double[] doubleArray66 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean67 = switchingFunctionsHandler53.reset((double) (-1), doubleArray66);
        switchingFunctionsHandler30.stepAccepted((double) 100L, doubleArray66);
        boolean boolean69 = switchingFunctionsHandler22.reset((double) (short) 0, doubleArray66);
        boolean boolean70 = switchingFunctionsHandler0.reset((double) '#', doubleArray66);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction71 = null;
        switchingFunctionsHandler0.add(switchingFunction71, (double) ' ', (double) 0.0f, (-1));
        double double76 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
    }

    @Test
    public void test09871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09871");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        java.lang.Object[] objArray18 = derivativeException17.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray33 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("", objArray33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray33);
        java.lang.Object[] objArray36 = new java.lang.Object[] { 2, switchingFunctionsHandler24, 1, objArray33 };
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) mathException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) functionEvaluationException46);
        java.lang.Object[] objArray55 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("", objArray55);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray55);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException57);
        java.lang.Throwable[] throwableArray59 = integratorException57.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException57);
        functionEvaluationException46.addSuppressed((java.lang.Throwable) integratorException57);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("hi!", objArray18, (java.lang.Throwable) integratorException57);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", objArray18);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray18);
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray18);
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", objArray18);
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray81);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray81);
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException("", strArray81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray81);
        org.apache.commons.math.ode.DerivativeException derivativeException86 = new org.apache.commons.math.ode.DerivativeException("", strArray81);
        org.apache.commons.math.ode.DerivativeException derivativeException87 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException88 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Throwable) derivativeException87);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray18, (java.lang.Throwable) functionEvaluationException88);
        org.apache.commons.math.MathException mathException90 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) mathException90);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(strArray81);
    }

    @Test
    public void test09872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09872");
        java.lang.Object[] objArray16 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray16);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", objArray16, (java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray38 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("", objArray38);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray38);
        java.lang.Object[] objArray41 = new java.lang.Object[] { 2, switchingFunctionsHandler29, 1, objArray38 };
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray38, (java.lang.Throwable) mathException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray38, (java.lang.Throwable) functionEvaluationException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray38, (java.lang.Throwable) functionEvaluationException51);
        java.lang.Object[] objArray60 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("", objArray60);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray60);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException62);
        java.lang.Throwable[] throwableArray64 = integratorException62.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException62);
        functionEvaluationException51.addSuppressed((java.lang.Throwable) integratorException62);
        double double67 = functionEvaluationException51.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException", objArray16, (java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) convergenceException68);
        java.lang.Object[] objArray70 = functionEvaluationException69.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", objArray70);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) functionEvaluationException71);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 100.0d + "'", double67 == 100.0d);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
    }

    @Test
    public void test09873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09873");
        java.lang.Object[] objArray16 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray16);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", objArray16, (java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException22);
        java.lang.Object[] objArray25 = functionEvaluationException22.getArguments();
        java.lang.Throwable[] throwableArray26 = functionEvaluationException22.getSuppressed();
        java.lang.Object[] objArray27 = functionEvaluationException22.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", objArray41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray41);
        java.lang.Object[] objArray44 = new java.lang.Object[] { 2, switchingFunctionsHandler32, 1, objArray41 };
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray41, (java.lang.Throwable) mathException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException49);
        java.lang.Object[] objArray51 = functionEvaluationException49.getArguments();
        double double52 = functionEvaluationException49.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException63);
        java.lang.Object[] objArray65 = mathException64.getArguments();
        java.lang.Throwable throwable66 = null;
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("hi!", objArray65, throwable66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray65);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: ", objArray65);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: hi!", objArray65);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "Evaluation failed for argument = {0}", objArray27, (java.lang.Throwable) convergenceException70);
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray27);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
    }

    @Test
    public void test09874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09874");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray2 = null;
        switchingFunctionsHandler0.stepAccepted((double) 0, doubleArray2);
        double double4 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler0.add(switchingFunction5, 35.0d, (double) (short) -1, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, (double) 1.0f, (double) 3, (int) (short) -1);
        double double15 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler17.add(switchingFunction18, (double) (-1), (double) 3, 0);
        double[] doubleArray30 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean31 = switchingFunctionsHandler17.reset((double) (-1), doubleArray30);
        boolean boolean32 = switchingFunctionsHandler17.isEmpty();
        boolean boolean33 = switchingFunctionsHandler17.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler17.add(switchingFunction34, (double) (byte) 0, 0.0d, (int) ' ');
        double[] doubleArray43 = new double[] { 1.0f, (-1.0f), 100.0d };
        boolean boolean44 = switchingFunctionsHandler17.reset((double) 1L, doubleArray43);
        boolean boolean45 = switchingFunctionsHandler0.reset(Double.NaN, doubleArray43);
        boolean boolean46 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test09875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09875");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        boolean boolean16 = switchingFunctionsHandler0.stop();
        double double17 = switchingFunctionsHandler0.getEventTime();
        boolean boolean18 = switchingFunctionsHandler0.stop();
        boolean boolean19 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler0.add(switchingFunction20, (double) 0L, (double) 10.0f, (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean27 = switchingFunctionsHandler26.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler26.evaluateStep(stepInterpolator28);
        boolean boolean30 = switchingFunctionsHandler26.stop();
        double double31 = switchingFunctionsHandler26.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        switchingFunctionsHandler26.add(switchingFunction32, (double) 'a', (double) 0L, (int) 'a');
        boolean boolean37 = switchingFunctionsHandler26.stop();
        boolean boolean38 = switchingFunctionsHandler26.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean41 = switchingFunctionsHandler40.isEmpty();
        double[] doubleArray44 = new double[] { 100.0d };
        boolean boolean45 = switchingFunctionsHandler40.reset((double) 0L, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler40.stop();
        double double47 = switchingFunctionsHandler40.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean50 = switchingFunctionsHandler49.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler49.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.isEmpty();
        double[] doubleArray58 = new double[] { 100.0d };
        boolean boolean59 = switchingFunctionsHandler54.reset((double) 0L, doubleArray58);
        switchingFunctionsHandler49.stepAccepted((double) (byte) 10, doubleArray58);
        boolean boolean61 = switchingFunctionsHandler40.reset((double) 1.0f, doubleArray58);
        boolean boolean62 = switchingFunctionsHandler26.reset((double) 'a', doubleArray58);
        boolean boolean63 = switchingFunctionsHandler0.reset(0.0d, doubleArray58);
        boolean boolean64 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        switchingFunctionsHandler0.add(switchingFunction65, (double) 10, (double) 1.0f, 0);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test09876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09876");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray32 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("", objArray32);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray32);
        java.lang.Object[] objArray35 = new java.lang.Object[] { 2, switchingFunctionsHandler23, 1, objArray32 };
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) mathException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) functionEvaluationException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray15, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray68 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("", objArray68);
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray68);
        java.lang.Object[] objArray71 = new java.lang.Object[] { 2, switchingFunctionsHandler59, 1, objArray68 };
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray68, (java.lang.Throwable) mathException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray68, (java.lang.Throwable) functionEvaluationException78);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray68, (java.lang.Throwable) functionEvaluationException81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray68);
        java.lang.String str84 = functionEvaluationException83.getPattern();
        java.lang.Object[] objArray85 = functionEvaluationException83.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: hi!", objArray85);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException86);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray15, (java.lang.Throwable) convergenceException86);
        org.apache.commons.math.ode.IntegratorException integratorException89 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 2", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException90 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException91 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 52", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[1, a, 10, a, -1]");
    }

    @Test
    public void test09877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09877");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        boolean boolean25 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = switchingFunctionsHandler27.evaluateStep(stepInterpolator29);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean33 = switchingFunctionsHandler32.isEmpty();
        double[] doubleArray36 = new double[] { 100.0d };
        boolean boolean37 = switchingFunctionsHandler32.reset((double) 0L, doubleArray36);
        switchingFunctionsHandler27.stepAccepted((double) (byte) 10, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        switchingFunctionsHandler27.add(switchingFunction39, (double) (-1), (double) 100.0f, 10);
        boolean boolean44 = switchingFunctionsHandler27.isEmpty();
        double double45 = switchingFunctionsHandler27.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        switchingFunctionsHandler27.add(switchingFunction46, 35.0d, (double) (byte) 100, 3);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        switchingFunctionsHandler52.add(switchingFunction53, (double) (-1), (double) 3, 0);
        double[] doubleArray65 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean66 = switchingFunctionsHandler52.reset((double) (-1), doubleArray65);
        boolean boolean67 = switchingFunctionsHandler52.isEmpty();
        double double68 = switchingFunctionsHandler52.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        switchingFunctionsHandler52.add(switchingFunction69, (double) (-1.0f), 0.0d, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction76 = null;
        switchingFunctionsHandler75.add(switchingFunction76, (double) (-1), (double) 3, 0);
        double[] doubleArray88 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean89 = switchingFunctionsHandler75.reset((double) (-1), doubleArray88);
        boolean boolean90 = switchingFunctionsHandler52.reset(0.0d, doubleArray88);
        boolean boolean91 = switchingFunctionsHandler27.reset(0.0d, doubleArray88);
        boolean boolean92 = switchingFunctionsHandler0.reset(100.0d, doubleArray88);
        boolean boolean93 = switchingFunctionsHandler0.isEmpty();
        boolean boolean94 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test09878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09878");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler0.evaluateStep(stepInterpolator20);
        double double22 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler0.add(switchingFunction23, 52.0d, (double) ' ', 100);
        boolean boolean28 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler0.add(switchingFunction29, (double) 10, Double.NaN, (-1));
        double double34 = switchingFunctionsHandler0.getEventTime();
        boolean boolean35 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test09879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09879");
        java.lang.Object[] objArray8 = new java.lang.Object[] { 100.0f, (byte) 10 };
        org.apache.commons.math.MathException mathException9 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "", objArray8);
        java.lang.Throwable[] throwableArray11 = functionEvaluationException10.getSuppressed();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", objArray27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray27);
        java.lang.Object[] objArray30 = new java.lang.Object[] { 2, switchingFunctionsHandler18, 1, objArray27 };
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) mathException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException40);
        java.lang.Object[] objArray49 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("", objArray49);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray49);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException51);
        java.lang.Throwable[] throwableArray53 = integratorException51.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException51);
        functionEvaluationException40.addSuppressed((java.lang.Throwable) integratorException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException51);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException63);
        java.lang.Object[] objArray65 = mathException64.getArguments();
        java.lang.Throwable throwable66 = null;
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("hi!", objArray65, throwable66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray65);
        org.apache.commons.math.ode.IntegratorException integratorException69 = new org.apache.commons.math.ode.IntegratorException("", objArray65);
        integratorException51.addSuppressed((java.lang.Throwable) integratorException69);
        java.lang.Object[] objArray71 = integratorException51.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException51);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ");
        derivativeException72.addSuppressed((java.lang.Throwable) convergenceException74);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) derivativeException72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException77);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[100.0, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[100.0, 10]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[1, a, 10, a, -1]");
    }

    @Test
    public void test09880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09880");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray16 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", objArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray16);
        java.lang.Object[] objArray19 = new java.lang.Object[] { 2, switchingFunctionsHandler7, 1, objArray16 };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray16, (java.lang.Throwable) mathException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray16, (java.lang.Throwable) functionEvaluationException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray16, (java.lang.Throwable) functionEvaluationException29);
        java.lang.Object[] objArray38 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("", objArray38);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray38);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException40);
        java.lang.Throwable[] throwableArray42 = integratorException40.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException40);
        functionEvaluationException29.addSuppressed((java.lang.Throwable) integratorException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException40);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException52);
        java.lang.Object[] objArray54 = mathException53.getArguments();
        java.lang.Throwable throwable55 = null;
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!", objArray54, throwable55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray54);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("", objArray54);
        integratorException40.addSuppressed((java.lang.Throwable) integratorException58);
        java.lang.Object[] objArray60 = integratorException40.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100");
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", objArray60, (java.lang.Throwable) functionEvaluationException63);
        java.lang.Throwable[] throwableArray65 = convergenceException64.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException64);
        java.lang.Throwable[] throwableArray67 = convergenceException64.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException64);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray67);
    }

    @Test
    public void test09881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09881");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        double double16 = switchingFunctionsHandler0.getEventTime();
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        boolean boolean18 = switchingFunctionsHandler0.isEmpty();
        boolean boolean19 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test09882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09882");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException12);
        java.lang.Object[] objArray14 = mathException13.getArguments();
        java.lang.Throwable throwable15 = null;
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", objArray14, throwable15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray14);
        java.lang.Object[] objArray26 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("", objArray26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray26, (java.lang.Throwable) convergenceException28);
        java.lang.Throwable[] throwableArray30 = mathException29.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray14, (java.lang.Throwable) mathException29);
        java.lang.Object[] objArray42 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", objArray42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "", (java.lang.Throwable) convergenceException43);
        double double45 = functionEvaluationException44.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.MathException", (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray14, (java.lang.Throwable) functionEvaluationException44);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray56);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("", objArray73);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray73);
        java.lang.Object[] objArray76 = new java.lang.Object[] { 2, switchingFunctionsHandler64, 1, objArray73 };
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException79);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray73, (java.lang.Throwable) mathException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray73, (java.lang.Throwable) functionEvaluationException83);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray73, (java.lang.Throwable) functionEvaluationException86);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray56, (java.lang.Throwable) functionEvaluationException86);
        double double89 = functionEvaluationException86.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException86);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.MathException: ", objArray14, (java.lang.Throwable) functionEvaluationException86);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException("", (java.lang.Throwable) functionEvaluationException91);
        org.apache.commons.math.ConvergenceException convergenceException93 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) mathException92);
        java.lang.Class<?> wildcardClass94 = mathException92.getClass();
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 97.0d + "'", double45 == 97.0d);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 100.0d + "'", double89 == 100.0d);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test09883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09883");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("", objArray37);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray37);
        java.lang.Object[] objArray40 = new java.lang.Object[] { 2, switchingFunctionsHandler28, 1, objArray37 };
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray37, (java.lang.Throwable) mathException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray37, (java.lang.Throwable) functionEvaluationException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray37, (java.lang.Throwable) functionEvaluationException50);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray37);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray18, (java.lang.Throwable) convergenceException53);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException59);
        java.lang.Throwable[] throwableArray62 = functionEvaluationException59.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray18, (java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray18);
        java.lang.String str69 = derivativeException68.getPattern();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str69, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test09884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09884");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler0.add(switchingFunction25, (double) (-1), 0.0d, (int) (short) 10);
        boolean boolean30 = switchingFunctionsHandler0.isEmpty();
        boolean boolean31 = switchingFunctionsHandler0.isEmpty();
        boolean boolean32 = switchingFunctionsHandler0.stop();
        boolean boolean33 = switchingFunctionsHandler0.stop();
        boolean boolean34 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean37 = switchingFunctionsHandler36.isEmpty();
        boolean boolean38 = switchingFunctionsHandler36.stop();
        double double39 = switchingFunctionsHandler36.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        switchingFunctionsHandler36.add(switchingFunction40, (double) (byte) -1, (-1.0d), (int) 'a');
        boolean boolean45 = switchingFunctionsHandler36.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        switchingFunctionsHandler36.add(switchingFunction46, (double) (short) 0, (double) '#', (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        switchingFunctionsHandler36.add(switchingFunction51, (double) (byte) -1, Double.NaN, 2);
        boolean boolean56 = switchingFunctionsHandler36.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean59 = switchingFunctionsHandler58.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler58.evaluateStep(stepInterpolator60);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler63 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean64 = switchingFunctionsHandler63.isEmpty();
        double[] doubleArray67 = new double[] { 100.0d };
        boolean boolean68 = switchingFunctionsHandler63.reset((double) 0L, doubleArray67);
        switchingFunctionsHandler58.stepAccepted((double) (byte) 10, doubleArray67);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        switchingFunctionsHandler58.add(switchingFunction70, (double) (-1), (double) 100.0f, 10);
        double double75 = switchingFunctionsHandler58.getEventTime();
        double double76 = switchingFunctionsHandler58.getEventTime();
        boolean boolean77 = switchingFunctionsHandler58.isEmpty();
        double double78 = switchingFunctionsHandler58.getEventTime();
        boolean boolean79 = switchingFunctionsHandler58.isEmpty();
        double[] doubleArray84 = new double[] { 100.0f, 0.0d, 1.0f };
        boolean boolean85 = switchingFunctionsHandler58.reset(0.0d, doubleArray84);
        boolean boolean86 = switchingFunctionsHandler36.reset((double) (byte) 100, doubleArray84);
        boolean boolean87 = switchingFunctionsHandler0.reset((double) (byte) -1, doubleArray84);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test09885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09885");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler0.add(switchingFunction21, (double) 0.0f, (double) 10, (int) (byte) 0);
        boolean boolean26 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        switchingFunctionsHandler0.add(switchingFunction27, (-1.0d), (double) (byte) 0, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test09886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09886");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) (short) -1, (double) (byte) 1, (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        switchingFunctionsHandler0.add(switchingFunction11, 52.0d, (double) (-1), (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, (double) 1, 10.0d, 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler0.add(switchingFunction21, (double) (byte) 1, (double) 3, (-1));
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test09887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09887");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        boolean boolean25 = switchingFunctionsHandler0.stop();
        boolean boolean26 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler0.evaluateStep(stepInterpolator27);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler0.add(switchingFunction29, 1.0d, 100.0d, (int) (byte) 1);
        double double34 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
    }

    @Test
    public void test09888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09888");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.reset((double) 1, doubleArray9);
        boolean boolean12 = switchingFunctionsHandler0.stop();
        double double13 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler0.evaluateStep(stepInterpolator14);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler0.evaluateStep(stepInterpolator16);
        boolean boolean18 = switchingFunctionsHandler0.stop();
        double double19 = switchingFunctionsHandler0.getEventTime();
        double double20 = switchingFunctionsHandler0.getEventTime();
        double double21 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test09889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09889");
        java.lang.Object[] objArray17 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("", objArray17, (java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException23);
        java.lang.Object[] objArray26 = functionEvaluationException23.getArguments();
        java.lang.Throwable[] throwableArray27 = functionEvaluationException23.getSuppressed();
        java.lang.Object[] objArray28 = functionEvaluationException23.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", objArray42);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray42);
        java.lang.Object[] objArray45 = new java.lang.Object[] { 2, switchingFunctionsHandler33, 1, objArray42 };
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray42, (java.lang.Throwable) mathException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException50);
        java.lang.Object[] objArray52 = functionEvaluationException50.getArguments();
        double double53 = functionEvaluationException50.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: hi!", objArray28, (java.lang.Throwable) functionEvaluationException50);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("", objArray28);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray28);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray28);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray28);
        java.lang.Throwable[] throwableArray59 = convergenceException58.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray59);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(throwableArray59);
    }

    @Test
    public void test09890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09890");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.reset((double) 1, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) (short) 1, (double) 0, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean19 = switchingFunctionsHandler18.isEmpty();
        double[] doubleArray22 = new double[] { 100.0d };
        boolean boolean23 = switchingFunctionsHandler18.reset((double) 0L, doubleArray22);
        boolean boolean24 = switchingFunctionsHandler0.reset((double) ' ', doubleArray22);
        boolean boolean25 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler0.add(switchingFunction26, (double) (byte) 0, (double) (-1.0f), 0);
        double double31 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray33 = null;
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test09891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09891");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException3);
        java.lang.Object[] objArray22 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("", objArray22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray22);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("", objArray22, (java.lang.Throwable) functionEvaluationException28);
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException28);
        java.lang.Object[] objArray31 = functionEvaluationException28.getArguments();
        java.lang.Throwable[] throwableArray32 = functionEvaluationException28.getSuppressed();
        java.lang.Object[] objArray33 = functionEvaluationException28.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray47 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("", objArray47);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray47);
        java.lang.Object[] objArray50 = new java.lang.Object[] { 2, switchingFunctionsHandler38, 1, objArray47 };
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray47, (java.lang.Throwable) mathException54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException55);
        java.lang.Object[] objArray57 = functionEvaluationException55.getArguments();
        double double58 = functionEvaluationException55.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: hi!", objArray33, (java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("", objArray33);
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray33);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: ", objArray33);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException63);
        java.lang.String str65 = integratorException64.getPattern();
        convergenceException3.addSuppressed((java.lang.Throwable) integratorException64);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException3);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException(1.0d, (java.lang.Throwable) convergenceException3);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) functionEvaluationException68);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str65, "org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test09892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09892");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) (short) -1, (double) (byte) 1, (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        switchingFunctionsHandler0.add(switchingFunction11, 52.0d, (double) (-1), (int) (short) -1);
        double double16 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean19 = switchingFunctionsHandler18.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler18.evaluateStep(stepInterpolator20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean24 = switchingFunctionsHandler23.isEmpty();
        double[] doubleArray27 = new double[] { 100.0d };
        boolean boolean28 = switchingFunctionsHandler23.reset((double) 0L, doubleArray27);
        switchingFunctionsHandler18.stepAccepted((double) (byte) 10, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean32 = switchingFunctionsHandler31.isEmpty();
        double[] doubleArray35 = new double[] { 100.0d };
        boolean boolean36 = switchingFunctionsHandler31.reset((double) 0L, doubleArray35);
        switchingFunctionsHandler18.stepAccepted(100.0d, doubleArray35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler18.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler18.evaluateStep(stepInterpolator40);
        boolean boolean42 = switchingFunctionsHandler18.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean45 = switchingFunctionsHandler44.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler44.evaluateStep(stepInterpolator46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean50 = switchingFunctionsHandler49.isEmpty();
        double[] doubleArray53 = new double[] { 100.0d };
        boolean boolean54 = switchingFunctionsHandler49.reset((double) 0L, doubleArray53);
        switchingFunctionsHandler44.stepAccepted((double) (byte) 10, doubleArray53);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        switchingFunctionsHandler57.add(switchingFunction58, (double) (-1), (double) 3, 0);
        double[] doubleArray70 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean71 = switchingFunctionsHandler57.reset((double) (-1), doubleArray70);
        boolean boolean72 = switchingFunctionsHandler57.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler74 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean75 = switchingFunctionsHandler74.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator76 = null;
        boolean boolean77 = switchingFunctionsHandler74.evaluateStep(stepInterpolator76);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler79 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean80 = switchingFunctionsHandler79.isEmpty();
        double[] doubleArray83 = new double[] { 100.0d };
        boolean boolean84 = switchingFunctionsHandler79.reset((double) 0L, doubleArray83);
        switchingFunctionsHandler74.stepAccepted((double) (byte) 10, doubleArray83);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler87 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean88 = switchingFunctionsHandler87.isEmpty();
        double[] doubleArray91 = new double[] { 100.0d };
        boolean boolean92 = switchingFunctionsHandler87.reset((double) 0L, doubleArray91);
        switchingFunctionsHandler74.stepAccepted(100.0d, doubleArray91);
        boolean boolean94 = switchingFunctionsHandler57.reset((-1.0d), doubleArray91);
        boolean boolean95 = switchingFunctionsHandler44.reset((-1.0d), doubleArray91);
        boolean boolean96 = switchingFunctionsHandler18.reset((double) (byte) 0, doubleArray91);
        boolean boolean97 = switchingFunctionsHandler0.reset(100.0d, doubleArray91);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator98 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = switchingFunctionsHandler0.evaluateStep(stepInterpolator98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test09893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09893");
        org.apache.commons.math.MathException mathException1 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: Convergence failed");
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) mathException1);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray14);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray14);
        java.lang.Object[] objArray32 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("", objArray32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray32);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("", objArray32, (java.lang.Throwable) functionEvaluationException38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray54 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("", objArray54);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray54);
        java.lang.Object[] objArray57 = new java.lang.Object[] { 2, switchingFunctionsHandler45, 1, objArray54 };
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray54, (java.lang.Throwable) mathException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray54, (java.lang.Throwable) functionEvaluationException64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray54, (java.lang.Throwable) functionEvaluationException67);
        java.lang.Object[] objArray76 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("", objArray76);
        org.apache.commons.math.ode.IntegratorException integratorException78 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray76);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException78);
        java.lang.Throwable[] throwableArray80 = integratorException78.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException81 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException78);
        functionEvaluationException67.addSuppressed((java.lang.Throwable) integratorException78);
        double double83 = functionEvaluationException67.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException", objArray32, (java.lang.Throwable) functionEvaluationException67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) convergenceException84);
        java.lang.Object[] objArray86 = functionEvaluationException85.getArguments();
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException85);
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) functionEvaluationException85);
        convergenceException2.addSuppressed((java.lang.Throwable) functionEvaluationException85);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 100.0d + "'", double83 == 100.0d);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
    }

    @Test
    public void test09894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09894");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray18 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", objArray18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray18);
        java.lang.Object[] objArray21 = new java.lang.Object[] { 2, switchingFunctionsHandler9, 1, objArray18 };
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) mathException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException26);
        java.lang.Object[] objArray28 = functionEvaluationException26.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray28);
        java.lang.Throwable throwable30 = null;
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", objArray28, throwable30);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray44);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray44);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray63 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("", objArray63);
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray63);
        java.lang.Object[] objArray66 = new java.lang.Object[] { 2, switchingFunctionsHandler54, 1, objArray63 };
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray63, (java.lang.Throwable) mathException70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray63, (java.lang.Throwable) functionEvaluationException73);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray63, (java.lang.Throwable) functionEvaluationException76);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray63);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException78);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException80 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray44, (java.lang.Throwable) convergenceException79);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException85);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException87 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException85);
        java.lang.Throwable[] throwableArray88 = functionEvaluationException85.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray44, (java.lang.Throwable) functionEvaluationException85);
        org.apache.commons.math.ode.IntegratorException integratorException90 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException89);
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray28, (java.lang.Throwable) integratorException90);
        java.lang.String str92 = integratorException90.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException93 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException90);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException94 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, (java.lang.Throwable) integratorException93);
        org.apache.commons.math.ConvergenceException convergenceException95 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) integratorException93);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(throwableArray88);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str92, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!");
    }

    @Test
    public void test09895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09895");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) (byte) -1, (-1.0d), (int) 'a');
        boolean boolean9 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, (double) (short) 0, (double) '#', (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler0.add(switchingFunction15, (double) (byte) -1, Double.NaN, 2);
        boolean boolean20 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09896");
        java.lang.Object[] objArray19 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("", objArray19, (java.lang.Throwable) functionEvaluationException25);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException25);
        java.lang.Object[] objArray28 = functionEvaluationException25.getArguments();
        java.lang.Throwable[] throwableArray29 = functionEvaluationException25.getSuppressed();
        java.lang.Object[] objArray30 = functionEvaluationException25.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray44 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("", objArray44);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray44);
        java.lang.Object[] objArray47 = new java.lang.Object[] { 2, switchingFunctionsHandler35, 1, objArray44 };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray44, (java.lang.Throwable) mathException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException52);
        java.lang.Object[] objArray54 = functionEvaluationException52.getArguments();
        double double55 = functionEvaluationException52.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException52);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray30);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException("", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray30);
        java.lang.Object[] objArray74 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("", objArray74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray74);
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray74);
        java.lang.Object[] objArray79 = functionEvaluationException78.getArguments();
        java.lang.String str80 = functionEvaluationException78.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) functionEvaluationException78);
        double double82 = functionEvaluationException81.getArgument();
        java.lang.String[] strArray92 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException93 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray92);
        org.apache.commons.math.ConvergenceException convergenceException94 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray92);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException95 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray92);
        org.apache.commons.math.MathException mathException96 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException95);
        functionEvaluationException81.addSuppressed((java.lang.Throwable) functionEvaluationException95);
        org.apache.commons.math.MathException mathException98 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException95);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException99 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) mathException98);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str80, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 100.0d + "'", double82 == 100.0d);
        org.junit.Assert.assertNotNull(strArray92);
    }

    @Test
    public void test09897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09897");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) (-1), (double) 100.0f, 10);
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        double double18 = switchingFunctionsHandler0.getEventTime();
        double double19 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler0.add(switchingFunction20, (double) (-1), (double) (short) 100, (int) (byte) 100);
        boolean boolean25 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler0.add(switchingFunction26, 100.0d, (double) 0.0f, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        switchingFunctionsHandler0.add(switchingFunction31, 3.0d, (double) (byte) -1, 2);
        double double36 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
    }

    @Test
    public void test09898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09898");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray12);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray27);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray27);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "hi!", (java.lang.Throwable) mathException34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("", objArray50);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray50);
        java.lang.Object[] objArray53 = new java.lang.Object[] { 2, switchingFunctionsHandler41, 1, objArray50 };
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray50, (java.lang.Throwable) mathException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray50, (java.lang.Throwable) functionEvaluationException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray50, (java.lang.Throwable) functionEvaluationException63);
        java.lang.Object[] objArray72 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("", objArray72);
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray72);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException74);
        java.lang.Throwable[] throwableArray76 = integratorException74.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException77 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException74);
        functionEvaluationException63.addSuppressed((java.lang.Throwable) integratorException74);
        functionEvaluationException35.addSuppressed((java.lang.Throwable) integratorException74);
        java.lang.Object[] objArray80 = functionEvaluationException35.getArguments();
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray27, (java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray12, (java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", strArray12);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException85 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException84);
        org.apache.commons.math.ode.IntegratorException integratorException86 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException85);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
    }

    @Test
    public void test09899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09899");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler0.evaluateStep(stepInterpolator7);
        boolean boolean9 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler0.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) (short) 1, (double) (short) 10, (int) (byte) 1);
        boolean boolean17 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test09900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09900");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray24 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("", objArray24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray24);
        java.lang.Object[] objArray27 = new java.lang.Object[] { 2, switchingFunctionsHandler15, 1, objArray24 };
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray24, (java.lang.Throwable) mathException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException32);
        java.lang.Object[] objArray34 = functionEvaluationException32.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        double double38 = functionEvaluationException37.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("", objArray53);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray53);
        java.lang.Object[] objArray56 = new java.lang.Object[] { 2, switchingFunctionsHandler44, 1, objArray53 };
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray53, (java.lang.Throwable) mathException60);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException60);
        mathException40.addSuppressed((java.lang.Throwable) integratorException62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) mathException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "");
        java.lang.Object[] objArray68 = functionEvaluationException67.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException69 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100", objArray34, (java.lang.Throwable) integratorException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException74);
        java.lang.Throwable[] throwableArray77 = functionEvaluationException74.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", objArray34, (java.lang.Throwable) functionEvaluationException74);
        org.apache.commons.math.ode.IntegratorException integratorException80 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray34);
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException85);
        java.lang.Throwable[] throwableArray87 = convergenceException85.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException88 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray87);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", objArray34, (java.lang.Throwable) functionEvaluationException88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Throwable) functionEvaluationException88);
        java.lang.Object[] objArray91 = functionEvaluationException90.getArguments();
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[]");
    }

    @Test
    public void test09901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09901");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        switchingFunctionsHandler22.stepAccepted((double) (byte) 10, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray31);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler0.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler0.evaluateStep(stepInterpolator37);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = switchingFunctionsHandler0.evaluateStep(stepInterpolator39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler0.evaluateStep(stepInterpolator41);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test09902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09902");
        java.lang.Object[] objArray18 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", objArray18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray18);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException20);
        java.lang.Throwable[] throwableArray22 = integratorException20.getSuppressed();
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray22);
        java.lang.Throwable[] throwableArray24 = mathException23.getSuppressed();
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) functionEvaluationException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) functionEvaluationException28);
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", throwable33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", throwable33);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) mathException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Throwable) mathException36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray51 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("", objArray51);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray51);
        java.lang.Object[] objArray54 = new java.lang.Object[] { 2, switchingFunctionsHandler42, 1, objArray51 };
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray51, (java.lang.Throwable) mathException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException59);
        functionEvaluationException37.addSuppressed((java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Throwable) functionEvaluationException37);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray54);
    }

    @Test
    public void test09903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09903");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) 100L, (double) 10, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (short) -1, (double) 0, (int) (byte) -1);
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        double double24 = switchingFunctionsHandler0.getEventTime();
        double double25 = switchingFunctionsHandler0.getEventTime();
        boolean boolean26 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test09904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09904");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray31);
        java.lang.Object[] objArray34 = new java.lang.Object[] { 2, switchingFunctionsHandler22, 1, objArray31 };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) mathException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray14);
        java.lang.Object[] objArray55 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("", objArray55);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray55);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException57);
        java.lang.Throwable[] throwableArray59 = integratorException57.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException57);
        java.lang.Object[] objArray61 = integratorException60.getArguments();
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray14, (java.lang.Throwable) integratorException60);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray14);
        java.lang.Throwable[] throwableArray64 = mathException63.getSuppressed();
        java.lang.Throwable throwable65 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray64, throwable65);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray64);
        org.apache.commons.math.MathException mathException68 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException67);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(throwableArray64);
    }

    @Test
    public void test09905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09905");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) (byte) -1, (-1.0d), (int) 'a');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean11 = switchingFunctionsHandler10.isEmpty();
        boolean boolean12 = switchingFunctionsHandler10.stop();
        double double13 = switchingFunctionsHandler10.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler10.add(switchingFunction14, (double) (-1.0f), (double) (short) 10, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean21 = switchingFunctionsHandler20.isEmpty();
        double[] doubleArray24 = new double[] { 100.0d };
        boolean boolean25 = switchingFunctionsHandler20.reset((double) 0L, doubleArray24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = switchingFunctionsHandler27.evaluateStep(stepInterpolator29);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean33 = switchingFunctionsHandler32.isEmpty();
        double[] doubleArray36 = new double[] { 100.0d };
        boolean boolean37 = switchingFunctionsHandler32.reset((double) 0L, doubleArray36);
        boolean boolean38 = switchingFunctionsHandler27.reset((double) 1, doubleArray36);
        boolean boolean39 = switchingFunctionsHandler20.reset((double) 100, doubleArray36);
        double double40 = switchingFunctionsHandler20.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean43 = switchingFunctionsHandler42.isEmpty();
        double[] doubleArray46 = new double[] { 100.0d };
        boolean boolean47 = switchingFunctionsHandler42.reset((double) 0L, doubleArray46);
        switchingFunctionsHandler20.stepAccepted(0.0d, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler10.reset((double) 2, doubleArray46);
        boolean boolean50 = switchingFunctionsHandler0.reset((double) (-1L), doubleArray46);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        switchingFunctionsHandler0.add(switchingFunction51, (double) ' ', 3.0d, 2);
        double double56 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
    }

    @Test
    public void test09906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09906");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray19 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray19);
        java.lang.Object[] objArray22 = new java.lang.Object[] { 2, switchingFunctionsHandler10, 1, objArray19 };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) mathException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) functionEvaluationException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) functionEvaluationException32);
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", objArray41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray41);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException43);
        java.lang.Throwable[] throwableArray45 = integratorException43.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException43);
        functionEvaluationException32.addSuppressed((java.lang.Throwable) integratorException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException43);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException55);
        java.lang.Object[] objArray57 = mathException56.getArguments();
        java.lang.Throwable throwable58 = null;
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!", objArray57, throwable58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray57);
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException("", objArray57);
        integratorException43.addSuppressed((java.lang.Throwable) integratorException61);
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray72);
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "hi!", (java.lang.Object[]) strArray72);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException75);
        integratorException43.addSuppressed((java.lang.Throwable) functionEvaluationException75);
        java.lang.Object[] objArray78 = functionEvaluationException75.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "", objArray78);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException80 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Throwable) functionEvaluationException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException80);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
    }

    @Test
    public void test09907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09907");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        switchingFunctionsHandler0.add(switchingFunction8, Double.NaN, (-1.0d), 2);
        double double13 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray15 = null;
        boolean boolean16 = switchingFunctionsHandler0.reset(32.0d, doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test09908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09908");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) (byte) -1, (-1.0d), (int) 'a');
        boolean boolean9 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, (double) (short) 0, (double) '#', (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler0.add(switchingFunction15, (double) (byte) 0, (double) (short) 1, (int) (short) 10);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        boolean boolean22 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test09909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09909");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        double double8 = switchingFunctionsHandler0.getEventTime();
        boolean boolean9 = switchingFunctionsHandler0.stop();
        double[] doubleArray16 = new double[] { 3, 100, (-1.0f), (byte) -1, 1.0d };
        switchingFunctionsHandler0.stepAccepted((-1.0d), doubleArray16);
        double[] doubleArray19 = null;
        boolean boolean20 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray19);
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean25 = switchingFunctionsHandler24.isEmpty();
        double[] doubleArray28 = new double[] { 100.0d };
        boolean boolean29 = switchingFunctionsHandler24.reset((double) 0L, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean32 = switchingFunctionsHandler31.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler31.evaluateStep(stepInterpolator33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean37 = switchingFunctionsHandler36.isEmpty();
        double[] doubleArray40 = new double[] { 100.0d };
        boolean boolean41 = switchingFunctionsHandler36.reset((double) 0L, doubleArray40);
        boolean boolean42 = switchingFunctionsHandler31.reset((double) 1, doubleArray40);
        boolean boolean43 = switchingFunctionsHandler24.reset((double) 100, doubleArray40);
        double double44 = switchingFunctionsHandler24.getEventTime();
        boolean boolean45 = switchingFunctionsHandler24.stop();
        boolean boolean46 = switchingFunctionsHandler24.isEmpty();
        double double47 = switchingFunctionsHandler24.getEventTime();
        boolean boolean48 = switchingFunctionsHandler24.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean51 = switchingFunctionsHandler50.isEmpty();
        boolean boolean52 = switchingFunctionsHandler50.stop();
        double double53 = switchingFunctionsHandler50.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        switchingFunctionsHandler50.add(switchingFunction54, (double) (-1.0f), (double) (short) 10, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean61 = switchingFunctionsHandler60.isEmpty();
        double[] doubleArray64 = new double[] { 100.0d };
        boolean boolean65 = switchingFunctionsHandler60.reset((double) 0L, doubleArray64);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean68 = switchingFunctionsHandler67.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        boolean boolean70 = switchingFunctionsHandler67.evaluateStep(stepInterpolator69);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean73 = switchingFunctionsHandler72.isEmpty();
        double[] doubleArray76 = new double[] { 100.0d };
        boolean boolean77 = switchingFunctionsHandler72.reset((double) 0L, doubleArray76);
        boolean boolean78 = switchingFunctionsHandler67.reset((double) 1, doubleArray76);
        boolean boolean79 = switchingFunctionsHandler60.reset((double) 100, doubleArray76);
        double double80 = switchingFunctionsHandler60.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler82 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean83 = switchingFunctionsHandler82.isEmpty();
        double[] doubleArray86 = new double[] { 100.0d };
        boolean boolean87 = switchingFunctionsHandler82.reset((double) 0L, doubleArray86);
        switchingFunctionsHandler60.stepAccepted(0.0d, doubleArray86);
        boolean boolean89 = switchingFunctionsHandler50.reset((double) 2, doubleArray86);
        boolean boolean90 = switchingFunctionsHandler24.reset(52.0d, doubleArray86);
        switchingFunctionsHandler0.stepAccepted((double) '4', doubleArray86);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[3.0, 100.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test09910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09910");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray15 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", objArray15);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray15);
        java.lang.Object[] objArray18 = new java.lang.Object[] { 2, switchingFunctionsHandler6, 1, objArray15 };
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray15, (java.lang.Throwable) mathException22);
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray15);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException26);
        java.lang.Throwable[] throwableArray28 = derivativeException26.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) derivativeException26);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertNotNull(throwableArray28);
    }

    @Test
    public void test09911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09911");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) 0, (double) (short) 1, (int) (byte) -1);
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        boolean boolean16 = switchingFunctionsHandler14.stop();
        double double17 = switchingFunctionsHandler14.getEventTime();
        boolean boolean18 = switchingFunctionsHandler14.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler14.add(switchingFunction19, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray25 = new double[] {};
        boolean boolean26 = switchingFunctionsHandler14.reset((double) (short) 1, doubleArray25);
        boolean boolean27 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray25);
        double double28 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler0.add(switchingFunction29, 0.0d, (double) 1L, (int) (short) 100);
        boolean boolean34 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = switchingFunctionsHandler0.evaluateStep(stepInterpolator35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test09912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09912");
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException12);
        java.lang.Object[] objArray14 = mathException13.getArguments();
        java.lang.Throwable throwable15 = null;
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", objArray14, throwable15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray14);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray14);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray34 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray34);
        java.lang.Object[] objArray37 = new java.lang.Object[] { 2, switchingFunctionsHandler25, 1, objArray34 };
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) mathException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray34, (java.lang.Throwable) functionEvaluationException47);
        java.lang.Object[] objArray56 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("", objArray56);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray56);
        org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException58);
        java.lang.Throwable[] throwableArray60 = integratorException58.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException58);
        functionEvaluationException47.addSuppressed((java.lang.Throwable) integratorException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.IntegratorException: ", objArray14, (java.lang.Throwable) integratorException58);
        java.lang.Object[] objArray74 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("", objArray74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, (java.lang.Throwable) functionEvaluationException76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray14, (java.lang.Throwable) functionEvaluationException76);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", objArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException80 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), (java.lang.Throwable) convergenceException79);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException(1.0d, (java.lang.Throwable) convergenceException79);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[1, a, 10, a, -1]");
    }

    @Test
    public void test09913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09913");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) (byte) -1, (-1.0d), (int) 'a');
        boolean boolean9 = switchingFunctionsHandler0.stop();
        boolean boolean10 = switchingFunctionsHandler0.stop();
        double double11 = switchingFunctionsHandler0.getEventTime();
        double double12 = switchingFunctionsHandler0.getEventTime();
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test09914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09914");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler0.add(switchingFunction21, (double) 0.0f, (double) 10, (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler0.add(switchingFunction26, (double) (-1.0f), (double) (-1L), 2);
        boolean boolean31 = switchingFunctionsHandler0.stop();
        double double32 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler0.add(switchingFunction33, 0.0d, (double) 10.0f, (int) (short) -1);
        boolean boolean38 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        switchingFunctionsHandler0.add(switchingFunction39, (double) (short) 100, 0.0d, (int) '#');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test09915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09915");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean18 = switchingFunctionsHandler17.isEmpty();
        double[] doubleArray21 = new double[] { 100.0d };
        boolean boolean22 = switchingFunctionsHandler17.reset((double) 0L, doubleArray21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean25 = switchingFunctionsHandler24.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler24.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean30 = switchingFunctionsHandler29.isEmpty();
        double[] doubleArray33 = new double[] { 100.0d };
        boolean boolean34 = switchingFunctionsHandler29.reset((double) 0L, doubleArray33);
        boolean boolean35 = switchingFunctionsHandler24.reset((double) 1, doubleArray33);
        boolean boolean36 = switchingFunctionsHandler17.reset((double) 100, doubleArray33);
        boolean boolean37 = switchingFunctionsHandler0.reset((double) (-1.0f), doubleArray33);
        boolean boolean38 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        switchingFunctionsHandler0.add(switchingFunction39, (double) (byte) -1, (double) (byte) 100, (int) (byte) 100);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test09916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09916");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray17);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray32);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray32);
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "hi!", (java.lang.Throwable) mathException39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray55 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("", objArray55);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray55);
        java.lang.Object[] objArray58 = new java.lang.Object[] { 2, switchingFunctionsHandler46, 1, objArray55 };
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray55, (java.lang.Throwable) mathException62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray55, (java.lang.Throwable) functionEvaluationException65);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray55, (java.lang.Throwable) functionEvaluationException68);
        java.lang.Object[] objArray77 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("", objArray77);
        org.apache.commons.math.ode.IntegratorException integratorException79 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray77);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException79);
        java.lang.Throwable[] throwableArray81 = integratorException79.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException82 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException79);
        functionEvaluationException68.addSuppressed((java.lang.Throwable) integratorException79);
        functionEvaluationException40.addSuppressed((java.lang.Throwable) integratorException79);
        java.lang.Object[] objArray85 = functionEvaluationException40.getArguments();
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("", (java.lang.Object[]) strArray32, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray17, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.ode.DerivativeException derivativeException88 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException89 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException90 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", strArray17);
        org.apache.commons.math.MathException mathException91 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException90);
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException((java.lang.Throwable) derivativeException90);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException93 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, (java.lang.Throwable) mathException92);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException94 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Throwable) mathException92);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 100", (java.lang.Throwable) mathException92);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
    }

    @Test
    public void test09917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09917");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException19 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException18);
        java.lang.Object[] objArray20 = mathException19.getArguments();
        java.lang.Throwable throwable23 = null;
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", throwable23);
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", throwable23);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray20, throwable23);
        java.lang.Object[] objArray38 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("", objArray38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray38);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray38);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray38);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray38);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray20, (java.lang.Throwable) convergenceException43);
        derivativeException13.addSuppressed((java.lang.Throwable) convergenceException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray62 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("", objArray62);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray62);
        java.lang.Object[] objArray65 = new java.lang.Object[] { 2, switchingFunctionsHandler53, 1, objArray62 };
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) mathException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) functionEvaluationException72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) functionEvaluationException75);
        java.lang.Object[] objArray84 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException("", objArray84);
        org.apache.commons.math.ode.IntegratorException integratorException86 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray84);
        org.apache.commons.math.MathException mathException87 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException86);
        java.lang.Throwable[] throwableArray88 = integratorException86.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException89 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException86);
        functionEvaluationException75.addSuppressed((java.lang.Throwable) integratorException86);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException86);
        java.lang.String str92 = integratorException86.getPattern();
        functionEvaluationException46.addSuppressed((java.lang.Throwable) integratorException86);
        java.lang.String str94 = functionEvaluationException46.getPattern();
        java.lang.String str95 = functionEvaluationException46.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray88);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org.apache.commons.math.MathException: hi!" + "'", str92, "org.apache.commons.math.MathException: hi!");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "org.apache.commons.math.MathException" + "'", str94, "org.apache.commons.math.MathException");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException" + "'", str95, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException");
    }

    @Test
    public void test09918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09918");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray17 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray17);
        java.lang.Object[] objArray20 = new java.lang.Object[] { 2, switchingFunctionsHandler8, 1, objArray17 };
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) mathException24);
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray17);
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = {0}", objArray17);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", strArray41);
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray57);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray57);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray57);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: hi!", strArray57);
        java.lang.Object[] objArray65 = new java.lang.Object[] { (-1L) };
        java.lang.Object[] objArray73 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("", objArray73);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray73);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException75);
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("hi!", objArray65, (java.lang.Throwable) mathException76);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException76);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray57, (java.lang.Throwable) mathException76);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray41, (java.lang.Throwable) mathException76);
        java.lang.Object[] objArray81 = mathException76.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) mathException76);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", objArray17, (java.lang.Throwable) mathException76);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException83);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, (java.lang.Throwable) convergenceException83);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[-1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[-1]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
    }

    @Test
    public void test09919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09919");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.MathException mathException15 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray33 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("", objArray33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray33);
        java.lang.Object[] objArray36 = new java.lang.Object[] { 2, switchingFunctionsHandler24, 1, objArray33 };
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray33, (java.lang.Throwable) mathException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", objArray33);
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray33);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray33);
        convergenceException17.addSuppressed((java.lang.Throwable) integratorException44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException17);
        java.lang.Object[] objArray53 = new java.lang.Object[] { 100.0f, (byte) 10 };
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray53);
        java.lang.Object[] objArray65 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("", objArray65);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray65);
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray65);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("", objArray65, (java.lang.Throwable) functionEvaluationException71);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException71);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("", objArray53, (java.lang.Throwable) mathException73);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException74);
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException75);
        convergenceException46.addSuppressed((java.lang.Throwable) mathException76);
        org.apache.commons.math.ode.IntegratorException integratorException78 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException76);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[100.0, 10]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[100.0, 10]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[1, a, 10, a, -1]");
    }

    @Test
    public void test09920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09920");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        double double16 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean25 = switchingFunctionsHandler24.isEmpty();
        double[] doubleArray28 = new double[] { 100.0d };
        boolean boolean29 = switchingFunctionsHandler24.reset((double) 0L, doubleArray28);
        boolean boolean30 = switchingFunctionsHandler0.reset((double) 100L, doubleArray28);
        boolean boolean31 = switchingFunctionsHandler0.isEmpty();
        boolean boolean32 = switchingFunctionsHandler0.isEmpty();
        boolean boolean33 = switchingFunctionsHandler0.stop();
        double double34 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        switchingFunctionsHandler0.add(switchingFunction35, 0.0d, (double) (byte) 0, 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        switchingFunctionsHandler0.add(switchingFunction40, 1.0d, (double) (byte) 10, (int) ' ');
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
    }

    @Test
    public void test09921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09921");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean10 = switchingFunctionsHandler9.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler9.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        double[] doubleArray18 = new double[] { 100.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) 0L, doubleArray18);
        switchingFunctionsHandler9.stepAccepted((double) (byte) 10, doubleArray18);
        boolean boolean21 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray18);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler0.add(switchingFunction25, (double) 'a', Double.NaN, (int) '#');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        switchingFunctionsHandler0.add(switchingFunction30, (double) 0.0f, (-1.0d), (int) (short) 1);
        boolean boolean35 = switchingFunctionsHandler0.stop();
        boolean boolean36 = switchingFunctionsHandler0.stop();
        boolean boolean37 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean39 = switchingFunctionsHandler0.evaluateStep(stepInterpolator38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test09922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09922");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler0.add(switchingFunction25, (double) (-1), 0.0d, (int) (short) 10);
        boolean boolean30 = switchingFunctionsHandler0.isEmpty();
        double double31 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray33 = null;
        boolean boolean34 = switchingFunctionsHandler0.reset(0.0d, doubleArray33);
        boolean boolean35 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        switchingFunctionsHandler0.add(switchingFunction36, (double) 1L, 52.0d, (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test09923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09923");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray36 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("", objArray36);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray36);
        java.lang.Object[] objArray39 = new java.lang.Object[] { 2, switchingFunctionsHandler27, 1, objArray36 };
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray36, (java.lang.Throwable) mathException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray36, (java.lang.Throwable) functionEvaluationException46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray36, (java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray36);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray17, (java.lang.Throwable) convergenceException52);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray17);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray17);
        java.lang.Throwable throwable62 = null;
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException(throwable62);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("hi!");
        mathException63.addSuppressed((java.lang.Throwable) mathException65);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException63);
        java.lang.Throwable[] throwableArray68 = derivativeException67.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Object[]) throwableArray68);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException69);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = hi!", (java.lang.Object[]) strArray17, (java.lang.Throwable) convergenceException70);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(throwableArray68);
    }

    @Test
    public void test09924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09924");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: hi!", strArray19);
        java.lang.Object[] objArray27 = new java.lang.Object[] { (-1L) };
        java.lang.Object[] objArray35 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("", objArray35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray35);
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException37);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!", objArray27, (java.lang.Throwable) mathException38);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException38);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray19, (java.lang.Throwable) mathException38);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray19);
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray60 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("", objArray60);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray60);
        java.lang.Object[] objArray63 = new java.lang.Object[] { 2, switchingFunctionsHandler51, 1, objArray60 };
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray60, (java.lang.Throwable) mathException67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray60, (java.lang.Throwable) functionEvaluationException70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray60, (java.lang.Throwable) functionEvaluationException73);
        java.lang.Object[] objArray82 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("", objArray82);
        org.apache.commons.math.ode.IntegratorException integratorException84 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray82);
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException84);
        java.lang.Throwable[] throwableArray86 = integratorException84.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException87 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException84);
        functionEvaluationException73.addSuppressed((java.lang.Throwable) integratorException84);
        double double89 = functionEvaluationException73.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException();
        functionEvaluationException73.addSuppressed((java.lang.Throwable) convergenceException90);
        org.apache.commons.math.ConvergenceException convergenceException92 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException90);
        org.apache.commons.math.ode.DerivativeException derivativeException93 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException92);
        java.lang.String str94 = convergenceException92.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException95 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray19, (java.lang.Throwable) convergenceException92);
        org.apache.commons.math.ode.IntegratorException integratorException96 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException92);
        org.apache.commons.math.MathException mathException97 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException92);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException98 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) convergenceException92);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[-1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[-1]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 100.0d + "'", double89 == 100.0d);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Convergence failed" + "'", str94, "Convergence failed");
    }

    @Test
    public void test09925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09925");
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "hi!", (java.lang.Throwable) mathException7);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException8);
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("", objArray25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray25);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        double double32 = functionEvaluationException31.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray47 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("", objArray47);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray47);
        java.lang.Object[] objArray50 = new java.lang.Object[] { 2, switchingFunctionsHandler38, 1, objArray47 };
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray47, (java.lang.Throwable) mathException54);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException54);
        mathException34.addSuppressed((java.lang.Throwable) integratorException56);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray25, (java.lang.Throwable) integratorException56);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray70);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException("", strArray70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray70);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) derivativeException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException("", (java.lang.Throwable) functionEvaluationException79);
        java.lang.String str81 = mathException80.getPattern();
        derivativeException75.addSuppressed((java.lang.Throwable) mathException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: ", objArray25, (java.lang.Throwable) derivativeException75);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) functionEvaluationException83);
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 100", (java.lang.Throwable) functionEvaluationException83);
        org.apache.commons.math.ode.IntegratorException integratorException86 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException83);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) integratorException86);
        java.lang.Object[] objArray88 = convergenceException87.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", objArray88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}", objArray88);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
    }

    @Test
    public void test09926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09926");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean10 = switchingFunctionsHandler9.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler9.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        double[] doubleArray18 = new double[] { 100.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) 0L, doubleArray18);
        switchingFunctionsHandler9.stepAccepted((double) (byte) 10, doubleArray18);
        boolean boolean21 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean24 = switchingFunctionsHandler23.isEmpty();
        double[] doubleArray27 = new double[] { 100.0d };
        boolean boolean28 = switchingFunctionsHandler23.reset((double) 0L, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean31 = switchingFunctionsHandler30.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = switchingFunctionsHandler30.evaluateStep(stepInterpolator32);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean36 = switchingFunctionsHandler35.isEmpty();
        double[] doubleArray39 = new double[] { 100.0d };
        boolean boolean40 = switchingFunctionsHandler35.reset((double) 0L, doubleArray39);
        boolean boolean41 = switchingFunctionsHandler30.reset((double) 1, doubleArray39);
        boolean boolean42 = switchingFunctionsHandler23.reset((double) 100, doubleArray39);
        double double43 = switchingFunctionsHandler23.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean46 = switchingFunctionsHandler45.isEmpty();
        double[] doubleArray49 = new double[] { 100.0d };
        boolean boolean50 = switchingFunctionsHandler45.reset((double) 0L, doubleArray49);
        switchingFunctionsHandler23.stepAccepted(0.0d, doubleArray49);
        switchingFunctionsHandler0.stepAccepted(2.0d, doubleArray49);
        boolean boolean53 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = switchingFunctionsHandler0.evaluateStep(stepInterpolator54);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler0.evaluateStep(stepInterpolator56);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler0.evaluateStep(stepInterpolator58);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler0.evaluateStep(stepInterpolator60);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test09927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09927");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray19 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray19);
        java.lang.Object[] objArray22 = new java.lang.Object[] { 2, switchingFunctionsHandler10, 1, objArray19 };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException26 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) mathException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) functionEvaluationException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray19, (java.lang.Throwable) functionEvaluationException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray19);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray45);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray45);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray45);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException48);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", objArray19, (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException60);
        java.lang.Object[] objArray62 = mathException61.getArguments();
        java.lang.Throwable throwable65 = null;
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("hi!", throwable65);
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", throwable65);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray62, throwable65);
        java.lang.Object[] objArray80 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("", objArray80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray80);
        org.apache.commons.math.ode.IntegratorException integratorException83 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray80);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray80);
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray80);
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray62, (java.lang.Throwable) convergenceException85);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException87 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException88 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.FunctionEvaluationException: hi!", objArray62);
        org.apache.commons.math.MathException mathException89 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray19, (java.lang.Throwable) functionEvaluationException88);
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Throwable) functionEvaluationException88);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[1, a, 10, a, -1]");
    }

    @Test
    public void test09928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09928");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.stop();
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double8 = switchingFunctionsHandler7.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean11 = switchingFunctionsHandler10.isEmpty();
        double[] doubleArray14 = new double[] { 100.0d };
        boolean boolean15 = switchingFunctionsHandler10.reset((double) 0L, doubleArray14);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean18 = switchingFunctionsHandler17.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler17.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        double[] doubleArray26 = new double[] { 100.0d };
        boolean boolean27 = switchingFunctionsHandler22.reset((double) 0L, doubleArray26);
        boolean boolean28 = switchingFunctionsHandler17.reset((double) 1, doubleArray26);
        boolean boolean29 = switchingFunctionsHandler10.reset((double) 100, doubleArray26);
        double double30 = switchingFunctionsHandler10.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean33 = switchingFunctionsHandler32.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler32.evaluateStep(stepInterpolator34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean38 = switchingFunctionsHandler37.isEmpty();
        double[] doubleArray41 = new double[] { 100.0d };
        boolean boolean42 = switchingFunctionsHandler37.reset((double) 0L, doubleArray41);
        switchingFunctionsHandler32.stepAccepted((double) (byte) 10, doubleArray41);
        switchingFunctionsHandler10.stepAccepted(0.0d, doubleArray41);
        switchingFunctionsHandler7.stepAccepted((double) (short) 0, doubleArray41);
        switchingFunctionsHandler0.stepAccepted(52.0d, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean49 = switchingFunctionsHandler48.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        boolean boolean51 = switchingFunctionsHandler48.evaluateStep(stepInterpolator50);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean54 = switchingFunctionsHandler53.isEmpty();
        double[] doubleArray57 = new double[] { 100.0d };
        boolean boolean58 = switchingFunctionsHandler53.reset((double) 0L, doubleArray57);
        switchingFunctionsHandler48.stepAccepted((double) (byte) 10, doubleArray57);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean62 = switchingFunctionsHandler61.isEmpty();
        double[] doubleArray65 = new double[] { 100.0d };
        boolean boolean66 = switchingFunctionsHandler61.reset((double) 0L, doubleArray65);
        switchingFunctionsHandler48.stepAccepted(100.0d, doubleArray65);
        double double68 = switchingFunctionsHandler48.getEventTime();
        double double69 = switchingFunctionsHandler48.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler71 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction72 = null;
        switchingFunctionsHandler71.add(switchingFunction72, (double) (-1), (double) 3, 0);
        double[] doubleArray84 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean85 = switchingFunctionsHandler71.reset((double) (-1), doubleArray84);
        switchingFunctionsHandler48.stepAccepted((double) 100L, doubleArray84);
        switchingFunctionsHandler0.stepAccepted(97.0d, doubleArray84);
        boolean boolean88 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator89 = null;
        boolean boolean90 = switchingFunctionsHandler0.evaluateStep(stepInterpolator89);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test09929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09929");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) (byte) -1, (-1.0d), (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler0.add(switchingFunction9, (double) (byte) 100, (double) '#', (int) (byte) 10);
        double double14 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean17 = switchingFunctionsHandler16.isEmpty();
        double[] doubleArray20 = new double[] { 100.0d };
        boolean boolean21 = switchingFunctionsHandler16.reset((double) 0L, doubleArray20);
        boolean boolean22 = switchingFunctionsHandler16.stop();
        double double23 = switchingFunctionsHandler16.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean26 = switchingFunctionsHandler25.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler25.evaluateStep(stepInterpolator27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean31 = switchingFunctionsHandler30.isEmpty();
        double[] doubleArray34 = new double[] { 100.0d };
        boolean boolean35 = switchingFunctionsHandler30.reset((double) 0L, doubleArray34);
        switchingFunctionsHandler25.stepAccepted((double) (byte) 10, doubleArray34);
        boolean boolean37 = switchingFunctionsHandler16.reset((double) 1.0f, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean40 = switchingFunctionsHandler39.isEmpty();
        double[] doubleArray43 = new double[] { 100.0d };
        boolean boolean44 = switchingFunctionsHandler39.reset((double) 0L, doubleArray43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean47 = switchingFunctionsHandler46.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = switchingFunctionsHandler46.evaluateStep(stepInterpolator48);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean52 = switchingFunctionsHandler51.isEmpty();
        double[] doubleArray55 = new double[] { 100.0d };
        boolean boolean56 = switchingFunctionsHandler51.reset((double) 0L, doubleArray55);
        boolean boolean57 = switchingFunctionsHandler46.reset((double) 1, doubleArray55);
        boolean boolean58 = switchingFunctionsHandler39.reset((double) 100, doubleArray55);
        double double59 = switchingFunctionsHandler39.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean62 = switchingFunctionsHandler61.isEmpty();
        double[] doubleArray65 = new double[] { 100.0d };
        boolean boolean66 = switchingFunctionsHandler61.reset((double) 0L, doubleArray65);
        switchingFunctionsHandler39.stepAccepted(0.0d, doubleArray65);
        switchingFunctionsHandler16.stepAccepted(2.0d, doubleArray65);
        boolean boolean69 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray65);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        switchingFunctionsHandler0.add(switchingFunction70, (double) 3, 0.0d, (int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test09930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09930");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        boolean boolean20 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        boolean boolean33 = switchingFunctionsHandler22.reset((double) 1, doubleArray31);
        switchingFunctionsHandler0.stepAccepted((double) (byte) -1, doubleArray31);
        boolean boolean35 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler0.evaluateStep(stepInterpolator36);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test09931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09931");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.MathException mathException16 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, (java.lang.Throwable) mathException16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", (java.lang.Throwable) mathException16);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException18);
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException18);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ");
        java.lang.Object[] objArray31 = convergenceException30.getArguments();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray40);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray57 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("", objArray57);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray57);
        java.lang.Object[] objArray60 = new java.lang.Object[] { 2, switchingFunctionsHandler48, 1, objArray57 };
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray57, (java.lang.Throwable) mathException64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray57, (java.lang.Throwable) functionEvaluationException67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray57, (java.lang.Throwable) functionEvaluationException70);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray40, (java.lang.Throwable) functionEvaluationException70);
        java.lang.Throwable[] throwableArray73 = functionEvaluationException70.getSuppressed();
        java.lang.Throwable[] throwableArray74 = functionEvaluationException70.getSuppressed();
        java.lang.String str75 = functionEvaluationException70.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "", objArray31, (java.lang.Throwable) functionEvaluationException70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray31);
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException90 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray89);
        org.apache.commons.math.ode.IntegratorException integratorException91 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray89);
        org.apache.commons.math.ode.IntegratorException integratorException92 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray89);
        org.apache.commons.math.MathException mathException93 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray89);
        org.apache.commons.math.ode.DerivativeException derivativeException94 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray89);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray89);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException96 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ode.IntegratorException", objArray31, (java.lang.Throwable) mathException95);
        org.apache.commons.math.MathException mathException97 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException95);
        convergenceException18.addSuppressed((java.lang.Throwable) mathException95);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Evaluation failed for argument = {0}" + "'", str75, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertNotNull(strArray89);
    }

    @Test
    public void test09932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09932");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) 0L, 1.0d, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler0.add(switchingFunction9, 52.0d, 100.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler0.add(switchingFunction14, 35.0d, (double) 100L, 10);
        boolean boolean19 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler21.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean27 = switchingFunctionsHandler26.isEmpty();
        double[] doubleArray30 = new double[] { 100.0d };
        boolean boolean31 = switchingFunctionsHandler26.reset((double) 0L, doubleArray30);
        switchingFunctionsHandler21.stepAccepted((double) (byte) 10, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean35 = switchingFunctionsHandler34.isEmpty();
        double[] doubleArray38 = new double[] { 100.0d };
        boolean boolean39 = switchingFunctionsHandler34.reset((double) 0L, doubleArray38);
        switchingFunctionsHandler21.stepAccepted(100.0d, doubleArray38);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler21.evaluateStep(stepInterpolator41);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler21.evaluateStep(stepInterpolator43);
        double double45 = switchingFunctionsHandler21.getEventTime();
        double double46 = switchingFunctionsHandler21.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction47 = null;
        switchingFunctionsHandler21.add(switchingFunction47, 0.0d, Double.NaN, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean54 = switchingFunctionsHandler53.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler53.evaluateStep(stepInterpolator55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean59 = switchingFunctionsHandler58.isEmpty();
        double[] doubleArray62 = new double[] { 100.0d };
        boolean boolean63 = switchingFunctionsHandler58.reset((double) 0L, doubleArray62);
        boolean boolean64 = switchingFunctionsHandler53.reset((double) 1, doubleArray62);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        switchingFunctionsHandler53.add(switchingFunction65, (double) (short) 1, (double) 0, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler71 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean72 = switchingFunctionsHandler71.isEmpty();
        double[] doubleArray75 = new double[] { 100.0d };
        boolean boolean76 = switchingFunctionsHandler71.reset((double) 0L, doubleArray75);
        boolean boolean77 = switchingFunctionsHandler53.reset((double) ' ', doubleArray75);
        boolean boolean78 = switchingFunctionsHandler21.reset((double) (-1.0f), doubleArray75);
        boolean boolean79 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray75);
        boolean boolean80 = switchingFunctionsHandler0.stop();
        double double81 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
    }

    @Test
    public void test09933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09933");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler0.evaluateStep(stepInterpolator24);
        double double26 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean29 = switchingFunctionsHandler28.isEmpty();
        double[] doubleArray32 = new double[] { 100.0d };
        boolean boolean33 = switchingFunctionsHandler28.reset((double) 0L, doubleArray32);
        double double34 = switchingFunctionsHandler28.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler28.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler28.evaluateStep(stepInterpolator37);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean41 = switchingFunctionsHandler40.isEmpty();
        double[] doubleArray44 = new double[] { 100.0d };
        boolean boolean45 = switchingFunctionsHandler40.reset((double) 0L, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler40.stop();
        boolean boolean47 = switchingFunctionsHandler40.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        switchingFunctionsHandler49.add(switchingFunction50, (double) (-1), (double) 3, 0);
        double[] doubleArray62 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean63 = switchingFunctionsHandler49.reset((double) (-1), doubleArray62);
        boolean boolean64 = switchingFunctionsHandler49.isEmpty();
        double double65 = switchingFunctionsHandler49.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction66 = null;
        switchingFunctionsHandler49.add(switchingFunction66, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean71 = switchingFunctionsHandler49.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler73 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean74 = switchingFunctionsHandler73.isEmpty();
        double[] doubleArray77 = new double[] { 100.0d };
        boolean boolean78 = switchingFunctionsHandler73.reset((double) 0L, doubleArray77);
        boolean boolean79 = switchingFunctionsHandler49.reset((double) 100L, doubleArray77);
        switchingFunctionsHandler40.stepAccepted((double) 10.0f, doubleArray77);
        switchingFunctionsHandler28.stepAccepted(0.0d, doubleArray77);
        boolean boolean82 = switchingFunctionsHandler0.reset((double) 10, doubleArray77);
        boolean boolean83 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test09934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09934");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler5.add(switchingFunction6, (double) (-1), (double) 3, 0);
        double[] doubleArray18 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean19 = switchingFunctionsHandler5.reset((double) (-1), doubleArray18);
        boolean boolean20 = switchingFunctionsHandler5.isEmpty();
        boolean boolean21 = switchingFunctionsHandler5.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler5.add(switchingFunction22, (double) (byte) 0, 0.0d, (int) ' ');
        double[] doubleArray31 = new double[] { 1.0f, (-1.0f), 100.0d };
        boolean boolean32 = switchingFunctionsHandler5.reset((double) 1L, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(52.0d, doubleArray31);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler0.evaluateStep(stepInterpolator34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean38 = switchingFunctionsHandler37.isEmpty();
        boolean boolean39 = switchingFunctionsHandler37.stop();
        double double40 = switchingFunctionsHandler37.getEventTime();
        boolean boolean41 = switchingFunctionsHandler37.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        switchingFunctionsHandler37.add(switchingFunction42, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray48 = new double[] {};
        boolean boolean49 = switchingFunctionsHandler37.reset((double) (short) 1, doubleArray48);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean52 = switchingFunctionsHandler51.isEmpty();
        double[] doubleArray55 = new double[] { 100.0d };
        boolean boolean56 = switchingFunctionsHandler51.reset((double) 0L, doubleArray55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean59 = switchingFunctionsHandler58.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler58.evaluateStep(stepInterpolator60);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler63 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean64 = switchingFunctionsHandler63.isEmpty();
        double[] doubleArray67 = new double[] { 100.0d };
        boolean boolean68 = switchingFunctionsHandler63.reset((double) 0L, doubleArray67);
        boolean boolean69 = switchingFunctionsHandler58.reset((double) 1, doubleArray67);
        boolean boolean70 = switchingFunctionsHandler51.reset((double) 100, doubleArray67);
        boolean boolean71 = switchingFunctionsHandler37.reset((double) (-1L), doubleArray67);
        switchingFunctionsHandler0.stepAccepted((double) (short) 1, doubleArray67);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator73 = null;
        boolean boolean74 = switchingFunctionsHandler0.evaluateStep(stepInterpolator73);
        double double75 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
    }

    @Test
    public void test09935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09935");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double double6 = switchingFunctionsHandler0.getEventTime();
        boolean boolean7 = switchingFunctionsHandler0.stop();
        boolean boolean8 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = switchingFunctionsHandler0.evaluateStep(stepInterpolator9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test09936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09936");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        switchingFunctionsHandler22.stepAccepted((double) (byte) 10, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray31);
        boolean boolean35 = switchingFunctionsHandler0.isEmpty();
        boolean boolean36 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler0.evaluateStep(stepInterpolator37);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        switchingFunctionsHandler0.add(switchingFunction39, (double) (byte) 1, (double) 1, 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        switchingFunctionsHandler0.add(switchingFunction44, (double) (byte) 100, (double) '4', (-1));
        boolean boolean49 = switchingFunctionsHandler0.isEmpty();
        double double50 = switchingFunctionsHandler0.getEventTime();
        boolean boolean51 = switchingFunctionsHandler0.stop();
        double double52 = switchingFunctionsHandler0.getEventTime();
        boolean boolean53 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test09937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09937");
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException7);
        java.lang.Object[] objArray9 = mathException8.getArguments();
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("hi!", throwable12);
        org.apache.commons.math.MathException mathException14 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", throwable12);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray9, throwable12);
        java.lang.Object[] objArray27 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", objArray27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray27);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray27);
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray9, (java.lang.Throwable) convergenceException32);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray50 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("", objArray50);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray50);
        java.lang.Object[] objArray53 = new java.lang.Object[] { 2, switchingFunctionsHandler41, 1, objArray50 };
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray50, (java.lang.Throwable) mathException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray50, (java.lang.Throwable) functionEvaluationException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray50, (java.lang.Throwable) functionEvaluationException63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray50);
        java.lang.String str66 = functionEvaluationException65.getPattern();
        java.lang.Object[] objArray67 = functionEvaluationException65.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "Evaluation failed for argument = 100", objArray9, (java.lang.Throwable) functionEvaluationException65);
        java.lang.Object[] objArray77 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("", objArray77);
        org.apache.commons.math.ode.IntegratorException integratorException79 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray77);
        org.apache.commons.math.MathException mathException80 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException79);
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException80);
        org.apache.commons.math.MathException mathException82 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray9, (java.lang.Throwable) mathException81);
        java.lang.Throwable[] throwableArray83 = mathException81.getSuppressed();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray83);
    }

    @Test
    public void test09938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09938");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray19);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray19, (java.lang.Throwable) derivativeException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", strArray19);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray63 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("", objArray63);
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray63);
        java.lang.Object[] objArray66 = new java.lang.Object[] { 2, switchingFunctionsHandler54, 1, objArray63 };
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray63, (java.lang.Throwable) mathException70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray63, (java.lang.Throwable) functionEvaluationException73);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray63, (java.lang.Throwable) functionEvaluationException76);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray63);
        java.lang.String str79 = functionEvaluationException78.getPattern();
        java.lang.Object[] objArray80 = functionEvaluationException78.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double83 = functionEvaluationException82.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException84 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray80, (java.lang.Throwable) functionEvaluationException82);
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException84);
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray19, (java.lang.Throwable) convergenceException85);
        org.apache.commons.math.ode.DerivativeException derivativeException87 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException88 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray19);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-1.0d) + "'", double83 == (-1.0d));
    }

    @Test
    public void test09939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09939");
        org.apache.commons.math.MathException mathException5 = new org.apache.commons.math.MathException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "hi!", (java.lang.Throwable) mathException5);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray21 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("", objArray21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray21);
        java.lang.Object[] objArray24 = new java.lang.Object[] { 2, switchingFunctionsHandler12, 1, objArray21 };
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) mathException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray21, (java.lang.Throwable) functionEvaluationException34);
        java.lang.Object[] objArray43 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("", objArray43);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray43);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException45);
        java.lang.Throwable[] throwableArray47 = integratorException45.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException45);
        functionEvaluationException34.addSuppressed((java.lang.Throwable) integratorException45);
        functionEvaluationException6.addSuppressed((java.lang.Throwable) integratorException45);
        double double51 = functionEvaluationException6.getArgument();
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException6);
        java.lang.Object[] objArray53 = functionEvaluationException6.getArguments();
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!");
        java.lang.Throwable[] throwableArray57 = mathException56.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray57);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: hi!", objArray53, (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 100", (java.lang.Throwable) convergenceException63);
        java.lang.Object[] objArray65 = functionEvaluationException64.getArguments();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Convergence failed", objArray53, (java.lang.Throwable) functionEvaluationException64);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
    }

    @Test
    public void test09940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09940");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        double double8 = switchingFunctionsHandler0.getEventTime();
        boolean boolean9 = switchingFunctionsHandler0.stop();
        double[] doubleArray16 = new double[] { 3, 100, (-1.0f), (byte) -1, 1.0d };
        switchingFunctionsHandler0.stepAccepted((-1.0d), doubleArray16);
        double[] doubleArray19 = null;
        boolean boolean20 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray19);
        boolean boolean21 = switchingFunctionsHandler0.stop();
        double double22 = switchingFunctionsHandler0.getEventTime();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler0.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler0.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        switchingFunctionsHandler0.add(switchingFunction28, 35.0d, (double) 1.0f, 100);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = switchingFunctionsHandler0.evaluateStep(stepInterpolator33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[3.0, 100.0, -1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test09941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09941");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        java.lang.Object[] objArray4 = functionEvaluationException3.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException7);
        double double9 = functionEvaluationException7.getArgument();
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) functionEvaluationException7);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", objArray4, (java.lang.Throwable) mathException10);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray44 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("", objArray44);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray44);
        java.lang.Object[] objArray47 = new java.lang.Object[] { 2, switchingFunctionsHandler35, 1, objArray44 };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray44, (java.lang.Throwable) mathException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray44, (java.lang.Throwable) functionEvaluationException54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray44, (java.lang.Throwable) functionEvaluationException57);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray44);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray25, (java.lang.Throwable) convergenceException60);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray73);
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray73);
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException("", strArray73);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray73);
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray73);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 100", (java.lang.Object[]) strArray25, (java.lang.Throwable) derivativeException78);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException84 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100);
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException84);
        java.lang.Object[] objArray86 = functionEvaluationException84.getArguments();
        java.lang.Throwable throwable87 = null;
        org.apache.commons.math.MathException mathException88 = new org.apache.commons.math.MathException("hi!", objArray86, throwable87);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        org.apache.commons.math.MathException mathException92 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException91);
        double double93 = functionEvaluationException91.getArgument();
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) functionEvaluationException91);
        org.apache.commons.math.ConvergenceException convergenceException95 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray86, (java.lang.Throwable) functionEvaluationException91);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException96 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, (java.lang.Throwable) functionEvaluationException91);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException97 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray25, (java.lang.Throwable) functionEvaluationException96);
        org.apache.commons.math.ConvergenceException convergenceException98 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray4, (java.lang.Throwable) functionEvaluationException97);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[52.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[52.0]");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[100.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 52.0d + "'", double93 == 52.0d);
    }

    @Test
    public void test09942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09942");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler0.evaluateStep(stepInterpolator24);
        boolean boolean26 = switchingFunctionsHandler0.stop();
        boolean boolean27 = switchingFunctionsHandler0.stop();
        boolean boolean28 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler0.add(switchingFunction29, Double.NaN, 3.0d, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler0.add(switchingFunction34, (double) 100L, (double) (short) -1, 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean41 = switchingFunctionsHandler40.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler40.evaluateStep(stepInterpolator42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean46 = switchingFunctionsHandler45.isEmpty();
        double[] doubleArray49 = new double[] { 100.0d };
        boolean boolean50 = switchingFunctionsHandler45.reset((double) 0L, doubleArray49);
        switchingFunctionsHandler40.stepAccepted((double) (byte) 10, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        switchingFunctionsHandler40.add(switchingFunction52, (double) (-1), (double) 100.0f, 10);
        boolean boolean57 = switchingFunctionsHandler40.isEmpty();
        boolean boolean58 = switchingFunctionsHandler40.stop();
        boolean boolean59 = switchingFunctionsHandler40.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean62 = switchingFunctionsHandler61.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler61.evaluateStep(stepInterpolator63);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean67 = switchingFunctionsHandler66.isEmpty();
        double[] doubleArray70 = new double[] { 100.0d };
        boolean boolean71 = switchingFunctionsHandler66.reset((double) 0L, doubleArray70);
        boolean boolean72 = switchingFunctionsHandler61.reset((double) 1, doubleArray70);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction73 = null;
        switchingFunctionsHandler61.add(switchingFunction73, (double) (short) 1, (double) 0, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler79 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean80 = switchingFunctionsHandler79.isEmpty();
        double[] doubleArray83 = new double[] { 100.0d };
        boolean boolean84 = switchingFunctionsHandler79.reset((double) 0L, doubleArray83);
        boolean boolean85 = switchingFunctionsHandler61.reset((double) ' ', doubleArray83);
        boolean boolean86 = switchingFunctionsHandler40.reset((double) (byte) 100, doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((double) (byte) -1, doubleArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test09943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09943");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray2 = null;
        switchingFunctionsHandler0.stepAccepted((double) 0, doubleArray2);
        double double4 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray6 = null;
        boolean boolean7 = switchingFunctionsHandler0.reset((-1.0d), doubleArray6);
        boolean boolean8 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler0.evaluateStep(stepInterpolator9);
        double double11 = switchingFunctionsHandler0.getEventTime();
        double double12 = switchingFunctionsHandler0.getEventTime();
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler0.add(switchingFunction14, (double) 10L, (double) 2, 1);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test09944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09944");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean10 = switchingFunctionsHandler9.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler9.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        double[] doubleArray18 = new double[] { 100.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) 0L, doubleArray18);
        switchingFunctionsHandler9.stepAccepted((double) (byte) 10, doubleArray18);
        boolean boolean21 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean24 = switchingFunctionsHandler23.isEmpty();
        double[] doubleArray27 = new double[] { 100.0d };
        boolean boolean28 = switchingFunctionsHandler23.reset((double) 0L, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean31 = switchingFunctionsHandler30.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = switchingFunctionsHandler30.evaluateStep(stepInterpolator32);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean36 = switchingFunctionsHandler35.isEmpty();
        double[] doubleArray39 = new double[] { 100.0d };
        boolean boolean40 = switchingFunctionsHandler35.reset((double) 0L, doubleArray39);
        boolean boolean41 = switchingFunctionsHandler30.reset((double) 1, doubleArray39);
        boolean boolean42 = switchingFunctionsHandler23.reset((double) 100, doubleArray39);
        double double43 = switchingFunctionsHandler23.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean46 = switchingFunctionsHandler45.isEmpty();
        double[] doubleArray49 = new double[] { 100.0d };
        boolean boolean50 = switchingFunctionsHandler45.reset((double) 0L, doubleArray49);
        switchingFunctionsHandler23.stepAccepted(0.0d, doubleArray49);
        switchingFunctionsHandler0.stepAccepted(2.0d, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        switchingFunctionsHandler0.add(switchingFunction53, (double) 0L, (double) (short) 100, 1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test09945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09945");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) 0L, 1.0d, (int) (short) 1);
        double double9 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, Double.NaN, 0.0d, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler0.add(switchingFunction15, (double) (byte) -1, 1.0d, (int) (byte) 100);
        boolean boolean20 = switchingFunctionsHandler0.stop();
        java.lang.Class<?> wildcardClass21 = switchingFunctionsHandler0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test09946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09946");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray32 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("", objArray32);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray32);
        java.lang.Object[] objArray35 = new java.lang.Object[] { 2, switchingFunctionsHandler23, 1, objArray32 };
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException39 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) mathException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) functionEvaluationException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray32, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray32);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray58);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray58);
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray58);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException61);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException61);
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!", objArray32, (java.lang.Throwable) convergenceException63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("", objArray32);
        java.lang.Object[] objArray74 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("", objArray74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray74);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("Evaluation failed for argument = {0}", objArray32, (java.lang.Throwable) functionEvaluationException76);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!");
        java.lang.Object[] objArray80 = convergenceException79.getArguments();
        mathException77.addSuppressed((java.lang.Throwable) convergenceException79);
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException79);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray10, (java.lang.Throwable) derivativeException82);
        java.lang.String[] strArray92 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException93 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray92);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray92);
        org.apache.commons.math.ode.DerivativeException derivativeException95 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray92);
        org.apache.commons.math.ConvergenceException convergenceException96 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray10, (java.lang.Throwable) derivativeException95);
        org.apache.commons.math.ode.DerivativeException derivativeException97 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", strArray10);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertNotNull(strArray92);
    }

    @Test
    public void test09947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09947");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean30 = switchingFunctionsHandler29.isEmpty();
        double[] doubleArray33 = new double[] { 100.0d };
        boolean boolean34 = switchingFunctionsHandler29.reset((double) 0L, doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean37 = switchingFunctionsHandler36.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler36.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        double[] doubleArray45 = new double[] { 100.0d };
        boolean boolean46 = switchingFunctionsHandler41.reset((double) 0L, doubleArray45);
        boolean boolean47 = switchingFunctionsHandler36.reset((double) 1, doubleArray45);
        boolean boolean48 = switchingFunctionsHandler29.reset((double) 100, doubleArray45);
        double double49 = switchingFunctionsHandler29.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean52 = switchingFunctionsHandler51.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = switchingFunctionsHandler51.evaluateStep(stepInterpolator53);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean57 = switchingFunctionsHandler56.isEmpty();
        double[] doubleArray60 = new double[] { 100.0d };
        boolean boolean61 = switchingFunctionsHandler56.reset((double) 0L, doubleArray60);
        switchingFunctionsHandler51.stepAccepted((double) (byte) 10, doubleArray60);
        switchingFunctionsHandler29.stepAccepted(0.0d, doubleArray60);
        switchingFunctionsHandler26.stepAccepted((double) (short) 0, doubleArray60);
        switchingFunctionsHandler0.stepAccepted((double) ' ', doubleArray60);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction66 = null;
        switchingFunctionsHandler0.add(switchingFunction66, (double) 0, (double) 0, (int) (short) 100);
        double double71 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator72 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = switchingFunctionsHandler0.evaluateStep(stepInterpolator72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
    }

    @Test
    public void test09948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09948");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray17 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray17);
        java.lang.Object[] objArray20 = new java.lang.Object[] { 2, switchingFunctionsHandler8, 1, objArray17 };
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) mathException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) functionEvaluationException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) functionEvaluationException30);
        java.lang.Object[] objArray39 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("", objArray39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray39);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException41);
        java.lang.Throwable[] throwableArray43 = integratorException41.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException41);
        functionEvaluationException30.addSuppressed((java.lang.Throwable) integratorException41);
        double double46 = functionEvaluationException30.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException();
        functionEvaluationException30.addSuppressed((java.lang.Throwable) convergenceException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException30);
        java.lang.Object[] objArray50 = functionEvaluationException30.getArguments();
        java.lang.Object[] objArray51 = functionEvaluationException30.getArguments();
        java.lang.Object[] objArray62 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("", objArray62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "", (java.lang.Throwable) convergenceException63);
        double double65 = functionEvaluationException64.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.MathException", (java.lang.Throwable) functionEvaluationException64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", objArray51, (java.lang.Throwable) functionEvaluationException66);
        java.lang.Throwable[] throwableArray68 = functionEvaluationException66.getSuppressed();
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 100.0d + "'", double46 == 100.0d);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[100.0]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[100.0]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 97.0d + "'", double65 == 97.0d);
        org.junit.Assert.assertNotNull(throwableArray68);
    }

    @Test
    public void test09949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09949");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        boolean boolean7 = switchingFunctionsHandler0.isEmpty();
        double double8 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean11 = switchingFunctionsHandler10.isEmpty();
        boolean boolean12 = switchingFunctionsHandler10.stop();
        double double13 = switchingFunctionsHandler10.getEventTime();
        boolean boolean14 = switchingFunctionsHandler10.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler10.add(switchingFunction15, (double) 0L, (double) 1.0f, (int) (short) 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler21.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean27 = switchingFunctionsHandler26.isEmpty();
        double[] doubleArray30 = new double[] { 100.0d };
        boolean boolean31 = switchingFunctionsHandler26.reset((double) 0L, doubleArray30);
        boolean boolean32 = switchingFunctionsHandler21.reset((double) 1, doubleArray30);
        boolean boolean33 = switchingFunctionsHandler21.stop();
        double double34 = switchingFunctionsHandler21.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean37 = switchingFunctionsHandler36.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler36.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        double[] doubleArray45 = new double[] { 100.0d };
        boolean boolean46 = switchingFunctionsHandler41.reset((double) 0L, doubleArray45);
        switchingFunctionsHandler36.stepAccepted((double) (byte) 10, doubleArray45);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean50 = switchingFunctionsHandler49.isEmpty();
        double[] doubleArray53 = new double[] { 100.0d };
        boolean boolean54 = switchingFunctionsHandler49.reset((double) 0L, doubleArray53);
        switchingFunctionsHandler36.stepAccepted(100.0d, doubleArray53);
        boolean boolean56 = switchingFunctionsHandler21.reset((double) 2, doubleArray53);
        boolean boolean57 = switchingFunctionsHandler10.reset((-1.0d), doubleArray53);
        boolean boolean58 = switchingFunctionsHandler0.reset(10.0d, doubleArray53);
        double double59 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler0.evaluateStep(stepInterpolator60);
        boolean boolean62 = switchingFunctionsHandler0.isEmpty();
        double double63 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        boolean boolean65 = switchingFunctionsHandler0.evaluateStep(stepInterpolator64);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test09950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09950");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler0.add(switchingFunction25, (double) 'a', 97.0d, (int) (byte) 10);
        double[] doubleArray31 = null;
        boolean boolean32 = switchingFunctionsHandler0.reset((double) (byte) 0, doubleArray31);
        boolean boolean33 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        switchingFunctionsHandler35.add(switchingFunction36, (double) (-1), (double) 3, 0);
        double[] doubleArray48 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean49 = switchingFunctionsHandler35.reset((double) (-1), doubleArray48);
        boolean boolean50 = switchingFunctionsHandler35.isEmpty();
        boolean boolean51 = switchingFunctionsHandler35.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        switchingFunctionsHandler35.add(switchingFunction52, (double) (byte) 0, 0.0d, (int) ' ');
        double[] doubleArray61 = new double[] { 1.0f, (-1.0f), 100.0d };
        boolean boolean62 = switchingFunctionsHandler35.reset((double) 1L, doubleArray61);
        boolean boolean63 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray61);
        boolean boolean64 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, -1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test09951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09951");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray16);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("", strArray32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("", strArray32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray16, (java.lang.Throwable) derivativeException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", strArray16);
        org.apache.commons.math.MathException mathException41 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray60 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("", objArray60);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray60);
        java.lang.Object[] objArray63 = new java.lang.Object[] { 2, switchingFunctionsHandler51, 1, objArray60 };
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray60, (java.lang.Throwable) mathException67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray60, (java.lang.Throwable) functionEvaluationException70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray60, (java.lang.Throwable) functionEvaluationException73);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray60);
        java.lang.String str76 = functionEvaluationException75.getPattern();
        java.lang.Object[] objArray77 = functionEvaluationException75.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double80 = functionEvaluationException79.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray77, (java.lang.Throwable) functionEvaluationException79);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException81);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray16, (java.lang.Throwable) convergenceException82);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException((java.lang.Throwable) convergenceException82);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-1.0d) + "'", double80 == (-1.0d));
    }

    @Test
    public void test09952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09952");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler0.evaluateStep(stepInterpolator25);
        boolean boolean27 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler0.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean32 = switchingFunctionsHandler31.isEmpty();
        boolean boolean33 = switchingFunctionsHandler31.stop();
        boolean boolean34 = switchingFunctionsHandler31.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean37 = switchingFunctionsHandler36.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler36.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        double[] doubleArray45 = new double[] { 100.0d };
        boolean boolean46 = switchingFunctionsHandler41.reset((double) 0L, doubleArray45);
        switchingFunctionsHandler36.stepAccepted((double) (byte) 10, doubleArray45);
        boolean boolean48 = switchingFunctionsHandler31.reset(0.0d, doubleArray45);
        boolean boolean49 = switchingFunctionsHandler0.reset((double) 2, doubleArray45);
        double double50 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler0.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        switchingFunctionsHandler0.add(switchingFunction53, 0.0d, (double) (-1), 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        switchingFunctionsHandler0.add(switchingFunction58, (double) (-1L), (double) (byte) 0, 1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test09953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09953");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray23 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("", objArray23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray23);
        java.lang.Object[] objArray26 = new java.lang.Object[] { 2, switchingFunctionsHandler14, 1, objArray23 };
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException30 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray23, (java.lang.Throwable) mathException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray23, (java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray23, (java.lang.Throwable) functionEvaluationException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray23);
        java.lang.String str39 = functionEvaluationException38.getPattern();
        java.lang.Object[] objArray40 = functionEvaluationException38.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double43 = functionEvaluationException42.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray40, (java.lang.Throwable) functionEvaluationException42);
        java.lang.Object[] objArray45 = functionEvaluationException42.getArguments();
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", objArray45);
        java.lang.Throwable throwable48 = null;
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException(throwable48);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("hi!");
        mathException49.addSuppressed((java.lang.Throwable) mathException51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException49);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException53);
        java.lang.Object[] objArray55 = derivativeException54.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", objArray45, (java.lang.Throwable) convergenceException56);
        java.lang.Throwable throwable59 = null;
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException(throwable59);
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("hi!");
        mathException60.addSuppressed((java.lang.Throwable) mathException62);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException60);
        java.lang.Throwable[] throwableArray65 = derivativeException64.getSuppressed();
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) throwableArray65);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", objArray45, (java.lang.Throwable) mathException66);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1.0d) + "'", double43 == (-1.0d));
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[-1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[-1.0]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray65);
    }

    @Test
    public void test09954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09954");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        switchingFunctionsHandler22.stepAccepted((double) (byte) 10, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray31);
        boolean boolean35 = switchingFunctionsHandler0.isEmpty();
        boolean boolean36 = switchingFunctionsHandler0.stop();
        double double37 = switchingFunctionsHandler0.getEventTime();
        boolean boolean38 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test09955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09955");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        double double16 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler0.add(switchingFunction23, (double) (short) -1, (-1.0d), (int) (short) -1);
        double double28 = switchingFunctionsHandler0.getEventTime();
        double double29 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        switchingFunctionsHandler0.add(switchingFunction30, (double) 'a', (double) 2, 3);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = switchingFunctionsHandler0.evaluateStep(stepInterpolator35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
    }

    @Test
    public void test09956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09956");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) (byte) -1, (-1.0d), (int) 'a');
        boolean boolean9 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, (double) (short) 0, (double) '#', (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler0.add(switchingFunction15, (double) (byte) 0, (double) (short) 1, (int) (short) 10);
        double double20 = switchingFunctionsHandler0.getEventTime();
        double double21 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
    }

    @Test
    public void test09957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09957");
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "hi!", (java.lang.Throwable) mathException8);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException9);
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", objArray27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray27);
        java.lang.Object[] objArray30 = new java.lang.Object[] { 2, switchingFunctionsHandler18, 1, objArray27 };
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) mathException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException42);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException42);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Throwable) integratorException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException45);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray30);
    }

    @Test
    public void test09958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09958");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        double double6 = switchingFunctionsHandler0.getEventTime();
        boolean boolean7 = switchingFunctionsHandler0.isEmpty();
        double double8 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean11 = switchingFunctionsHandler10.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler10.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler10.add(switchingFunction14, (double) 0L, 1.0d, (int) (short) 1);
        boolean boolean19 = switchingFunctionsHandler10.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        double[] doubleArray25 = new double[] { 100.0d };
        boolean boolean26 = switchingFunctionsHandler21.reset((double) 0L, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean29 = switchingFunctionsHandler28.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler28.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean34 = switchingFunctionsHandler33.isEmpty();
        double[] doubleArray37 = new double[] { 100.0d };
        boolean boolean38 = switchingFunctionsHandler33.reset((double) 0L, doubleArray37);
        boolean boolean39 = switchingFunctionsHandler28.reset((double) 1, doubleArray37);
        boolean boolean40 = switchingFunctionsHandler21.reset((double) 100, doubleArray37);
        double double41 = switchingFunctionsHandler21.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        switchingFunctionsHandler21.add(switchingFunction42, (double) 0.0f, (double) 10, (int) (byte) 0);
        boolean boolean47 = switchingFunctionsHandler21.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        switchingFunctionsHandler49.add(switchingFunction50, (double) (-1), (double) 3, 0);
        double[] doubleArray62 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean63 = switchingFunctionsHandler49.reset((double) (-1), doubleArray62);
        boolean boolean64 = switchingFunctionsHandler21.reset((double) 3, doubleArray62);
        boolean boolean65 = switchingFunctionsHandler10.reset((double) 10.0f, doubleArray62);
        boolean boolean66 = switchingFunctionsHandler0.reset((double) (short) 0, doubleArray62);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test09959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09959");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        double double16 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        double double24 = switchingFunctionsHandler0.getEventTime();
        boolean boolean25 = switchingFunctionsHandler0.stop();
        boolean boolean26 = switchingFunctionsHandler0.isEmpty();
        double double27 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean30 = switchingFunctionsHandler29.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler29.evaluateStep(stepInterpolator31);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler29.add(switchingFunction33, (double) 0L, 1.0d, (int) (short) 1);
        double double38 = switchingFunctionsHandler29.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        switchingFunctionsHandler29.add(switchingFunction39, Double.NaN, 0.0d, (int) (short) 1);
        boolean boolean44 = switchingFunctionsHandler29.stop();
        double double45 = switchingFunctionsHandler29.getEventTime();
        double double46 = switchingFunctionsHandler29.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        switchingFunctionsHandler48.add(switchingFunction49, (double) (-1), (double) 3, 0);
        double[] doubleArray61 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean62 = switchingFunctionsHandler48.reset((double) (-1), doubleArray61);
        boolean boolean63 = switchingFunctionsHandler48.isEmpty();
        double double64 = switchingFunctionsHandler48.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        switchingFunctionsHandler48.add(switchingFunction65, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean70 = switchingFunctionsHandler48.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean73 = switchingFunctionsHandler72.isEmpty();
        double[] doubleArray76 = new double[] { 100.0d };
        boolean boolean77 = switchingFunctionsHandler72.reset((double) 0L, doubleArray76);
        boolean boolean78 = switchingFunctionsHandler48.reset((double) 100L, doubleArray76);
        boolean boolean79 = switchingFunctionsHandler29.reset((-1.0d), doubleArray76);
        boolean boolean80 = switchingFunctionsHandler0.reset((-1.0d), doubleArray76);
        boolean boolean81 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test09960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09960");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.MathException mathException18 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        java.lang.Object[] objArray36 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("", objArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray36);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException43 = new org.apache.commons.math.MathException("", objArray36, (java.lang.Throwable) functionEvaluationException42);
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException42);
        java.lang.Object[] objArray45 = functionEvaluationException42.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException47);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray45, (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("", objArray70);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray70);
        java.lang.Object[] objArray73 = new java.lang.Object[] { 2, switchingFunctionsHandler61, 1, objArray70 };
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException76);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray70, (java.lang.Throwable) mathException77);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException80 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray70, (java.lang.Throwable) functionEvaluationException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray70, (java.lang.Throwable) functionEvaluationException83);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray70);
        java.lang.String str86 = functionEvaluationException85.getPattern();
        java.lang.Object[] objArray87 = functionEvaluationException85.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double90 = functionEvaluationException89.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray87, (java.lang.Throwable) functionEvaluationException89);
        org.apache.commons.math.ode.IntegratorException integratorException92 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray87);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException93 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, (java.lang.Throwable) integratorException92);
        org.apache.commons.math.MathException mathException94 = new org.apache.commons.math.MathException("Evaluation failed for argument = 100", objArray45, (java.lang.Throwable) functionEvaluationException93);
        org.apache.commons.math.MathException mathException95 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray16, (java.lang.Throwable) mathException94);
        org.apache.commons.math.ode.DerivativeException derivativeException96 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException97 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-1.0d) + "'", double90 == (-1.0d));
    }

    @Test
    public void test09961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09961");
        org.apache.commons.math.MathException mathException8 = new org.apache.commons.math.MathException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "hi!", (java.lang.Throwable) mathException8);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException9);
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", objArray27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray27);
        java.lang.Object[] objArray30 = new java.lang.Object[] { 2, switchingFunctionsHandler18, 1, objArray27 };
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) mathException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) functionEvaluationException40);
        java.lang.Throwable throwable43 = null;
        org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", (java.lang.Object[]) throwableArray11, throwable43);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray11);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray63);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("hi!", (java.lang.Object[]) strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("", strArray63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("", strArray63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray63);
        org.apache.commons.math.MathException mathException70 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", strArray63);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray63);
        java.lang.Object[] objArray73 = integratorException72.getArguments();
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray73);
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) mathException74);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
    }

    @Test
    public void test09962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09962");
        java.lang.Object[] objArray18 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", objArray18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray18);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray18);
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", objArray18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray18);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray33);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray33);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: ", objArray18, (java.lang.Throwable) integratorException36);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("", objArray18);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray68 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("", objArray68);
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray68);
        java.lang.Object[] objArray71 = new java.lang.Object[] { 2, switchingFunctionsHandler59, 1, objArray68 };
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException75 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray68, (java.lang.Throwable) mathException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray68, (java.lang.Throwable) functionEvaluationException78);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray68, (java.lang.Throwable) functionEvaluationException81);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray51, (java.lang.Throwable) functionEvaluationException81);
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException86 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: ", strArray51);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", objArray18, (java.lang.Throwable) derivativeException86);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException88 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", objArray18);
        org.apache.commons.math.ode.IntegratorException integratorException89 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException88);
        java.lang.Throwable[] throwableArray90 = functionEvaluationException88.getSuppressed();
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(throwableArray90);
    }

    @Test
    public void test09963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09963");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", (java.lang.Object[]) strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) strArray15);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("", objArray53);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray53);
        java.lang.Object[] objArray56 = new java.lang.Object[] { 2, switchingFunctionsHandler44, 1, objArray53 };
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException60 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray53, (java.lang.Throwable) mathException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray53, (java.lang.Throwable) functionEvaluationException63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray53, (java.lang.Throwable) functionEvaluationException66);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray53);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray34, (java.lang.Throwable) convergenceException69);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) functionEvaluationException75);
        java.lang.Throwable[] throwableArray78 = functionEvaluationException75.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray34, (java.lang.Throwable) functionEvaluationException75);
        java.lang.Object[] objArray80 = convergenceException79.getArguments();
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray15, (java.lang.Throwable) convergenceException79);
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.MathException: Evaluation failed for argument = -1", strArray15);
        java.lang.String str83 = derivativeException82.getPattern();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org.apache.commons.math.MathException: Evaluation failed for argument = -1" + "'", str83, "org.apache.commons.math.MathException: Evaluation failed for argument = -1");
    }

    @Test
    public void test09964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09964");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        java.lang.Object[] objArray15 = derivativeException14.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray30);
        java.lang.Object[] objArray33 = new java.lang.Object[] { 2, switchingFunctionsHandler21, 1, objArray30 };
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException37 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) mathException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) functionEvaluationException43);
        java.lang.Object[] objArray52 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("", objArray52);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray52);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException54);
        java.lang.Throwable[] throwableArray56 = integratorException54.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException54);
        functionEvaluationException43.addSuppressed((java.lang.Throwable) integratorException54);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!", objArray15, (java.lang.Throwable) integratorException54);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) integratorException54);
        java.lang.Throwable[] throwableArray61 = convergenceException60.getSuppressed();
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("", (java.lang.Object[]) throwableArray61);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray74);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray74);
        org.apache.commons.math.ode.IntegratorException integratorException78 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', (java.lang.Throwable) integratorException78);
        java.lang.String str80 = functionEvaluationException79.getPattern();
        org.apache.commons.math.MathException mathException81 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException79);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 100", (java.lang.Object[]) throwableArray61, (java.lang.Throwable) mathException81);
        org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: Evaluation failed for argument = -1", (java.lang.Throwable) mathException81);
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) mathException81);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, org.apache.commons.math.MathException: hi!, , hi!, org.apache.commons.math.MathException: hi!]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str80, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!");
    }

    @Test
    public void test09965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09965");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler24.add(switchingFunction25, (double) (-1), (double) 3, 0);
        double[] doubleArray37 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean38 = switchingFunctionsHandler24.reset((double) (-1), doubleArray37);
        boolean boolean39 = switchingFunctionsHandler24.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler41.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean47 = switchingFunctionsHandler46.isEmpty();
        double[] doubleArray50 = new double[] { 100.0d };
        boolean boolean51 = switchingFunctionsHandler46.reset((double) 0L, doubleArray50);
        switchingFunctionsHandler41.stepAccepted((double) (byte) 10, doubleArray50);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.isEmpty();
        double[] doubleArray58 = new double[] { 100.0d };
        boolean boolean59 = switchingFunctionsHandler54.reset((double) 0L, doubleArray58);
        switchingFunctionsHandler41.stepAccepted(100.0d, doubleArray58);
        boolean boolean61 = switchingFunctionsHandler24.reset((-1.0d), doubleArray58);
        boolean boolean62 = switchingFunctionsHandler0.reset((double) 100, doubleArray58);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler0.evaluateStep(stepInterpolator63);
        double double65 = switchingFunctionsHandler0.getEventTime();
        boolean boolean66 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator67 = null;
        boolean boolean68 = switchingFunctionsHandler0.evaluateStep(stepInterpolator67);
        boolean boolean69 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator70 = null;
        boolean boolean71 = switchingFunctionsHandler0.evaluateStep(stepInterpolator70);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator72 = null;
        boolean boolean73 = switchingFunctionsHandler0.evaluateStep(stepInterpolator72);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test09966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09966");
        java.lang.Object[] objArray15 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray15);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("", objArray15, (java.lang.Throwable) functionEvaluationException21);
        org.apache.commons.math.MathException mathException23 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException21);
        java.lang.Object[] objArray24 = functionEvaluationException21.getArguments();
        java.lang.Throwable[] throwableArray25 = functionEvaluationException21.getSuppressed();
        java.lang.Object[] objArray26 = functionEvaluationException21.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray26);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray56 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("", objArray56);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray56);
        java.lang.Object[] objArray59 = new java.lang.Object[] { 2, switchingFunctionsHandler47, 1, objArray56 };
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray56, (java.lang.Throwable) mathException63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray56, (java.lang.Throwable) functionEvaluationException66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray56, (java.lang.Throwable) functionEvaluationException69);
        org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray39, (java.lang.Throwable) functionEvaluationException69);
        java.lang.Throwable[] throwableArray72 = functionEvaluationException69.getSuppressed();
        java.lang.Throwable[] throwableArray73 = functionEvaluationException69.getSuppressed();
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray73);
        java.lang.String str75 = mathException74.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.MathException: ", (java.lang.Throwable) mathException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: hi!", objArray26, (java.lang.Throwable) functionEvaluationException76);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) convergenceException81);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray26, (java.lang.Throwable) functionEvaluationException82);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str75, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!");
    }

    @Test
    public void test09967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09967");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        boolean boolean25 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = switchingFunctionsHandler27.evaluateStep(stepInterpolator29);
        boolean boolean31 = switchingFunctionsHandler27.stop();
        double double32 = switchingFunctionsHandler27.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        switchingFunctionsHandler34.add(switchingFunction35, (double) (-1), (double) 3, 0);
        double[] doubleArray47 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean48 = switchingFunctionsHandler34.reset((double) (-1), doubleArray47);
        switchingFunctionsHandler27.stepAccepted(0.0d, doubleArray47);
        boolean boolean50 = switchingFunctionsHandler0.reset(52.0d, doubleArray47);
        boolean boolean51 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator52 = null;
        boolean boolean53 = switchingFunctionsHandler0.evaluateStep(stepInterpolator52);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = switchingFunctionsHandler0.evaluateStep(stepInterpolator54);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test09968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09968");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException9);
        java.lang.Object[] objArray11 = mathException10.getArguments();
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", objArray11, throwable12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray11);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", objArray11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray31);
        java.lang.Object[] objArray34 = new java.lang.Object[] { 2, switchingFunctionsHandler22, 1, objArray31 };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) mathException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException44);
        java.lang.Object[] objArray53 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("", objArray53);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray53);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException55);
        java.lang.Throwable[] throwableArray57 = integratorException55.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException55);
        functionEvaluationException44.addSuppressed((java.lang.Throwable) integratorException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) integratorException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.IntegratorException: ", objArray11, (java.lang.Throwable) integratorException55);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", objArray11);
        java.lang.Throwable[] throwableArray63 = convergenceException62.getSuppressed();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray63);
    }

    @Test
    public void test09969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09969");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        switchingFunctionsHandler0.stepAccepted(100.0d, doubleArray17);
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler0.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double double29 = switchingFunctionsHandler27.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean32 = switchingFunctionsHandler31.isEmpty();
        double[] doubleArray35 = new double[] { 100.0d };
        boolean boolean36 = switchingFunctionsHandler31.reset((double) 0L, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean39 = switchingFunctionsHandler38.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler38.evaluateStep(stepInterpolator40);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean44 = switchingFunctionsHandler43.isEmpty();
        double[] doubleArray47 = new double[] { 100.0d };
        boolean boolean48 = switchingFunctionsHandler43.reset((double) 0L, doubleArray47);
        boolean boolean49 = switchingFunctionsHandler38.reset((double) 1, doubleArray47);
        boolean boolean50 = switchingFunctionsHandler31.reset((double) 100, doubleArray47);
        double double51 = switchingFunctionsHandler31.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean54 = switchingFunctionsHandler53.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler53.evaluateStep(stepInterpolator55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean59 = switchingFunctionsHandler58.isEmpty();
        double[] doubleArray62 = new double[] { 100.0d };
        boolean boolean63 = switchingFunctionsHandler58.reset((double) 0L, doubleArray62);
        switchingFunctionsHandler53.stepAccepted((double) (byte) 10, doubleArray62);
        switchingFunctionsHandler31.stepAccepted(0.0d, doubleArray62);
        boolean boolean66 = switchingFunctionsHandler31.isEmpty();
        boolean boolean67 = switchingFunctionsHandler31.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler69 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        switchingFunctionsHandler69.add(switchingFunction70, (double) (-1), (double) 3, 0);
        double[] doubleArray82 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean83 = switchingFunctionsHandler69.reset((double) (-1), doubleArray82);
        switchingFunctionsHandler31.stepAccepted((double) 'a', doubleArray82);
        boolean boolean85 = switchingFunctionsHandler27.reset((double) 3, doubleArray82);
        switchingFunctionsHandler0.stepAccepted((double) (short) 0, doubleArray82);
        double double87 = switchingFunctionsHandler0.getEventTime();
        double double88 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue(Double.isNaN(double88));
    }

    @Test
    public void test09970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09970");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray18 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", objArray18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray18);
        java.lang.Object[] objArray21 = new java.lang.Object[] { 2, switchingFunctionsHandler9, 1, objArray18 };
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException25 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray18, (java.lang.Throwable) mathException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException26);
        java.lang.Object[] objArray28 = functionEvaluationException26.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        double double32 = functionEvaluationException31.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray47 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("", objArray47);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray47);
        java.lang.Object[] objArray50 = new java.lang.Object[] { 2, switchingFunctionsHandler38, 1, objArray47 };
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException54 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray47, (java.lang.Throwable) mathException54);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException54);
        mathException34.addSuppressed((java.lang.Throwable) integratorException56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.MathException: hi!", objArray28, (java.lang.Throwable) mathException34);
        java.lang.Object[] objArray59 = mathException34.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException68);
        java.lang.Object[] objArray70 = mathException69.getArguments();
        java.lang.Throwable throwable71 = null;
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("hi!", objArray70, throwable71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray70);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("", objArray70);
        java.lang.Object[] objArray82 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("", objArray82);
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.MathException mathException85 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray82, (java.lang.Throwable) convergenceException84);
        java.lang.Throwable[] throwableArray86 = mathException85.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray70, (java.lang.Throwable) mathException85);
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Throwable) convergenceException87);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.ode.IntegratorException: hi!", objArray59, (java.lang.Throwable) convergenceException88);
        java.lang.Throwable throwable90 = null;
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray59, throwable90);
        java.lang.Throwable[] throwableArray92 = convergenceException91.getSuppressed();
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 52.0d + "'", double32 == 52.0d);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(throwableArray92);
    }

    @Test
    public void test09971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09971");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", objArray27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray27);
        java.lang.Object[] objArray30 = new java.lang.Object[] { 2, switchingFunctionsHandler18, 1, objArray27 };
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) mathException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray27, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray10, (java.lang.Throwable) functionEvaluationException40);
        java.lang.Throwable[] throwableArray43 = functionEvaluationException40.getSuppressed();
        java.lang.Throwable[] throwableArray44 = functionEvaluationException40.getSuppressed();
        org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray44);
        java.lang.String str46 = mathException45.getPattern();
        org.apache.commons.math.MathException mathException47 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) mathException45);
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException45);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str46, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!");
    }

    @Test
    public void test09972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09972");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        double double22 = switchingFunctionsHandler0.getEventTime();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler0.evaluateStep(stepInterpolator25);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test09973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09973");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException7 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException6);
        java.lang.Object[] objArray8 = mathException7.getArguments();
        java.lang.Throwable throwable9 = null;
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!", objArray8, throwable9);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray46 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("", objArray46);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray46);
        java.lang.Object[] objArray49 = new java.lang.Object[] { 2, switchingFunctionsHandler37, 1, objArray46 };
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray46, (java.lang.Throwable) mathException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray46, (java.lang.Throwable) functionEvaluationException56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray46, (java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray46);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray27, (java.lang.Throwable) convergenceException62);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) strArray27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", objArray8, (java.lang.Throwable) functionEvaluationException67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, (java.lang.Throwable) functionEvaluationException68);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException69);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray49);
    }

    @Test
    public void test09974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09974");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray17 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray17);
        java.lang.Object[] objArray20 = new java.lang.Object[] { 2, switchingFunctionsHandler8, 1, objArray17 };
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException24 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray17, (java.lang.Throwable) mathException24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException25);
        java.lang.Object[] objArray27 = integratorException26.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException", (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) '#', (java.lang.Throwable) convergenceException30);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
    }

    @Test
    public void test09975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09975");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ");
        java.lang.Object[] objArray11 = convergenceException10.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray24 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("", objArray24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray24);
        java.lang.Object[] objArray27 = new java.lang.Object[] { 2, switchingFunctionsHandler15, 1, objArray24 };
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray24, (java.lang.Throwable) mathException31);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", objArray11, (java.lang.Throwable) mathException31);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray45);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray45);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray45);
        org.apache.commons.math.MathException mathException49 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", strArray45);
        org.apache.commons.math.MathException mathException51 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "", objArray11, (java.lang.Throwable) mathException51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", objArray11);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray11);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: hi!", objArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1);
        org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException("", (java.lang.Throwable) functionEvaluationException60);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", (java.lang.Throwable) mathException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException(52.0d, "", objArray11, (java.lang.Throwable) mathException61);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("", (java.lang.Throwable) functionEvaluationException64);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(strArray45);
    }

    @Test
    public void test09976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09976");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray31 = new double[] { 100.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) 0L, doubleArray31);
        switchingFunctionsHandler22.stepAccepted((double) (byte) 10, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray31);
        boolean boolean35 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        switchingFunctionsHandler0.add(switchingFunction36, (double) (byte) -1, (double) (byte) 1, (int) ' ');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction43 = null;
        switchingFunctionsHandler42.add(switchingFunction43, (double) (-1), (double) 3, 0);
        double[] doubleArray55 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean56 = switchingFunctionsHandler42.reset((double) (-1), doubleArray55);
        boolean boolean57 = switchingFunctionsHandler42.isEmpty();
        double double58 = switchingFunctionsHandler42.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        switchingFunctionsHandler42.add(switchingFunction59, (double) (-1.0f), 0.0d, (int) (short) -1);
        boolean boolean64 = switchingFunctionsHandler42.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean67 = switchingFunctionsHandler66.isEmpty();
        double[] doubleArray70 = new double[] { 100.0d };
        boolean boolean71 = switchingFunctionsHandler66.reset((double) 0L, doubleArray70);
        boolean boolean72 = switchingFunctionsHandler42.reset((double) 100L, doubleArray70);
        boolean boolean73 = switchingFunctionsHandler42.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean76 = switchingFunctionsHandler75.isEmpty();
        double[] doubleArray79 = new double[] { 100.0d };
        boolean boolean80 = switchingFunctionsHandler75.reset((double) 0L, doubleArray79);
        boolean boolean81 = switchingFunctionsHandler75.stop();
        double double82 = switchingFunctionsHandler75.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler84 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean85 = switchingFunctionsHandler84.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator86 = null;
        boolean boolean87 = switchingFunctionsHandler84.evaluateStep(stepInterpolator86);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler89 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean90 = switchingFunctionsHandler89.isEmpty();
        double[] doubleArray93 = new double[] { 100.0d };
        boolean boolean94 = switchingFunctionsHandler89.reset((double) 0L, doubleArray93);
        switchingFunctionsHandler84.stepAccepted((double) (byte) 10, doubleArray93);
        boolean boolean96 = switchingFunctionsHandler75.reset((double) 1.0f, doubleArray93);
        boolean boolean97 = switchingFunctionsHandler42.reset(97.0d, doubleArray93);
        boolean boolean98 = switchingFunctionsHandler0.reset(100.0d, doubleArray93);
        boolean boolean99 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test09977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09977");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean25 = switchingFunctionsHandler24.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler24.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean30 = switchingFunctionsHandler29.isEmpty();
        double[] doubleArray33 = new double[] { 100.0d };
        boolean boolean34 = switchingFunctionsHandler29.reset((double) 0L, doubleArray33);
        switchingFunctionsHandler24.stepAccepted((double) (byte) 10, doubleArray33);
        boolean boolean36 = switchingFunctionsHandler0.reset((double) (short) 1, doubleArray33);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        switchingFunctionsHandler0.add(switchingFunction37, 52.0d, (double) '#', (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        switchingFunctionsHandler43.add(switchingFunction44, (double) (-1), (double) 3, 0);
        double[] doubleArray56 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean57 = switchingFunctionsHandler43.reset((double) (-1), doubleArray56);
        boolean boolean58 = switchingFunctionsHandler43.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean61 = switchingFunctionsHandler60.isEmpty();
        double[] doubleArray64 = new double[] { 100.0d };
        boolean boolean65 = switchingFunctionsHandler60.reset((double) 0L, doubleArray64);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean68 = switchingFunctionsHandler67.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        boolean boolean70 = switchingFunctionsHandler67.evaluateStep(stepInterpolator69);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean73 = switchingFunctionsHandler72.isEmpty();
        double[] doubleArray76 = new double[] { 100.0d };
        boolean boolean77 = switchingFunctionsHandler72.reset((double) 0L, doubleArray76);
        boolean boolean78 = switchingFunctionsHandler67.reset((double) 1, doubleArray76);
        boolean boolean79 = switchingFunctionsHandler60.reset((double) 100, doubleArray76);
        boolean boolean80 = switchingFunctionsHandler43.reset((double) (-1.0f), doubleArray76);
        boolean boolean81 = switchingFunctionsHandler0.reset((double) (-1L), doubleArray76);
        boolean boolean82 = switchingFunctionsHandler0.isEmpty();
        double double83 = switchingFunctionsHandler0.getEventTime();
        boolean boolean84 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test09978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09978");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        double double8 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler0.add(switchingFunction9, (double) 100.0f, (double) 100, (int) (short) 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray17 = null;
        switchingFunctionsHandler15.stepAccepted((double) 0, doubleArray17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean21 = switchingFunctionsHandler20.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler20.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler20.add(switchingFunction24, (double) 0L, 1.0d, (int) (short) 1);
        boolean boolean29 = switchingFunctionsHandler20.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        switchingFunctionsHandler31.add(switchingFunction32, (double) (-1), (double) 3, 0);
        double[] doubleArray44 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean45 = switchingFunctionsHandler31.reset((double) (-1), doubleArray44);
        boolean boolean46 = switchingFunctionsHandler31.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean49 = switchingFunctionsHandler48.isEmpty();
        double[] doubleArray52 = new double[] { 100.0d };
        boolean boolean53 = switchingFunctionsHandler48.reset((double) 0L, doubleArray52);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean56 = switchingFunctionsHandler55.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler55.evaluateStep(stepInterpolator57);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean61 = switchingFunctionsHandler60.isEmpty();
        double[] doubleArray64 = new double[] { 100.0d };
        boolean boolean65 = switchingFunctionsHandler60.reset((double) 0L, doubleArray64);
        boolean boolean66 = switchingFunctionsHandler55.reset((double) 1, doubleArray64);
        boolean boolean67 = switchingFunctionsHandler48.reset((double) 100, doubleArray64);
        boolean boolean68 = switchingFunctionsHandler31.reset((double) (-1.0f), doubleArray64);
        boolean boolean69 = switchingFunctionsHandler20.reset((-1.0d), doubleArray64);
        switchingFunctionsHandler15.stepAccepted((double) (short) -1, doubleArray64);
        boolean boolean71 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray64);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction72 = null;
        switchingFunctionsHandler0.add(switchingFunction72, (double) 0.0f, (double) 1L, (int) (byte) -1);
        boolean boolean77 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test09979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09979");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean10 = switchingFunctionsHandler9.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler9.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        double[] doubleArray18 = new double[] { 100.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) 0L, doubleArray18);
        switchingFunctionsHandler9.stepAccepted((double) (byte) 10, doubleArray18);
        boolean boolean21 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray18);
        boolean boolean22 = switchingFunctionsHandler0.stop();
        double double23 = switchingFunctionsHandler0.getEventTime();
        double double24 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean27 = switchingFunctionsHandler26.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler26.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean32 = switchingFunctionsHandler31.isEmpty();
        double[] doubleArray35 = new double[] { 100.0d };
        boolean boolean36 = switchingFunctionsHandler31.reset((double) 0L, doubleArray35);
        switchingFunctionsHandler26.stepAccepted((double) (byte) 10, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean40 = switchingFunctionsHandler39.isEmpty();
        double[] doubleArray43 = new double[] { 100.0d };
        boolean boolean44 = switchingFunctionsHandler39.reset((double) 0L, doubleArray43);
        switchingFunctionsHandler26.stepAccepted(100.0d, doubleArray43);
        double double46 = switchingFunctionsHandler26.getEventTime();
        double double47 = switchingFunctionsHandler26.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        switchingFunctionsHandler49.add(switchingFunction50, (double) (-1), (double) 3, 0);
        double[] doubleArray62 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean63 = switchingFunctionsHandler49.reset((double) (-1), doubleArray62);
        switchingFunctionsHandler26.stepAccepted((double) 100L, doubleArray62);
        switchingFunctionsHandler0.stepAccepted((double) (short) -1, doubleArray62);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator66 = null;
        boolean boolean67 = switchingFunctionsHandler0.evaluateStep(stepInterpolator66);
        boolean boolean68 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test09980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09980");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.stop();
        double double5 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) 'a', (double) 0L, (int) 'a');
        boolean boolean11 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray17 = new double[] { 100.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) 0L, doubleArray17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean21 = switchingFunctionsHandler20.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler20.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean26 = switchingFunctionsHandler25.isEmpty();
        double[] doubleArray29 = new double[] { 100.0d };
        boolean boolean30 = switchingFunctionsHandler25.reset((double) 0L, doubleArray29);
        boolean boolean31 = switchingFunctionsHandler20.reset((double) 1, doubleArray29);
        boolean boolean32 = switchingFunctionsHandler13.reset((double) 100, doubleArray29);
        double double33 = switchingFunctionsHandler13.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean36 = switchingFunctionsHandler35.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler35.evaluateStep(stepInterpolator37);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean41 = switchingFunctionsHandler40.isEmpty();
        double[] doubleArray44 = new double[] { 100.0d };
        boolean boolean45 = switchingFunctionsHandler40.reset((double) 0L, doubleArray44);
        switchingFunctionsHandler35.stepAccepted((double) (byte) 10, doubleArray44);
        switchingFunctionsHandler13.stepAccepted(0.0d, doubleArray44);
        double double48 = switchingFunctionsHandler13.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        switchingFunctionsHandler13.add(switchingFunction49, (double) 10L, (double) 'a', (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean56 = switchingFunctionsHandler55.isEmpty();
        double[] doubleArray59 = new double[] { 100.0d };
        boolean boolean60 = switchingFunctionsHandler55.reset((double) 0L, doubleArray59);
        boolean boolean61 = switchingFunctionsHandler13.reset((double) (byte) 1, doubleArray59);
        boolean boolean62 = switchingFunctionsHandler0.reset(0.0d, doubleArray59);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        switchingFunctionsHandler0.add(switchingFunction63, (double) 3, (double) 10, (int) (short) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction68 = null;
        switchingFunctionsHandler0.add(switchingFunction68, 35.0d, 1.0d, 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction73 = null;
        switchingFunctionsHandler0.add(switchingFunction73, (double) (short) 0, 0.0d, (int) (byte) 1);
        boolean boolean78 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction79 = null;
        switchingFunctionsHandler0.add(switchingFunction79, (double) (short) -1, (double) (byte) 1, (int) '#');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test09981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09981");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("", objArray25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray25);
        java.lang.Object[] objArray28 = new java.lang.Object[] { 2, switchingFunctionsHandler16, 1, objArray25 };
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray25, (java.lang.Throwable) mathException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray25, (java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray25, (java.lang.Throwable) functionEvaluationException38);
        org.apache.commons.math.MathException mathException40 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray8, (java.lang.Throwable) functionEvaluationException38);
        java.lang.Throwable[] throwableArray41 = functionEvaluationException38.getSuppressed();
        java.lang.Throwable[] throwableArray42 = functionEvaluationException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException38);
        java.lang.String str44 = convergenceException43.toString();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 100" + "'", str44, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 100");
    }

    @Test
    public void test09982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09982");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray24 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("", objArray24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray24);
        java.lang.Object[] objArray27 = new java.lang.Object[] { 2, switchingFunctionsHandler15, 1, objArray24 };
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException31 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray24, (java.lang.Throwable) mathException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray24, (java.lang.Throwable) functionEvaluationException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray24, (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray24);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray50);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray50);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray50);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException53);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException53);
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", objArray24, (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.MathException mathException57 = new org.apache.commons.math.MathException("", objArray24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "");
        java.lang.Object[] objArray61 = functionEvaluationException60.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException60);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray24, (java.lang.Throwable) functionEvaluationException60);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray24);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", objArray24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException((java.lang.Throwable) functionEvaluationException68);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException68);
        double double71 = functionEvaluationException68.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray24, (java.lang.Throwable) functionEvaluationException68);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) convergenceException73);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 52.0d + "'", double71 == 52.0d);
    }

    @Test
    public void test09983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09983");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray20 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray20);
        java.lang.Object[] objArray23 = new java.lang.Object[] { 2, switchingFunctionsHandler11, 1, objArray20 };
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray20, (java.lang.Throwable) mathException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray20, (java.lang.Throwable) functionEvaluationException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray20, (java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray20);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray46);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray46);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray46);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException49);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException49);
        org.apache.commons.math.MathException mathException52 = new org.apache.commons.math.MathException("hi!", objArray20, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.MathException mathException53 = new org.apache.commons.math.MathException("", objArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray20);
        double double55 = functionEvaluationException54.getArgument();
        java.lang.Object[] objArray56 = functionEvaluationException54.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException54);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException54);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[1, a, 10, a, -1]");
    }

    @Test
    public void test09984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09984");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray11);
        java.lang.Throwable[] throwableArray15 = integratorException14.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        double double22 = functionEvaluationException21.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException28 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException27);
        java.lang.Throwable[] throwableArray29 = convergenceException27.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray29);
        functionEvaluationException21.addSuppressed((java.lang.Throwable) functionEvaluationException30);
        java.lang.Throwable[] throwableArray32 = functionEvaluationException30.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.MathException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) throwableArray32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) functionEvaluationException34);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ");
        java.lang.Object[] objArray44 = convergenceException43.getArguments();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray57 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("", objArray57);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray57);
        java.lang.Object[] objArray60 = new java.lang.Object[] { 2, switchingFunctionsHandler48, 1, objArray57 };
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException64 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray57, (java.lang.Throwable) mathException64);
        org.apache.commons.math.MathException mathException66 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", objArray44, (java.lang.Throwable) mathException64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", objArray44);
        java.lang.Object[] objArray75 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("", objArray75);
        org.apache.commons.math.ode.IntegratorException integratorException77 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray75);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException77);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException77);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: hi!", objArray44, (java.lang.Throwable) mathException79);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!");
        org.apache.commons.math.MathException mathException84 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!", objArray44, (java.lang.Throwable) functionEvaluationException83);
        org.apache.commons.math.ode.DerivativeException derivativeException85 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException84);
        org.apache.commons.math.MathException mathException86 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) mathException84);
        org.apache.commons.math.ode.DerivativeException derivativeException87 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) mathException86);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[1, a, 10, a, -1]");
    }

    @Test
    public void test09985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09985");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) (-1), (double) 100.0f, 10);
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        boolean boolean18 = switchingFunctionsHandler0.isEmpty();
        boolean boolean19 = switchingFunctionsHandler0.stop();
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }

    @Test
    public void test09986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09986");
        java.lang.Object[] objArray14 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", objArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", objArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "");
        org.apache.commons.math.MathException mathException21 = new org.apache.commons.math.MathException("", objArray14, (java.lang.Throwable) functionEvaluationException20);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.String str24 = convergenceException23.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray14, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException25);
        java.lang.String str27 = functionEvaluationException25.getPattern();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", objArray41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray41);
        java.lang.Object[] objArray44 = new java.lang.Object[] { 2, switchingFunctionsHandler32, 1, objArray41 };
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException48 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray41, (java.lang.Throwable) mathException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException49);
        java.lang.Object[] objArray51 = functionEvaluationException49.getArguments();
        double double52 = functionEvaluationException49.getArgument();
        functionEvaluationException25.addSuppressed((java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException25);
        org.apache.commons.math.MathException mathException55 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 52", (java.lang.Throwable) derivativeException54);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    }

    @Test
    public void test09987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09987");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray13 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray13);
        java.lang.Object[] objArray16 = new java.lang.Object[] { 2, switchingFunctionsHandler4, 1, objArray13 };
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException20 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray13, (java.lang.Throwable) mathException20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException21);
        java.lang.Object[] objArray23 = integratorException22.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) integratorException22);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException24);
        java.lang.String str26 = integratorException25.toString();
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!" + "'", str26, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!");
    }

    @Test
    public void test09988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09988");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (byte) 0, 0.0d, (int) ' ');
        boolean boolean22 = switchingFunctionsHandler0.stop();
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        boolean boolean25 = switchingFunctionsHandler0.isEmpty();
        boolean boolean26 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        switchingFunctionsHandler0.add(switchingFunction27, (double) 3, (double) 0.0f, 0);
        boolean boolean32 = switchingFunctionsHandler0.stop();
        double double33 = switchingFunctionsHandler0.getEventTime();
        boolean boolean34 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test09989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09989");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray31);
        java.lang.Object[] objArray34 = new java.lang.Object[] { 2, switchingFunctionsHandler22, 1, objArray31 };
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException38 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) mathException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray31, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray14);
        java.lang.Object[] objArray55 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("", objArray55);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray55);
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException57);
        java.lang.Throwable[] throwableArray59 = integratorException57.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException57);
        java.lang.Object[] objArray61 = integratorException60.getArguments();
        org.apache.commons.math.MathException mathException62 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray14, (java.lang.Throwable) integratorException60);
        org.apache.commons.math.MathException mathException63 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray14);
        java.lang.Throwable[] throwableArray64 = mathException63.getSuppressed();
        java.lang.Throwable throwable65 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray64, throwable65);
        double double67 = functionEvaluationException66.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, (java.lang.Throwable) functionEvaluationException66);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 3.0d + "'", double67 == 3.0d);
    }

    @Test
    public void test09990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09990");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray15);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray29);
        org.apache.commons.math.MathException mathException33 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray29);
        org.apache.commons.math.MathException mathException34 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", (java.lang.Object[]) strArray15, (java.lang.Throwable) mathException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.MathException: ");
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: ", (java.lang.Object[]) strArray15, (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.ode.DerivativeException");
        org.apache.commons.math.MathException mathException42 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", (java.lang.Object[]) strArray15, (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray60 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("", objArray60);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray60);
        java.lang.Object[] objArray63 = new java.lang.Object[] { 2, switchingFunctionsHandler51, 1, objArray60 };
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException67 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray60, (java.lang.Throwable) mathException67);
        org.apache.commons.math.ode.IntegratorException integratorException69 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException68);
        java.lang.Object[] objArray70 = integratorException69.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) integratorException69);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException71);
        org.apache.commons.math.MathException mathException73 = new org.apache.commons.math.MathException((java.lang.Throwable) integratorException72);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException72);
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) integratorException72);
        java.lang.Object[] objArray76 = convergenceException75.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException77 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}", objArray76);
        org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", objArray76);
        org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) strArray15, (java.lang.Throwable) mathException78);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException80 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "", (java.lang.Throwable) mathException78);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
    }

    @Test
    public void test09991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09991");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) (-1), (double) 100.0f, 10);
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        boolean boolean18 = switchingFunctionsHandler0.stop();
        boolean boolean19 = switchingFunctionsHandler0.stop();
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.isEmpty();
        double[] doubleArray26 = new double[] { 100.0d };
        boolean boolean27 = switchingFunctionsHandler22.reset((double) 0L, doubleArray26);
        boolean boolean28 = switchingFunctionsHandler22.stop();
        double double29 = switchingFunctionsHandler22.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean32 = switchingFunctionsHandler31.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler31.evaluateStep(stepInterpolator33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean37 = switchingFunctionsHandler36.isEmpty();
        double[] doubleArray40 = new double[] { 100.0d };
        boolean boolean41 = switchingFunctionsHandler36.reset((double) 0L, doubleArray40);
        switchingFunctionsHandler31.stepAccepted((double) (byte) 10, doubleArray40);
        boolean boolean43 = switchingFunctionsHandler22.reset((double) 1.0f, doubleArray40);
        boolean boolean44 = switchingFunctionsHandler0.reset((double) 100L, doubleArray40);
        double double45 = switchingFunctionsHandler0.getEventTime();
        double double46 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction47 = null;
        switchingFunctionsHandler0.add(switchingFunction47, (double) (byte) 1, (double) (-1L), (int) (short) 0);
        double double52 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
    }

    @Test
    public void test09992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09992");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean6 = switchingFunctionsHandler5.isEmpty();
        double[] doubleArray9 = new double[] { 100.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) 0L, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.reset((double) 1, doubleArray9);
        boolean boolean12 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler0.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean17 = switchingFunctionsHandler16.isEmpty();
        double[] doubleArray20 = new double[] { 100.0d };
        boolean boolean21 = switchingFunctionsHandler16.reset((double) 0L, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean24 = switchingFunctionsHandler23.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler23.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean29 = switchingFunctionsHandler28.isEmpty();
        double[] doubleArray32 = new double[] { 100.0d };
        boolean boolean33 = switchingFunctionsHandler28.reset((double) 0L, doubleArray32);
        boolean boolean34 = switchingFunctionsHandler23.reset((double) 1, doubleArray32);
        boolean boolean35 = switchingFunctionsHandler16.reset((double) 100, doubleArray32);
        double double36 = switchingFunctionsHandler16.getEventTime();
        boolean boolean37 = switchingFunctionsHandler16.stop();
        boolean boolean38 = switchingFunctionsHandler16.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        switchingFunctionsHandler40.add(switchingFunction41, (double) (-1), (double) 3, 0);
        double[] doubleArray53 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean54 = switchingFunctionsHandler40.reset((double) (-1), doubleArray53);
        boolean boolean55 = switchingFunctionsHandler40.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean58 = switchingFunctionsHandler57.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        boolean boolean60 = switchingFunctionsHandler57.evaluateStep(stepInterpolator59);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean63 = switchingFunctionsHandler62.isEmpty();
        double[] doubleArray66 = new double[] { 100.0d };
        boolean boolean67 = switchingFunctionsHandler62.reset((double) 0L, doubleArray66);
        switchingFunctionsHandler57.stepAccepted((double) (byte) 10, doubleArray66);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler70 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean71 = switchingFunctionsHandler70.isEmpty();
        double[] doubleArray74 = new double[] { 100.0d };
        boolean boolean75 = switchingFunctionsHandler70.reset((double) 0L, doubleArray74);
        switchingFunctionsHandler57.stepAccepted(100.0d, doubleArray74);
        boolean boolean77 = switchingFunctionsHandler40.reset((-1.0d), doubleArray74);
        boolean boolean78 = switchingFunctionsHandler16.reset((double) 100, doubleArray74);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler80 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean81 = switchingFunctionsHandler80.isEmpty();
        double[] doubleArray84 = new double[] { 100.0d };
        boolean boolean85 = switchingFunctionsHandler80.reset((double) 0L, doubleArray84);
        switchingFunctionsHandler16.stepAccepted(100.0d, doubleArray84);
        boolean boolean87 = switchingFunctionsHandler0.reset((double) 'a', doubleArray84);
        boolean boolean88 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator89 = null;
        boolean boolean90 = switchingFunctionsHandler0.evaluateStep(stepInterpolator89);
        boolean boolean91 = switchingFunctionsHandler0.stop();
        double double92 = switchingFunctionsHandler0.getEventTime();
        boolean boolean93 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction94 = null;
        switchingFunctionsHandler0.add(switchingFunction94, 0.0d, (double) (-1.0f), (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test09993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09993");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean10 = switchingFunctionsHandler9.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler9.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean15 = switchingFunctionsHandler14.isEmpty();
        double[] doubleArray18 = new double[] { 100.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) 0L, doubleArray18);
        switchingFunctionsHandler9.stepAccepted((double) (byte) 10, doubleArray18);
        boolean boolean21 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean24 = switchingFunctionsHandler23.isEmpty();
        double[] doubleArray27 = new double[] { 100.0d };
        boolean boolean28 = switchingFunctionsHandler23.reset((double) 0L, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean31 = switchingFunctionsHandler30.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = switchingFunctionsHandler30.evaluateStep(stepInterpolator32);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean36 = switchingFunctionsHandler35.isEmpty();
        double[] doubleArray39 = new double[] { 100.0d };
        boolean boolean40 = switchingFunctionsHandler35.reset((double) 0L, doubleArray39);
        boolean boolean41 = switchingFunctionsHandler30.reset((double) 1, doubleArray39);
        boolean boolean42 = switchingFunctionsHandler23.reset((double) 100, doubleArray39);
        double double43 = switchingFunctionsHandler23.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean46 = switchingFunctionsHandler45.isEmpty();
        double[] doubleArray49 = new double[] { 100.0d };
        boolean boolean50 = switchingFunctionsHandler45.reset((double) 0L, doubleArray49);
        switchingFunctionsHandler23.stepAccepted(0.0d, doubleArray49);
        switchingFunctionsHandler0.stepAccepted(2.0d, doubleArray49);
        boolean boolean53 = switchingFunctionsHandler0.isEmpty();
        boolean boolean54 = switchingFunctionsHandler0.stop();
        boolean boolean55 = switchingFunctionsHandler0.stop();
        boolean boolean56 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler0.evaluateStep(stepInterpolator57);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test09994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09994");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler0.add(switchingFunction25, (double) (-1), 0.0d, (int) (short) 10);
        boolean boolean30 = switchingFunctionsHandler0.isEmpty();
        double double31 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        switchingFunctionsHandler0.add(switchingFunction32, (double) 3, 10.0d, 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        switchingFunctionsHandler0.add(switchingFunction37, (double) 2, (double) '4', (int) (byte) -1);
        boolean boolean42 = switchingFunctionsHandler0.stop();
        double double43 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = switchingFunctionsHandler0.evaluateStep(stepInterpolator44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
    }

    @Test
    public void test09995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09995");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray22 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("", objArray22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray22);
        java.lang.Object[] objArray25 = new java.lang.Object[] { 2, switchingFunctionsHandler13, 1, objArray22 };
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException29 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray22, (java.lang.Throwable) mathException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray22, (java.lang.Throwable) functionEvaluationException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray22, (java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", objArray22);
        java.lang.String str38 = functionEvaluationException37.getPattern();
        java.lang.Object[] objArray39 = functionEvaluationException37.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double42 = functionEvaluationException41.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "hi!", objArray39, (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray39);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("", objArray39);
        org.apache.commons.math.MathException mathException46 = new org.apache.commons.math.MathException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: Evaluation failed for argument = 52", objArray39);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!", objArray39);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1.0d) + "'", double42 == (-1.0d));
    }

    @Test
    public void test09996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09996");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray20 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray20);
        java.lang.Object[] objArray23 = new java.lang.Object[] { 2, switchingFunctionsHandler11, 1, objArray20 };
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException27 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray20, (java.lang.Throwable) mathException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) functionEvaluationException28);
        java.lang.Object[] objArray30 = functionEvaluationException28.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) '4');
        double double34 = functionEvaluationException33.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.MathException mathException36 = new org.apache.commons.math.MathException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: hi!", (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray49 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("", objArray49);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray49);
        java.lang.Object[] objArray52 = new java.lang.Object[] { 2, switchingFunctionsHandler40, 1, objArray49 };
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException56 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray49, (java.lang.Throwable) mathException56);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) mathException56);
        mathException36.addSuppressed((java.lang.Throwable) integratorException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.MathException: hi!", objArray30, (java.lang.Throwable) mathException36);
        java.lang.Object[] objArray61 = mathException36.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 100", objArray61);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: ", objArray61);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException", objArray61);
        org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", objArray61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.ode.DerivativeException");
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException70);
        org.apache.commons.math.MathException mathException72 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 52", (java.lang.Throwable) functionEvaluationException70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, (java.lang.Throwable) mathException72);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", objArray61, (java.lang.Throwable) mathException72);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[1, a, 10, a, -1]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 52.0d + "'", double34 == 52.0d);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
    }

    @Test
    public void test09997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09997");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction2 = null;
        switchingFunctionsHandler0.add(switchingFunction2, (double) (-1), (double) 'a', (int) (short) 0);
        double[] doubleArray8 = null;
        boolean boolean9 = switchingFunctionsHandler0.reset((double) 3, doubleArray8);
        double double10 = switchingFunctionsHandler0.getEventTime();
        boolean boolean11 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.isEmpty();
        boolean boolean15 = switchingFunctionsHandler13.stop();
        double double16 = switchingFunctionsHandler13.getEventTime();
        boolean boolean17 = switchingFunctionsHandler13.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler13.add(switchingFunction18, (double) 0L, (double) 1.0f, (int) (short) 100);
        double[] doubleArray24 = new double[] {};
        boolean boolean25 = switchingFunctionsHandler13.reset((double) (short) 1, doubleArray24);
        boolean boolean26 = switchingFunctionsHandler0.reset((double) 2, doubleArray24);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        switchingFunctionsHandler0.add(switchingFunction27, 35.0d, 0.0d, 2);
        double double32 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean35 = switchingFunctionsHandler34.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler34.evaluateStep(stepInterpolator36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean40 = switchingFunctionsHandler39.isEmpty();
        double[] doubleArray43 = new double[] { 100.0d };
        boolean boolean44 = switchingFunctionsHandler39.reset((double) 0L, doubleArray43);
        switchingFunctionsHandler34.stepAccepted((double) (byte) 10, doubleArray43);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        switchingFunctionsHandler34.add(switchingFunction46, (double) (-1), (double) 100.0f, 10);
        boolean boolean51 = switchingFunctionsHandler34.isEmpty();
        boolean boolean52 = switchingFunctionsHandler34.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler54.evaluateStep(stepInterpolator56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean60 = switchingFunctionsHandler59.isEmpty();
        double[] doubleArray63 = new double[] { 100.0d };
        boolean boolean64 = switchingFunctionsHandler59.reset((double) 0L, doubleArray63);
        boolean boolean65 = switchingFunctionsHandler54.reset((double) 1, doubleArray63);
        boolean boolean66 = switchingFunctionsHandler34.reset((double) (-1L), doubleArray63);
        boolean boolean67 = switchingFunctionsHandler0.reset((double) (-1.0f), doubleArray63);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction68 = null;
        switchingFunctionsHandler0.add(switchingFunction68, 52.0d, (double) '4', (int) '4');
        boolean boolean73 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test09998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09998");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (-1), (double) 3, 0);
        double[] doubleArray13 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean14 = switchingFunctionsHandler0.reset((double) (-1), doubleArray13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean17 = switchingFunctionsHandler16.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler16.evaluateStep(stepInterpolator18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        double[] doubleArray25 = new double[] { 100.0d };
        boolean boolean26 = switchingFunctionsHandler21.reset((double) 0L, doubleArray25);
        switchingFunctionsHandler16.stepAccepted((double) (byte) 10, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        switchingFunctionsHandler16.add(switchingFunction28, (double) (-1), (double) 100.0f, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean35 = switchingFunctionsHandler34.isEmpty();
        double[] doubleArray38 = new double[] { 100.0d };
        boolean boolean39 = switchingFunctionsHandler34.reset((double) 0L, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean42 = switchingFunctionsHandler41.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler41.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean47 = switchingFunctionsHandler46.isEmpty();
        double[] doubleArray50 = new double[] { 100.0d };
        boolean boolean51 = switchingFunctionsHandler46.reset((double) 0L, doubleArray50);
        boolean boolean52 = switchingFunctionsHandler41.reset((double) 1, doubleArray50);
        boolean boolean53 = switchingFunctionsHandler34.reset((double) 100, doubleArray50);
        boolean boolean54 = switchingFunctionsHandler16.reset((double) (byte) -1, doubleArray50);
        boolean boolean55 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray50);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean58 = switchingFunctionsHandler57.isEmpty();
        double[] doubleArray61 = new double[] { 100.0d };
        boolean boolean62 = switchingFunctionsHandler57.reset((double) 0L, doubleArray61);
        boolean boolean63 = switchingFunctionsHandler0.reset((double) (byte) -1, doubleArray61);
        double double64 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        switchingFunctionsHandler0.add(switchingFunction65, (-1.0d), 0.0d, 3);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
    }

    @Test
    public void test09999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09999");
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException10 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException9);
        java.lang.Throwable[] throwableArray11 = convergenceException9.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathException mathException13 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) throwableArray11);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "org.apache.commons.math.MathException: hi!", "", "hi!", "org.apache.commons.math.MathException: hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        java.lang.Object[] objArray51 = new java.lang.Object[] { 1L, 'a', 10L, 'a', (-1) };
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("", objArray51);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.MathException: hi!", objArray51);
        java.lang.Object[] objArray54 = new java.lang.Object[] { 2, switchingFunctionsHandler42, 1, objArray51 };
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!");
        org.apache.commons.math.MathException mathException58 = new org.apache.commons.math.MathException("hi!", (java.lang.Throwable) convergenceException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathException: hi!", objArray51, (java.lang.Throwable) mathException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray51, (java.lang.Throwable) functionEvaluationException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) 100L);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray51, (java.lang.Throwable) functionEvaluationException64);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.MathException: hi!", objArray51);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray32, (java.lang.Throwable) convergenceException67);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("", strArray32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ConvergenceException: org.apache.commons.math.MathException: hi!", (java.lang.Object[]) strArray32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.MathException: ", strArray32);
        org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException("org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Throwable) derivativeException73);
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) mathException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.MathException: org.apache.commons.math.MathException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.MathException: Evaluation failed for argument = -1", (java.lang.Object[]) throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[1, a, 10, a, -1]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[1, a, 10, a, -1]");
        org.junit.Assert.assertNotNull(objArray54);
    }

    @Test
    public void test10000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test10000");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray4 = new double[] { 100.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) 0L, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean8 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.isEmpty();
        double[] doubleArray16 = new double[] { 100.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) 0L, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler7.reset((double) 1, doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.reset((double) 100, doubleArray16);
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler0.evaluateStep(stepInterpolator25);
        boolean boolean27 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler0.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler0.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = switchingFunctionsHandler0.evaluateStep(stepInterpolator32);
        double double34 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        switchingFunctionsHandler36.add(switchingFunction37, (double) (-1), (double) 3, 0);
        double[] doubleArray49 = new double[] { 0L, 10.0d, 'a', 0.0d, (-1.0d), 0 };
        boolean boolean50 = switchingFunctionsHandler36.reset((double) (-1), doubleArray49);
        boolean boolean51 = switchingFunctionsHandler36.isEmpty();
        double double52 = switchingFunctionsHandler36.getEventTime();
        boolean boolean53 = switchingFunctionsHandler36.isEmpty();
        boolean boolean54 = switchingFunctionsHandler36.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        switchingFunctionsHandler36.add(switchingFunction55, (double) 3, 0.0d, (int) (short) 100);
        boolean boolean60 = switchingFunctionsHandler36.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean63 = switchingFunctionsHandler62.isEmpty();
        double[] doubleArray66 = new double[] { 100.0d };
        boolean boolean67 = switchingFunctionsHandler62.reset((double) 0L, doubleArray66);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler69 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean70 = switchingFunctionsHandler69.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator71 = null;
        boolean boolean72 = switchingFunctionsHandler69.evaluateStep(stepInterpolator71);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler74 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean75 = switchingFunctionsHandler74.isEmpty();
        double[] doubleArray78 = new double[] { 100.0d };
        boolean boolean79 = switchingFunctionsHandler74.reset((double) 0L, doubleArray78);
        boolean boolean80 = switchingFunctionsHandler69.reset((double) 1, doubleArray78);
        boolean boolean81 = switchingFunctionsHandler62.reset((double) 100, doubleArray78);
        double double82 = switchingFunctionsHandler62.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler84 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean85 = switchingFunctionsHandler84.isEmpty();
        double[] doubleArray88 = new double[] { 100.0d };
        boolean boolean89 = switchingFunctionsHandler84.reset((double) 0L, doubleArray88);
        switchingFunctionsHandler62.stepAccepted(0.0d, doubleArray88);
        boolean boolean91 = switchingFunctionsHandler36.reset((double) 3, doubleArray88);
        switchingFunctionsHandler0.stepAccepted((double) (short) -1, doubleArray88);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction93 = null;
        switchingFunctionsHandler0.add(switchingFunction93, (double) 3, 10.0d, (int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 97.0, 0.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }
}

