import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest14 {

    public static boolean debug = false;

    @Test
    public void test07001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07001");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.EXTERNS_VALIDATION;
        com.google.javascript.jscomp.DiagnosticGroups.CONST = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.AMBIGUOUS_FUNCTION_DECL = diagnosticGroup0;
// flaky:         org.junit.Assert.assertNull(diagnosticGroup0);
    }

    @Test
    public void test07002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07002");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.AMBIGUOUS_FUNCTION_DECL;
        com.google.javascript.jscomp.DiagnosticGroups.DUPLICATE_MESSAGE = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.ACCESS_CONTROLS = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.AMBIGUOUS_FUNCTION_DECL = diagnosticGroup0;
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList15 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15, jSTypeArray14);
        com.google.javascript.rhino.Node node17 = jSTypeRegistry13.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList15);
        node11.addChildrenToBack(node17);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        boolean boolean25 = node24.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry27.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        boolean boolean32 = node31.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        com.google.javascript.rhino.Node node38 = jSTypeRegistry34.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        com.google.javascript.rhino.Node node41 = new com.google.javascript.rhino.Node((int) (short) 0, node11, node24, node31, node38, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        com.google.javascript.rhino.ErrorReporter errorReporter49 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry50 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter49);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray51 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList52 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList52, jSTypeArray51);
        com.google.javascript.rhino.Node node54 = jSTypeRegistry50.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList52);
        node48.addChildrenToBack(node54);
        com.google.javascript.rhino.ErrorReporter errorReporter56 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry57 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter56);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray58 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList59 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList59, jSTypeArray58);
        com.google.javascript.rhino.Node node61 = jSTypeRegistry57.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList59);
        boolean boolean62 = node61.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList66 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList66, jSTypeArray65);
        com.google.javascript.rhino.Node node68 = jSTypeRegistry64.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList66);
        boolean boolean69 = node68.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray72 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList73 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList73, jSTypeArray72);
        com.google.javascript.rhino.Node node75 = jSTypeRegistry71.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList73);
        com.google.javascript.rhino.Node node78 = new com.google.javascript.rhino.Node((int) (short) 0, node48, node61, node68, node75, 0, 49);
        com.google.javascript.rhino.Node node79 = node41.useSourceInfoFrom(node61);
        com.google.javascript.jscomp.CheckLevel checkLevel81 = null;
        com.google.javascript.jscomp.DiagnosticType diagnosticType83 = com.google.javascript.jscomp.DiagnosticType.make("*global*", checkLevel81, "");
        java.lang.String[] strArray90 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", ":" };
        com.google.javascript.jscomp.JSError jSError91 = com.google.javascript.jscomp.JSError.make("*global*", node79, diagnosticType83, strArray90);
        com.google.javascript.jscomp.CheckLevel checkLevel92 = jSError91.getDefaultLevel();
        java.lang.String str93 = jSError91.description;
        int int94 = jSError91.getCharno();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = diagnosticGroup0.matches(jSError91);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNull(diagnosticGroup0);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(jSTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(jSTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(jSTypeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertNotNull(diagnosticType83);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(jSError91);
        org.junit.Assert.assertNull(checkLevel92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test07003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07003");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = null;
        com.google.javascript.jscomp.DiagnosticGroups.CONST = diagnosticGroup0;
    }

    @Test
    public void test07004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07004");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        compilerOptions9.optimizeParameters = true;
        compilerOptions9.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel17 = compilerOptions9.checkGlobalNamesLevel;
        compilerOptions0.setCheckUnreachableCode(checkLevel17);
        compilerOptions0.setProcessObjectPropertyString(false);
        boolean boolean21 = compilerOptions0.aliasKeywords;
        com.google.javascript.jscomp.CompilerOptions compilerOptions22 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions22.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions22.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode28 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions22.setTracer(tracerMode28);
        compilerOptions22.setSyntheticBlockStartMarker("");
        java.util.Set<java.lang.String> strSet32 = compilerOptions22.stripTypePrefixes;
        compilerOptions0.setReplaceStringsReservedStrings(strSet32);
        compilerOptions0.foldConstants = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions36.crossModuleMethodMotion = true;
        compilerOptions36.setProtectHiddenSideEffects(true);
        boolean boolean41 = compilerOptions36.isExternExportsEnabled();
        boolean boolean42 = compilerOptions36.aliasAllStrings;
        compilerOptions36.reserveRawExports = true;
        compilerOptions36.inlineGetters = false;
        java.util.Set<java.lang.String> strSet47 = compilerOptions36.stripTypePrefixes;
        compilerOptions0.aliasableStrings = strSet47;
        com.google.javascript.jscomp.CompilerOptions compilerOptions49 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions49.crossModuleMethodMotion = true;
        compilerOptions49.skipAllCompilerPasses();
        compilerOptions49.inputDelimiter = "/experiment/:/hi!";
        compilerOptions49.locale = "hi!";
        compilerOptions49.devirtualizePrototypeMethods = true;
        boolean boolean59 = compilerOptions49.generatePseudoNames;
        boolean boolean60 = compilerOptions49.preferLineBreakAtEndOfFile;
        boolean boolean61 = strSet47.equals((java.lang.Object) compilerOptions49);
        com.google.javascript.jscomp.CheckLevel checkLevel62 = compilerOptions49.checkMissingGetCssNameLevel;
        org.junit.Assert.assertTrue("'" + checkLevel17 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel17.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + tracerMode28 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode28.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + checkLevel62 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel62.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07005");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(29, "JSC_OPTIMIZE_LOOP_ERROR. Exceeded max number of code motion iterations: {0} at (unknown source) line (unknown line) : (unknown column)", (int) (byte) 100, 32);
        boolean boolean5 = node4.isOnlyModifiesThisCall();
        boolean boolean6 = node4.isDec();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test07006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07006");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        boolean boolean75 = node74.hasChildren();
        boolean boolean76 = node74.isArrayLit();
        boolean boolean77 = node74.isObjectLit();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable78 = node74.children();
        boolean boolean79 = node74.isLabelName();
        com.google.javascript.rhino.Node node80 = node74.getLastSibling();
        boolean boolean81 = node74.isNumber();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(nodeIterable78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test07007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07007");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler2 = new com.google.javascript.jscomp.Compiler();
        jSModule1.sortInputsByDeps(compiler2);
        com.google.javascript.jscomp.SourceFile.Builder builder4 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile8 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int10 = sourceFile8.getLineOfOffset((int) (short) 1);
        java.io.Reader reader11 = sourceFile8.getCodeReader();
        int int12 = reader11.read();
        com.google.javascript.jscomp.SourceFile sourceFile13 = builder4.buildFromReader("*global*", reader11);
        jSModule1.add(sourceFile13);
        boolean boolean16 = jSModule1.removeByName("PARAM_LIST");
        java.util.List<com.google.javascript.jscomp.CompilerInput> compilerInputList17 = jSModule1.getInputs();
        com.google.javascript.jscomp.SourceFile.Builder builder18 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile22 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int24 = sourceFile22.getLineOfOffset((int) (short) 1);
        java.io.Reader reader25 = sourceFile22.getCodeReader();
        int int26 = reader25.read();
        com.google.javascript.jscomp.SourceFile sourceFile27 = builder18.buildFromReader("*global*", reader25);
        java.nio.charset.Charset charset28 = null;
        com.google.javascript.jscomp.SourceFile.Builder builder29 = builder18.withCharset(charset28);
        com.google.javascript.jscomp.SourceFile sourceFile31 = builder29.buildFromFile("/experiment/:/hi!");
        com.google.javascript.jscomp.SourceFile.Builder builder33 = builder29.withOriginalPath(":");
        com.google.javascript.jscomp.SourceFile.Generator generator35 = null;
        com.google.javascript.jscomp.SourceFile sourceFile36 = builder29.buildFromGenerator("DiagnosticGroup<checkProvides>", generator35);
        com.google.javascript.jscomp.CompilerInput compilerInput38 = new com.google.javascript.jscomp.CompilerInput(sourceFile36, false);
        com.google.javascript.jscomp.CompilerInput compilerInput41 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput38, "hi!", true);
        jSModule1.add(compilerInput41);
        // The following exception was thrown during execution in test generation
        try {
            compilerInput41.removeRequire("SEVERE");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Expected setCompiler to be called first: hi!");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(sourceFile8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(sourceFile13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(compilerInputList17);
        org.junit.Assert.assertNotNull(sourceFile22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(sourceFile27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(sourceFile31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(sourceFile36);
    }

    @Test
    public void test07008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07008");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        compilerOptions0.prettyPrint = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.crossModuleMethodMotion = true;
        compilerOptions32.optimizeParameters = true;
        compilerOptions32.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel40 = compilerOptions32.checkGlobalNamesLevel;
        compilerOptions0.checkGlobalNamesLevel = checkLevel40;
        compilerOptions0.checkSymbols = false;
        java.lang.String str44 = compilerOptions0.aliasStringsBlacklist;
        com.google.javascript.jscomp.CompilerOptions compilerOptions45 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions45.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel48 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions45.setSourceMapDetailLevel(detailLevel48);
        boolean boolean50 = compilerOptions45.ideMode;
        com.google.javascript.jscomp.CheckLevel checkLevel51 = compilerOptions45.checkMissingGetCssNameLevel;
        compilerOptions0.checkGlobalThisLevel = checkLevel51;
        compilerOptions0.setManageClosureDependencies(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions55 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions55.crossModuleMethodMotion = true;
        compilerOptions55.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy60 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions61 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions61.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy64 = compilerOptions61.propertyRenaming;
        compilerOptions55.setRenamingPolicy(variableRenamingPolicy60, propertyRenamingPolicy64);
        compilerOptions55.preferLineBreakAtEndOfFile = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions68 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode69 = null;
        compilerOptions68.setTracerMode(tracerMode69);
        boolean boolean71 = compilerOptions68.generatePseudoNames;
        java.util.Set<java.lang.String> strSet72 = compilerOptions68.stripTypes;
        com.google.javascript.jscomp.CheckLevel checkLevel73 = compilerOptions68.reportMissingOverride;
        boolean boolean74 = compilerOptions68.exportTestFunctions;
        java.util.Set<java.lang.String> strSet75 = compilerOptions68.stripTypes;
        compilerOptions55.setIdGenerators(strSet75);
        compilerOptions0.setIdGenerators(strSet75);
        compilerOptions0.setUnaliasableGlobals("Node tree inequality:\nTree1:\nNUMBER -1.0\n\n\nTree2:\nPARAM_LIST\n    PARAM_LIST\n\n\nSubtree1: NUMBER -1.0\n\n\nSubtree2: PARAM_LIST\n    PARAM_LIST\n");
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel40 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel40.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(detailLevel48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + checkLevel51 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel51.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy64 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy64.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertTrue("'" + checkLevel73 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel73.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strSet75);
    }

    @Test
    public void test07009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07009");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        boolean boolean5 = node4.isContinue();
        java.lang.Object obj7 = node4.getProp((int) (byte) 10);
        boolean boolean8 = node4.isVarArgs();
        com.google.javascript.rhino.Node node9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node12 = new com.google.javascript.rhino.Node((-1), node4, node9, 26, 35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test07010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07010");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(true, false);
        boolean boolean6 = file2.mkdir();
        boolean boolean7 = file2.setReadOnly();
        com.google.javascript.jscomp.SourceFile sourceFile8 = com.google.javascript.jscomp.SourceFile.fromFile(file2);
        boolean boolean9 = sourceFile8.isExtern();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(sourceFile8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test07011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07011");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setProtectHiddenSideEffects(true);
        boolean boolean5 = compilerOptions0.isExternExportsEnabled();
        boolean boolean6 = compilerOptions0.recordFunctionInformation;
        compilerOptions0.setInputDelimiter("FINEST");
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions9.setTweakToDoubleLiteral("", (double) (short) 1);
        compilerOptions9.setCrossModuleCodeMotion(false);
        compilerOptions9.inputDelimiter = "STRING PARAM_LIST 49";
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy19 = compilerOptions9.variableRenaming;
        compilerOptions0.setVariableRenaming(variableRenamingPolicy19);
        com.google.javascript.jscomp.CheckLevel checkLevel21 = compilerOptions0.checkMissingGetCssNameLevel;
        compilerOptions0.removeUnusedClassProperties = false;
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy19 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.OFF + "'", variableRenamingPolicy19.equals(com.google.javascript.jscomp.VariableRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel21 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel21.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07012");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        node3.putBooleanProp(2147483647, false);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry14.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        node12.addChildrenToBack(node18);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile20 = node12.getStaticSourceFile();
        com.google.javascript.rhino.Node node21 = node3.copyInformationFrom(node12);
        com.google.javascript.rhino.Node node25 = new com.google.javascript.rhino.Node((int) (byte) 10, 51, 39);
        boolean boolean26 = node25.isWhile();
        boolean boolean27 = node25.isString();
        boolean boolean28 = node25.isAssignAdd();
        com.google.javascript.rhino.Node node29 = node21.clonePropsFrom(node25);
        com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        boolean boolean34 = node33.isContinue();
        com.google.javascript.rhino.ErrorReporter errorReporter35 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter35);
        jSTypeRegistry36.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSType jSType38 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] { jSType38 };
        com.google.javascript.rhino.Node node40 = jSTypeRegistry36.createParameters(jSTypeArray39);
        int int41 = node33.getIndexOfChild(node40);
        boolean boolean42 = node33.isDelProp();
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean47 = node46.isTry();
        java.lang.String str48 = node46.toString();
        node33.addChildToBack(node46);
        boolean boolean50 = node33.isCall();
        boolean boolean51 = node33.isDefaultCase();
        com.google.javascript.rhino.Node node52 = node25.useSourceInfoFromForTree(node33);
        boolean boolean53 = node52.isGetterDef();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(staticSourceFile20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "STRING PARAM_LIST 49" + "'", str48, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test07013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07013");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.ES5_STRICT;
        com.google.javascript.jscomp.DiagnosticGroups.CHECK_REGEXP = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.ACCESS_CONTROLS = diagnosticGroup0;
// flaky:         org.junit.Assert.assertNull(diagnosticGroup0);
    }

    @Test
    public void test07014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07014");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode6 = null;
        compilerOptions5.setTracerMode(tracerMode6);
        boolean boolean8 = compilerOptions5.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel9 = compilerOptions5.sourceMapDetailLevel;
        compilerOptions5.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet12 = compilerOptions5.stripNameSuffixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode14 = null;
        compilerOptions13.setTracerMode(tracerMode14);
        boolean boolean16 = compilerOptions13.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel17 = compilerOptions13.sourceMapDetailLevel;
        compilerOptions13.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.optimizeParameters = true;
        compilerOptions20.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel28 = compilerOptions20.checkGlobalNamesLevel;
        compilerOptions13.setReportMissingOverride(checkLevel28);
        compilerOptions5.setAggressiveVarCheck(checkLevel28);
        compilerOptions0.setCheckUnreachableCode(checkLevel28);
        com.google.javascript.jscomp.SourceMap.Format format32 = compilerOptions0.sourceMapFormat;
        boolean boolean33 = compilerOptions0.recordFunctionInformation;
        compilerOptions0.setComputeFunctionSideEffects(false);
        boolean boolean36 = compilerOptions0.inlineLocalFunctions;
        compilerOptions0.checkTypes = true;
        compilerOptions0.setPropertyAffinity(false);
        compilerOptions0.setRewriteNewDateGoogNow(true);
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(detailLevel9);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(detailLevel17);
        org.junit.Assert.assertTrue("'" + checkLevel28 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel28.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(format32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test07015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07015");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(false, false);
        boolean boolean8 = file2.setExecutable(false, true);
        long long9 = file2.length();
        boolean boolean11 = file2.setWritable(true);
        file2.deleteOnExit();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 4096L + "'", long9 == 4096L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test07016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07016");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        compilerOptions9.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy14 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions15 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions15.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy18 = compilerOptions15.propertyRenaming;
        compilerOptions9.setRenamingPolicy(variableRenamingPolicy14, propertyRenamingPolicy18);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.skipAllCompilerPasses();
        boolean boolean24 = compilerOptions20.flowSensitiveInlineVariables;
        java.lang.String[] strArray34 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        compilerOptions20.stripTypes = strSet35;
        compilerOptions9.setStripNamePrefixes((java.util.Set<java.lang.String>) strSet35);
        compilerOptions0.setReplaceStringsReservedStrings((java.util.Set<java.lang.String>) strSet35);
        compilerOptions0.setDebugFunctionSideEffectsPath("/experiment/:/hi!");
        com.google.javascript.jscomp.CompilerOptions compilerOptions42 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions42.crossModuleMethodMotion = true;
        compilerOptions42.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy47 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions48 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions48.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy51 = compilerOptions48.propertyRenaming;
        compilerOptions42.setRenamingPolicy(variableRenamingPolicy47, propertyRenamingPolicy51);
        boolean boolean53 = compilerOptions42.checkControlStructures;
        compilerOptions42.syntheticBlockEndMarker = "FINEST";
        compilerOptions42.setOptimizeParameters(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions58 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel59 = compilerOptions58.checkRequires;
        com.google.javascript.jscomp.CompilerOptions compilerOptions60 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode61 = null;
        compilerOptions60.setTracerMode(tracerMode61);
        boolean boolean63 = compilerOptions60.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel64 = compilerOptions60.sourceMapDetailLevel;
        compilerOptions60.setColorizeErrorOutput(true);
        compilerOptions60.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions69 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions69.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy72 = compilerOptions69.propertyRenaming;
        compilerOptions60.propertyRenaming = propertyRenamingPolicy72;
        com.google.javascript.jscomp.CheckLevel checkLevel74 = compilerOptions60.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel75 = compilerOptions60.checkRequires;
        compilerOptions58.setCheckRequires(checkLevel75);
        compilerOptions42.setCheckGlobalNamesLevel(checkLevel75);
        compilerOptions0.checkMissingGetCssNameLevel = checkLevel75;
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = null;
        compilerOptions0.setDefineReplacements(strMap79);
        compilerOptions0.setReplaceStringsPlaceholderToken("Exceeded max number of code motion iterations: {0}");
        compilerOptions0.optimizeCalls = true;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy18 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy18.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy51 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy51.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + checkLevel59 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel59.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(detailLevel64);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy72 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy72.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel74 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel74.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel75 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel75.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07017");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.coalesceVariableNames = true;
        compilerOptions0.setSmartNameRemoval(true);
        compilerOptions0.setAcceptConstKeyword(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode14 = null;
        compilerOptions13.setTracerMode(tracerMode14);
        boolean boolean16 = compilerOptions13.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel17 = compilerOptions13.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode18 = compilerOptions13.getLanguageOut();
        compilerOptions13.setReplaceStringsPlaceholderToken("PARAM_LIST");
        compilerOptions13.setPropertyAffinity(true);
        compilerOptions13.setRemoveUnusedLocalVars(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions25 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions25.setInlineLocalFunctions(false);
        compilerOptions25.moveFunctionDeclarations = true;
        compilerOptions25.setInlineLocalFunctions(false);
        boolean boolean32 = compilerOptions25.exportTestFunctions;
        com.google.javascript.jscomp.CheckLevel checkLevel33 = compilerOptions25.checkGlobalThisLevel;
        compilerOptions13.setReportUnknownTypes(checkLevel33);
        compilerOptions0.setBrokenClosureRequiresLevel(checkLevel33);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(detailLevel17);
        org.junit.Assert.assertNull(languageMode18);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + checkLevel33 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel33.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07018");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str1 = compilerOptions0.syntheticBlockStartMarker;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel2 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.TweakProcessing tweakProcessing3 = compilerOptions0.getTweakProcessing();
        compilerOptions0.setAliasableGlobals(":");
        compilerOptions0.setReserveRawExports(false);
        compilerOptions0.setInferTypes(true);
        compilerOptions0.deadAssignmentElimination = false;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(detailLevel2);
        org.junit.Assert.assertTrue("'" + tweakProcessing3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF + "'", tweakProcessing3.equals(com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF));
    }

    @Test
    public void test07019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07019");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) 1645456144000L, 53, (int) 'a');
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        boolean boolean8 = node7.isContinue();
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        jSTypeRegistry10.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSType jSType12 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray13 = new com.google.javascript.rhino.jstype.JSType[] { jSType12 };
        com.google.javascript.rhino.Node node14 = jSTypeRegistry10.createParameters(jSTypeArray13);
        int int15 = node7.getIndexOfChild(node14);
        boolean boolean16 = node7.isDelProp();
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean21 = node20.isTry();
        java.lang.String str22 = node20.toString();
        node7.addChildToBack(node20);
        boolean boolean24 = node7.isCall();
        boolean boolean25 = node7.isDefaultCase();
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        boolean boolean34 = jSTypeList29.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        com.google.javascript.rhino.Node node35 = jSTypeRegistry27.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        jSTypeRegistry27.setLastGeneration(false);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.ObjectType objectType40 = jSTypeRegistry39.createAnonymousObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter41 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry42 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter41);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray43 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList44 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList44, jSTypeArray43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        boolean boolean49 = jSTypeList44.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry42.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList44);
        jSTypeRegistry42.setLastGeneration(false);
        com.google.javascript.rhino.jstype.JSType jSType57 = jSTypeRegistry42.createNamedType("java.io.IOException: java.io.IOException: ", "", 47, (int) (short) 1);
        jSTypeRegistry42.resetForTypeCheck();
        com.google.javascript.rhino.jstype.JSType jSType59 = null;
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray63 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList64 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList64, jSTypeArray63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        boolean boolean69 = jSTypeList64.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry62.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList64);
        jSTypeRegistry62.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable74 = jSTypeRegistry62.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType79 = jSTypeRegistry62.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray82 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList83 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList83, jSTypeArray82);
        com.google.javascript.rhino.Node node85 = jSTypeRegistry81.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList83);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream86 = jSTypeList83.parallelStream();
        com.google.javascript.rhino.Node node87 = jSTypeRegistry62.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList83);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray88 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.JSType jSType89 = jSTypeRegistry62.createUnionType(jSTypeArray88);
        com.google.javascript.rhino.jstype.FunctionType functionType90 = jSTypeRegistry42.createFunctionType(jSType59, false, jSTypeArray88);
        com.google.javascript.rhino.jstype.FunctionType functionType91 = jSTypeRegistry27.createConstructorTypeWithVarArgs((com.google.javascript.rhino.jstype.JSType) objectType40, jSTypeArray88);
        node7.setJSType((com.google.javascript.rhino.jstype.JSType) objectType40);
        node3.addChildrenToBack(node7);
        boolean boolean94 = node7.isCatch();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(jSTypeArray13);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "STRING PARAM_LIST 49" + "'", str22, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(objectType40);
        org.junit.Assert.assertNotNull(jSTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSType57);
        org.junit.Assert.assertNotNull(jSTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(jSTypeIterable74);
        org.junit.Assert.assertNotNull(jSType79);
        org.junit.Assert.assertNotNull(jSTypeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertNotNull(jSTypeStream86);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertNotNull(jSTypeArray88);
        org.junit.Assert.assertNotNull(jSType89);
        org.junit.Assert.assertNotNull(functionType90);
        org.junit.Assert.assertNotNull(functionType91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test07020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07020");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        com.google.javascript.jscomp.CheckLevel checkLevel30 = compilerOptions0.checkMissingReturn;
        compilerOptions0.setMarkNoSideEffectCalls(true);
        compilerOptions0.setIdeMode(false);
        compilerOptions0.setOutputJsStringUsage(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions37 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions37.setInlineLocalFunctions(false);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy40 = null;
        compilerOptions37.variableRenaming = variableRenamingPolicy40;
        compilerOptions37.setProtectHiddenSideEffects(false);
        compilerOptions37.setRemoveUnusedLocalVars(false);
        compilerOptions37.setExtractPrototypeMemberDeclarations(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions48 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean49 = compilerOptions48.moveFunctionDeclarations;
        compilerOptions48.setReportPath("java.io.IOException: ");
        com.google.javascript.jscomp.CompilerOptions compilerOptions52 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean53 = compilerOptions52.moveFunctionDeclarations;
        compilerOptions52.setReportPath("java.io.IOException: ");
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode56 = compilerOptions52.getTracerMode();
        compilerOptions48.setTracer(tracerMode56);
        compilerOptions37.setTracerMode(tracerMode56);
        compilerOptions0.setTracer(tracerMode56);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel30 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel30.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + tracerMode56 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode56.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
    }

    @Test
    public void test07021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07021");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTransformAMDToCJSModules(false);
        boolean boolean7 = compilerOptions0.crossModuleMethodMotion;
        compilerOptions0.setInlineGetters(true);
        compilerOptions0.setAliasExternals(true);
        compilerOptions0.flowSensitiveInlineVariables = true;
        compilerOptions0.setIgnoreCajaProperties(true);
        compilerOptions0.setSyntheticBlockStartMarker("JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of optimization iterations: {0}");
        compilerOptions0.setProcessCommonJSModules(true);
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.inlineFunctions = true;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test07022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07022");
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray4 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList5 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList5, jSTypeArray4);
        com.google.javascript.rhino.Node node7 = jSTypeRegistry3.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList5);
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.Node node13 = jSTypeRegistry9.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList11);
        node7.addChildrenToBack(node13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray17 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList18 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList18, jSTypeArray17);
        com.google.javascript.rhino.Node node20 = jSTypeRegistry16.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList18);
        boolean boolean21 = node20.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.Node node27 = jSTypeRegistry23.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = node27.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        com.google.javascript.rhino.Node node34 = jSTypeRegistry30.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        com.google.javascript.rhino.Node node37 = new com.google.javascript.rhino.Node((int) (short) 0, node7, node20, node27, node34, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.Node node44 = jSTypeRegistry40.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        node44.addChildrenToBack(node50);
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList55 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55, jSTypeArray54);
        com.google.javascript.rhino.Node node57 = jSTypeRegistry53.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList55);
        boolean boolean58 = node57.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry60 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        com.google.javascript.rhino.Node node64 = jSTypeRegistry60.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        boolean boolean65 = node64.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter66 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry67 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter66);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.Node node71 = jSTypeRegistry67.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        com.google.javascript.rhino.Node node74 = new com.google.javascript.rhino.Node((int) (short) 0, node44, node57, node64, node71, 0, 49);
        com.google.javascript.rhino.Node node75 = node37.useSourceInfoFrom(node57);
        com.google.javascript.jscomp.CheckLevel checkLevel77 = null;
        com.google.javascript.jscomp.DiagnosticType diagnosticType79 = com.google.javascript.jscomp.DiagnosticType.make("*global*", checkLevel77, "");
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", ":" };
        com.google.javascript.jscomp.JSError jSError87 = com.google.javascript.jscomp.JSError.make("*global*", node75, diagnosticType79, strArray86);
        com.google.javascript.jscomp.CheckLevel checkLevel88 = jSError87.getDefaultLevel();
        java.lang.String str89 = jSError87.toString();
        int int90 = jSError87.lineNumber;
        org.junit.Assert.assertNotNull(jSTypeArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(jSTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(diagnosticType79);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(jSError87);
        org.junit.Assert.assertNull(checkLevel88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "*global*.  at *global* line (unknown line) : (unknown column)" + "'", str89, "*global*.  at *global* line (unknown line) : (unknown column)");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test07023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07023");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.Node node13 = jSTypeRegistry9.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList11);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        node13.addChildrenToBack(node19);
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        boolean boolean34 = node33.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter35 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter35);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.Node node40 = jSTypeRegistry36.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        com.google.javascript.rhino.Node node43 = new com.google.javascript.rhino.Node((int) (short) 0, node13, node26, node33, node40, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        node50.addChildrenToBack(node56);
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        boolean boolean71 = node70.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray74 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList75 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList75, jSTypeArray74);
        com.google.javascript.rhino.Node node77 = jSTypeRegistry73.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList75);
        com.google.javascript.rhino.Node node80 = new com.google.javascript.rhino.Node((int) (short) 0, node50, node63, node70, node77, 0, 49);
        com.google.javascript.rhino.Node node81 = node43.useSourceInfoFrom(node63);
        boolean boolean82 = node81.hasChildren();
        com.google.javascript.rhino.Node node83 = strMap4.putIfAbsent("STRING PARAM_LIST 49", node81);
        // The following exception was thrown during execution in test generation
        try {
            node81.setSideEffectFlags(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: 0");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(jSTypeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(node83);
    }

    @Test
    public void test07024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07024");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("FINEST");
        stats1.gzSize = 300;
        int int4 = stats1.gzDiff;
        stats1.gzDiff = 4095;
        stats1.gzSize = 47;
        stats1.diff = 3;
        stats1.changes = 38;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test07025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07025");
        com.google.javascript.jscomp.SourceFile.Builder builder0 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile4 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int6 = sourceFile4.getLineOfOffset((int) (short) 1);
        java.io.Reader reader7 = sourceFile4.getCodeReader();
        int int8 = reader7.read();
        com.google.javascript.jscomp.SourceFile sourceFile9 = builder0.buildFromReader("*global*", reader7);
        java.nio.charset.Charset charset10 = null;
        com.google.javascript.jscomp.SourceFile.Builder builder11 = builder0.withCharset(charset10);
        com.google.javascript.jscomp.SourceFile.Generator generator13 = null;
        com.google.javascript.jscomp.SourceFile sourceFile14 = builder11.buildFromGenerator("STRING PARAM_LIST 49: hi!", generator13);
        java.io.File file17 = new java.io.File(":", "hi!");
        boolean boolean20 = file17.setExecutable(true, false);
        long long21 = file17.lastModified();
        boolean boolean22 = file17.mkdir();
        java.lang.String str23 = file17.getCanonicalPath();
        java.lang.String str24 = file17.getCanonicalPath();
        com.google.javascript.jscomp.SourceFile sourceFile25 = builder11.buildFromFile(file17);
        java.nio.charset.Charset charset26 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str27 = charset26.name();
        java.lang.String str28 = charset26.name();
        java.nio.charset.Charset charset29 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str30 = charset29.toString();
        boolean boolean31 = charset26.contains(charset29);
        java.lang.String str32 = charset26.displayName();
        com.google.javascript.jscomp.CompilerOptions compilerOptions33 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions33.crossModuleMethodMotion = true;
        compilerOptions33.syntheticBlockEndMarker = "hi!";
        compilerOptions33.setMarkNoSideEffectCalls(false);
        compilerOptions33.setInlineConstantVars(true);
        boolean boolean42 = charset26.equals((java.lang.Object) true);
        java.nio.ByteBuffer byteBuffer44 = charset26.encode("JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of optimization iterations: {0}");
        com.google.javascript.jscomp.SourceFile sourceFile45 = com.google.javascript.jscomp.SourceFile.fromFile(file17, charset26);
        boolean boolean46 = file17.isHidden();
        org.junit.Assert.assertNotNull(sourceFile4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(sourceFile9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(sourceFile14);
        org.junit.Assert.assertEquals(file17.getParent(), ":");
        org.junit.Assert.assertEquals(file17.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1645456527000L + "'", long21 == 1645456527000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/experiment/:/hi!" + "'", str23, "/experiment/:/hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/experiment/:/hi!" + "'", str24, "/experiment/:/hi!");
        org.junit.Assert.assertNotNull(sourceFile25);
        org.junit.Assert.assertNotNull(charset26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "US-ASCII" + "'", str27, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "US-ASCII" + "'", str28, "US-ASCII");
        org.junit.Assert.assertNotNull(charset29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "US-ASCII" + "'", str30, "US-ASCII");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "US-ASCII" + "'", str32, "US-ASCII");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteBuffer44);
        org.junit.Assert.assertNotNull(sourceFile45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test07026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07026");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        com.google.javascript.jscomp.CheckLevel checkLevel10 = compilerOptions0.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode11 = compilerOptions0.getLanguageOut();
        boolean boolean12 = compilerOptions0.moveFunctionDeclarations;
        byte[] byteArray13 = null;
        compilerOptions0.inputPropertyMapSerialized = byteArray13;
        boolean boolean15 = compilerOptions0.devirtualizePrototypeMethods;
        compilerOptions0.setDefineToStringLiteral("DiagnosticGroup<checkProvides>", "NUMBER -1.0");
        compilerOptions0.setNameAnonymousFunctionsOnly(false);
        org.junit.Assert.assertTrue("'" + checkLevel10 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel10.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(languageMode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test07027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07027");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder75 = node56.getJsDocBuilderForNode();
        boolean boolean76 = node56.isCatch();
        boolean boolean77 = node56.isFalse();
        boolean boolean78 = node56.isOptionalArg();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test07028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07028");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        compilerOptions0.setDefineToBooleanLiteral("", true);
        java.lang.String str12 = compilerOptions0.renamePrefixNamespace;
        java.util.Set<java.lang.String> strSet13 = compilerOptions0.stripNamePrefixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        java.lang.String[] strArray20 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        compilerOptions14.setStripTypes((java.util.Set<java.lang.String>) strSet21);
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode25 = null;
        compilerOptions24.setTracerMode(tracerMode25);
        boolean boolean27 = compilerOptions24.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel28 = compilerOptions24.sourceMapDetailLevel;
        compilerOptions24.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions31.crossModuleMethodMotion = true;
        compilerOptions31.optimizeParameters = true;
        compilerOptions31.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel39 = compilerOptions31.checkGlobalNamesLevel;
        compilerOptions24.setReportMissingOverride(checkLevel39);
        compilerOptions14.setCheckUnreachableCode(checkLevel39);
        compilerOptions14.syntheticBlockStartMarker = "*global*";
        compilerOptions14.prettyPrint = false;
        boolean boolean46 = compilerOptions14.aliasAllStrings;
        com.google.javascript.jscomp.CompilerOptions.Reach reach47 = com.google.javascript.jscomp.CompilerOptions.Reach.NONE;
        compilerOptions14.setInlineVariables(reach47);
        compilerOptions0.setRemoveUnusedVariables(reach47);
        compilerOptions0.removeUnusedLocalVars = true;
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(detailLevel28);
        org.junit.Assert.assertTrue("'" + checkLevel39 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel39.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + reach47 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.NONE + "'", reach47.equals(com.google.javascript.jscomp.CompilerOptions.Reach.NONE));
    }

    @Test
    public void test07029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07029");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setRuntimeTypeCheckLogFunction("FINEST");
        compilerOptions0.renamePrefixNamespace = ":/hi!";
        compilerOptions0.setMarkAsCompiled(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean10 = compilerOptions9.moveFunctionDeclarations;
        compilerOptions9.crossModuleCodeMotion = true;
        compilerOptions9.checkSymbols = true;
        compilerOptions9.setExtractPrototypeMemberDeclarations(true);
        boolean boolean17 = compilerOptions9.checkSuspiciousCode;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str19 = compilerOptions18.syntheticBlockStartMarker;
        compilerOptions18.labelRenaming = true;
        boolean boolean22 = compilerOptions18.inlineLocalFunctions;
        com.google.javascript.jscomp.CompilerOptions compilerOptions23 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions23.crossModuleMethodMotion = true;
        compilerOptions23.skipAllCompilerPasses();
        boolean boolean27 = compilerOptions23.flowSensitiveInlineVariables;
        java.lang.String[] strArray37 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet38 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet38, strArray37);
        compilerOptions23.stripTypes = strSet38;
        compilerOptions18.setStripNameSuffixes((java.util.Set<java.lang.String>) strSet38);
        compilerOptions9.setExtraAnnotationNames((java.util.Set<java.lang.String>) strSet38);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = null;
        compilerOptions9.setTweakReplacements(strMap43);
        compilerOptions9.setInferTypes(true);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode47 = com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY;
        compilerOptions9.setTracer(tracerMode47);
        compilerOptions0.setTracerMode(tracerMode47);
        boolean boolean50 = compilerOptions0.markAsCompiled;
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + tracerMode47 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY + "'", tracerMode47.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test07030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07030");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        boolean boolean4 = node3.isContinue();
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry6 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5);
        jSTypeRegistry6.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSType jSType8 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] { jSType8 };
        com.google.javascript.rhino.Node node10 = jSTypeRegistry6.createParameters(jSTypeArray9);
        int int11 = node3.getIndexOfChild(node10);
        boolean boolean12 = node3.isVarArgs();
        boolean boolean13 = node3.hasOneChild();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test07031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07031");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean8 = node7.isTry();
        java.lang.String str9 = node7.toString();
        boolean boolean10 = node3.hasChild(node7);
        boolean boolean11 = node3.isString();
        node3.setSourceEncodedPosition(9);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "STRING PARAM_LIST 49" + "'", str9, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test07032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07032");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        jSTypeRegistry1.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable13 = jSTypeRegistry1.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType18 = jSTypeRegistry1.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.jstype.JSTypeNative[] jSTypeNativeArray21 = new com.google.javascript.rhino.jstype.JSTypeNative[] {};
        com.google.javascript.rhino.jstype.JSType jSType22 = jSTypeRegistry1.createUnionType(jSTypeNativeArray21);
        com.google.javascript.rhino.jstype.JSType jSType27 = jSTypeRegistry1.createNamedType("java.io.IOException: java.io.IOException: ", ":/hi!/PARAM_LIST\n", 51, 2);
        boolean boolean29 = jSTypeRegistry1.hasNamespace("PARAM_LIST 47\n    PARAM_LIST\n");
        jSTypeRegistry1.clearTemplateTypeNames();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeIterable13);
        org.junit.Assert.assertNotNull(jSType18);
        org.junit.Assert.assertNotNull(jSTypeNativeArray21);
        org.junit.Assert.assertNotNull(jSType22);
        org.junit.Assert.assertNotNull(jSType27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test07033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07033");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(true, false);
        boolean boolean7 = file2.setWritable(false);
        boolean boolean8 = file2.exists();
        java.lang.String str9 = file2.getName();
        java.nio.file.Path path10 = file2.toPath();
        long long11 = file2.lastModified();
        long long12 = file2.getFreeSpace();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(path10);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1645456527000L + "'", long11 == 1645456527000L);
// flaky:         org.junit.Assert.assertTrue("'" + long12 + "' != '" + 299090329600L + "'", long12 == 299090329600L);
    }

    @Test
    public void test07034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07034");
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray0 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList1 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList1, jSTypeArray0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        boolean boolean6 = jSTypeList1.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator7 = jSTypeList1.spliterator();
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream8 = jSTypeList1.stream();
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray11 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList12 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList12, jSTypeArray11);
        com.google.javascript.rhino.Node node14 = jSTypeRegistry10.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList12);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray17 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList18 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList18, jSTypeArray17);
        com.google.javascript.rhino.Node node20 = jSTypeRegistry16.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList18);
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        com.google.javascript.rhino.jstype.JSType jSType31 = jSTypeRegistry22.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry33 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray34 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList35 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList35, jSTypeArray34);
        com.google.javascript.rhino.Node node37 = jSTypeRegistry33.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList35);
        com.google.javascript.rhino.jstype.JSType jSType42 = jSTypeRegistry33.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray43 = new com.google.javascript.rhino.jstype.JSType[] { jSType42 };
        com.google.javascript.rhino.jstype.FunctionType functionType44 = jSTypeRegistry16.createConstructorTypeWithVarArgs(jSType31, jSTypeArray43);
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray48 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList49 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList49, jSTypeArray48);
        com.google.javascript.rhino.Node node51 = jSTypeRegistry47.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList49);
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList55 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55, jSTypeArray54);
        com.google.javascript.rhino.Node node57 = jSTypeRegistry53.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList55);
        com.google.javascript.rhino.jstype.JSType jSType62 = jSTypeRegistry53.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList66 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList66, jSTypeArray65);
        com.google.javascript.rhino.Node node68 = jSTypeRegistry64.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList66);
        com.google.javascript.rhino.jstype.JSType jSType73 = jSTypeRegistry64.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray74 = new com.google.javascript.rhino.jstype.JSType[] { jSType73 };
        com.google.javascript.rhino.jstype.FunctionType functionType75 = jSTypeRegistry47.createConstructorTypeWithVarArgs(jSType62, jSTypeArray74);
        boolean boolean76 = jSTypeRegistry16.declareType("", jSType62);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray77 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList78 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList78, jSTypeArray77);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray80 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList81 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList81, jSTypeArray80);
        boolean boolean83 = jSTypeList78.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList81);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator84 = jSTypeList78.spliterator();
        com.google.javascript.rhino.jstype.FunctionType functionType85 = jSTypeRegistry10.createFunctionTypeWithVarArgs(jSType62, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList78);
        java.lang.Object[] objArray86 = jSTypeList78.toArray();
        boolean boolean87 = jSTypeList1.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList78);
        com.google.javascript.rhino.Node node89 = com.google.javascript.rhino.Node.newString("TYPEOF : 44\n");
        boolean boolean90 = node89.isObjectLit();
        int int92 = node89.getIntProp(0);
        int int93 = jSTypeList1.lastIndexOf((java.lang.Object) 0);
        org.junit.Assert.assertNotNull(jSTypeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(jSTypeSpliterator7);
        org.junit.Assert.assertNotNull(jSTypeStream8);
        org.junit.Assert.assertNotNull(jSTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(jSTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(jSType31);
        org.junit.Assert.assertNotNull(jSTypeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(jSType42);
        org.junit.Assert.assertNotNull(jSTypeArray43);
        org.junit.Assert.assertNotNull(functionType44);
        org.junit.Assert.assertNotNull(jSTypeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(jSTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(jSType62);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(jSType73);
        org.junit.Assert.assertNotNull(jSTypeArray74);
        org.junit.Assert.assertNotNull(functionType75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(jSTypeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(jSTypeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(jSTypeSpliterator84);
        org.junit.Assert.assertNotNull(functionType85);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
    }

    @Test
    public void test07035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07035");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.jstype.JSType jSType10 = jSTypeRegistry1.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType jSType15 = jSTypeRegistry1.createNamedType("FINEST", "/", 32, (int) (short) 1);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray18 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList19 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList19, jSTypeArray18);
        com.google.javascript.rhino.Node node21 = jSTypeRegistry17.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList19);
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.Node node27 = jSTypeRegistry23.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        com.google.javascript.rhino.jstype.JSType jSType32 = jSTypeRegistry23.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        com.google.javascript.rhino.Node node38 = jSTypeRegistry34.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        com.google.javascript.rhino.jstype.JSType jSType43 = jSTypeRegistry34.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray44 = new com.google.javascript.rhino.jstype.JSType[] { jSType43 };
        com.google.javascript.rhino.jstype.FunctionType functionType45 = jSTypeRegistry17.createConstructorTypeWithVarArgs(jSType32, jSTypeArray44);
        com.google.javascript.rhino.jstype.JSType jSType47 = jSTypeRegistry1.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType45, "hi!");
        com.google.javascript.rhino.jstype.ObjectType objectType48 = jSTypeRegistry1.createAnonymousObjectType();
        jSTypeRegistry1.clearNamedTypes();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSType10);
        org.junit.Assert.assertNotNull(jSType15);
        org.junit.Assert.assertNotNull(jSTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(jSType32);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(jSType43);
        org.junit.Assert.assertNotNull(jSTypeArray44);
        org.junit.Assert.assertNotNull(functionType45);
        org.junit.Assert.assertNotNull(jSType47);
        org.junit.Assert.assertNotNull(objectType48);
    }

    @Test
    public void test07036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07036");
        com.google.javascript.jscomp.DiagnosticGroup[] diagnosticGroupArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup1 = new com.google.javascript.jscomp.DiagnosticGroup(diagnosticGroupArray0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07037");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int4 = sourceFile2.getLineOfOffset((int) (short) 1);
        int int6 = sourceFile2.getLineOfOffset(100);
        java.lang.String str7 = sourceFile2.getName();
        java.io.Reader reader8 = sourceFile2.getCodeReader();
        reader8.mark((int) ':');
        char[] charArray15 = new char[] { '#', '#', ' ', ':' };
        int int16 = reader8.read(charArray15);
        boolean boolean17 = reader8.ready();
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "## :");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "## :");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[#, #,  , :]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test07038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07038");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        boolean boolean21 = compilerOptions0.shouldColorizeErrorOutput();
        boolean boolean22 = compilerOptions0.removeTryCatchFinally;
        com.google.javascript.jscomp.SourceMap.Format format23 = compilerOptions0.sourceMapFormat;
        compilerOptions0.setReplaceIdGenerators(true);
        boolean boolean26 = compilerOptions0.collapseAnonymousFunctions;
        boolean boolean27 = compilerOptions0.assumeStrictThis();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(format23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test07039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07039");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        boolean boolean75 = node74.hasChildren();
        node74.setOptionalArg(false);
        com.google.javascript.rhino.Node node78 = node74.getLastChild();
        int int79 = node74.getSourcePosition();
        com.google.javascript.rhino.Node node81 = node74.getAncestor(4);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(node81);
    }

    @Test
    public void test07040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07040");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        compilerOptions7.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions7.checkGlobalNamesLevel;
        compilerOptions0.setReportMissingOverride(checkLevel15);
        java.util.Set<java.lang.String> strSet17 = compilerOptions0.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel19 = compilerOptions18.checkRequires;
        compilerOptions0.setReportMissingOverride(checkLevel19);
        compilerOptions0.setGatherCssNames(true);
        compilerOptions0.setLineBreak(false);
        boolean boolean25 = compilerOptions0.flowSensitiveInlineVariables;
        compilerOptions0.setSyntheticBlockStartMarker("/experiment/:");
        compilerOptions0.setSmartNameRemoval(true);
        compilerOptions0.removeUnusedClassProperties = true;
        boolean boolean32 = compilerOptions0.aliasAllStrings;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + checkLevel19 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel19.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test07041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07041");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        compilerOptions0.removeUnusedVars = false;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = compilerOptions0.variableRenaming;
        boolean boolean9 = compilerOptions0.removeUnusedPrototypeProperties;
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy8 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.OFF + "'", variableRenamingPolicy8.equals(com.google.javascript.jscomp.VariableRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test07042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07042");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("Node tree inequality:\nTree1:\nSTRING \n\n\nTree2:\nPARAM_LIST 0\n\n\nSubtree1: STRING \n\n\nSubtree2: PARAM_LIST 0\n");
    }

    @Test
    public void test07043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07043");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions6.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap10 = compilerOptions6.getTweakReplacements();
        boolean boolean11 = strMap10.isEmpty();
        strMap10.clear();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry14.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        boolean boolean19 = node18.isIn();
        boolean boolean20 = strMap10.containsValue((java.lang.Object) node18);
        boolean boolean21 = strMap4.containsKey((java.lang.Object) strMap10);
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec24 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("*global*");
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry27.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry33 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray34 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList35 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList35, jSTypeArray34);
        com.google.javascript.rhino.Node node37 = jSTypeRegistry33.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList35);
        node31.addChildrenToBack(node37);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.Node node44 = jSTypeRegistry40.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        boolean boolean45 = node44.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray48 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList49 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList49, jSTypeArray48);
        com.google.javascript.rhino.Node node51 = jSTypeRegistry47.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList49);
        boolean boolean52 = node51.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry54 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray55 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList56 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56, jSTypeArray55);
        com.google.javascript.rhino.Node node58 = jSTypeRegistry54.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        com.google.javascript.rhino.Node node61 = new com.google.javascript.rhino.Node((int) (short) 0, node31, node44, node51, node58, 0, 49);
        boolean boolean62 = node51.isInc();
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList66 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList66, jSTypeArray65);
        com.google.javascript.rhino.Node node68 = jSTypeRegistry64.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList66);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable70 = jSTypeRegistry64.getTypesWithProperty("");
        com.google.javascript.rhino.jstype.JSType jSType71 = assertionFunctionSpec24.getAssertedType(node51, jSTypeRegistry64);
        com.google.javascript.rhino.Node node74 = com.google.javascript.rhino.Node.newString((int) (short) 10, ":/hi!");
        int int75 = node74.getLineno();
        boolean boolean76 = node74.isThrow();
        com.google.javascript.rhino.Node node77 = assertionFunctionSpec24.getAssertedParam(node74);
        boolean boolean78 = node77.isWith();
        com.google.javascript.rhino.Node node79 = strMap4.put("*global*", node77);
        boolean boolean80 = node77.isName();
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable81 = node77.getAncestors();
        boolean boolean82 = node77.isIf();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(jSTypeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jSTypeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(jSTypeIterable70);
        org.junit.Assert.assertNull(jSType71);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(ancestorIterable81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test07044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07044");
        com.google.javascript.rhino.Node node1 = new com.google.javascript.rhino.Node(12);
        int int2 = node1.getType();
        com.google.javascript.rhino.ErrorReporter errorReporter4 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry5 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter4);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray6 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList7 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList7, jSTypeArray6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry5.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList7);
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray12 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList13 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13, jSTypeArray12);
        com.google.javascript.rhino.Node node15 = jSTypeRegistry11.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        node9.addChildrenToBack(node15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList20 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20, jSTypeArray19);
        com.google.javascript.rhino.Node node22 = jSTypeRegistry18.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList20);
        boolean boolean23 = node22.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter24 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry25 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter24);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray26 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList27 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList27, jSTypeArray26);
        com.google.javascript.rhino.Node node29 = jSTypeRegistry25.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList27);
        boolean boolean30 = node29.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray33 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList34 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList34, jSTypeArray33);
        com.google.javascript.rhino.Node node36 = jSTypeRegistry32.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList34);
        com.google.javascript.rhino.Node node39 = new com.google.javascript.rhino.Node((int) (short) 0, node9, node22, node29, node36, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter41 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry42 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter41);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray43 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList44 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList44, jSTypeArray43);
        com.google.javascript.rhino.Node node46 = jSTypeRegistry42.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList44);
        com.google.javascript.rhino.ErrorReporter errorReporter47 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry48 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter47);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray49 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList50 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList50, jSTypeArray49);
        com.google.javascript.rhino.Node node52 = jSTypeRegistry48.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList50);
        node46.addChildrenToBack(node52);
        com.google.javascript.rhino.ErrorReporter errorReporter54 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter54);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.Node node59 = jSTypeRegistry55.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        boolean boolean60 = node59.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray63 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList64 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList64, jSTypeArray63);
        com.google.javascript.rhino.Node node66 = jSTypeRegistry62.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList64);
        boolean boolean67 = node66.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter68 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry69 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter68);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray70 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList71 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList71, jSTypeArray70);
        com.google.javascript.rhino.Node node73 = jSTypeRegistry69.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList71);
        com.google.javascript.rhino.Node node76 = new com.google.javascript.rhino.Node((int) (short) 0, node46, node59, node66, node73, 0, 49);
        com.google.javascript.rhino.Node node77 = node39.useSourceInfoFrom(node59);
        boolean boolean78 = node77.hasChildren();
        boolean boolean79 = node77.isArrayLit();
        com.google.javascript.rhino.InputId inputId81 = new com.google.javascript.rhino.InputId("*global*");
        java.lang.String str82 = inputId81.toString();
        node77.setInputId(inputId81);
        com.google.javascript.rhino.Node node87 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        boolean boolean88 = node87.isContinue();
        com.google.javascript.rhino.Node node89 = node77.copyInformationFrom(node87);
        boolean boolean90 = node87.isQualifiedName();
        com.google.javascript.rhino.Node node91 = node1.srcref(node87);
        boolean boolean92 = node87.isStringKey();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 12 + "'", int2 == 12);
        org.junit.Assert.assertNotNull(jSTypeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(jSTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSTypeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(jSTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(jSTypeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(jSTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(jSTypeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "InputId: *global*" + "'", str82, "InputId: *global*");
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(node91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test07045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07045");
        com.google.javascript.jscomp.DependencyOptions dependencyOptions0 = new com.google.javascript.jscomp.DependencyOptions();
        com.google.javascript.jscomp.DependencyOptions dependencyOptions2 = dependencyOptions0.setDependencyPruning(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions4 = dependencyOptions0.setMoocherDropping(true);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions6 = dependencyOptions4.setDependencyPruning(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode8 = null;
        compilerOptions7.setTracerMode(tracerMode8);
        boolean boolean10 = compilerOptions7.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel11 = compilerOptions7.sourceMapDetailLevel;
        compilerOptions7.setColorizeErrorOutput(true);
        compilerOptions7.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions16 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions16.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy19 = compilerOptions16.propertyRenaming;
        compilerOptions7.propertyRenaming = propertyRenamingPolicy19;
        com.google.javascript.jscomp.CheckLevel checkLevel21 = compilerOptions7.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel22 = compilerOptions7.checkRequires;
        compilerOptions7.setReportPath("OFF");
        byte[] byteArray25 = compilerOptions7.inputPropertyMapSerialized;
        compilerOptions7.setGenerateExports(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions28 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode29 = null;
        compilerOptions28.setTracerMode(tracerMode29);
        boolean boolean31 = compilerOptions28.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel32 = compilerOptions28.sourceMapDetailLevel;
        compilerOptions28.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet35 = compilerOptions28.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile37 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput39 = new com.google.javascript.jscomp.CompilerInput(sourceFile37, true);
        com.google.javascript.rhino.InputId inputId41 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput43 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput39, inputId41, true);
        java.lang.String str44 = compilerInput43.toString();
        boolean boolean45 = strSet35.contains((java.lang.Object) compilerInput43);
        java.lang.Object[] objArray46 = strSet35.toArray();
        java.lang.Object obj47 = null;
        boolean boolean48 = strSet35.contains(obj47);
        boolean boolean49 = strSet35.isEmpty();
        compilerOptions7.setStripTypes(strSet35);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions51 = dependencyOptions6.setEntryPoints((java.util.Collection<java.lang.String>) strSet35);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions53 = dependencyOptions51.setMoocherDropping(true);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions55 = dependencyOptions53.setMoocherDropping(false);
        org.junit.Assert.assertNotNull(dependencyOptions2);
        org.junit.Assert.assertNotNull(dependencyOptions4);
        org.junit.Assert.assertNotNull(dependencyOptions6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(detailLevel11);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy19 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy19.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel21 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel21.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel22 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel22.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(detailLevel32);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "*global*" + "'", str44, "*global*");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(dependencyOptions51);
        org.junit.Assert.assertNotNull(dependencyOptions53);
        org.junit.Assert.assertNotNull(dependencyOptions55);
    }

    @Test
    public void test07046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07046");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int4 = sourceFile2.getLineOfOffset((int) (short) 1);
        int int6 = sourceFile2.getLineOfOffset(100);
        java.lang.String str7 = sourceFile2.getName();
        java.io.Reader reader8 = sourceFile2.getCodeReader();
        int int10 = sourceFile2.getLineOfOffset(51);
        com.google.javascript.jscomp.CompilerInput compilerInput11 = new com.google.javascript.jscomp.CompilerInput(sourceFile2);
        java.io.Reader reader12 = sourceFile2.getCodeReader();
        int int13 = reader12.read();
        long long15 = reader12.skip((long) 3);
        reader12.reset();
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    }

    @Test
    public void test07047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07047");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        compilerOptions0.setTweakReplacements(strMap1);
        boolean boolean3 = compilerOptions0.exportTestFunctions;
        java.lang.String str4 = compilerOptions0.aliasStringsBlacklist;
        com.google.javascript.jscomp.JSModule jSModule7 = new com.google.javascript.jscomp.JSModule("java.io.IOException: ");
        com.google.javascript.jscomp.JSModule jSModule9 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler10 = new com.google.javascript.jscomp.Compiler();
        jSModule9.sortInputsByDeps(compiler10);
        com.google.javascript.jscomp.SourceFile.Builder builder12 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile16 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int18 = sourceFile16.getLineOfOffset((int) (short) 1);
        java.io.Reader reader19 = sourceFile16.getCodeReader();
        int int20 = reader19.read();
        com.google.javascript.jscomp.SourceFile sourceFile21 = builder12.buildFromReader("*global*", reader19);
        jSModule9.add(sourceFile21);
        com.google.javascript.jscomp.JSModule jSModule24 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler25 = new com.google.javascript.jscomp.Compiler();
        jSModule24.sortInputsByDeps(compiler25);
        com.google.javascript.jscomp.SourceFile.Builder builder27 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile31 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int33 = sourceFile31.getLineOfOffset((int) (short) 1);
        java.io.Reader reader34 = sourceFile31.getCodeReader();
        int int35 = reader34.read();
        com.google.javascript.jscomp.SourceFile sourceFile36 = builder27.buildFromReader("*global*", reader34);
        jSModule24.add(sourceFile36);
        boolean boolean39 = jSModule24.removeByName("PARAM_LIST");
        jSModule9.addDependency(jSModule24);
        com.google.javascript.jscomp.SourceFile sourceFile42 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput44 = new com.google.javascript.jscomp.CompilerInput(sourceFile42, true);
        com.google.javascript.rhino.InputId inputId46 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput48 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput44, inputId46, true);
        com.google.javascript.jscomp.CompilerInput compilerInput50 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput48, false);
        jSModule9.addFirst(compilerInput48);
        com.google.javascript.jscomp.CompilerInput compilerInput53 = jSModule9.getByName("");
        com.google.javascript.jscomp.SourceFile sourceFile55 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput57 = new com.google.javascript.jscomp.CompilerInput(sourceFile55, true);
        com.google.javascript.rhino.InputId inputId59 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput61 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput57, inputId59, true);
        com.google.javascript.jscomp.CompilerInput compilerInput63 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput61, false);
        com.google.javascript.jscomp.JSModule jSModule65 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler66 = new com.google.javascript.jscomp.Compiler();
        jSModule65.sortInputsByDeps(compiler66);
        java.lang.String str68 = jSModule65.getName();
        compilerInput61.setModule(jSModule65);
        jSModule65.setDepth((int) (byte) 0);
        jSModule9.addDependency(jSModule65);
        com.google.javascript.jscomp.SourceFile sourceFile75 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int77 = sourceFile75.getLineOfOffset((int) (short) 1);
        java.lang.String str78 = sourceFile75.getName();
        java.lang.String str79 = sourceFile75.getName();
        java.lang.String str80 = sourceFile75.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput82 = new com.google.javascript.jscomp.CompilerInput(sourceFile75, true);
        com.google.javascript.jscomp.CompilerInput compilerInput83 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput82);
        com.google.javascript.jscomp.CompilerInput compilerInput85 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput82, false);
        jSModule65.remove(compilerInput82);
        jSModule7.add(compilerInput82);
        com.google.javascript.jscomp.SourceFile sourceFile89 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput91 = new com.google.javascript.jscomp.CompilerInput(sourceFile89, true);
        com.google.javascript.rhino.InputId inputId93 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput95 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput91, inputId93, true);
        jSModule7.remove(compilerInput95);
        java.util.List<java.lang.String> strList97 = jSModule7.getProvides();
        compilerOptions0.setReplaceStringsConfiguration("goog.exportProperty", strList97);
        byte[] byteArray99 = compilerOptions0.inputPropertyMapSerialized;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sourceFile16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(sourceFile21);
        org.junit.Assert.assertNotNull(sourceFile31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(reader34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(sourceFile36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(compilerInput53);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "STRING PARAM_LIST 49" + "'", str68, "STRING PARAM_LIST 49");
        org.junit.Assert.assertNotNull(sourceFile75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(strList97);
        org.junit.Assert.assertNull(byteArray99);
    }

    @Test
    public void test07048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07048");
        java.io.IOException iOException1 = new java.io.IOException();
        java.io.IOException iOException2 = new java.io.IOException("OFF", (java.lang.Throwable) iOException1);
        java.lang.Throwable[] throwableArray3 = iOException1.getSuppressed();
        java.io.IOException iOException5 = new java.io.IOException("");
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException("");
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException();
        iOException11.addSuppressed((java.lang.Throwable) iOException12);
        java.lang.Throwable[] throwableArray14 = iOException12.getSuppressed();
        iOException6.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException18 = new java.io.IOException("");
        java.io.IOException iOException19 = new java.io.IOException((java.lang.Throwable) iOException18);
        java.io.IOException iOException20 = new java.io.IOException("JSC_OPTIMIZE_LOOP_ERROR", (java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) iOException20);
        java.io.IOException iOException23 = new java.io.IOException("");
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException23);
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) iOException24);
        java.io.IOException iOException26 = new java.io.IOException();
        iOException25.addSuppressed((java.lang.Throwable) iOException26);
        java.io.IOException iOException28 = new java.io.IOException((java.lang.Throwable) iOException25);
        iOException20.addSuppressed((java.lang.Throwable) iOException25);
        iOException12.addSuppressed((java.lang.Throwable) iOException20);
        iOException1.addSuppressed((java.lang.Throwable) iOException12);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray14);
    }

    @Test
    public void test07049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07049");
        com.google.javascript.jscomp.SourceFile.Builder builder0 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile4 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int6 = sourceFile4.getLineOfOffset((int) (short) 1);
        java.io.Reader reader7 = sourceFile4.getCodeReader();
        int int8 = reader7.read();
        com.google.javascript.jscomp.SourceFile sourceFile9 = builder0.buildFromReader("*global*", reader7);
        java.nio.charset.Charset charset10 = null;
        com.google.javascript.jscomp.SourceFile.Builder builder11 = builder0.withCharset(charset10);
        java.io.File file14 = new java.io.File(":", "hi!");
        boolean boolean17 = file14.setExecutable(true, false);
        long long18 = file14.lastModified();
        boolean boolean19 = file14.mkdir();
        com.google.javascript.jscomp.SourceFile sourceFile20 = builder0.buildFromFile(file14);
        com.google.javascript.jscomp.SourceFile.Builder builder22 = builder0.withOriginalPath("java.io.IOException: OFF");
        java.nio.charset.Charset charset23 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str24 = charset23.name();
        java.lang.String str25 = charset23.name();
        com.google.javascript.jscomp.SourceFile.Builder builder26 = builder0.withCharset(charset23);
        boolean boolean27 = charset23.canEncode();
        com.google.javascript.jscomp.SourceFile sourceFile30 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int32 = sourceFile30.getLineOfOffset((int) (short) 1);
        int int34 = sourceFile30.getLineOfOffset(100);
        java.lang.String str35 = sourceFile30.getName();
        java.io.Reader reader36 = sourceFile30.getCodeReader();
        reader36.mark((int) ':');
        char[] charArray43 = new char[] { '#', '#', ' ', ':' };
        int int44 = reader36.read(charArray43);
        java.nio.charset.Charset charset45 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str46 = charset45.name();
        java.lang.String str47 = charset45.name();
        java.nio.charset.Charset charset48 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str49 = charset48.toString();
        boolean boolean50 = charset45.contains(charset48);
        java.nio.charset.CharsetEncoder charsetEncoder51 = charset48.newEncoder();
        java.io.File file54 = new java.io.File(":", "hi!");
        boolean boolean57 = file54.setExecutable(false, false);
        java.io.File file58 = file54.getParentFile();
        long long59 = file58.getUsableSpace();
        boolean boolean60 = file58.mkdirs();
        java.nio.charset.Charset charset61 = null;
        com.google.javascript.jscomp.JSSourceFile jSSourceFile62 = com.google.javascript.jscomp.JSSourceFile.fromFile(file58, charset61);
        java.io.File file65 = new java.io.File(":", "hi!");
        boolean boolean68 = file65.setExecutable(true, false);
        boolean boolean70 = file65.setWritable(false);
        boolean boolean71 = file65.canWrite();
        java.net.URI uRI72 = file65.toURI();
        boolean boolean73 = file58.renameTo(file65);
        java.nio.charset.Charset charset74 = java.nio.charset.Charset.defaultCharset();
        com.google.javascript.jscomp.SourceFile sourceFile75 = com.google.javascript.jscomp.SourceFile.fromFile(file58, charset74);
        java.lang.String str76 = charset74.displayName();
        boolean boolean77 = charset48.contains(charset74);
        java.nio.charset.Charset charset78 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str79 = charset78.name();
        java.util.Locale locale80 = null;
        java.lang.String str81 = charset78.displayName(locale80);
        java.nio.ByteBuffer byteBuffer83 = charset78.encode("/experiment/:/hi!");
        java.nio.CharBuffer charBuffer84 = charset74.decode(byteBuffer83);
        int int85 = reader36.read(charBuffer84);
        java.nio.ByteBuffer byteBuffer86 = charset23.encode(charBuffer84);
        org.junit.Assert.assertNotNull(sourceFile4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(sourceFile9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertEquals(file14.getParent(), ":");
        org.junit.Assert.assertEquals(file14.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1645456527000L + "'", long18 == 1645456527000L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(sourceFile20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(charset23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "US-ASCII" + "'", str24, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "US-ASCII" + "'", str25, "US-ASCII");
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(sourceFile30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "## :");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "## :");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[#, #,  , :]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(charset45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "US-ASCII" + "'", str46, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "US-ASCII" + "'", str47, "US-ASCII");
        org.junit.Assert.assertNotNull(charset48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "US-ASCII" + "'", str49, "US-ASCII");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charsetEncoder51);
        org.junit.Assert.assertEquals(file54.getParent(), ":");
        org.junit.Assert.assertEquals(file54.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertNull("file58.getParent() == null", file58.getParent());
        org.junit.Assert.assertEquals(file58.toString(), ":");
// flaky:         org.junit.Assert.assertTrue("'" + long59 + "' != '" + 280490635264L + "'", long59 == 280490635264L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(jSSourceFile62);
        org.junit.Assert.assertEquals(file65.getParent(), ":");
        org.junit.Assert.assertEquals(file65.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(uRI72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(charset74);
        org.junit.Assert.assertNotNull(sourceFile75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "US-ASCII" + "'", str76, "US-ASCII");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(charset78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "US-ASCII" + "'", str79, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "US-ASCII" + "'", str81, "US-ASCII");
        org.junit.Assert.assertNotNull(byteBuffer83);
        org.junit.Assert.assertNotNull(charBuffer84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(byteBuffer86);
    }

    @Test
    public void test07050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07050");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.jscomp.SourceFile sourceFile3 = com.google.javascript.jscomp.SourceFile.fromCode("", "FINE", "InputId: PARAM_LIST [var_args_name: 1] [opt_arg: 1]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: a source must have a name");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07051");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean8 = node7.isTry();
        java.lang.String str9 = node7.toString();
        boolean boolean10 = node3.hasChild(node7);
        java.lang.String str11 = node7.getSourceFileName();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry14.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        node18.addChildrenToBack(node24);
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry27.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        boolean boolean32 = node31.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        com.google.javascript.rhino.Node node38 = jSTypeRegistry34.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        boolean boolean39 = node38.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        com.google.javascript.rhino.Node node48 = new com.google.javascript.rhino.Node((int) (short) 0, node18, node31, node38, node45, 0, 49);
        com.google.javascript.rhino.Node node53 = com.google.javascript.rhino.Node.newString(46, "", 2, 51);
        boolean boolean54 = node38.isEquivalentToTyped(node53);
        node7.addChildrenToBack(node53);
        node7.setWasEmptyNode(false);
        java.lang.String str58 = node7.toString();
        boolean boolean59 = node7.isDefaultCase();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "STRING PARAM_LIST 49" + "'", str9, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "STRING PARAM_LIST 49" + "'", str58, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test07052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07052");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions6.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap10 = compilerOptions6.getTweakReplacements();
        boolean boolean11 = strMap10.isEmpty();
        strMap10.clear();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry14.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        boolean boolean19 = node18.isIn();
        boolean boolean20 = strMap10.containsValue((java.lang.Object) node18);
        boolean boolean21 = strMap4.containsKey((java.lang.Object) strMap10);
        com.google.javascript.rhino.InputId inputId23 = new com.google.javascript.rhino.InputId("*global*");
        java.lang.String str24 = inputId23.toString();
        boolean boolean25 = strMap10.containsKey((java.lang.Object) inputId23);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.Node>> strEntrySet26 = strMap10.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.Node>> strEntrySet27 = strMap10.entrySet();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "InputId: *global*" + "'", str24, "InputId: *global*");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strEntrySet26);
        org.junit.Assert.assertNotNull(strEntrySet27);
    }

    @Test
    public void test07053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07053");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString(2, "PARAM_LIST\n");
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        boolean boolean11 = jSTypeList6.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry4.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        boolean boolean13 = node12.isVarArgs();
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray17 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList18 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList18, jSTypeArray17);
        com.google.javascript.rhino.Node node20 = jSTypeRegistry16.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList18);
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        node20.addChildrenToBack(node26);
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        boolean boolean34 = node33.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter35 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter35);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.Node node40 = jSTypeRegistry36.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        boolean boolean41 = node40.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry43 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray44 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList45 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList45, jSTypeArray44);
        com.google.javascript.rhino.Node node47 = jSTypeRegistry43.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList45);
        com.google.javascript.rhino.Node node50 = new com.google.javascript.rhino.Node((int) (short) 0, node20, node33, node40, node47, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList55 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55, jSTypeArray54);
        com.google.javascript.rhino.Node node57 = jSTypeRegistry53.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList55);
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        node57.addChildrenToBack(node63);
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        boolean boolean71 = node70.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray74 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList75 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList75, jSTypeArray74);
        com.google.javascript.rhino.Node node77 = jSTypeRegistry73.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList75);
        boolean boolean78 = node77.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter79 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry80 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter79);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray81 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList82 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList82, jSTypeArray81);
        com.google.javascript.rhino.Node node84 = jSTypeRegistry80.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList82);
        com.google.javascript.rhino.Node node87 = new com.google.javascript.rhino.Node((int) (short) 0, node57, node70, node77, node84, 0, 49);
        com.google.javascript.rhino.Node node88 = node50.useSourceInfoFrom(node70);
        boolean boolean89 = node88.hasChildren();
        boolean boolean90 = node88.isDefaultCase();
        node12.addChildrenToFront(node88);
        boolean boolean92 = node2.hasChild(node12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str96 = node2.toString(true, false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: 2");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(jSTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(jSTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(jSTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(jSTypeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(jSTypeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test07054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07054");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean8 = node7.isTry();
        java.lang.String str9 = node7.toString();
        boolean boolean10 = node3.hasChild(node7);
        java.lang.String str11 = node7.getSourceFileName();
        boolean boolean12 = node7.isSwitch();
        node7.setOptionalArg(false);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray18 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList19 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList19, jSTypeArray18);
        com.google.javascript.rhino.Node node21 = jSTypeRegistry17.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList19);
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.Node node27 = jSTypeRegistry23.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        node21.addChildrenToBack(node27);
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        com.google.javascript.rhino.Node node34 = jSTypeRegistry30.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        boolean boolean35 = node34.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray38 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList39 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList39, jSTypeArray38);
        com.google.javascript.rhino.Node node41 = jSTypeRegistry37.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList39);
        boolean boolean42 = node41.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        com.google.javascript.rhino.Node node51 = new com.google.javascript.rhino.Node((int) (short) 0, node21, node34, node41, node48, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry54 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray55 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList56 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56, jSTypeArray55);
        com.google.javascript.rhino.Node node58 = jSTypeRegistry54.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry60 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        com.google.javascript.rhino.Node node64 = jSTypeRegistry60.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        node58.addChildrenToBack(node64);
        com.google.javascript.rhino.ErrorReporter errorReporter66 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry67 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter66);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.Node node71 = jSTypeRegistry67.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        boolean boolean72 = node71.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter73 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry74 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter73);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray75 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList76 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList76, jSTypeArray75);
        com.google.javascript.rhino.Node node78 = jSTypeRegistry74.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList76);
        boolean boolean79 = node78.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray82 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList83 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList83, jSTypeArray82);
        com.google.javascript.rhino.Node node85 = jSTypeRegistry81.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList83);
        com.google.javascript.rhino.Node node88 = new com.google.javascript.rhino.Node((int) (short) 0, node58, node71, node78, node85, 0, 49);
        com.google.javascript.rhino.Node node89 = node51.useSourceInfoFrom(node71);
        boolean boolean90 = node71.isExprResult();
        int int91 = node71.getLength();
        boolean boolean92 = node71.isOptionalArg();
        com.google.javascript.rhino.Node node93 = node71.getNext();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder94 = node71.new FileLevelJsDocBuilder();
        boolean boolean95 = node71.isAssign();
        node71.setSourceEncodedPositionForTree(196607);
        boolean boolean98 = node7.hasChild(node71);
        int int99 = node71.getType();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "STRING PARAM_LIST 49" + "'", str9, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(jSTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(jSTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(jSTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(jSTypeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(jSTypeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(node93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 83 + "'", int99 == 83);
    }

    @Test
    public void test07055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07055");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) 30, 43, (int) ':');
        boolean boolean4 = node3.isLabelName();
        boolean boolean5 = node3.isDo();
        boolean boolean6 = node3.isEmpty();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test07056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07056");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        compilerOptions0.setFoldConstants(true);
        compilerOptions0.flowSensitiveInlineVariables = true;
        compilerOptions0.setTweakToStringLiteral("InputId: *global*", "hi!");
        compilerOptions0.setOptimizeParameters(true);
        boolean boolean14 = compilerOptions0.optimizeArgumentsArray;
        boolean boolean15 = compilerOptions0.removeUnusedPrototypeProperties;
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test07057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07057");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("/");
        jSModule1.setDepth(53);
        jSModule1.removeAll();
        jSModule1.setDepth((int) (byte) -1);
    }

    @Test
    public void test07058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07058");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        compilerOptions7.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions7.checkGlobalNamesLevel;
        compilerOptions0.setReportMissingOverride(checkLevel15);
        java.util.Set<java.lang.String> strSet17 = compilerOptions0.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel19 = compilerOptions18.checkRequires;
        compilerOptions0.setReportMissingOverride(checkLevel19);
        compilerOptions0.setGatherCssNames(true);
        compilerOptions0.setLineBreak(false);
        boolean boolean25 = compilerOptions0.flowSensitiveInlineVariables;
        compilerOptions0.setSyntheticBlockStartMarker("/experiment/:");
        compilerOptions0.removeUnusedPrototypeProperties = false;
        com.google.javascript.jscomp.MessageBundle messageBundle30 = null;
        compilerOptions0.messageBundle = messageBundle30;
        compilerOptions0.setInlineGetters(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + checkLevel19 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel19.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test07059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07059");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setNameReferenceReportPath("/experiment/:/hi!");
        compilerOptions0.skipAllCompilerPasses();
    }

    @Test
    public void test07060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07060");
        com.google.javascript.jscomp.SourceFile.Builder builder0 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile4 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int6 = sourceFile4.getLineOfOffset((int) (short) 1);
        java.io.Reader reader7 = sourceFile4.getCodeReader();
        int int8 = reader7.read();
        com.google.javascript.jscomp.SourceFile sourceFile9 = builder0.buildFromReader("*global*", reader7);
        java.nio.charset.Charset charset10 = null;
        com.google.javascript.jscomp.SourceFile.Builder builder11 = builder0.withCharset(charset10);
        java.io.File file14 = new java.io.File(":", "hi!");
        boolean boolean17 = file14.setExecutable(true, false);
        long long18 = file14.lastModified();
        boolean boolean19 = file14.mkdir();
        com.google.javascript.jscomp.SourceFile sourceFile20 = builder0.buildFromFile(file14);
        com.google.javascript.jscomp.SourceFile.Builder builder22 = builder0.withOriginalPath("java.io.IOException: OFF");
        com.google.javascript.jscomp.SourceFile.Generator generator24 = null;
        com.google.javascript.jscomp.SourceFile sourceFile25 = builder22.buildFromGenerator("Node tree inequality:\nTree1:\nPARAM_LIST\n    NAME \n\n\nTree2:\nNUMBER -1.0\n\n\nSubtree1: PARAM_LIST\n    NAME \n\n\nSubtree2: NUMBER -1.0\n", generator24);
        java.nio.charset.Charset charset27 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str28 = charset27.name();
        com.google.javascript.jscomp.SourceFile sourceFile29 = com.google.javascript.jscomp.SourceFile.fromFile("OFF", charset27);
        java.lang.String str30 = charset27.displayName();
        boolean boolean31 = charset27.canEncode();
        com.google.javascript.jscomp.SourceFile.Builder builder32 = builder22.withCharset(charset27);
        java.nio.charset.Charset charset34 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str35 = charset34.name();
        com.google.javascript.jscomp.SourceFile sourceFile36 = com.google.javascript.jscomp.SourceFile.fromFile("/experiment/:", charset34);
        int int37 = charset27.compareTo(charset34);
        org.junit.Assert.assertNotNull(sourceFile4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(sourceFile9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertEquals(file14.getParent(), ":");
        org.junit.Assert.assertEquals(file14.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1645456527000L + "'", long18 == 1645456527000L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(sourceFile20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(sourceFile25);
        org.junit.Assert.assertNotNull(charset27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "US-ASCII" + "'", str28, "US-ASCII");
        org.junit.Assert.assertNotNull(sourceFile29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "US-ASCII" + "'", str30, "US-ASCII");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(charset34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "US-ASCII" + "'", str35, "US-ASCII");
        org.junit.Assert.assertNotNull(sourceFile36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test07061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07061");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions21.crossModuleMethodMotion = true;
        compilerOptions21.skipAllCompilerPasses();
        boolean boolean25 = compilerOptions21.flowSensitiveInlineVariables;
        java.lang.String[] strArray35 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet36 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet36, strArray35);
        compilerOptions21.stripTypes = strSet36;
        compilerOptions0.stripNameSuffixes = strSet36;
        compilerOptions0.setExtractPrototypeMemberDeclarations(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions42 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions42.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy45 = compilerOptions42.propertyRenaming;
        java.lang.String[] strArray48 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet49 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet49, strArray48);
        compilerOptions42.setStripTypes((java.util.Set<java.lang.String>) strSet49);
        com.google.javascript.jscomp.CompilerOptions compilerOptions52 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode53 = null;
        compilerOptions52.setTracerMode(tracerMode53);
        boolean boolean55 = compilerOptions52.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel56 = compilerOptions52.sourceMapDetailLevel;
        compilerOptions52.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions59 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions59.crossModuleMethodMotion = true;
        compilerOptions59.optimizeParameters = true;
        compilerOptions59.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel67 = compilerOptions59.checkGlobalNamesLevel;
        compilerOptions52.setReportMissingOverride(checkLevel67);
        compilerOptions42.setCheckUnreachableCode(checkLevel67);
        byte[] byteArray74 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 1 };
        compilerOptions42.inputVariableMapSerialized = byteArray74;
        compilerOptions0.inputPropertyMapSerialized = byteArray74;
        boolean boolean77 = compilerOptions0.isExternExportsEnabled();
        compilerOptions0.setManageClosureDependencies(true);
        compilerOptions0.setCheckControlStructures(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions82 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions82.crossModuleMethodMotion = true;
        compilerOptions82.optimizeParameters = true;
        compilerOptions82.sourceMapOutputPath = "/experiment/:/hi!";
        compilerOptions82.setMoveFunctionDeclarations(true);
        compilerOptions82.setSummaryDetailLevel((int) (short) 100);
        com.google.javascript.jscomp.CheckLevel checkLevel93 = compilerOptions82.checkMissingGetCssNameLevel;
        compilerOptions0.checkUnreachableCode = checkLevel93;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy45 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy45.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(detailLevel56);
        org.junit.Assert.assertTrue("'" + checkLevel67 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel67.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[0, 1, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + checkLevel93 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel93.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07062");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int4 = sourceFile2.getLineOfOffset((int) (short) 1);
        java.lang.String str5 = sourceFile2.getName();
        com.google.javascript.jscomp.JsAst jsAst6 = new com.google.javascript.jscomp.JsAst(sourceFile2);
        jsAst6.clearAst();
        com.google.javascript.jscomp.SourceFile sourceFile8 = jsAst6.getSourceFile();
        com.google.javascript.rhino.InputId inputId9 = jsAst6.getInputId();
        com.google.javascript.jscomp.SourceFile sourceFile13 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int15 = sourceFile13.getLineOfOffset((int) (short) 1);
        int int17 = sourceFile13.getLineOfOffset(100);
        java.lang.String str18 = sourceFile13.getName();
        java.io.Reader reader19 = sourceFile13.getCodeReader();
        reader19.reset();
        com.google.javascript.jscomp.SourceFile sourceFile21 = com.google.javascript.jscomp.SourceFile.fromReader("PARAM_LIST", reader19);
        java.lang.String str22 = sourceFile21.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput23 = new com.google.javascript.jscomp.CompilerInput(sourceFile21);
        com.google.javascript.jscomp.CompilerInput compilerInput25 = new com.google.javascript.jscomp.CompilerInput(sourceFile21, false);
        // The following exception was thrown during execution in test generation
        try {
            jsAst6.setSourceFile(sourceFile21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(sourceFile8);
        org.junit.Assert.assertNotNull(inputId9);
        org.junit.Assert.assertNotNull(sourceFile13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(sourceFile21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PARAM_LIST" + "'", str22, "PARAM_LIST");
    }

    @Test
    public void test07063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07063");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        boolean boolean21 = compilerOptions0.shouldColorizeErrorOutput();
        boolean boolean22 = compilerOptions0.extractPrototypeMemberDeclarations;
        compilerOptions0.setNameAnonymousFunctionsOnly(false);
        boolean boolean25 = compilerOptions0.assumeStrictThis();
        java.lang.String str26 = compilerOptions0.sourceMapOutputPath;
        compilerOptions0.setRuntimeTypeCheckLogFunction("PARAM_LIST\n    PARAM_LIST\n");
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test07064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07064");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        boolean boolean21 = compilerOptions0.shouldColorizeErrorOutput();
        compilerOptions0.inlineConstantVars = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions24.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions24.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode30 = null;
        compilerOptions24.setLanguageOut(languageMode30);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy32 = null;
        compilerOptions24.variableRenaming = variableRenamingPolicy32;
        com.google.javascript.jscomp.CheckLevel checkLevel34 = compilerOptions24.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode35 = compilerOptions24.getLanguageOut();
        boolean boolean36 = compilerOptions24.moveFunctionDeclarations;
        byte[] byteArray37 = null;
        compilerOptions24.inputPropertyMapSerialized = byteArray37;
        compilerOptions24.locale = ":/hi!";
        com.google.javascript.rhino.ErrorReporter errorReporter41 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry42 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter41);
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        com.google.javascript.rhino.ErrorReporter errorReporter49 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry50 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter49);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray51 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList52 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList52, jSTypeArray51);
        com.google.javascript.rhino.Node node54 = jSTypeRegistry50.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList52);
        com.google.javascript.rhino.jstype.JSType jSType59 = jSTypeRegistry50.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter60 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter60);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray62 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList63 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63, jSTypeArray62);
        com.google.javascript.rhino.Node node65 = jSTypeRegistry61.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        com.google.javascript.rhino.jstype.JSType jSType70 = jSTypeRegistry61.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray71 = new com.google.javascript.rhino.jstype.JSType[] { jSType70 };
        com.google.javascript.rhino.jstype.FunctionType functionType72 = jSTypeRegistry44.createConstructorTypeWithVarArgs(jSType59, jSTypeArray71);
        boolean boolean74 = jSTypeRegistry42.canPropertyBeDefined(jSType59, "");
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable76 = jSTypeRegistry42.getEachReferenceTypeWithProperty("/");
        java.lang.String[] strArray81 = new java.lang.String[] { "Unversioned directory", "/experiment/:/hi!", ":", "OFF" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        jSTypeRegistry42.setTemplateTypeNames((java.util.List<java.lang.String>) strList82);
        compilerOptions24.setManageClosureDependencies((java.util.List<java.lang.String>) strList82);
        compilerOptions0.setReplaceStringsFunctionDescriptions((java.util.List<java.lang.String>) strList82);
        boolean boolean87 = compilerOptions0.assumeClosuresOnlyCaptureReferences();
        boolean boolean88 = compilerOptions0.removeUnusedPrototypeProperties;
        compilerOptions0.setCollapseVariableDeclarations(false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + checkLevel34 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel34.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(languageMode35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(jSTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(jSType59);
        org.junit.Assert.assertNotNull(jSTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNotNull(jSType70);
        org.junit.Assert.assertNotNull(jSTypeArray71);
        org.junit.Assert.assertNotNull(functionType72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objectTypeIterable76);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test07065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07065");
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray0 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList1 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList1, jSTypeArray0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        boolean boolean6 = jSTypeList1.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.Node node7 = null;
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry14.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        node18.addChildrenToBack(node24);
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry27.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        boolean boolean32 = node31.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        com.google.javascript.rhino.Node node38 = jSTypeRegistry34.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        boolean boolean39 = node38.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        com.google.javascript.rhino.Node node48 = new com.google.javascript.rhino.Node((int) (short) 0, node18, node31, node38, node45, 0, 49);
        com.google.javascript.jscomp.CodingConvention.Bind bind49 = new com.google.javascript.jscomp.CodingConvention.Bind(node7, node11, node45);
        node45.setSourceEncodedPosition(52);
        boolean boolean52 = jSTypeList1.equals((java.lang.Object) node45);
        boolean boolean53 = node45.isObjectLit();
        boolean boolean54 = node45.isRegExp();
        int int55 = node45.getType();
        org.junit.Assert.assertNotNull(jSTypeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 83 + "'", int55 == 83);
    }

    @Test
    public void test07066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07066");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy5 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions6.propertyRenaming;
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy5, propertyRenamingPolicy9);
        boolean boolean11 = compilerOptions0.checkControlStructures;
        boolean boolean12 = compilerOptions0.crossModuleCodeMotion;
        compilerOptions0.extractPrototypeMemberDeclarations = true;
        compilerOptions0.prettyPrint = true;
        compilerOptions0.checkTypes = true;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test07067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07067");
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags1 = new com.google.javascript.rhino.Node.SideEffectFlags((int) (byte) 100);
        sideEffectFlags1.setAllFlags();
        boolean boolean3 = sideEffectFlags1.areAllFlagsSet();
        sideEffectFlags1.setMutatesArguments();
        boolean boolean5 = sideEffectFlags1.areAllFlagsSet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test07068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07068");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(false, false);
        file2.deleteOnExit();
        java.lang.String str7 = file2.getAbsolutePath();
        java.io.File file9 = new java.io.File(":");
        java.io.File file11 = new java.io.File(file9, "FINEST");
        boolean boolean12 = file9.setReadOnly();
        java.io.File file15 = new java.io.File(":", "hi!");
        boolean boolean18 = file15.setExecutable(true, false);
        boolean boolean19 = file9.renameTo(file15);
        boolean boolean21 = file9.setWritable(false);
        java.lang.String str22 = file9.getAbsolutePath();
        boolean boolean23 = file2.renameTo(file9);
        java.nio.file.Path path24 = file2.toPath();
        boolean boolean25 = file2.isFile();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/experiment/:/hi!" + "'", str7, "/experiment/:/hi!");
        org.junit.Assert.assertNull("file9.getParent() == null", file9.getParent());
        org.junit.Assert.assertEquals(file9.toString(), ":");
        org.junit.Assert.assertEquals(file11.getParent(), ":");
        org.junit.Assert.assertEquals(file11.toString(), ":/FINEST");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals(file15.getParent(), ":");
        org.junit.Assert.assertEquals(file15.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/experiment/:" + "'", str22, "/experiment/:");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(path24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test07069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07069");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList15 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15, jSTypeArray14);
        com.google.javascript.rhino.Node node17 = jSTypeRegistry13.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList15);
        com.google.javascript.rhino.jstype.JSType jSType22 = jSTypeRegistry13.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        com.google.javascript.rhino.jstype.JSType jSType33 = jSTypeRegistry24.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray34 = new com.google.javascript.rhino.jstype.JSType[] { jSType33 };
        com.google.javascript.rhino.jstype.FunctionType functionType35 = jSTypeRegistry7.createConstructorTypeWithVarArgs(jSType22, jSTypeArray34);
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        com.google.javascript.rhino.jstype.JSType jSType53 = jSTypeRegistry44.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter54 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter54);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.Node node59 = jSTypeRegistry55.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        com.google.javascript.rhino.jstype.JSType jSType64 = jSTypeRegistry55.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] { jSType64 };
        com.google.javascript.rhino.jstype.FunctionType functionType66 = jSTypeRegistry38.createConstructorTypeWithVarArgs(jSType53, jSTypeArray65);
        boolean boolean67 = jSTypeRegistry7.declareType("", jSType53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray71 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList72 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72, jSTypeArray71);
        boolean boolean74 = jSTypeList69.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator75 = jSTypeList69.spliterator();
        com.google.javascript.rhino.jstype.FunctionType functionType76 = jSTypeRegistry1.createFunctionTypeWithVarArgs(jSType53, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray77 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList78 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList78, jSTypeArray77);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray80 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList81 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList81, jSTypeArray80);
        boolean boolean83 = jSTypeList78.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList81);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator84 = jSTypeList78.spliterator();
        com.google.javascript.rhino.Node node85 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList78);
        boolean boolean86 = node85.isNull();
        boolean boolean87 = node85.isReturn();
        boolean boolean88 = node85.isExprResult();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(jSType22);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(jSType33);
        org.junit.Assert.assertNotNull(jSTypeArray34);
        org.junit.Assert.assertNotNull(functionType35);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(jSType53);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(jSType64);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertNotNull(functionType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(jSTypeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(jSTypeSpliterator75);
        org.junit.Assert.assertNotNull(functionType76);
        org.junit.Assert.assertNotNull(jSTypeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(jSTypeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(jSTypeSpliterator84);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test07070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07070");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageOut();
        compilerOptions0.setReplaceStringsPlaceholderToken("PARAM_LIST");
        boolean boolean8 = compilerOptions0.markNoSideEffectCalls;
        com.google.javascript.jscomp.CheckLevel checkLevel9 = compilerOptions0.checkUnreachableCode;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(languageMode5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + checkLevel9 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel9.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07071");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.crossModuleCodeMotion = true;
        compilerOptions0.setManageClosureDependencies(false);
        boolean boolean6 = compilerOptions0.exportTestFunctions;
        boolean boolean7 = compilerOptions0.rewriteFunctionExpressions;
        compilerOptions0.setIdeMode(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test07072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07072");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec1 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("*global*");
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        com.google.javascript.rhino.Node node8 = jSTypeRegistry4.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray11 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList12 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList12, jSTypeArray11);
        com.google.javascript.rhino.Node node14 = jSTypeRegistry10.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList12);
        node8.addChildrenToBack(node14);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray18 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList19 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList19, jSTypeArray18);
        com.google.javascript.rhino.Node node21 = jSTypeRegistry17.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList19);
        boolean boolean22 = node21.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        boolean boolean29 = node28.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.Node node35 = jSTypeRegistry31.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        com.google.javascript.rhino.Node node38 = new com.google.javascript.rhino.Node((int) (short) 0, node8, node21, node28, node35, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray48 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList49 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList49, jSTypeArray48);
        com.google.javascript.rhino.Node node51 = jSTypeRegistry47.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList49);
        node45.addChildrenToBack(node51);
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry54 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray55 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList56 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56, jSTypeArray55);
        com.google.javascript.rhino.Node node58 = jSTypeRegistry54.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        boolean boolean59 = node58.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter60 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter60);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray62 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList63 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63, jSTypeArray62);
        com.google.javascript.rhino.Node node65 = jSTypeRegistry61.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        boolean boolean66 = node65.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter67 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry68 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter67);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray69 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList70 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70, jSTypeArray69);
        com.google.javascript.rhino.Node node72 = jSTypeRegistry68.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 0, node45, node58, node65, node72, 0, 49);
        com.google.javascript.rhino.Node node76 = node38.useSourceInfoFrom(node58);
        boolean boolean77 = node76.hasChildren();
        boolean boolean78 = node76.isDefaultCase();
        boolean boolean79 = node76.isSwitch();
        com.google.javascript.rhino.Node node80 = assertionFunctionSpec1.getAssertedParam(node76);
        java.lang.String str81 = node76.getSourceFileName();
        com.google.javascript.rhino.Node node85 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean87 = node85.getBooleanProp((int) (byte) 10);
        com.google.javascript.rhino.Node node88 = node76.useSourceInfoIfMissingFrom(node85);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder89 = node76.getJsDocBuilderForNode();
        fileLevelJsDocBuilder89.append("2019/07/12 07:12");
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(jSTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(jSTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(jSTypeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(jSTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(jSTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(jSTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder89);
    }

    @Test
    public void test07073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07073");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy12 = compilerOptions9.propertyRenaming;
        com.google.javascript.jscomp.AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy13 = com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF;
        compilerOptions9.anonymousFunctionNaming = anonymousFunctionNamingPolicy13;
        compilerOptions0.setAnonymousFunctionNaming(anonymousFunctionNamingPolicy13);
        compilerOptions0.setLocale("Unversioned directory");
        compilerOptions0.setDevirtualizePrototypeMethods(true);
        boolean boolean20 = compilerOptions0.lineBreak;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy12 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy12.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + anonymousFunctionNamingPolicy13 + "' != '" + com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF + "'", anonymousFunctionNamingPolicy13.equals(com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test07074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07074");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerOptions0.inlineLocalFunctions;
        compilerOptions0.removeDeadCode = true;
        compilerOptions0.jqueryPass = true;
        compilerOptions0.setReportPath("PARAM_LIST\n");
        boolean boolean17 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.setInlineConstantVars(true);
        compilerOptions0.setDisambiguateProperties(false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test07075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07075");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.AMBIGUOUS_FUNCTION_DECL;
        com.google.javascript.jscomp.DiagnosticGroups.DEBUGGER_STATEMENT_PRESENT = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.DUPLICATE_VARS = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.TYPE_INVALIDATION = diagnosticGroup0;
// flaky:         org.junit.Assert.assertNull(diagnosticGroup0);
    }

    @Test
    public void test07076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07076");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setProtectHiddenSideEffects(true);
        compilerOptions0.moveFunctionDeclarations = true;
        boolean boolean7 = compilerOptions0.removeUnusedPrototypeProperties;
        compilerOptions0.setComputeFunctionSideEffects(false);
        boolean boolean10 = compilerOptions0.inlineConstantVars;
        boolean boolean11 = compilerOptions0.isExternExportsEnabled();
        compilerOptions0.convertToDottedProperties = false;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test07077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07077");
        java.io.File file4 = new java.io.File(":", "hi!");
        boolean boolean7 = file4.setExecutable(true, false);
        java.io.File file9 = new java.io.File(file4, "PARAM_LIST\n");
        boolean boolean11 = file4.setWritable(false);
        java.io.File file12 = file4.getCanonicalFile();
        java.io.File file13 = java.io.File.createTempFile("goog.exportSymbol", "();", file4);
        boolean boolean14 = file13.canExecute();
        org.junit.Assert.assertEquals(file4.getParent(), ":");
        org.junit.Assert.assertEquals(file4.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals(file9.getParent(), ":/hi!");
        org.junit.Assert.assertEquals(file9.toString(), ":/hi!/PARAM_LIST\n");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(file12);
// flaky:         org.junit.Assert.assertEquals(file12.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/experiment/:/hi!");
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), ":/hi!");
// flaky:         org.junit.Assert.assertEquals(file13.toString(), ":/hi!/goog.exportSymbol6158119702048305125();");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test07078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07078");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        jSTypeRegistry1.forwardDeclareType("PARAM_LIST");
        jSTypeRegistry1.setLastGeneration(true);
        com.google.javascript.rhino.jstype.JSType jSType18 = jSTypeRegistry1.createNamedType("SHNE", "/experiment/:/OFF6512485966767396418", 36, 3);
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSType18);
    }

    @Test
    public void test07079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07079");
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray0 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList1 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList1, jSTypeArray0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        boolean boolean6 = jSTypeList1.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType7 = com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN;
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean12 = node11.isTry();
        java.lang.String str13 = node11.toString();
        boolean boolean14 = node11.isIn();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship19 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType7, node11, node18);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder20 = node18.new FileLevelJsDocBuilder();
        boolean boolean21 = jSTypeList1.remove((java.lang.Object) node18);
        node18.addSuppression(":");
        boolean boolean24 = node18.isAssignAdd();
        org.junit.Assert.assertNotNull(jSTypeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + subclassType7 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN + "'", subclassType7.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN));
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "STRING PARAM_LIST 49" + "'", str13, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test07080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07080");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        byte[] byteArray32 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 1 };
        compilerOptions0.inputVariableMapSerialized = byteArray32;
        compilerOptions0.setAssumeStrictThis(true);
        byte[] byteArray36 = null;
        compilerOptions0.setInputPropertyMapSerialized(byteArray36);
        compilerOptions0.extractPrototypeMemberDeclarations = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions40 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode41 = null;
        compilerOptions40.setTracerMode(tracerMode41);
        boolean boolean43 = compilerOptions40.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel44 = compilerOptions40.sourceMapDetailLevel;
        compilerOptions40.setColorizeErrorOutput(true);
        compilerOptions40.collapseProperties = false;
        compilerOptions40.setSkipAllPasses(false);
        com.google.javascript.jscomp.CompilerOptions.Reach reach51 = com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY;
        compilerOptions40.setInlineFunctions(reach51);
        compilerOptions0.setRemoveUnusedVariables(reach51);
        compilerOptions0.setNameReferenceReportPath("Node tree inequality:\nTree1:\nPARAM_LIST\n    NAME \n\n\nTree2:\nNUMBER -1.0\n\n\nSubtree1: PARAM_LIST\n    NAME \n\n\nSubtree2: NUMBER -1.0\n");
        compilerOptions0.setCollapseAnonymousFunctions(true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 1, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(detailLevel44);
        org.junit.Assert.assertTrue("'" + reach51 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY + "'", reach51.equals(com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY));
    }

    @Test
    public void test07081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07081");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        compilerOptions0.setFoldConstants(true);
        java.lang.String str7 = compilerOptions0.renamePrefix;
        compilerOptions0.setDisambiguateProperties(true);
        compilerOptions0.setCollapseObjectLiterals(false);
        com.google.javascript.jscomp.CodingConvention codingConvention12 = null;
        compilerOptions0.setCodingConvention(codingConvention12);
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test07082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07082");
        java.io.File file5 = new java.io.File(":");
        java.io.File file7 = new java.io.File(file5, "FINEST");
        java.io.File file8 = java.io.File.createTempFile("OFF", "", file5);
        java.io.File file9 = file5.getCanonicalFile();
        boolean boolean10 = file5.mkdirs();
        java.io.File file11 = java.io.File.createTempFile("Unversioned directory", "java.io.IOException: OFF", file5);
        boolean boolean14 = file5.setExecutable(false, true);
        long long15 = file5.length();
        java.nio.charset.Charset charset16 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str17 = charset16.name();
        java.util.Set<java.lang.String> strSet18 = charset16.aliases();
        java.util.Set<java.lang.String> strSet19 = charset16.aliases();
        com.google.javascript.jscomp.SourceFile sourceFile20 = com.google.javascript.jscomp.SourceFile.fromFile(file5, charset16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = sourceFile20.getCode();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: : (Is a directory)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull("file5.getParent() == null", file5.getParent());
        org.junit.Assert.assertEquals(file5.toString(), ":");
        org.junit.Assert.assertEquals(file7.getParent(), ":");
        org.junit.Assert.assertEquals(file7.toString(), ":/FINEST");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), ":");
// flaky:         org.junit.Assert.assertEquals(file8.toString(), ":/OFF3688548714882436778");
        org.junit.Assert.assertNotNull(file9);
// flaky:         org.junit.Assert.assertEquals(file9.getParent(), "/experiment");
// flaky:         org.junit.Assert.assertEquals(file9.toString(), "/experiment/:");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), ":");
// flaky:         org.junit.Assert.assertEquals(file11.toString(), ":/Unversioned directory4510110912963439788java.io.IOException: OFF");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long15 + "' != '" + 12288L + "'", long15 == 12288L);
        org.junit.Assert.assertNotNull(charset16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "US-ASCII" + "'", str17, "US-ASCII");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(sourceFile20);
    }

    @Test
    public void test07083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07083");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        boolean boolean75 = node56.hasOneChild();
        node56.putIntProp(1, 16);
        boolean boolean79 = node56.isNew();
        int int80 = node56.getSourceOffset();
        com.google.javascript.rhino.Node node81 = node56.removeChildren();
        boolean boolean82 = node56.isInstanceOf();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test07084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07084");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newNumber((double) 12);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test07085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07085");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.setSyntheticBlockStartMarker("OFF");
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.jqueryPass = false;
        compilerOptions0.setDevirtualizePrototypeMethods(false);
        compilerOptions0.removeUnusedPrototypeProperties = true;
        compilerOptions0.inlineFunctions = false;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy15 = compilerOptions0.propertyRenaming;
        compilerOptions0.checkMissingGetCssNameBlacklist = ":/hi!";
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy15 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy15.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
    }

    @Test
    public void test07086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07086");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(46, "", 2, 51);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList15 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15, jSTypeArray14);
        com.google.javascript.rhino.Node node17 = jSTypeRegistry13.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList15);
        node11.addChildrenToBack(node17);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        boolean boolean25 = node24.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry27.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        boolean boolean32 = node31.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        com.google.javascript.rhino.Node node38 = jSTypeRegistry34.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        com.google.javascript.rhino.Node node41 = new com.google.javascript.rhino.Node((int) (short) 0, node11, node24, node31, node38, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        com.google.javascript.rhino.ErrorReporter errorReporter49 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry50 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter49);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray51 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList52 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList52, jSTypeArray51);
        com.google.javascript.rhino.Node node54 = jSTypeRegistry50.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList52);
        node48.addChildrenToBack(node54);
        com.google.javascript.rhino.ErrorReporter errorReporter56 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry57 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter56);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray58 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList59 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList59, jSTypeArray58);
        com.google.javascript.rhino.Node node61 = jSTypeRegistry57.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList59);
        boolean boolean62 = node61.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList66 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList66, jSTypeArray65);
        com.google.javascript.rhino.Node node68 = jSTypeRegistry64.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList66);
        boolean boolean69 = node68.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray72 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList73 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList73, jSTypeArray72);
        com.google.javascript.rhino.Node node75 = jSTypeRegistry71.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList73);
        com.google.javascript.rhino.Node node78 = new com.google.javascript.rhino.Node((int) (short) 0, node48, node61, node68, node75, 0, 49);
        com.google.javascript.rhino.Node node79 = node41.useSourceInfoFrom(node61);
        boolean boolean80 = node61.isExprResult();
        com.google.javascript.rhino.Node node81 = node4.srcref(node61);
        java.lang.String str82 = node61.toString();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(jSTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(jSTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(jSTypeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "PARAM_LIST" + "'", str82, "PARAM_LIST");
    }

    @Test
    public void test07087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07087");
        com.google.javascript.jscomp.Compiler.CodeBuilder codeBuilder0 = new com.google.javascript.jscomp.Compiler.CodeBuilder();
        int int1 = codeBuilder0.getLength();
        java.lang.String str2 = codeBuilder0.toString();
        java.lang.String str3 = codeBuilder0.toString();
        int int4 = codeBuilder0.getLength();
        int int5 = codeBuilder0.getLength();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test07088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07088");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        compilerOptions9.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy14 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions15 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions15.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy18 = compilerOptions15.propertyRenaming;
        compilerOptions9.setRenamingPolicy(variableRenamingPolicy14, propertyRenamingPolicy18);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.skipAllCompilerPasses();
        boolean boolean24 = compilerOptions20.flowSensitiveInlineVariables;
        java.lang.String[] strArray34 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        compilerOptions20.stripTypes = strSet35;
        compilerOptions9.setStripNamePrefixes((java.util.Set<java.lang.String>) strSet35);
        compilerOptions0.setReplaceStringsReservedStrings((java.util.Set<java.lang.String>) strSet35);
        compilerOptions0.setDebugFunctionSideEffectsPath("/experiment/:/hi!");
        com.google.javascript.jscomp.CheckLevel checkLevel42 = compilerOptions0.aggressiveVarCheck;
        java.util.Set<java.lang.String> strSet43 = compilerOptions0.stripTypes;
        compilerOptions0.setInputDelimiter("DiagnosticGroup<java.io.IOException: OFF>");
        compilerOptions0.setTweakToBooleanLiteral("JSC_OPTIMIZE_LOOP_ERROR", false);
        boolean boolean49 = compilerOptions0.lineBreak;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy18 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy18.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + checkLevel42 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel42.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test07089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07089");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString((int) (short) 10, ":/hi!");
        boolean boolean3 = node2.isWith();
        node2.setSourceEncodedPositionForTree((int) 'a');
        boolean boolean6 = node2.isContinue();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test07090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07090");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.coalesceVariableNames = true;
        java.lang.String str9 = compilerOptions0.aliasStringsBlacklist;
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions10.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy13 = compilerOptions10.propertyRenaming;
        java.lang.String[] strArray16 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        compilerOptions10.setStripTypes((java.util.Set<java.lang.String>) strSet17);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode21 = null;
        compilerOptions20.setTracerMode(tracerMode21);
        boolean boolean23 = compilerOptions20.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel24 = compilerOptions20.sourceMapDetailLevel;
        compilerOptions20.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions27.crossModuleMethodMotion = true;
        compilerOptions27.optimizeParameters = true;
        compilerOptions27.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel35 = compilerOptions27.checkGlobalNamesLevel;
        compilerOptions20.setReportMissingOverride(checkLevel35);
        compilerOptions10.setCheckUnreachableCode(checkLevel35);
        compilerOptions10.syntheticBlockStartMarker = "*global*";
        compilerOptions10.prettyPrint = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions42 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions42.crossModuleMethodMotion = true;
        compilerOptions42.optimizeParameters = true;
        compilerOptions42.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel50 = compilerOptions42.checkGlobalNamesLevel;
        compilerOptions10.checkGlobalNamesLevel = checkLevel50;
        compilerOptions0.setCheckUnreachableCode(checkLevel50);
        java.util.Set<java.lang.String> strSet53 = null;
        compilerOptions0.setStripNamePrefixes(strSet53);
        boolean boolean55 = compilerOptions0.optimizeArgumentsArray;
        compilerOptions0.inlineFunctions = false;
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy13 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy13.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(detailLevel24);
        org.junit.Assert.assertTrue("'" + checkLevel35 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel35.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel50 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel50.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test07091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07091");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        java.lang.String str5 = compilerOptions0.aliasStringsBlacklist;
        compilerOptions0.setOptimizeCalls(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        compilerOptions8.setTransformAMDToCJSModules(true);
        compilerOptions8.ambiguateProperties = true;
        compilerOptions8.inlineLocalFunctions = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions25 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions25.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode28 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions25.setTracer(tracerMode28);
        com.google.javascript.jscomp.CompilerOptions compilerOptions30 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode31 = null;
        compilerOptions30.setTracerMode(tracerMode31);
        boolean boolean33 = compilerOptions30.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel34 = compilerOptions30.sourceMapDetailLevel;
        compilerOptions30.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet37 = compilerOptions30.stripNameSuffixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions38 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode39 = null;
        compilerOptions38.setTracerMode(tracerMode39);
        boolean boolean41 = compilerOptions38.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel42 = compilerOptions38.sourceMapDetailLevel;
        compilerOptions38.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions45 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions45.crossModuleMethodMotion = true;
        compilerOptions45.optimizeParameters = true;
        compilerOptions45.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel53 = compilerOptions45.checkGlobalNamesLevel;
        compilerOptions38.setReportMissingOverride(checkLevel53);
        compilerOptions30.setAggressiveVarCheck(checkLevel53);
        compilerOptions25.setCheckUnreachableCode(checkLevel53);
        com.google.javascript.jscomp.SourceMap.Format format57 = compilerOptions25.sourceMapFormat;
        compilerOptions8.setSourceMapFormat(format57);
        compilerOptions0.sourceMapFormat = format57;
        compilerOptions0.disambiguateProperties = true;
        boolean boolean62 = compilerOptions0.rewriteFunctionExpressions;
        boolean boolean63 = compilerOptions0.isExternExportsEnabled();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + tracerMode28 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode28.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(detailLevel34);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(detailLevel42);
        org.junit.Assert.assertTrue("'" + checkLevel53 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel53.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(format57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test07092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07092");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        java.lang.Object obj6 = null;
        com.google.javascript.rhino.Node node7 = strMap4.get(obj6);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel11 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions8.setSourceMapDetailLevel(detailLevel11);
        boolean boolean13 = compilerOptions8.ideMode;
        compilerOptions8.setUnaliasableGlobals("");
        com.google.javascript.jscomp.CheckLevel checkLevel16 = compilerOptions8.checkUnreachableCode;
        com.google.javascript.rhino.Node node17 = strMap4.remove((java.lang.Object) checkLevel16);
        java.util.Collection<com.google.javascript.rhino.Node> nodeCollection18 = strMap4.values();
        com.google.javascript.jscomp.CompilerOptions compilerOptions19 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions19.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions19.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode25 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions19.setTracer(tracerMode25);
        compilerOptions19.setSyntheticBlockStartMarker("");
        java.util.Set<java.lang.String> strSet29 = compilerOptions19.stripNamePrefixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions30 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode31 = null;
        compilerOptions30.setTracerMode(tracerMode31);
        boolean boolean33 = compilerOptions30.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel34 = compilerOptions30.sourceMapDetailLevel;
        compilerOptions30.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet37 = compilerOptions30.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile39 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput41 = new com.google.javascript.jscomp.CompilerInput(sourceFile39, true);
        com.google.javascript.rhino.InputId inputId43 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput45 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput41, inputId43, true);
        java.lang.String str46 = compilerInput45.toString();
        boolean boolean47 = strSet37.contains((java.lang.Object) compilerInput45);
        java.lang.Object[] objArray48 = strSet37.toArray();
        java.lang.Object obj49 = null;
        boolean boolean50 = strSet37.contains(obj49);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray51 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList52 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList52, jSTypeArray51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList55 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55, jSTypeArray54);
        boolean boolean57 = jSTypeList52.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray58 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList59 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList59, jSTypeArray58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        boolean boolean64 = jSTypeList59.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        boolean boolean65 = jSTypeList52.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        boolean boolean66 = jSTypeList52.isEmpty();
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream67 = jSTypeList52.stream();
        boolean boolean68 = strSet37.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList52);
        boolean boolean69 = strSet29.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList52);
        int int70 = jSTypeList52.size();
        boolean boolean71 = strMap4.containsValue((java.lang.Object) jSTypeList52);
        java.util.function.UnaryOperator<com.google.javascript.rhino.jstype.JSType> jSTypeUnaryOperator72 = null;
        // The following exception was thrown during execution in test generation
        try {
            jSTypeList52.replaceAll(jSTypeUnaryOperator72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(detailLevel11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + checkLevel16 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel16.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(nodeCollection18);
        org.junit.Assert.assertTrue("'" + tracerMode25 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode25.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(detailLevel34);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "*global*" + "'", str46, "*global*");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(jSTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(jSTypeStream67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test07093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07093");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        com.google.javascript.jscomp.CheckLevel checkLevel10 = compilerOptions0.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode11 = compilerOptions0.getLanguageOut();
        boolean boolean12 = compilerOptions0.moveFunctionDeclarations;
        byte[] byteArray13 = null;
        compilerOptions0.inputPropertyMapSerialized = byteArray13;
        compilerOptions0.locale = ":/hi!";
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        com.google.javascript.rhino.ErrorReporter errorReporter25 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry26 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter25);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray27 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList28 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList28, jSTypeArray27);
        com.google.javascript.rhino.Node node30 = jSTypeRegistry26.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList28);
        com.google.javascript.rhino.jstype.JSType jSType35 = jSTypeRegistry26.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray38 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList39 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList39, jSTypeArray38);
        com.google.javascript.rhino.Node node41 = jSTypeRegistry37.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList39);
        com.google.javascript.rhino.jstype.JSType jSType46 = jSTypeRegistry37.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] { jSType46 };
        com.google.javascript.rhino.jstype.FunctionType functionType48 = jSTypeRegistry20.createConstructorTypeWithVarArgs(jSType35, jSTypeArray47);
        boolean boolean50 = jSTypeRegistry18.canPropertyBeDefined(jSType35, "");
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable52 = jSTypeRegistry18.getEachReferenceTypeWithProperty("/");
        java.lang.String[] strArray57 = new java.lang.String[] { "Unversioned directory", "/experiment/:/hi!", ":", "OFF" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        jSTypeRegistry18.setTemplateTypeNames((java.util.List<java.lang.String>) strList58);
        compilerOptions0.setManageClosureDependencies((java.util.List<java.lang.String>) strList58);
        com.google.javascript.jscomp.CompilerOptions compilerOptions62 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode63 = null;
        compilerOptions62.setTracerMode(tracerMode63);
        boolean boolean65 = compilerOptions62.coalesceVariableNames;
        boolean boolean66 = compilerOptions62.removeUnusedLocalVars;
        boolean boolean67 = compilerOptions62.lineBreak;
        boolean boolean68 = compilerOptions62.optimizeParameters;
        compilerOptions62.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions71 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions71.crossModuleMethodMotion = true;
        compilerOptions71.setProtectHiddenSideEffects(true);
        boolean boolean76 = compilerOptions71.isExternExportsEnabled();
        boolean boolean77 = compilerOptions71.aliasAllStrings;
        compilerOptions71.reserveRawExports = true;
        compilerOptions71.inlineGetters = false;
        java.util.Set<java.lang.String> strSet82 = compilerOptions71.stripTypePrefixes;
        compilerOptions62.setReplaceStringsReservedStrings(strSet82);
        compilerOptions0.setStripTypePrefixes(strSet82);
        org.junit.Assert.assertTrue("'" + checkLevel10 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel10.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(languageMode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(jSTypeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(jSType35);
        org.junit.Assert.assertNotNull(jSTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(jSType46);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertNotNull(functionType48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objectTypeIterable52);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strSet82);
    }

    @Test
    public void test07094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07094");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.skipAllCompilerPasses();
        compilerOptions8.resetWarningsGuard();
        compilerOptions8.setInlineLocalVariables(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions15 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode16 = null;
        compilerOptions15.setTracerMode(tracerMode16);
        boolean boolean18 = compilerOptions15.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel19 = compilerOptions15.sourceMapDetailLevel;
        compilerOptions15.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet22 = compilerOptions15.stripNameSuffixes;
        compilerOptions8.setReplaceStringsReservedStrings(strSet22);
        boolean boolean24 = strSet22.isEmpty();
        compilerOptions0.stripNamePrefixes = strSet22;
        compilerOptions0.setRemoveDeadCode(false);
        boolean boolean28 = compilerOptions0.optimizeCalls;
        boolean boolean29 = compilerOptions0.removeUnusedPrototypeProperties;
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(detailLevel19);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test07095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07095");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.lang.Object[] objArray6 = jSTypeList3.toArray();
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions7.checkRequires;
        compilerOptions7.setRewriteNewDateGoogNow(true);
        compilerOptions7.setSyntheticBlockStartMarker("OFF");
        compilerOptions7.skipAllCompilerPasses();
        compilerOptions7.setUnaliasableGlobals("FINEST");
        compilerOptions7.setAliasKeywords(true);
        compilerOptions7.setOptimizeCalls(true);
        boolean boolean20 = jSTypeList3.contains((java.lang.Object) compilerOptions7);
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray27 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList28 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList28, jSTypeArray27);
        boolean boolean30 = jSTypeList25.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList28);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry23.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        java.lang.Object obj32 = null;
        boolean boolean33 = jSTypeList25.remove(obj32);
        java.lang.Object obj34 = null;
        int int35 = jSTypeList25.indexOf(obj34);
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions36.crossModuleMethodMotion = true;
        compilerOptions36.skipAllCompilerPasses();
        compilerOptions36.resetWarningsGuard();
        compilerOptions36.setInlineLocalVariables(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions43 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode44 = null;
        compilerOptions43.setTracerMode(tracerMode44);
        boolean boolean46 = compilerOptions43.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel47 = compilerOptions43.sourceMapDetailLevel;
        compilerOptions43.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet50 = compilerOptions43.stripNameSuffixes;
        compilerOptions36.setReplaceStringsReservedStrings(strSet50);
        int int52 = strSet50.size();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry54 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray55 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList56 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56, jSTypeArray55);
        com.google.javascript.rhino.Node node58 = jSTypeRegistry54.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream59 = jSTypeList56.parallelStream();
        boolean boolean60 = strSet50.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        boolean boolean61 = jSTypeList25.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = jSTypeList3.addAll(40, (java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 40, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(jSTypeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(detailLevel47);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(jSTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(jSTypeStream59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test07096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07096");
        java.nio.charset.Charset charset2 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str3 = charset2.name();
        com.google.javascript.jscomp.SourceFile sourceFile4 = com.google.javascript.jscomp.SourceFile.fromFile("OFF", charset2);
        com.google.javascript.jscomp.SourceFile sourceFile5 = com.google.javascript.jscomp.SourceFile.fromFile("Unversioned directory", charset2);
        com.google.javascript.jscomp.Region region7 = sourceFile5.getRegion(11);
        sourceFile5.setOriginalPath("Unversioned directory");
        org.junit.Assert.assertNotNull(charset2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "US-ASCII" + "'", str3, "US-ASCII");
        org.junit.Assert.assertNotNull(sourceFile4);
        org.junit.Assert.assertNotNull(sourceFile5);
        org.junit.Assert.assertNull(region7);
    }

    @Test
    public void test07097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07097");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec1 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("*global*");
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        com.google.javascript.rhino.Node node8 = jSTypeRegistry4.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray11 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList12 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList12, jSTypeArray11);
        com.google.javascript.rhino.Node node14 = jSTypeRegistry10.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList12);
        node8.addChildrenToBack(node14);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray18 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList19 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList19, jSTypeArray18);
        com.google.javascript.rhino.Node node21 = jSTypeRegistry17.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList19);
        boolean boolean22 = node21.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        boolean boolean29 = node28.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.Node node35 = jSTypeRegistry31.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        com.google.javascript.rhino.Node node38 = new com.google.javascript.rhino.Node((int) (short) 0, node8, node21, node28, node35, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray48 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList49 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList49, jSTypeArray48);
        com.google.javascript.rhino.Node node51 = jSTypeRegistry47.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList49);
        node45.addChildrenToBack(node51);
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry54 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray55 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList56 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56, jSTypeArray55);
        com.google.javascript.rhino.Node node58 = jSTypeRegistry54.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        boolean boolean59 = node58.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter60 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter60);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray62 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList63 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63, jSTypeArray62);
        com.google.javascript.rhino.Node node65 = jSTypeRegistry61.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        boolean boolean66 = node65.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter67 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry68 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter67);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray69 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList70 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70, jSTypeArray69);
        com.google.javascript.rhino.Node node72 = jSTypeRegistry68.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 0, node45, node58, node65, node72, 0, 49);
        com.google.javascript.rhino.Node node76 = node38.useSourceInfoFrom(node58);
        boolean boolean77 = node76.hasChildren();
        boolean boolean78 = node76.isDefaultCase();
        boolean boolean79 = node76.isSwitch();
        com.google.javascript.rhino.Node node80 = assertionFunctionSpec1.getAssertedParam(node76);
        java.lang.Object obj82 = node80.getProp(1);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(jSTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(jSTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(jSTypeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(jSTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(jSTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(jSTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertNull(obj82);
    }

    @Test
    public void test07098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07098");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet7 = compilerOptions0.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile9 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput11 = new com.google.javascript.jscomp.CompilerInput(sourceFile9, true);
        com.google.javascript.rhino.InputId inputId13 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput15 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput11, inputId13, true);
        java.lang.String str16 = compilerInput15.toString();
        boolean boolean17 = strSet7.contains((java.lang.Object) compilerInput15);
        java.lang.Object[] objArray18 = strSet7.toArray();
        strSet7.clear();
        com.google.javascript.jscomp.JSSourceFile[][] jSSourceFileArray20 = new com.google.javascript.jscomp.JSSourceFile[][] {};
        com.google.javascript.jscomp.JSSourceFile[][] jSSourceFileArray21 = strSet7.toArray(jSSourceFileArray20);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "*global*" + "'", str16, "*global*");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(jSSourceFileArray20);
        org.junit.Assert.assertNotNull(jSSourceFileArray21);
    }

    @Test
    public void test07099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07099");
        com.google.javascript.jscomp.SourceFile sourceFile3 = com.google.javascript.jscomp.SourceFile.fromCode(":/hi!/PARAM_LIST\n", "InputId: *global*", "JSC_OPTIMIZE_LOOP_ERROR. Exceeded max number of code motion iterations: {0} at (unknown source) line (unknown line) : (unknown column)");
        org.junit.Assert.assertNotNull(sourceFile3);
    }

    @Test
    public void test07100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07100");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions0.checkGlobalNamesLevel;
        compilerOptions0.setCheckMissingGetCssNameBlacklist("");
        compilerOptions0.deadAssignmentElimination = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions13.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions13.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode19 = null;
        compilerOptions13.setLanguageOut(languageMode19);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy21 = null;
        compilerOptions13.variableRenaming = variableRenamingPolicy21;
        com.google.javascript.jscomp.CheckLevel checkLevel23 = compilerOptions13.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode24 = compilerOptions13.getLanguageOut();
        boolean boolean25 = compilerOptions13.moveFunctionDeclarations;
        byte[] byteArray26 = null;
        compilerOptions13.inputPropertyMapSerialized = byteArray26;
        com.google.javascript.jscomp.DependencyOptions dependencyOptions28 = new com.google.javascript.jscomp.DependencyOptions();
        com.google.javascript.jscomp.DependencyOptions dependencyOptions30 = dependencyOptions28.setDependencyPruning(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions32 = dependencyOptions30.setMoocherDropping(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions34 = dependencyOptions32.setDependencySorting(false);
        compilerOptions13.setDependencyOptions(dependencyOptions34);
        compilerOptions0.setDependencyOptions(dependencyOptions34);
        boolean boolean37 = compilerOptions0.aliasAllStrings;
        com.google.javascript.jscomp.CompilerOptions compilerOptions38 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str39 = compilerOptions38.syntheticBlockStartMarker;
        compilerOptions38.labelRenaming = true;
        boolean boolean42 = compilerOptions38.inlineLocalFunctions;
        compilerOptions38.setInlineGetters(true);
        boolean boolean45 = compilerOptions38.removeUnusedClassProperties;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode46 = compilerOptions38.getLanguageIn();
        compilerOptions0.setLanguageIn(languageMode46);
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel23 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel23.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(languageMode24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(dependencyOptions30);
        org.junit.Assert.assertNotNull(dependencyOptions32);
        org.junit.Assert.assertNotNull(dependencyOptions34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + languageMode46 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode46.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
    }

    @Test
    public void test07101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07101");
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file2 = java.io.File.createTempFile("US-ASCII", "/tmp/hi!6553381389133366679*global*.  at *global* line (unknown line) : (unknown column)");
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Unable to create temporary file, /tmp/US-ASCII8381183531511890132/tmp/hi!6553381389133366679*global*.  at *global* line (unknown line) : (unknown column)");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07102");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        compilerOptions0.inlineFunctions = true;
        compilerOptions0.setCommonJSModulePathPrefix(":");
        compilerOptions0.setCrossModuleCodeMotion(true);
        compilerOptions0.setInlineLocalVariables(true);
        compilerOptions0.setNameReferenceReportPath("2019/07/12 07:12");
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap15 = compilerOptions0.getDefineReplacements();
        strMap15.clear();
        int int17 = strMap15.size();
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test07103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07103");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        compilerOptions0.inlineFunctions = true;
        compilerOptions0.setCommonJSModulePathPrefix(":");
        compilerOptions0.setCrossModuleCodeMotion(true);
        compilerOptions0.setInlineLocalVariables(true);
        compilerOptions0.setNameReferenceReportPath("2019/07/12 07:12");
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap15 = compilerOptions0.getDefineReplacements();
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.Node>> strEntrySet16 = strMap15.entrySet();
        java.util.Collection<com.google.javascript.rhino.Node> nodeCollection17 = strMap15.values();
        com.google.javascript.rhino.ErrorReporter errorReporter20 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter20);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray22 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList23 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList23, jSTypeArray22);
        com.google.javascript.rhino.Node node25 = jSTypeRegistry21.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList23);
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry27.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        node25.addChildrenToBack(node31);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        com.google.javascript.rhino.Node node38 = jSTypeRegistry34.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        boolean boolean39 = node38.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        boolean boolean46 = node45.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter47 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry48 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter47);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray49 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList50 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList50, jSTypeArray49);
        com.google.javascript.rhino.Node node52 = jSTypeRegistry48.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList50);
        com.google.javascript.rhino.Node node55 = new com.google.javascript.rhino.Node((int) (short) 0, node25, node38, node45, node52, 0, 49);
        boolean boolean56 = node38.isStringKey();
        node38.setCharno(4095);
        com.google.javascript.rhino.Node node59 = strMap15.putIfAbsent("Node tree inequality:\nTree1:\nPARAM_LIST\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: PARAM_LIST\n\n\nSubtree2: NUMBER 0.0\n", node38);
        com.google.javascript.jscomp.CompilerOptions compilerOptions60 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode61 = null;
        compilerOptions60.setTracerMode(tracerMode61);
        compilerOptions60.setGeneratePseudoNames(false);
        compilerOptions60.setDefineToNumberLiteral("PARAM_LIST\n", (int) '/');
        java.lang.String str68 = compilerOptions60.syntheticBlockStartMarker;
        compilerOptions60.setRemoveAbstractMethods(false);
        com.google.javascript.rhino.Node node71 = strMap15.remove((java.lang.Object) compilerOptions60);
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strEntrySet16);
        org.junit.Assert.assertNotNull(nodeCollection17);
        org.junit.Assert.assertNotNull(jSTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(jSTypeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(node71);
    }

    @Test
    public void test07104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07104");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setLooseTypes(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions3 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str4 = compilerOptions3.syntheticBlockStartMarker;
        compilerOptions3.labelRenaming = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions12 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions12.crossModuleMethodMotion = true;
        compilerOptions12.skipAllCompilerPasses();
        compilerOptions12.resetWarningsGuard();
        java.lang.String str17 = compilerOptions12.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy18 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy19 = null;
        compilerOptions12.setRenamingPolicy(variableRenamingPolicy18, propertyRenamingPolicy19);
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions21.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy24 = compilerOptions21.propertyRenaming;
        compilerOptions7.setRenamingPolicy(variableRenamingPolicy18, propertyRenamingPolicy24);
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy26 = com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC;
        compilerOptions3.setRenamingPolicy(variableRenamingPolicy18, propertyRenamingPolicy26);
        com.google.javascript.jscomp.CompilerOptions compilerOptions28 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str29 = compilerOptions28.syntheticBlockStartMarker;
        compilerOptions28.labelRenaming = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.crossModuleMethodMotion = true;
        compilerOptions32.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions37 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions37.crossModuleMethodMotion = true;
        compilerOptions37.skipAllCompilerPasses();
        compilerOptions37.resetWarningsGuard();
        java.lang.String str42 = compilerOptions37.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy43 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy44 = null;
        compilerOptions37.setRenamingPolicy(variableRenamingPolicy43, propertyRenamingPolicy44);
        com.google.javascript.jscomp.CompilerOptions compilerOptions46 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions46.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy49 = compilerOptions46.propertyRenaming;
        compilerOptions32.setRenamingPolicy(variableRenamingPolicy43, propertyRenamingPolicy49);
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy51 = com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC;
        compilerOptions28.setRenamingPolicy(variableRenamingPolicy43, propertyRenamingPolicy51);
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy18, propertyRenamingPolicy51);
        java.lang.String str54 = compilerOptions0.aliasStringsBlacklist;
        boolean boolean55 = compilerOptions0.ideMode;
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy18 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy18.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy24 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy24.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy26 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC + "'", propertyRenamingPolicy26.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy43 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy43.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy49 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy49.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy51 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC + "'", propertyRenamingPolicy51.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test07105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07105");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        compilerOptions0.setRemoveDeadCode(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions23 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions23.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy26 = compilerOptions23.propertyRenaming;
        com.google.javascript.jscomp.AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy27 = com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF;
        compilerOptions23.anonymousFunctionNaming = anonymousFunctionNamingPolicy27;
        com.google.javascript.jscomp.DependencyOptions dependencyOptions29 = new com.google.javascript.jscomp.DependencyOptions();
        com.google.javascript.jscomp.DependencyOptions dependencyOptions31 = dependencyOptions29.setDependencyPruning(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions33 = dependencyOptions31.setMoocherDropping(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions35 = dependencyOptions33.setDependencySorting(false);
        compilerOptions23.setDependencyOptions(dependencyOptions35);
        boolean boolean37 = compilerOptions23.devirtualizePrototypeMethods;
        com.google.javascript.jscomp.CheckLevel checkLevel38 = compilerOptions23.checkMissingReturn;
        compilerOptions0.setReportMissingOverride(checkLevel38);
        com.google.javascript.jscomp.CompilerOptions compilerOptions40 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions40.crossModuleMethodMotion = true;
        compilerOptions40.skipAllCompilerPasses();
        compilerOptions40.resetWarningsGuard();
        compilerOptions40.setLabelRenaming(true);
        compilerOptions40.setTweakToDoubleLiteral("/", (double) 43);
        boolean boolean50 = compilerOptions40.removeTryCatchFinally;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode51 = com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY;
        compilerOptions40.setTracer(tracerMode51);
        compilerOptions0.setTracerMode(tracerMode51);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy26 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy26.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + anonymousFunctionNamingPolicy27 + "' != '" + com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF + "'", anonymousFunctionNamingPolicy27.equals(com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF));
        org.junit.Assert.assertNotNull(dependencyOptions31);
        org.junit.Assert.assertNotNull(dependencyOptions33);
        org.junit.Assert.assertNotNull(dependencyOptions35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + checkLevel38 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel38.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + tracerMode51 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY + "'", tracerMode51.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY));
    }

    @Test
    public void test07106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07106");
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray4 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList5 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList5, jSTypeArray4);
        com.google.javascript.rhino.Node node7 = jSTypeRegistry3.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList5);
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.Node node13 = jSTypeRegistry9.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList11);
        node7.addChildrenToBack(node13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray17 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList18 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList18, jSTypeArray17);
        com.google.javascript.rhino.Node node20 = jSTypeRegistry16.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList18);
        boolean boolean21 = node20.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.Node node27 = jSTypeRegistry23.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = node27.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        com.google.javascript.rhino.Node node34 = jSTypeRegistry30.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        com.google.javascript.rhino.Node node37 = new com.google.javascript.rhino.Node((int) (short) 0, node7, node20, node27, node34, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.Node node44 = jSTypeRegistry40.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        node44.addChildrenToBack(node50);
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList55 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55, jSTypeArray54);
        com.google.javascript.rhino.Node node57 = jSTypeRegistry53.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList55);
        boolean boolean58 = node57.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry60 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        com.google.javascript.rhino.Node node64 = jSTypeRegistry60.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        boolean boolean65 = node64.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter66 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry67 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter66);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.Node node71 = jSTypeRegistry67.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        com.google.javascript.rhino.Node node74 = new com.google.javascript.rhino.Node((int) (short) 0, node44, node57, node64, node71, 0, 49);
        com.google.javascript.rhino.Node node75 = node37.useSourceInfoFrom(node57);
        com.google.javascript.jscomp.CheckLevel checkLevel77 = null;
        com.google.javascript.jscomp.DiagnosticType diagnosticType79 = com.google.javascript.jscomp.DiagnosticType.make("*global*", checkLevel77, "");
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", ":" };
        com.google.javascript.jscomp.JSError jSError87 = com.google.javascript.jscomp.JSError.make("*global*", node75, diagnosticType79, strArray86);
        com.google.javascript.jscomp.CheckLevel checkLevel88 = jSError87.getDefaultLevel();
        int int89 = jSError87.getLineNumber();
        java.lang.String str90 = jSError87.description;
        int int91 = jSError87.lineNumber;
        java.lang.String str92 = jSError87.sourceName;
        int int93 = jSError87.getNodeSourceOffset();
        int int94 = jSError87.lineNumber;
        int int95 = jSError87.getNodeSourceOffset();
        org.junit.Assert.assertNotNull(jSTypeArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(jSTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(diagnosticType79);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(jSError87);
        org.junit.Assert.assertNull(checkLevel88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "*global*" + "'", str92, "*global*");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test07107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07107");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.syntheticBlockEndMarker = "hi!";
        compilerOptions0.coalesceVariableNames = false;
        compilerOptions0.setSmartNameRemoval(false);
    }

    @Test
    public void test07108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07108");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.lang.Object obj10 = null;
        boolean boolean11 = jSTypeList3.remove(obj10);
        java.lang.Object obj12 = null;
        int int13 = jSTypeList3.indexOf(obj12);
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        compilerOptions14.skipAllCompilerPasses();
        compilerOptions14.resetWarningsGuard();
        compilerOptions14.setInlineLocalVariables(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode22 = null;
        compilerOptions21.setTracerMode(tracerMode22);
        boolean boolean24 = compilerOptions21.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel25 = compilerOptions21.sourceMapDetailLevel;
        compilerOptions21.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet28 = compilerOptions21.stripNameSuffixes;
        compilerOptions14.setReplaceStringsReservedStrings(strSet28);
        int int30 = strSet28.size();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray33 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList34 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList34, jSTypeArray33);
        com.google.javascript.rhino.Node node36 = jSTypeRegistry32.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList34);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream37 = jSTypeList34.parallelStream();
        boolean boolean38 = strSet28.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList34);
        boolean boolean39 = jSTypeList3.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList34);
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec41 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("*global*");
        com.google.javascript.rhino.Node node44 = com.google.javascript.rhino.Node.newString((int) ' ', "OFF");
        com.google.javascript.rhino.Node node45 = assertionFunctionSpec41.getAssertedParam(node44);
        boolean boolean46 = jSTypeList34.contains((java.lang.Object) node44);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.JSType jSType48 = jSTypeList34.remove(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2147483647, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(detailLevel25);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(jSTypeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(jSTypeStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test07109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07109");
        com.google.javascript.jscomp.JSSourceFile jSSourceFile1 = com.google.javascript.jscomp.JSSourceFile.fromFile("PARAM_LIST\n    PARAM_LIST\n: InputId: STRING PARAM_LIST 49");
        org.junit.Assert.assertNotNull(jSSourceFile1);
    }

    @Test
    public void test07110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07110");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean8 = node7.isTry();
        java.lang.String str9 = node7.toString();
        boolean boolean10 = node3.hasChild(node7);
        com.google.javascript.rhino.Node node11 = node3.getLastSibling();
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable12 = node3.getAncestors();
        java.util.Iterator<com.google.javascript.rhino.Node> nodeItor13 = ancestorIterable12.iterator();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "STRING PARAM_LIST 49" + "'", str9, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(ancestorIterable12);
        org.junit.Assert.assertNotNull(nodeItor13);
    }

    @Test
    public void test07111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07111");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setLabelRenaming(true);
        compilerOptions0.setTweakToDoubleLiteral("/", (double) 43);
        compilerOptions0.aliasKeywords = false;
        boolean boolean12 = compilerOptions0.isRemoveUnusedClassProperties();
        compilerOptions0.disambiguateProperties = true;
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test07112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07112");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode6 = null;
        compilerOptions5.setTracerMode(tracerMode6);
        boolean boolean8 = compilerOptions5.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel9 = compilerOptions5.sourceMapDetailLevel;
        compilerOptions5.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet12 = compilerOptions5.stripNameSuffixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode14 = null;
        compilerOptions13.setTracerMode(tracerMode14);
        boolean boolean16 = compilerOptions13.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel17 = compilerOptions13.sourceMapDetailLevel;
        compilerOptions13.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.optimizeParameters = true;
        compilerOptions20.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel28 = compilerOptions20.checkGlobalNamesLevel;
        compilerOptions13.setReportMissingOverride(checkLevel28);
        compilerOptions5.setAggressiveVarCheck(checkLevel28);
        compilerOptions0.setCheckUnreachableCode(checkLevel28);
        com.google.javascript.jscomp.SourceMap.Format format32 = compilerOptions0.sourceMapFormat;
        boolean boolean33 = compilerOptions0.recordFunctionInformation;
        compilerOptions0.setComputeFunctionSideEffects(false);
        boolean boolean36 = compilerOptions0.isRemoveUnusedClassProperties();
        compilerOptions0.setTweakToNumberLiteral("java.io.IOException: ", 800);
        java.lang.String str40 = compilerOptions0.renamePrefixNamespace;
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(detailLevel9);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(detailLevel17);
        org.junit.Assert.assertTrue("'" + checkLevel28 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel28.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(format32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test07113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07113");
        java.nio.charset.Charset charset1 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str2 = charset1.name();
        java.util.Locale locale3 = null;
        java.lang.String str4 = charset1.displayName(locale3);
        java.nio.ByteBuffer byteBuffer6 = charset1.encode("/experiment/:/hi!");
        java.nio.charset.Charset charset7 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str8 = charset7.name();
        java.util.Set<java.lang.String> strSet9 = charset7.aliases();
        java.util.Set<java.lang.String> strSet10 = charset7.aliases();
        int int11 = charset1.compareTo(charset7);
        com.google.javascript.jscomp.SourceFile sourceFile12 = com.google.javascript.jscomp.SourceFile.fromFile("JSC_OPTIMIZE_LOOP_ERROR. Exceeded max number of code motion iterations: {0} at (unknown source) line (unknown line) : (unknown column)", charset7);
        boolean boolean13 = charset7.canEncode();
        java.lang.String str14 = charset7.displayName();
        boolean boolean15 = charset7.canEncode();
        org.junit.Assert.assertNotNull(charset1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "US-ASCII" + "'", str2, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "US-ASCII" + "'", str4, "US-ASCII");
        org.junit.Assert.assertNotNull(byteBuffer6);
        org.junit.Assert.assertNotNull(charset7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "US-ASCII" + "'", str8, "US-ASCII");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(sourceFile12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "US-ASCII" + "'", str14, "US-ASCII");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test07114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07114");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(true, false);
        java.io.File file7 = new java.io.File(file2, "PARAM_LIST\n");
        java.lang.String str8 = file2.getPath();
        long long9 = file2.getFreeSpace();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals(file7.getParent(), ":/hi!");
        org.junit.Assert.assertEquals(file7.toString(), ":/hi!/PARAM_LIST\n");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + ":/hi!" + "'", str8, ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 299090370560L + "'", long9 == 299090370560L);
    }

    @Test
    public void test07115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07115");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(false, false);
        boolean boolean7 = file2.setReadable(false);
        java.io.File file8 = file2.getCanonicalFile();
        boolean boolean9 = file2.exists();
        long long10 = file2.lastModified();
        boolean boolean11 = file2.mkdir();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(file8);
// flaky:         org.junit.Assert.assertEquals(file8.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file8.toString(), "/experiment/:/hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1645456538000L + "'", long10 == 1645456538000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test07116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07116");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions0.checkGlobalNamesLevel;
        compilerOptions0.setCheckMissingGetCssNameBlacklist("");
        boolean boolean11 = compilerOptions0.removeTryCatchFinally;
        compilerOptions0.setSkipAllPasses(true);
        compilerOptions0.setDebugFunctionSideEffectsPath("");
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap16 = compilerOptions0.getTweakReplacements();
        compilerOptions0.renamePrefix = "/experiment/:";
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test07117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07117");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        compilerOptions0.setPropertyAffinity(false);
        compilerOptions0.instrumentationTemplate = "sun.util.logging.resources.logging";
        compilerOptions0.deadAssignmentElimination = false;
        org.junit.Assert.assertNotNull(detailLevel3);
    }

    @Test
    public void test07118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07118");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.DUPLICATE_MESSAGE;
        com.google.javascript.jscomp.DiagnosticGroups.ACCESS_CONTROLS = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.UNDEFINED_NAMES = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.DEBUGGER_STATEMENT_PRESENT = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.ACCESS_CONTROLS = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.CHECK_PROVIDES = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.DUPLICATE_VARS = diagnosticGroup0;
// flaky:         org.junit.Assert.assertNull(diagnosticGroup0);
    }

    @Test
    public void test07119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07119");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        compilerOptions0.setSummaryDetailLevel(49);
        compilerOptions0.setRemoveTryCatchFinally(true);
        compilerOptions0.setOptimizeArgumentsArray(true);
        compilerOptions0.setLocale("hi!");
        compilerOptions0.setChainCalls(true);
        compilerOptions0.setComputeFunctionSideEffects(true);
    }

    @Test
    public void test07120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07120");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        boolean boolean4 = compilerOptions0.disambiguateProperties;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.collapseVariableDeclarations = false;
        boolean boolean9 = compilerOptions0.lineBreak;
        boolean boolean10 = compilerOptions0.recordFunctionInformation;
        compilerOptions0.inlineFunctions = true;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test07121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07121");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("FINEST");
        long long2 = stats1.runtime;
        int int3 = stats1.diff;
        stats1.gzDiff = 26;
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test07122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07122");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.syntheticBlockEndMarker = "hi!";
        compilerOptions0.removeUnusedClassProperties = false;
        compilerOptions0.setLineLengthThreshold(4095);
        com.google.javascript.jscomp.ErrorFormat errorFormat9 = compilerOptions0.errorFormat;
        compilerOptions0.setCrossModuleMethodMotion(true);
        compilerOptions0.preferLineBreakAtEndOfFile = true;
        compilerOptions0.setSourceMapOutputPath(":");
        compilerOptions0.jqueryPass = false;
        boolean boolean18 = compilerOptions0.collapseProperties;
        org.junit.Assert.assertNotNull(errorFormat9);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test07123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07123");
        java.nio.charset.Charset charset0 = java.nio.charset.Charset.defaultCharset();
        boolean boolean1 = charset0.isRegistered();
        java.nio.charset.CharsetEncoder charsetEncoder2 = charset0.newEncoder();
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType3 = com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN;
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean8 = node7.isTry();
        java.lang.String str9 = node7.toString();
        boolean boolean10 = node7.isIn();
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship15 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType3, node7, node14);
        node7.setSourceEncodedPositionForTree((int) 'a');
        com.google.javascript.rhino.JSDocInfo jSDocInfo18 = node7.getJSDocInfo();
        int int19 = node7.getLength();
        boolean boolean20 = charset0.equals((java.lang.Object) node7);
        java.lang.String str21 = charset0.displayName();
        java.lang.String str22 = charset0.displayName();
        org.junit.Assert.assertNotNull(charset0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(charsetEncoder2);
        org.junit.Assert.assertTrue("'" + subclassType3 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN + "'", subclassType3.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN));
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "STRING PARAM_LIST 49" + "'", str9, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNull(jSDocInfo18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "US-ASCII" + "'", str21, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "US-ASCII" + "'", str22, "US-ASCII");
    }

    @Test
    public void test07124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07124");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.setReportPath("java.io.IOException: ");
        boolean boolean4 = compilerOptions0.inlineConstantVars;
        boolean boolean5 = compilerOptions0.deadAssignmentElimination;
        java.util.Set<java.lang.String> strSet6 = compilerOptions0.stripNameSuffixes;
        boolean boolean7 = compilerOptions0.markAsCompiled;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        compilerOptions0.setDefineReplacements(strMap8);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test07125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07125");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        jSModule1.removeAll();
        com.google.javascript.jscomp.SourceFile sourceFile6 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int8 = sourceFile6.getLineOfOffset((int) (short) 1);
        int int10 = sourceFile6.getLineOfOffset(100);
        java.lang.String str11 = sourceFile6.getName();
        java.io.Reader reader12 = sourceFile6.getCodeReader();
        reader12.reset();
        com.google.javascript.jscomp.SourceFile sourceFile14 = com.google.javascript.jscomp.SourceFile.fromReader("PARAM_LIST", reader12);
        java.lang.String str15 = sourceFile14.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput16 = new com.google.javascript.jscomp.CompilerInput(sourceFile14);
        jSModule1.add(compilerInput16);
        com.google.javascript.jscomp.CompilerInput compilerInput18 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput16);
        com.google.javascript.jscomp.Region region20 = compilerInput16.getRegion(36);
        org.junit.Assert.assertNotNull(sourceFile6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(sourceFile14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PARAM_LIST" + "'", str15, "PARAM_LIST");
        org.junit.Assert.assertNull(region20);
    }

    @Test
    public void test07126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07126");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        compilerOptions0.setSummaryDetailLevel(49);
        compilerOptions0.setRemoveTryCatchFinally(true);
        compilerOptions0.setComputeFunctionSideEffects(true);
        compilerOptions0.setRemoveClosureAsserts(false);
    }

    @Test
    public void test07127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07127");
        com.google.javascript.jscomp.SourceFile sourceFile1 = com.google.javascript.jscomp.SourceFile.fromFile("Node tree inequality:\nTree1:\nPARAM_LIST\n    NAME \n\n\nTree2:\nNUMBER -1.0\n\n\nSubtree1: PARAM_LIST\n    NAME \n\n\nSubtree2: NUMBER -1.0\n");
        org.junit.Assert.assertNotNull(sourceFile1);
    }

    @Test
    public void test07128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07128");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setProtectHiddenSideEffects(true);
        compilerOptions0.moveFunctionDeclarations = true;
        boolean boolean7 = compilerOptions0.removeUnusedPrototypeProperties;
        compilerOptions0.setRuntimeTypeCheckLogFunction("JSC_OPTIMIZE_LOOP_ERROR. Exceeded max number of code motion iterations: Unversioned directory at STRING PARAM_LIST 49: hi! line 97 : 48");
        compilerOptions0.setSyntheticBlockStartMarker("java.io.IOException: java.io.IOException: ");
        compilerOptions0.setRenamePrefixNamespace("SEVERE");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test07129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07129");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        node3.putBooleanProp(2147483647, false);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry14.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        node12.addChildrenToBack(node18);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile20 = node12.getStaticSourceFile();
        com.google.javascript.rhino.Node node21 = node3.copyInformationFrom(node12);
        double double22 = node3.getDouble();
        boolean boolean23 = node3.isTrue();
        com.google.javascript.rhino.InputId inputId25 = new com.google.javascript.rhino.InputId("*global*");
        java.lang.String str26 = inputId25.toString();
        com.google.javascript.jscomp.JSModule[] jSModuleArray27 = new com.google.javascript.jscomp.JSModule[] {};
        java.util.ArrayList<com.google.javascript.jscomp.JSModule> jSModuleList28 = new java.util.ArrayList<com.google.javascript.jscomp.JSModule>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.JSModule>) jSModuleList28, jSModuleArray27);
        com.google.javascript.jscomp.JSModule[] jSModuleArray30 = com.google.javascript.jscomp.JSModule.sortJsModules((java.util.Collection<com.google.javascript.jscomp.JSModule>) jSModuleList28);
        boolean boolean31 = inputId25.equals((java.lang.Object) jSModuleArray30);
        java.lang.String str32 = inputId25.toString();
        java.lang.String str33 = inputId25.getIdName();
        java.lang.String str34 = inputId25.getIdName();
        node3.setInputId(inputId25);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(staticSourceFile20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "InputId: *global*" + "'", str26, "InputId: *global*");
        org.junit.Assert.assertNotNull(jSModuleArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSModuleArray30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "InputId: *global*" + "'", str32, "InputId: *global*");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "*global*" + "'", str33, "*global*");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "*global*" + "'", str34, "*global*");
    }

    @Test
    public void test07130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07130");
        java.io.IOException iOException1 = new java.io.IOException("");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException("");
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException();
        iOException7.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException8.getSuppressed();
        iOException2.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException14 = new java.io.IOException();
        java.io.IOException iOException15 = new java.io.IOException("OFF", (java.lang.Throwable) iOException14);
        java.io.IOException iOException16 = new java.io.IOException("PARAM_LIST\n    PARAM_LIST\n", (java.lang.Throwable) iOException14);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        iOException2.addSuppressed((java.lang.Throwable) iOException17);
        java.lang.Throwable[] throwableArray19 = iOException2.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test07131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07131");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("java.io.IOException: ");
        com.google.javascript.jscomp.JSModule jSModule3 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler4 = new com.google.javascript.jscomp.Compiler();
        jSModule3.sortInputsByDeps(compiler4);
        com.google.javascript.jscomp.SourceFile.Builder builder6 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile10 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int12 = sourceFile10.getLineOfOffset((int) (short) 1);
        java.io.Reader reader13 = sourceFile10.getCodeReader();
        int int14 = reader13.read();
        com.google.javascript.jscomp.SourceFile sourceFile15 = builder6.buildFromReader("*global*", reader13);
        jSModule3.add(sourceFile15);
        com.google.javascript.jscomp.JSModule jSModule18 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler19 = new com.google.javascript.jscomp.Compiler();
        jSModule18.sortInputsByDeps(compiler19);
        com.google.javascript.jscomp.SourceFile.Builder builder21 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile25 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int27 = sourceFile25.getLineOfOffset((int) (short) 1);
        java.io.Reader reader28 = sourceFile25.getCodeReader();
        int int29 = reader28.read();
        com.google.javascript.jscomp.SourceFile sourceFile30 = builder21.buildFromReader("*global*", reader28);
        jSModule18.add(sourceFile30);
        boolean boolean33 = jSModule18.removeByName("PARAM_LIST");
        jSModule3.addDependency(jSModule18);
        com.google.javascript.jscomp.SourceFile sourceFile36 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput38 = new com.google.javascript.jscomp.CompilerInput(sourceFile36, true);
        com.google.javascript.rhino.InputId inputId40 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput42 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput38, inputId40, true);
        com.google.javascript.jscomp.CompilerInput compilerInput44 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput42, false);
        jSModule3.addFirst(compilerInput42);
        com.google.javascript.jscomp.CompilerInput compilerInput47 = jSModule3.getByName("");
        com.google.javascript.jscomp.SourceFile sourceFile49 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput51 = new com.google.javascript.jscomp.CompilerInput(sourceFile49, true);
        com.google.javascript.rhino.InputId inputId53 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput55 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput51, inputId53, true);
        com.google.javascript.jscomp.CompilerInput compilerInput57 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput55, false);
        com.google.javascript.jscomp.JSModule jSModule59 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler60 = new com.google.javascript.jscomp.Compiler();
        jSModule59.sortInputsByDeps(compiler60);
        java.lang.String str62 = jSModule59.getName();
        compilerInput55.setModule(jSModule59);
        jSModule59.setDepth((int) (byte) 0);
        jSModule3.addDependency(jSModule59);
        com.google.javascript.jscomp.SourceFile sourceFile69 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int71 = sourceFile69.getLineOfOffset((int) (short) 1);
        java.lang.String str72 = sourceFile69.getName();
        java.lang.String str73 = sourceFile69.getName();
        java.lang.String str74 = sourceFile69.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput76 = new com.google.javascript.jscomp.CompilerInput(sourceFile69, true);
        com.google.javascript.jscomp.CompilerInput compilerInput77 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput76);
        com.google.javascript.jscomp.CompilerInput compilerInput79 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput76, false);
        jSModule59.remove(compilerInput76);
        jSModule1.add(compilerInput76);
        java.lang.String str82 = compilerInput76.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput83 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput76);
        org.junit.Assert.assertNotNull(sourceFile10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(sourceFile15);
        org.junit.Assert.assertNotNull(sourceFile25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(sourceFile30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(compilerInput47);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "STRING PARAM_LIST 49" + "'", str62, "STRING PARAM_LIST 49");
        org.junit.Assert.assertNotNull(sourceFile69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
    }

    @Test
    public void test07132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07132");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions0.checkGlobalNamesLevel;
        compilerOptions0.setCheckMissingGetCssNameBlacklist("");
        boolean boolean11 = compilerOptions0.removeTryCatchFinally;
        compilerOptions0.setMarkAsCompiled(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        compilerOptions14.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions19 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions19.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy22 = compilerOptions19.propertyRenaming;
        java.lang.String[] strArray25 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        compilerOptions19.setStripTypes((java.util.Set<java.lang.String>) strSet26);
        compilerOptions14.stripNamePrefixes = strSet26;
        boolean boolean30 = strSet26.isEmpty();
        compilerOptions0.stripNamePrefixes = strSet26;
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy35 = compilerOptions32.propertyRenaming;
        boolean boolean36 = compilerOptions32.disambiguateProperties;
        compilerOptions32.setFoldConstants(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions39 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode40 = null;
        compilerOptions39.setTracerMode(tracerMode40);
        boolean boolean42 = compilerOptions39.generatePseudoNames;
        com.google.javascript.jscomp.SourceMap.LocationMapping[] locationMappingArray43 = new com.google.javascript.jscomp.SourceMap.LocationMapping[] {};
        java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping> locationMappingList44 = new java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList44, locationMappingArray43);
        compilerOptions39.sourceMapLocationMappings = locationMappingList44;
        compilerOptions32.sourceMapLocationMappings = locationMappingList44;
        compilerOptions0.setSourceMapLocationMappings((java.util.List<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList44);
        com.google.javascript.jscomp.CompilerOptions compilerOptions49 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions49.crossModuleMethodMotion = true;
        compilerOptions49.setProtectHiddenSideEffects(true);
        compilerOptions49.setInputDelimiter("PARAM_LIST\n");
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap56 = null;
        compilerOptions49.cssRenamingMap = cssRenamingMap56;
        com.google.javascript.jscomp.CompilerOptions compilerOptions58 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode59 = null;
        compilerOptions58.setTracerMode(tracerMode59);
        boolean boolean61 = compilerOptions58.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel62 = compilerOptions58.sourceMapDetailLevel;
        compilerOptions58.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet65 = compilerOptions58.stripNameSuffixes;
        strSet65.clear();
        com.google.javascript.jscomp.SourceFile sourceFile69 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int71 = sourceFile69.getLineOfOffset((int) (short) 1);
        java.lang.String str72 = sourceFile69.getName();
        java.lang.String str73 = sourceFile69.getName();
        java.lang.String str74 = sourceFile69.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput76 = new com.google.javascript.jscomp.CompilerInput(sourceFile69, true);
        com.google.javascript.jscomp.SourceAst sourceAst77 = compilerInput76.getAst();
        boolean boolean78 = strSet65.remove((java.lang.Object) sourceAst77);
        compilerOptions49.setExtraAnnotationNames(strSet65);
        java.util.Spliterator<java.lang.String> strSpliterator80 = strSet65.spliterator();
        compilerOptions0.aliasableStrings = strSet65;
        compilerOptions0.setRecordFunctionInformation(true);
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy22 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy22.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy35 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy35.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(locationMappingArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(detailLevel62);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNotNull(sourceFile69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(sourceAst77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strSpliterator80);
    }

    @Test
    public void test07133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07133");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.generatePseudoNames = true;
        compilerOptions0.setCheckControlStructures(false);
        com.google.javascript.jscomp.AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy11 = com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF;
        compilerOptions0.anonymousFunctionNaming = anonymousFunctionNamingPolicy11;
        com.google.javascript.jscomp.SourceMap.Format format13 = compilerOptions0.sourceMapFormat;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode15 = null;
        compilerOptions14.setTracerMode(tracerMode15);
        boolean boolean17 = compilerOptions14.generatePseudoNames;
        java.util.Set<java.lang.String> strSet18 = compilerOptions14.stripTypes;
        compilerOptions0.setStripNameSuffixes(strSet18);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions25 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions25.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy28 = compilerOptions25.propertyRenaming;
        java.lang.String[] strArray31 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        compilerOptions25.setStripTypes((java.util.Set<java.lang.String>) strSet32);
        compilerOptions20.stripNamePrefixes = strSet32;
        compilerOptions20.checkTypes = false;
        boolean boolean38 = compilerOptions20.assumeStrictThis();
        compilerOptions20.convertToDottedProperties = true;
        com.google.javascript.jscomp.CheckLevel checkLevel41 = com.google.javascript.jscomp.CheckLevel.WARNING;
        compilerOptions20.setCheckGlobalThisLevel(checkLevel41);
        com.google.javascript.jscomp.CompilerOptions compilerOptions43 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions43.crossModuleMethodMotion = true;
        compilerOptions43.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions48 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions48.crossModuleMethodMotion = true;
        compilerOptions48.skipAllCompilerPasses();
        compilerOptions48.resetWarningsGuard();
        java.lang.String str53 = compilerOptions48.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy54 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy55 = null;
        compilerOptions48.setRenamingPolicy(variableRenamingPolicy54, propertyRenamingPolicy55);
        com.google.javascript.jscomp.CompilerOptions compilerOptions57 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions57.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy60 = compilerOptions57.propertyRenaming;
        compilerOptions43.setRenamingPolicy(variableRenamingPolicy54, propertyRenamingPolicy60);
        com.google.javascript.jscomp.CompilerOptions compilerOptions62 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions62.crossModuleMethodMotion = true;
        compilerOptions62.optimizeParameters = true;
        compilerOptions62.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel70 = compilerOptions62.checkGlobalNamesLevel;
        com.google.javascript.jscomp.CompilerOptions compilerOptions71 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode72 = null;
        compilerOptions71.setTracerMode(tracerMode72);
        boolean boolean74 = compilerOptions71.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel75 = compilerOptions71.sourceMapDetailLevel;
        compilerOptions71.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet78 = compilerOptions71.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile80 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput82 = new com.google.javascript.jscomp.CompilerInput(sourceFile80, true);
        com.google.javascript.rhino.InputId inputId84 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput86 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput82, inputId84, true);
        java.lang.String str87 = compilerInput86.toString();
        boolean boolean88 = strSet78.contains((java.lang.Object) compilerInput86);
        java.lang.Object[] objArray89 = strSet78.toArray();
        compilerOptions62.setStripTypes(strSet78);
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy91 = compilerOptions62.propertyRenaming;
        compilerOptions20.setRenamingPolicy(variableRenamingPolicy54, propertyRenamingPolicy91);
        compilerOptions0.propertyRenaming = propertyRenamingPolicy91;
        boolean boolean94 = compilerOptions0.assumeClosuresOnlyCaptureReferences();
        com.google.javascript.jscomp.CheckLevel checkLevel95 = compilerOptions0.checkMissingReturn;
        boolean boolean96 = compilerOptions0.collapseProperties;
        boolean boolean97 = compilerOptions0.aliasAllStrings;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + anonymousFunctionNamingPolicy11 + "' != '" + com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF + "'", anonymousFunctionNamingPolicy11.equals(com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy28 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy28.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + checkLevel41 + "' != '" + com.google.javascript.jscomp.CheckLevel.WARNING + "'", checkLevel41.equals(com.google.javascript.jscomp.CheckLevel.WARNING));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy54 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy54.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy60 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy60.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel70 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel70.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(detailLevel75);
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "*global*" + "'", str87, "*global*");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy91 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy91.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + checkLevel95 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel95.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test07134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07134");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        node3.setSourceEncodedPosition((int) (byte) 0);
        boolean boolean6 = node3.isTypeOf();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test07135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07135");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        compilerOptions0.setFoldConstants(true);
        java.lang.String str7 = compilerOptions0.renamePrefix;
        compilerOptions0.checkSymbols = false;
        compilerOptions0.syntheticBlockStartMarker = "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ";
        boolean boolean12 = compilerOptions0.crossModuleMethodMotion;
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test07136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07136");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("FINEST");
        stats1.gzSize = 300;
        int int4 = stats1.gzDiff;
        stats1.size = 31;
        int int7 = stats1.changes;
        int int8 = stats1.diff;
        int int9 = stats1.diff;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test07137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07137");
        com.google.javascript.jscomp.CompilerOptions compilerOptions1 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean2 = compilerOptions1.moveFunctionDeclarations;
        compilerOptions1.setReportPath("java.io.IOException: ");
        boolean boolean5 = compilerOptions1.inlineConstantVars;
        boolean boolean6 = compilerOptions1.deadAssignmentElimination;
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode8 = null;
        compilerOptions7.setTracerMode(tracerMode8);
        boolean boolean10 = compilerOptions7.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel11 = compilerOptions7.sourceMapDetailLevel;
        compilerOptions7.setColorizeErrorOutput(true);
        compilerOptions7.generatePseudoNames = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy16 = com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED;
        compilerOptions7.setVariableRenaming(variableRenamingPolicy16);
        com.google.javascript.jscomp.ErrorFormat errorFormat18 = compilerOptions7.errorFormat;
        compilerOptions1.setErrorFormat(errorFormat18);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean21 = compilerOptions20.moveFunctionDeclarations;
        compilerOptions20.crossModuleCodeMotion = true;
        compilerOptions20.checkSymbols = true;
        java.util.Set<java.lang.String> strSet26 = compilerOptions20.stripNamePrefixes;
        compilerOptions20.setCheckCaja(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions29 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions29.crossModuleMethodMotion = true;
        compilerOptions29.syntheticBlockEndMarker = "hi!";
        com.google.javascript.jscomp.CheckLevel checkLevel34 = compilerOptions29.aggressiveVarCheck;
        compilerOptions20.setCheckGlobalThisLevel(checkLevel34);
        compilerOptions1.checkRequires = checkLevel34;
        com.google.javascript.jscomp.DiagnosticType diagnosticType38 = com.google.javascript.jscomp.DiagnosticType.make("PARAM_LIST\n    PARAM_LIST\n", checkLevel34, "WARNING");
        com.google.javascript.jscomp.CompilerOptions compilerOptions39 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str40 = compilerOptions39.syntheticBlockStartMarker;
        compilerOptions39.setMarkNoSideEffectCalls(false);
        com.google.javascript.jscomp.CheckLevel checkLevel43 = compilerOptions39.checkGlobalThisLevel;
        diagnosticType38.level = checkLevel43;
        com.google.javascript.jscomp.CompilerOptions compilerOptions45 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode46 = null;
        compilerOptions45.setTracerMode(tracerMode46);
        boolean boolean48 = compilerOptions45.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel49 = compilerOptions45.sourceMapDetailLevel;
        compilerOptions45.setColorizeErrorOutput(true);
        compilerOptions45.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions54 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions54.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy57 = compilerOptions54.propertyRenaming;
        compilerOptions45.propertyRenaming = propertyRenamingPolicy57;
        com.google.javascript.jscomp.CompilerOptions compilerOptions59 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel60 = compilerOptions59.checkRequires;
        com.google.javascript.jscomp.CompilerOptions compilerOptions61 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode62 = null;
        compilerOptions61.setTracerMode(tracerMode62);
        boolean boolean64 = compilerOptions61.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel65 = compilerOptions61.sourceMapDetailLevel;
        compilerOptions61.setColorizeErrorOutput(true);
        compilerOptions61.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions70 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions70.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy73 = compilerOptions70.propertyRenaming;
        compilerOptions61.propertyRenaming = propertyRenamingPolicy73;
        com.google.javascript.jscomp.CheckLevel checkLevel75 = compilerOptions61.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel76 = compilerOptions61.checkRequires;
        compilerOptions59.setCheckRequires(checkLevel76);
        compilerOptions45.setCheckProvides(checkLevel76);
        boolean boolean79 = compilerOptions45.isRemoveUnusedClassProperties();
        com.google.javascript.jscomp.CheckLevel checkLevel80 = compilerOptions45.checkGlobalThisLevel;
        diagnosticType38.level = checkLevel80;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(detailLevel11);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy16 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED + "'", variableRenamingPolicy16.equals(com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED));
        org.junit.Assert.assertNotNull(errorFormat18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + checkLevel34 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel34.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(diagnosticType38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + checkLevel43 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel43.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(detailLevel49);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy57 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy57.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel60 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel60.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(detailLevel65);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy73 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy73.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel75 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel75.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel76 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel76.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + checkLevel80 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel80.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07138");
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType0 = com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN;
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean5 = node4.isTry();
        java.lang.String str6 = node4.toString();
        boolean boolean7 = node4.isIn();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship12 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType0, node4, node11);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder13 = node11.new FileLevelJsDocBuilder();
        boolean boolean14 = node11.isSetterDef();
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray17 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList18 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList18, jSTypeArray17);
        com.google.javascript.rhino.Node node20 = jSTypeRegistry16.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList18);
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        node20.addChildrenToBack(node26);
        boolean boolean28 = node26.isAnd();
        com.google.javascript.rhino.Node node29 = node11.copyInformationFromForTree(node26);
        node11.setIsSyntheticBlock(false);
        node11.setLineno(100);
        org.junit.Assert.assertTrue("'" + subclassType0 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN + "'", subclassType0.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN));
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "STRING PARAM_LIST 49" + "'", str6, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(jSTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(node29);
    }

    @Test
    public void test07139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07139");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy5 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions6.propertyRenaming;
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy5, propertyRenamingPolicy9);
        boolean boolean11 = compilerOptions0.checkControlStructures;
        boolean boolean12 = compilerOptions0.crossModuleCodeMotion;
        compilerOptions0.extractPrototypeMemberDeclarations = true;
        compilerOptions0.printInputDelimiter = false;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test07140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07140");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.CompilerInput compilerInput3 = jSModule1.getByName("FINEST");
        java.lang.String str4 = jSModule1.getName();
        org.junit.Assert.assertNull(compilerInput3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "STRING PARAM_LIST 49" + "'", str4, "STRING PARAM_LIST 49");
    }

    @Test
    public void test07141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07141");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(true, false);
        java.io.File file7 = new java.io.File(file2, "PARAM_LIST\n");
        boolean boolean9 = file2.setWritable(false);
        boolean boolean11 = file2.setReadable(false);
        java.io.File file12 = file2.getAbsoluteFile();
        com.google.javascript.jscomp.JSSourceFile jSSourceFile13 = com.google.javascript.jscomp.JSSourceFile.fromFile(file2);
        boolean boolean14 = file2.canRead();
        boolean boolean16 = file2.setReadable(true);
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals(file7.getParent(), ":/hi!");
        org.junit.Assert.assertEquals(file7.toString(), ":/hi!/PARAM_LIST\n");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(file12);
// flaky:         org.junit.Assert.assertEquals(file12.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/experiment/:/hi!");
        org.junit.Assert.assertNotNull(jSSourceFile13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test07142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07142");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        compilerOptions7.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions7.checkGlobalNamesLevel;
        compilerOptions0.setReportMissingOverride(checkLevel15);
        java.util.Set<java.lang.String> strSet17 = compilerOptions0.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode19 = null;
        compilerOptions18.setTracerMode(tracerMode19);
        boolean boolean21 = compilerOptions18.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel22 = compilerOptions18.sourceMapDetailLevel;
        compilerOptions18.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet25 = compilerOptions18.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile27 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput29 = new com.google.javascript.jscomp.CompilerInput(sourceFile27, true);
        com.google.javascript.rhino.InputId inputId31 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput33 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput29, inputId31, true);
        java.lang.String str34 = compilerInput33.toString();
        boolean boolean35 = strSet25.contains((java.lang.Object) compilerInput33);
        compilerOptions0.stripTypes = strSet25;
        compilerOptions0.setMarkAsCompiled(true);
        java.util.Set<java.lang.String> strSet39 = compilerOptions0.stripTypePrefixes;
        compilerOptions0.setPreferLineBreakAtEndOfFile(true);
        compilerOptions0.setCheckCaja(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions44 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions44.crossModuleMethodMotion = true;
        compilerOptions44.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions49 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions49.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy52 = compilerOptions49.propertyRenaming;
        java.lang.String[] strArray55 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet56 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet56, strArray55);
        compilerOptions49.setStripTypes((java.util.Set<java.lang.String>) strSet56);
        compilerOptions44.stripNamePrefixes = strSet56;
        com.google.javascript.jscomp.CompilerOptions compilerOptions60 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions60.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy63 = compilerOptions60.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap64 = compilerOptions60.getTweakReplacements();
        boolean boolean65 = strSet56.remove((java.lang.Object) compilerOptions60);
        com.google.javascript.jscomp.CompilerOptions compilerOptions66 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel67 = compilerOptions66.checkRequires;
        compilerOptions66.setRewriteNewDateGoogNow(true);
        compilerOptions66.setSyntheticBlockStartMarker("OFF");
        compilerOptions66.skipAllCompilerPasses();
        compilerOptions66.jqueryPass = false;
        java.lang.String[] strArray80 = new java.lang.String[] { "PARAM_LIST\n", "/", "STRING PARAM_LIST 49", "hi!", "/" };
        java.util.LinkedHashSet<java.lang.String> strSet81 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet81, strArray80);
        compilerOptions66.stripNameSuffixes = strSet81;
        com.google.javascript.rhino.ErrorReporter errorReporter84 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry85 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter84);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray86 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList87 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList87, jSTypeArray86);
        com.google.javascript.rhino.Node node89 = jSTypeRegistry85.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList87);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream90 = jSTypeList87.parallelStream();
        boolean boolean91 = strSet81.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList87);
        boolean boolean92 = strSet56.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList87);
        compilerOptions0.stripTypes = strSet56;
        com.google.javascript.jscomp.CssRenamingMap.Style style94 = com.google.javascript.jscomp.CssRenamingMap.Style.BY_PART;
        com.google.javascript.jscomp.CssRenamingMap.Style style95 = com.google.javascript.jscomp.CssRenamingMap.Style.BY_PART;
        com.google.javascript.jscomp.CssRenamingMap.Style[] styleArray96 = new com.google.javascript.jscomp.CssRenamingMap.Style[] { style94, style95 };
        com.google.javascript.jscomp.CssRenamingMap.Style[] styleArray97 = strSet56.toArray(styleArray96);
        boolean boolean98 = strSet56.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(detailLevel22);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "*global*" + "'", str34, "*global*");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy52 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy52.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy63 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy63.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + checkLevel67 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel67.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(jSTypeArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertNotNull(jSTypeStream90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + style94 + "' != '" + com.google.javascript.jscomp.CssRenamingMap.Style.BY_PART + "'", style94.equals(com.google.javascript.jscomp.CssRenamingMap.Style.BY_PART));
        org.junit.Assert.assertTrue("'" + style95 + "' != '" + com.google.javascript.jscomp.CssRenamingMap.Style.BY_PART + "'", style95.equals(com.google.javascript.jscomp.CssRenamingMap.Style.BY_PART));
        org.junit.Assert.assertNotNull(styleArray96);
        org.junit.Assert.assertNotNull(styleArray97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test07143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07143");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        boolean boolean75 = node56.isExprResult();
        int int76 = node56.getLength();
        boolean boolean77 = node56.isOptionalArg();
        com.google.javascript.rhino.Node node78 = node56.getNext();
        node78.setOptionalArg(true);
        boolean boolean81 = node78.isCase();
        boolean boolean82 = node78.isExprResult();
        int int83 = node78.getLength();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test07144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07144");
        com.google.javascript.jscomp.DiagnosticType diagnosticType2 = com.google.javascript.jscomp.DiagnosticType.error("STRING PARAM_LIST 49", "Node tree inequality:\nTree1:\nSTRING \n\n\nTree2:\nPARAM_LIST 0\n\n\nSubtree1: STRING \n\n\nSubtree2: PARAM_LIST 0\n");
        org.junit.Assert.assertNotNull(diagnosticType2);
    }

    @Test
    public void test07145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07145");
        java.io.IOException iOException2 = new java.io.IOException("goog.exportProperty");
        java.io.IOException iOException5 = new java.io.IOException(":");
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException8 = new java.io.IOException("");
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.io.IOException iOException12 = new java.io.IOException("");
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException12);
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException15 = new java.io.IOException();
        iOException14.addSuppressed((java.lang.Throwable) iOException15);
        java.lang.Throwable[] throwableArray17 = iOException15.getSuppressed();
        iOException9.addSuppressed((java.lang.Throwable) iOException15);
        iOException6.addSuppressed((java.lang.Throwable) iOException9);
        java.lang.Throwable[] throwableArray20 = iOException9.getSuppressed();
        java.io.IOException iOException21 = new java.io.IOException("Node tree inequality:\nTree1:\nPARAM_LIST\n    NAME \n\n\nTree2:\nNUMBER -1.0\n\n\nSubtree1: PARAM_LIST\n    NAME \n\n\nSubtree2: NUMBER -1.0\n", (java.lang.Throwable) iOException9);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException9);
        iOException2.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException24 = new java.io.IOException("PARAM_LIST5278126033942481271Unversioned directory", (java.lang.Throwable) iOException2);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test07146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07146");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("PARAM_LIST [var_args_name: 1] [opt_arg: 1]\n", jSTypeNative1);
    }

    @Test
    public void test07147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07147");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        compilerOptions7.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions7.checkGlobalNamesLevel;
        compilerOptions0.setReportMissingOverride(checkLevel15);
        java.util.Set<java.lang.String> strSet17 = compilerOptions0.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel19 = compilerOptions18.checkRequires;
        compilerOptions0.setReportMissingOverride(checkLevel19);
        compilerOptions0.setInlineProperties(false);
        compilerOptions0.setLineBreak(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions25 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions25.crossModuleMethodMotion = true;
        compilerOptions25.setProtectHiddenSideEffects(true);
        compilerOptions25.moveFunctionDeclarations = true;
        boolean boolean32 = compilerOptions25.inlineConstantVars;
        com.google.javascript.jscomp.CompilerOptions compilerOptions33 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions33.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions33.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode39 = null;
        compilerOptions33.setLanguageOut(languageMode39);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy41 = null;
        compilerOptions33.variableRenaming = variableRenamingPolicy41;
        com.google.javascript.jscomp.CheckLevel checkLevel43 = compilerOptions33.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions compilerOptions44 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions44.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy47 = compilerOptions44.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap48 = compilerOptions44.getTweakReplacements();
        boolean boolean49 = strMap48.isEmpty();
        java.lang.Object obj50 = null;
        com.google.javascript.rhino.Node node51 = strMap48.get(obj50);
        com.google.javascript.jscomp.CompilerOptions compilerOptions52 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions52.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel55 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions52.setSourceMapDetailLevel(detailLevel55);
        boolean boolean57 = compilerOptions52.ideMode;
        compilerOptions52.setUnaliasableGlobals("");
        com.google.javascript.jscomp.CheckLevel checkLevel60 = compilerOptions52.checkUnreachableCode;
        com.google.javascript.rhino.Node node61 = strMap48.remove((java.lang.Object) checkLevel60);
        compilerOptions33.checkMissingGetCssNameLevel = checkLevel60;
        compilerOptions25.setCheckUnreachableCode(checkLevel60);
        compilerOptions25.checkMissingGetCssNameBlacklist = "";
        compilerOptions25.setRemoveAbstractMethods(false);
        boolean boolean68 = compilerOptions25.prettyPrint;
        com.google.javascript.jscomp.CompilerOptions compilerOptions69 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions69.setLooseTypes(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions72 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel73 = compilerOptions72.checkRequires;
        compilerOptions69.setCheckProvides(checkLevel73);
        compilerOptions69.aliasAllStrings = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions77 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions77.crossModuleMethodMotion = true;
        compilerOptions77.skipAllCompilerPasses();
        boolean boolean81 = compilerOptions77.flowSensitiveInlineVariables;
        java.lang.String[] strArray91 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet92 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet92, strArray91);
        compilerOptions77.stripTypes = strSet92;
        compilerOptions69.setAliasableStrings((java.util.Set<java.lang.String>) strSet92);
        compilerOptions25.setStripTypePrefixes((java.util.Set<java.lang.String>) strSet92);
        compilerOptions0.setStripNameSuffixes((java.util.Set<java.lang.String>) strSet92);
        boolean boolean98 = compilerOptions0.prettyPrint;
        java.lang.String str99 = compilerOptions0.instrumentationTemplate;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + checkLevel19 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel19.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + checkLevel43 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel43.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy47 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy47.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNotNull(detailLevel55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + checkLevel60 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel60.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + checkLevel73 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel73.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test07148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07148");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("Exceeded max number of code motion iterations: {0}", jSTypeNative1);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean12 = node11.isTry();
        java.lang.String str13 = node11.toString();
        boolean boolean14 = node7.hasChild(node11);
        boolean boolean15 = node7.isFromExterns();
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray18 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList19 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList19, jSTypeArray18);
        com.google.javascript.rhino.Node node21 = jSTypeRegistry17.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList19);
        boolean boolean22 = node21.isIn();
        boolean boolean23 = node21.isVoid();
        node21.setOptionalArg(true);
        node21.setVarArgs(true);
        com.google.javascript.rhino.JSDocInfo jSDocInfo28 = node21.getJSDocInfo();
        com.google.javascript.rhino.Node node29 = new com.google.javascript.rhino.Node(42, node7, node21);
        com.google.javascript.rhino.Node node30 = assertionFunctionSpec2.getAssertedParam(node29);
        com.google.javascript.rhino.Node node31 = node30.getFirstChild();
        com.google.javascript.rhino.Node node36 = com.google.javascript.rhino.Node.newString((int) (short) 0, "TYPEOF : 44\n", 37, (int) '4');
        com.google.javascript.rhino.Node node37 = node31.clonePropsFrom(node36);
        com.google.javascript.rhino.Node node39 = new com.google.javascript.rhino.Node((-9));
        com.google.javascript.rhino.JSDocInfo jSDocInfo40 = node39.getJSDocInfo();
        // The following exception was thrown during execution in test generation
        try {
            node31.removeChild(node39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "STRING PARAM_LIST 49" + "'", str13, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(jSTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(jSDocInfo28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNull(jSDocInfo40);
    }

    @Test
    public void test07149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07149");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.CompilerInput compilerInput3 = jSModule1.getByName("FINEST");
        boolean boolean5 = jSModule1.removeByName("*global*");
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray11 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList12 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList12, jSTypeArray11);
        boolean boolean14 = jSTypeList9.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList12);
        com.google.javascript.rhino.Node node15 = jSTypeRegistry7.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        boolean boolean16 = node15.isVarArgs();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable17 = node15.siblings();
        com.google.javascript.jscomp.SourceFile sourceFile21 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int23 = sourceFile21.getLineOfOffset((int) (short) 1);
        int int25 = sourceFile21.getLineOfOffset(100);
        java.lang.String str26 = sourceFile21.getName();
        java.io.Reader reader27 = sourceFile21.getCodeReader();
        reader27.reset();
        com.google.javascript.jscomp.SourceFile sourceFile29 = com.google.javascript.jscomp.SourceFile.fromReader("PARAM_LIST", reader27);
        node15.setStaticSourceFile((com.google.javascript.rhino.jstype.StaticSourceFile) sourceFile29);
        jSModule1.addFirst(sourceFile29);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = sourceFile29.getLineOffset(300);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Expected line number between 1 and 1?Actual: 300");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(compilerInput3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(jSTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(nodeIterable17);
        org.junit.Assert.assertNotNull(sourceFile21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertNotNull(sourceFile29);
    }

    @Test
    public void test07150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07150");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("FINEST");
        stats1.gzSize = 300;
        int int4 = stats1.diff;
        stats1.gzSize = 42;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test07151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07151");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode8 = compilerOptions0.getLanguageIn();
        compilerOptions0.setRemoveUnusedClassProperties(false);
        boolean boolean11 = compilerOptions0.gatherCssNames;
        compilerOptions0.setGenerateExports(true);
        org.junit.Assert.assertTrue("'" + languageMode8 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode8.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test07152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07152");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        compilerOptions0.exportTestFunctions = false;
        compilerOptions0.setCheckControlStructures(false);
        compilerOptions0.checkSuspiciousCode = false;
        compilerOptions0.inlineFunctions = true;
        boolean boolean29 = compilerOptions0.jqueryPass;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test07153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07153");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        com.google.javascript.jscomp.CheckLevel checkLevel30 = compilerOptions0.checkMissingReturn;
        compilerOptions0.setCollapseObjectLiterals(true);
        compilerOptions0.setGroupVariableDeclarations(false);
        java.lang.String str35 = compilerOptions0.syntheticBlockEndMarker;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel30 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel30.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test07154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07154");
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType0 = com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN;
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean5 = node4.isTry();
        java.lang.String str6 = node4.toString();
        boolean boolean7 = node4.isIn();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship12 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType0, node4, node11);
        boolean boolean13 = node11.isOptionalArg();
        node11.setLineno(45);
        org.junit.Assert.assertTrue("'" + subclassType0 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN + "'", subclassType0.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN));
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "STRING PARAM_LIST 49" + "'", str6, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test07155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07155");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.setSyntheticBlockStartMarker("OFF");
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.jqueryPass = false;
        java.lang.String[] strArray14 = new java.lang.String[] { "PARAM_LIST\n", "/", "STRING PARAM_LIST 49", "hi!", "/" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        compilerOptions0.stripNameSuffixes = strSet15;
        com.google.javascript.rhino.ErrorReporter errorReporter18 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter18);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray20 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList21 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList21, jSTypeArray20);
        com.google.javascript.rhino.Node node23 = jSTypeRegistry19.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList21);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream24 = jSTypeList21.parallelStream();
        boolean boolean25 = strSet15.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList21);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<com.google.javascript.rhino.jstype.JSType> jSTypeItor27 = jSTypeList21.listIterator((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(jSTypeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(jSTypeStream24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test07156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07156");
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray0 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList1 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList1, jSTypeArray0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        boolean boolean6 = jSTypeList1.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        java.lang.Object[] objArray7 = jSTypeList1.toArray();
        com.google.javascript.jscomp.CustomPassExecutionTime customPassExecutionTime8 = com.google.javascript.jscomp.CustomPassExecutionTime.AFTER_OPTIMIZATION_LOOP;
        com.google.javascript.jscomp.CustomPassExecutionTime customPassExecutionTime9 = com.google.javascript.jscomp.CustomPassExecutionTime.BEFORE_CHECKS;
        com.google.javascript.jscomp.CustomPassExecutionTime[] customPassExecutionTimeArray10 = new com.google.javascript.jscomp.CustomPassExecutionTime[] { customPassExecutionTime8, customPassExecutionTime9 };
        com.google.javascript.jscomp.CustomPassExecutionTime[] customPassExecutionTimeArray11 = jSTypeList1.toArray(customPassExecutionTimeArray10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions12 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions12.crossModuleMethodMotion = true;
        compilerOptions12.syntheticBlockEndMarker = "hi!";
        compilerOptions12.removeUnusedClassProperties = false;
        compilerOptions12.setLineLengthThreshold(4095);
        compilerOptions12.setInputDelimiter("goog.exportSymbol");
        compilerOptions12.inputDelimiter = "WARNING: hi!";
        boolean boolean25 = jSTypeList1.contains((java.lang.Object) compilerOptions12);
        com.google.javascript.jscomp.CompilerOptions compilerOptions26 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions26.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy29 = compilerOptions26.propertyRenaming;
        java.lang.String[] strArray32 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        compilerOptions26.setStripTypes((java.util.Set<java.lang.String>) strSet33);
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode37 = null;
        compilerOptions36.setTracerMode(tracerMode37);
        boolean boolean39 = compilerOptions36.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel40 = compilerOptions36.sourceMapDetailLevel;
        compilerOptions36.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions43 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions43.crossModuleMethodMotion = true;
        compilerOptions43.optimizeParameters = true;
        compilerOptions43.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel51 = compilerOptions43.checkGlobalNamesLevel;
        compilerOptions36.setReportMissingOverride(checkLevel51);
        compilerOptions26.setCheckUnreachableCode(checkLevel51);
        compilerOptions26.syntheticBlockStartMarker = "*global*";
        com.google.javascript.jscomp.CheckLevel checkLevel56 = compilerOptions26.checkMissingReturn;
        boolean boolean57 = compilerOptions26.optimizeArgumentsArray;
        compilerOptions26.convertToDottedProperties = true;
        compilerOptions26.setRemoveUnusedPrototypeProperties(true);
        boolean boolean62 = jSTypeList1.contains((java.lang.Object) compilerOptions26);
        compilerOptions26.setMarkNoSideEffectCalls(true);
        org.junit.Assert.assertNotNull(jSTypeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertTrue("'" + customPassExecutionTime8 + "' != '" + com.google.javascript.jscomp.CustomPassExecutionTime.AFTER_OPTIMIZATION_LOOP + "'", customPassExecutionTime8.equals(com.google.javascript.jscomp.CustomPassExecutionTime.AFTER_OPTIMIZATION_LOOP));
        org.junit.Assert.assertTrue("'" + customPassExecutionTime9 + "' != '" + com.google.javascript.jscomp.CustomPassExecutionTime.BEFORE_CHECKS + "'", customPassExecutionTime9.equals(com.google.javascript.jscomp.CustomPassExecutionTime.BEFORE_CHECKS));
        org.junit.Assert.assertNotNull(customPassExecutionTimeArray10);
        org.junit.Assert.assertNotNull(customPassExecutionTimeArray11);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy29 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy29.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(detailLevel40);
        org.junit.Assert.assertTrue("'" + checkLevel51 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel51.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel56 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel56.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test07157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07157");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.setSyntheticBlockStartMarker("OFF");
        compilerOptions0.setChainCalls(false);
        compilerOptions0.setTweakToBooleanLiteral("Unversioned directory", false);
        boolean boolean11 = compilerOptions0.disambiguateProperties;
        compilerOptions0.setCheckControlStructures(false);
        java.lang.String str14 = compilerOptions0.syntheticBlockEndMarker;
        compilerOptions0.enableExternExports(true);
        compilerOptions0.setSummaryDetailLevel(0);
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test07158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07158");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(false, false);
        java.io.File file6 = file2.getParentFile();
        long long7 = file6.length();
        boolean boolean8 = file6.exists();
        boolean boolean10 = file6.setWritable(false);
        boolean boolean11 = file6.mkdir();
        java.nio.charset.Charset charset12 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str13 = charset12.toString();
        boolean boolean14 = charset12.canEncode();
        com.google.javascript.jscomp.JSSourceFile jSSourceFile15 = com.google.javascript.jscomp.JSSourceFile.fromFile(file6, charset12);
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), ":");
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 12288L + "'", long7 == 12288L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charset12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "US-ASCII" + "'", str13, "US-ASCII");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(jSSourceFile15);
    }

    @Test
    public void test07159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07159");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        boolean boolean10 = compilerOptions0.coalesceVariableNames;
        compilerOptions0.setOptimizeArgumentsArray(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions13.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions13.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode19 = null;
        compilerOptions13.setLanguageOut(languageMode19);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy21 = null;
        compilerOptions13.variableRenaming = variableRenamingPolicy21;
        com.google.javascript.jscomp.CheckLevel checkLevel23 = compilerOptions13.checkUnreachableCode;
        compilerOptions0.setCheckProvides(checkLevel23);
        boolean boolean25 = compilerOptions0.gatherCssNames;
        compilerOptions0.inlineGetters = false;
        compilerOptions0.ideMode = true;
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + checkLevel23 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel23.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test07160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07160");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        boolean boolean10 = compilerOptions0.inlineGetters;
        compilerOptions0.setFlowSensitiveInlineVariables(true);
        compilerOptions0.setCrossModuleCodeMotion(true);
        compilerOptions0.removeUnusedPrototypeProperties = false;
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test07161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07161");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler2 = new com.google.javascript.jscomp.Compiler();
        jSModule1.sortInputsByDeps(compiler2);
        java.lang.String str4 = jSModule1.getName();
        com.google.javascript.jscomp.SourceFile sourceFile7 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int9 = sourceFile7.getLineOfOffset((int) (short) 1);
        java.lang.String str10 = sourceFile7.getName();
        java.lang.String str11 = sourceFile7.getName();
        java.lang.String str12 = sourceFile7.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput14 = new com.google.javascript.jscomp.CompilerInput(sourceFile7, true);
        com.google.javascript.jscomp.CompilerInput compilerInput15 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput14);
        com.google.javascript.jscomp.JSModule jSModule16 = compilerInput14.getModule();
        jSModule1.add(compilerInput14);
        java.lang.String str19 = compilerInput14.getLine(100);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "STRING PARAM_LIST 49" + "'", str4, "STRING PARAM_LIST 49");
        org.junit.Assert.assertNotNull(sourceFile7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(jSModule16);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test07162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07162");
        com.google.javascript.rhino.Node node3 = new com.google.javascript.rhino.Node(0, 97, (int) (byte) 10);
    }

    @Test
    public void test07163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07163");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        boolean boolean10 = compilerOptions0.inlineGetters;
        compilerOptions0.setFlowSensitiveInlineVariables(true);
        compilerOptions0.setCrossModuleCodeMotion(true);
        compilerOptions0.setTightenTypes(false);
        boolean boolean17 = compilerOptions0.labelRenaming;
        compilerOptions0.inlineGetters = false;
        java.lang.Object obj20 = compilerOptions0.clone();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test07164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07164");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        node33.putIntProp((int) '/', 0);
        node33.setOptionalArg(false);
        boolean boolean42 = node33.isDec();
        com.google.javascript.rhino.Node node43 = node33.getFirstChild();
        boolean boolean44 = node33.isQuotedString();
        boolean boolean45 = node33.isCall();
        boolean boolean46 = node33.isCase();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test07165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07165");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        boolean boolean8 = compilerOptions0.crossModuleMethodMotion;
        compilerOptions0.setAcceptConstKeyword(true);
        compilerOptions0.setOutputCharset("DiagnosticGroup<java.io.IOException: OFF>");
        compilerOptions0.checkSuspiciousCode = false;
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test07166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07166");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec1 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("WARNING");
        com.google.javascript.rhino.Node node5 = com.google.javascript.rhino.Node.newNumber((double) 1645456110000L, 50, 2147483647);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray11 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList12 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList12, jSTypeArray11);
        boolean boolean14 = jSTypeList9.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList12);
        com.google.javascript.rhino.Node node15 = jSTypeRegistry7.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        jSTypeRegistry7.setLastGeneration(false);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable19 = jSTypeRegistry7.getEachReferenceTypeWithProperty("*global*.  at *global* line (unknown line) : (unknown column)");
        com.google.javascript.rhino.jstype.JSType jSType20 = assertionFunctionSpec1.getAssertedType(node5, jSTypeRegistry7);
        com.google.javascript.rhino.jstype.JSType jSType21 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions22 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str23 = compilerOptions22.syntheticBlockStartMarker;
        compilerOptions22.labelRenaming = true;
        boolean boolean26 = compilerOptions22.inlineLocalFunctions;
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions27.crossModuleMethodMotion = true;
        compilerOptions27.skipAllCompilerPasses();
        boolean boolean31 = compilerOptions27.flowSensitiveInlineVariables;
        java.lang.String[] strArray41 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        compilerOptions27.stripTypes = strSet42;
        compilerOptions22.setStripNameSuffixes((java.util.Set<java.lang.String>) strSet42);
        boolean boolean47 = strSet42.contains((java.lang.Object) "java.io.IOException: ");
        com.google.javascript.rhino.ErrorReporter errorReporter48 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry49 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray50 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList51 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList51, jSTypeArray50);
        com.google.javascript.rhino.Node node53 = jSTypeRegistry49.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList51);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream54 = jSTypeList51.parallelStream();
        com.google.javascript.jscomp.CompilerOptions compilerOptions55 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean56 = compilerOptions55.moveFunctionDeclarations;
        compilerOptions55.crossModuleCodeMotion = true;
        compilerOptions55.setManageClosureDependencies(false);
        boolean boolean61 = compilerOptions55.inlineLocalFunctions;
        compilerOptions55.disableRuntimeTypeCheck();
        boolean boolean63 = jSTypeList51.equals((java.lang.Object) compilerOptions55);
        boolean boolean64 = strSet42.removeAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList51);
        com.google.javascript.rhino.jstype.FunctionType functionType65 = jSTypeRegistry7.createFunctionTypeWithVarArgs(jSType21, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList51);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(jSTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(objectTypeIterable19);
        org.junit.Assert.assertNull(jSType20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jSTypeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(jSTypeStream54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(functionType65);
    }

    @Test
    public void test07167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07167");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        boolean boolean75 = node74.hasChildren();
        node74.setOptionalArg(false);
        com.google.javascript.rhino.Node node78 = node74.getLastChild();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable79 = node78.siblings();
        java.util.Spliterator<com.google.javascript.rhino.Node> nodeSpliterator80 = nodeIterable79.spliterator();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertNotNull(nodeIterable79);
        org.junit.Assert.assertNotNull(nodeSpliterator80);
    }

    @Test
    public void test07168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07168");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray13 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList14 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14, jSTypeArray13);
        boolean boolean16 = jSTypeList11.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode18 = null;
        compilerOptions17.setTracerMode(tracerMode18);
        boolean boolean20 = compilerOptions17.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel21 = compilerOptions17.sourceMapDetailLevel;
        compilerOptions17.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions24.crossModuleMethodMotion = true;
        compilerOptions24.optimizeParameters = true;
        compilerOptions24.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel32 = compilerOptions24.checkGlobalNamesLevel;
        compilerOptions17.setReportMissingOverride(checkLevel32);
        java.util.Set<java.lang.String> strSet34 = compilerOptions17.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions35 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode36 = null;
        compilerOptions35.setTracerMode(tracerMode36);
        boolean boolean38 = compilerOptions35.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel39 = compilerOptions35.sourceMapDetailLevel;
        compilerOptions35.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet42 = compilerOptions35.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile44 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput46 = new com.google.javascript.jscomp.CompilerInput(sourceFile44, true);
        com.google.javascript.rhino.InputId inputId48 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput50 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput46, inputId48, true);
        java.lang.String str51 = compilerInput50.toString();
        boolean boolean52 = strSet42.contains((java.lang.Object) compilerInput50);
        compilerOptions17.stripTypes = strSet42;
        compilerOptions17.setMarkAsCompiled(true);
        java.util.Set<java.lang.String> strSet56 = compilerOptions17.stripTypePrefixes;
        boolean boolean57 = jSTypeList11.remove((java.lang.Object) strSet56);
        com.google.javascript.jscomp.CompilerOptions compilerOptions58 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions58.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode61 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions58.setTracer(tracerMode61);
        com.google.javascript.jscomp.CompilerOptions.Reach reach63 = com.google.javascript.jscomp.CompilerOptions.Reach.NONE;
        compilerOptions58.setInlineVariables(reach63);
        boolean boolean65 = strSet56.remove((java.lang.Object) reach63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray69 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList70 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70, jSTypeArray69);
        boolean boolean72 = jSTypeList67.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        java.lang.Object[] objArray73 = jSTypeList67.toArray();
        boolean boolean74 = strSet56.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        boolean boolean75 = jSTypeList67.isEmpty();
        boolean boolean76 = jSTypeList3.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream77 = jSTypeList67.parallelStream();
        java.util.ListIterator<com.google.javascript.rhino.jstype.JSType> jSTypeItor79 = jSTypeList67.listIterator((int) (short) 0);
        java.util.ListIterator<com.google.javascript.rhino.jstype.JSType> jSTypeItor80 = jSTypeList67.listIterator();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(jSTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(detailLevel21);
        org.junit.Assert.assertTrue("'" + checkLevel32 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel32.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(detailLevel39);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "*global*" + "'", str51, "*global*");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + tracerMode61 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode61.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + reach63 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.NONE + "'", reach63.equals(com.google.javascript.jscomp.CompilerOptions.Reach.NONE));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(jSTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(jSTypeStream77);
        org.junit.Assert.assertNotNull(jSTypeItor79);
        org.junit.Assert.assertNotNull(jSTypeItor80);
    }

    @Test
    public void test07169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07169");
        com.google.javascript.jscomp.SourceFile.Builder builder0 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile4 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int6 = sourceFile4.getLineOfOffset((int) (short) 1);
        java.io.Reader reader7 = sourceFile4.getCodeReader();
        int int8 = reader7.read();
        com.google.javascript.jscomp.SourceFile sourceFile9 = builder0.buildFromReader("*global*", reader7);
        java.nio.charset.Charset charset10 = null;
        com.google.javascript.jscomp.SourceFile.Builder builder11 = builder0.withCharset(charset10);
        com.google.javascript.jscomp.SourceFile sourceFile13 = builder11.buildFromFile("/");
        java.nio.charset.Charset charset15 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str16 = charset15.name();
        com.google.javascript.jscomp.SourceFile sourceFile17 = com.google.javascript.jscomp.SourceFile.fromFile("/experiment/:", charset15);
        com.google.javascript.jscomp.SourceFile.Builder builder18 = builder11.withCharset(charset15);
        java.io.File file21 = new java.io.File(":", "hi!");
        boolean boolean24 = file21.setExecutable(false, false);
        boolean boolean27 = file21.setExecutable(false, true);
        java.io.File file28 = file21.getParentFile();
        java.nio.charset.Charset charset30 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str31 = charset30.name();
        java.lang.String str32 = charset30.name();
        java.nio.charset.Charset charset33 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str34 = charset33.toString();
        boolean boolean35 = charset30.contains(charset33);
        com.google.javascript.jscomp.SourceFile sourceFile36 = com.google.javascript.jscomp.SourceFile.fromFile("/", charset33);
        com.google.javascript.jscomp.SourceFile sourceFile37 = com.google.javascript.jscomp.SourceFile.fromFile(file28, charset33);
        long long38 = file28.length();
        com.google.javascript.jscomp.SourceFile sourceFile39 = builder11.buildFromFile(file28);
        java.nio.charset.Charset charset40 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str41 = charset40.toString();
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        com.google.javascript.rhino.ErrorReporter errorReporter49 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry50 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter49);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray51 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList52 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList52, jSTypeArray51);
        com.google.javascript.rhino.Node node54 = jSTypeRegistry50.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList52);
        node48.addChildrenToBack(node54);
        com.google.javascript.rhino.ErrorReporter errorReporter56 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry57 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter56);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray58 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList59 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList59, jSTypeArray58);
        com.google.javascript.rhino.Node node61 = jSTypeRegistry57.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList59);
        boolean boolean62 = node61.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList66 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList66, jSTypeArray65);
        com.google.javascript.rhino.Node node68 = jSTypeRegistry64.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList66);
        boolean boolean69 = node68.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray72 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList73 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList73, jSTypeArray72);
        com.google.javascript.rhino.Node node75 = jSTypeRegistry71.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList73);
        com.google.javascript.rhino.Node node78 = new com.google.javascript.rhino.Node((int) (short) 0, node48, node61, node68, node75, 0, 49);
        node75.putIntProp((int) '/', 0);
        node75.setOptionalArg(false);
        boolean boolean84 = charset40.equals((java.lang.Object) false);
        java.nio.charset.CharsetEncoder charsetEncoder85 = charset40.newEncoder();
        java.util.Locale locale86 = null;
        java.lang.String str87 = charset40.displayName(locale86);
        com.google.javascript.jscomp.JSSourceFile jSSourceFile88 = com.google.javascript.jscomp.JSSourceFile.fromFile(file28, charset40);
        org.junit.Assert.assertNotNull(sourceFile4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(sourceFile9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(sourceFile13);
        org.junit.Assert.assertNotNull(charset15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "US-ASCII" + "'", str16, "US-ASCII");
        org.junit.Assert.assertNotNull(sourceFile17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertEquals(file21.getParent(), ":");
        org.junit.Assert.assertEquals(file21.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertNull("file28.getParent() == null", file28.getParent());
        org.junit.Assert.assertEquals(file28.toString(), ":");
        org.junit.Assert.assertNotNull(charset30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "US-ASCII" + "'", str31, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "US-ASCII" + "'", str32, "US-ASCII");
        org.junit.Assert.assertNotNull(charset33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "US-ASCII" + "'", str34, "US-ASCII");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(sourceFile36);
        org.junit.Assert.assertNotNull(sourceFile37);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 12288L + "'", long38 == 12288L);
        org.junit.Assert.assertNotNull(sourceFile39);
        org.junit.Assert.assertNotNull(charset40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "US-ASCII" + "'", str41, "US-ASCII");
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(jSTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(jSTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(jSTypeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(charsetEncoder85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "US-ASCII" + "'", str87, "US-ASCII");
        org.junit.Assert.assertNotNull(jSSourceFile88);
    }

    @Test
    public void test07170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07170");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("PARAM_LIST [synthetic: 1]\n");
    }

    @Test
    public void test07171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07171");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet7 = compilerOptions0.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile9 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput11 = new com.google.javascript.jscomp.CompilerInput(sourceFile9, true);
        com.google.javascript.rhino.InputId inputId13 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput15 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput11, inputId13, true);
        java.lang.String str16 = compilerInput15.toString();
        boolean boolean17 = strSet7.contains((java.lang.Object) compilerInput15);
        java.lang.Object[] objArray18 = strSet7.toArray();
        java.lang.Object obj19 = null;
        boolean boolean20 = strSet7.contains(obj19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        boolean boolean27 = jSTypeList22.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        boolean boolean34 = jSTypeList29.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        boolean boolean35 = jSTypeList22.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        boolean boolean36 = jSTypeList22.isEmpty();
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream37 = jSTypeList22.stream();
        boolean boolean38 = strSet7.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        java.util.Spliterator<java.lang.String> strSpliterator39 = strSet7.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "*global*" + "'", str16, "*global*");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(jSTypeStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strSpliterator39);
    }

    @Test
    public void test07172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07172");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        compilerOptions0.prettyPrint = false;
        compilerOptions0.setDevirtualizePrototypeMethods(true);
        compilerOptions0.exportTestFunctions = true;
        compilerOptions0.setInferTypes(true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07173");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        boolean boolean10 = compilerOptions0.coalesceVariableNames;
        compilerOptions0.setOptimizeArgumentsArray(true);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode13 = com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT5_STRICT;
        compilerOptions0.setLanguageOut(languageMode13);
        compilerOptions0.setIgnoreCajaProperties(false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + languageMode13 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT5_STRICT + "'", languageMode13.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT5_STRICT));
    }

    @Test
    public void test07174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07174");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(false, false);
        java.io.File file6 = file2.getParentFile();
        long long7 = file6.getUsableSpace();
        boolean boolean8 = file6.mkdirs();
        java.nio.charset.Charset charset9 = null;
        com.google.javascript.jscomp.JSSourceFile jSSourceFile10 = com.google.javascript.jscomp.JSSourceFile.fromFile(file6, charset9);
        java.io.File file13 = new java.io.File(":", "hi!");
        boolean boolean16 = file13.setExecutable(true, false);
        boolean boolean18 = file13.setWritable(false);
        boolean boolean19 = file13.canWrite();
        java.net.URI uRI20 = file13.toURI();
        boolean boolean21 = file6.renameTo(file13);
        java.io.File file22 = file6.getCanonicalFile();
        java.io.File file23 = file6.getParentFile();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI24 = file23.toURI();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), ":");
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 280491212800L + "'", long7 == 280491212800L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(jSSourceFile10);
        org.junit.Assert.assertEquals(file13.getParent(), ":");
        org.junit.Assert.assertEquals(file13.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(uRI20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(file22);
// flaky:         org.junit.Assert.assertEquals(file22.getParent(), "/experiment");
// flaky:         org.junit.Assert.assertEquals(file22.toString(), "/experiment/:");
        org.junit.Assert.assertNull(file23);
    }

    @Test
    public void test07175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07175");
        com.google.javascript.jscomp.SourceFile.Builder builder1 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile5 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int7 = sourceFile5.getLineOfOffset((int) (short) 1);
        java.io.Reader reader8 = sourceFile5.getCodeReader();
        int int9 = reader8.read();
        com.google.javascript.jscomp.SourceFile sourceFile10 = builder1.buildFromReader("*global*", reader8);
        java.nio.charset.Charset charset11 = null;
        com.google.javascript.jscomp.SourceFile.Builder builder12 = builder1.withCharset(charset11);
        java.io.File file15 = new java.io.File(":", "hi!");
        boolean boolean18 = file15.setExecutable(true, false);
        long long19 = file15.lastModified();
        boolean boolean20 = file15.mkdir();
        com.google.javascript.jscomp.SourceFile sourceFile21 = builder1.buildFromFile(file15);
        com.google.javascript.jscomp.SourceFile.Builder builder23 = builder1.withOriginalPath("java.io.IOException: OFF");
        java.nio.charset.Charset charset24 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str25 = charset24.name();
        java.lang.String str26 = charset24.name();
        com.google.javascript.jscomp.SourceFile.Builder builder27 = builder1.withCharset(charset24);
        java.nio.charset.CharsetDecoder charsetDecoder28 = charset24.newDecoder();
        java.util.Set<java.lang.String> strSet29 = charset24.aliases();
        com.google.javascript.jscomp.JSSourceFile jSSourceFile30 = com.google.javascript.jscomp.JSSourceFile.fromFile("PARAM_LIST\n    PARAM_LIST\n", charset24);
        org.junit.Assert.assertNotNull(sourceFile5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(sourceFile10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals(file15.getParent(), ":");
        org.junit.Assert.assertEquals(file15.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1645456538000L + "'", long19 == 1645456538000L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(sourceFile21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(charset24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "US-ASCII" + "'", str25, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "US-ASCII" + "'", str26, "US-ASCII");
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(charsetDecoder28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(jSSourceFile30);
    }

    @Test
    public void test07176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07176");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable7 = jSTypeRegistry1.getTypesWithProperty("");
        jSTypeRegistry1.resetForTypeCheck();
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9, true);
        com.google.javascript.rhino.jstype.ObjectType objectType12 = jSTypeRegistry11.createAnonymousObjectType();
        java.util.Collection<com.google.javascript.rhino.jstype.FunctionType> functionTypeCollection13 = jSTypeRegistry1.getDirectImplementors(objectType12);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable15 = jSTypeRegistry1.getTypesWithProperty("PARAM_LIST [synthetic: 1]\n");
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeIterable7);
        org.junit.Assert.assertNotNull(objectType12);
        org.junit.Assert.assertNotNull(functionTypeCollection13);
        org.junit.Assert.assertNotNull(jSTypeIterable15);
    }

    @Test
    public void test07177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07177");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        compilerOptions0.setSummaryDetailLevel(49);
        compilerOptions0.setRemoveTryCatchFinally(true);
        compilerOptions0.setComputeFunctionSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel12 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions9.setSourceMapDetailLevel(detailLevel12);
        compilerOptions0.sourceMapDetailLevel = detailLevel12;
        com.google.javascript.jscomp.CompilerOptions compilerOptions15 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode16 = null;
        compilerOptions15.setTracerMode(tracerMode16);
        boolean boolean18 = compilerOptions15.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel19 = compilerOptions15.sourceMapDetailLevel;
        compilerOptions15.setColorizeErrorOutput(true);
        compilerOptions15.generatePseudoNames = true;
        compilerOptions15.setCheckControlStructures(false);
        com.google.javascript.jscomp.AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy26 = com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF;
        compilerOptions15.anonymousFunctionNaming = anonymousFunctionNamingPolicy26;
        compilerOptions0.setAnonymousFunctionNaming(anonymousFunctionNamingPolicy26);
        boolean boolean29 = compilerOptions0.deadAssignmentElimination;
        org.junit.Assert.assertNotNull(detailLevel12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(detailLevel19);
        org.junit.Assert.assertTrue("'" + anonymousFunctionNamingPolicy26 + "' != '" + com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF + "'", anonymousFunctionNamingPolicy26.equals(com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test07178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07178");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.syntheticBlockEndMarker = "hi!";
        compilerOptions0.removeUnusedClassProperties = false;
        compilerOptions0.setLineLengthThreshold(4095);
        com.google.javascript.jscomp.ErrorFormat errorFormat9 = compilerOptions0.errorFormat;
        compilerOptions0.setCrossModuleMethodMotion(true);
        compilerOptions0.preferLineBreakAtEndOfFile = true;
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.enableRuntimeTypeCheck("hi!");
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode19 = null;
        compilerOptions18.setTracerMode(tracerMode19);
        boolean boolean21 = compilerOptions18.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel22 = compilerOptions18.sourceMapDetailLevel;
        compilerOptions18.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet25 = compilerOptions18.stripNameSuffixes;
        compilerOptions0.setStripNameSuffixes(strSet25);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray27 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList28 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList28, jSTypeArray27);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        boolean boolean33 = jSTypeList28.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        java.lang.Object[] objArray34 = jSTypeList28.toArray();
        boolean boolean35 = strSet25.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList28);
        jSTypeList28.clear();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.JSType jSType38 = jSTypeList28.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorFormat9);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(detailLevel22);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(jSTypeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test07179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07179");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        boolean boolean4 = node3.isContinue();
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry6 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5);
        jSTypeRegistry6.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSType jSType8 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] { jSType8 };
        com.google.javascript.rhino.Node node10 = jSTypeRegistry6.createParameters(jSTypeArray9);
        int int11 = node3.getIndexOfChild(node10);
        boolean boolean12 = node3.isDelProp();
        java.lang.Object obj14 = null;
        node3.putProp((int) '#', obj14);
        boolean boolean16 = node3.isNoSideEffectsCall();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test07180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07180");
        com.google.javascript.jscomp.CheckLevel checkLevel1 = null;
        com.google.javascript.jscomp.DiagnosticType diagnosticType3 = com.google.javascript.jscomp.DiagnosticType.make("*global*", checkLevel1, "");
        java.lang.String str4 = diagnosticType3.key;
        java.lang.String str5 = diagnosticType3.key;
        org.junit.Assert.assertNotNull(diagnosticType3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "*global*" + "'", str4, "*global*");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "*global*" + "'", str5, "*global*");
    }

    @Test
    public void test07181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07181");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.setSyntheticBlockStartMarker("OFF");
        compilerOptions0.setChainCalls(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.setProtectHiddenSideEffects(true);
        compilerOptions8.setInputDelimiter("PARAM_LIST\n");
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap15 = null;
        compilerOptions8.cssRenamingMap = cssRenamingMap15;
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode18 = null;
        compilerOptions17.setTracerMode(tracerMode18);
        boolean boolean20 = compilerOptions17.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel21 = compilerOptions17.sourceMapDetailLevel;
        compilerOptions17.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet24 = compilerOptions17.stripNameSuffixes;
        strSet24.clear();
        com.google.javascript.jscomp.SourceFile sourceFile28 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int30 = sourceFile28.getLineOfOffset((int) (short) 1);
        java.lang.String str31 = sourceFile28.getName();
        java.lang.String str32 = sourceFile28.getName();
        java.lang.String str33 = sourceFile28.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput35 = new com.google.javascript.jscomp.CompilerInput(sourceFile28, true);
        com.google.javascript.jscomp.SourceAst sourceAst36 = compilerInput35.getAst();
        boolean boolean37 = strSet24.remove((java.lang.Object) sourceAst36);
        compilerOptions8.setExtraAnnotationNames(strSet24);
        compilerOptions0.setReplaceStringsReservedStrings(strSet24);
        compilerOptions0.setFoldConstants(true);
        java.lang.String str42 = compilerOptions0.aliasStringsBlacklist;
        compilerOptions0.setPrettyPrint(true);
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(detailLevel21);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(sourceFile28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(sourceAst36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
    }

    @Test
    public void test07182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07182");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions0.checkGlobalNamesLevel;
        compilerOptions0.setCheckMissingGetCssNameBlacklist("");
        compilerOptions0.deadAssignmentElimination = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions13.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions13.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode19 = null;
        compilerOptions13.setLanguageOut(languageMode19);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy21 = null;
        compilerOptions13.variableRenaming = variableRenamingPolicy21;
        com.google.javascript.jscomp.CheckLevel checkLevel23 = compilerOptions13.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode24 = compilerOptions13.getLanguageOut();
        boolean boolean25 = compilerOptions13.moveFunctionDeclarations;
        byte[] byteArray26 = null;
        compilerOptions13.inputPropertyMapSerialized = byteArray26;
        com.google.javascript.jscomp.DependencyOptions dependencyOptions28 = new com.google.javascript.jscomp.DependencyOptions();
        com.google.javascript.jscomp.DependencyOptions dependencyOptions30 = dependencyOptions28.setDependencyPruning(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions32 = dependencyOptions30.setMoocherDropping(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions34 = dependencyOptions32.setDependencySorting(false);
        compilerOptions13.setDependencyOptions(dependencyOptions34);
        compilerOptions0.setDependencyOptions(dependencyOptions34);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions38 = dependencyOptions34.setDependencySorting(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions40 = dependencyOptions38.setMoocherDropping(true);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions42 = dependencyOptions38.setDependencySorting(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions44 = dependencyOptions38.setDependencyPruning(false);
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel23 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel23.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(languageMode24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(dependencyOptions30);
        org.junit.Assert.assertNotNull(dependencyOptions32);
        org.junit.Assert.assertNotNull(dependencyOptions34);
        org.junit.Assert.assertNotNull(dependencyOptions38);
        org.junit.Assert.assertNotNull(dependencyOptions40);
        org.junit.Assert.assertNotNull(dependencyOptions42);
        org.junit.Assert.assertNotNull(dependencyOptions44);
    }

    @Test
    public void test07183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07183");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        compilerOptions0.inlineFunctions = true;
        compilerOptions0.setCommonJSModulePathPrefix(":");
        compilerOptions0.setCrossModuleCodeMotion(true);
        compilerOptions0.disableRuntimeTypeCheck();
        boolean boolean12 = compilerOptions0.removeUnusedLocalVars;
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions13.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions13.setRuntimeTypeCheckLogFunction("FINEST");
        compilerOptions13.renamePrefixNamespace = ":/hi!";
        compilerOptions13.setMarkAsCompiled(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions22 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean23 = compilerOptions22.moveFunctionDeclarations;
        compilerOptions22.crossModuleCodeMotion = true;
        compilerOptions22.checkSymbols = true;
        compilerOptions22.setExtractPrototypeMemberDeclarations(true);
        boolean boolean30 = compilerOptions22.checkSuspiciousCode;
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str32 = compilerOptions31.syntheticBlockStartMarker;
        compilerOptions31.labelRenaming = true;
        boolean boolean35 = compilerOptions31.inlineLocalFunctions;
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions36.crossModuleMethodMotion = true;
        compilerOptions36.skipAllCompilerPasses();
        boolean boolean40 = compilerOptions36.flowSensitiveInlineVariables;
        java.lang.String[] strArray50 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet51 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        compilerOptions36.stripTypes = strSet51;
        compilerOptions31.setStripNameSuffixes((java.util.Set<java.lang.String>) strSet51);
        compilerOptions22.setExtraAnnotationNames((java.util.Set<java.lang.String>) strSet51);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        compilerOptions22.setTweakReplacements(strMap56);
        compilerOptions22.setInferTypes(true);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode60 = com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY;
        compilerOptions22.setTracer(tracerMode60);
        compilerOptions13.setTracerMode(tracerMode60);
        compilerOptions0.setTracer(tracerMode60);
        compilerOptions0.setExternExportsPath("");
        compilerOptions0.setSyntheticBlockStartMarker("FINEST");
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + tracerMode60 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY + "'", tracerMode60.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY));
    }

    @Test
    public void test07184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07184");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        com.google.javascript.jscomp.CheckLevel checkLevel10 = compilerOptions0.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode11 = compilerOptions0.getLanguageOut();
        boolean boolean12 = compilerOptions0.moveFunctionDeclarations;
        byte[] byteArray13 = null;
        compilerOptions0.inputPropertyMapSerialized = byteArray13;
        compilerOptions0.locale = ":/hi!";
        boolean boolean17 = compilerOptions0.inlineLocalFunctions;
        byte[] byteArray18 = compilerOptions0.inputPropertyMapSerialized;
        com.google.javascript.jscomp.DependencyOptions dependencyOptions19 = new com.google.javascript.jscomp.DependencyOptions();
        com.google.javascript.jscomp.DependencyOptions dependencyOptions21 = dependencyOptions19.setDependencyPruning(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions23 = dependencyOptions21.setMoocherDropping(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions25 = dependencyOptions23.setDependencySorting(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions27 = dependencyOptions23.setDependencyPruning(true);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions29 = dependencyOptions23.setDependencyPruning(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions30 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode31 = null;
        compilerOptions30.setTracerMode(tracerMode31);
        boolean boolean33 = compilerOptions30.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel34 = compilerOptions30.sourceMapDetailLevel;
        compilerOptions30.setColorizeErrorOutput(true);
        compilerOptions30.generatePseudoNames = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy39 = com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED;
        compilerOptions30.setVariableRenaming(variableRenamingPolicy39);
        compilerOptions30.setColorizeErrorOutput(true);
        compilerOptions30.ambiguateProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions45 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str46 = compilerOptions45.syntheticBlockStartMarker;
        compilerOptions45.labelRenaming = true;
        boolean boolean49 = compilerOptions45.inlineLocalFunctions;
        com.google.javascript.jscomp.CompilerOptions compilerOptions50 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions50.crossModuleMethodMotion = true;
        compilerOptions50.skipAllCompilerPasses();
        boolean boolean54 = compilerOptions50.flowSensitiveInlineVariables;
        java.lang.String[] strArray64 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet65 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet65, strArray64);
        compilerOptions50.stripTypes = strSet65;
        compilerOptions45.setStripNameSuffixes((java.util.Set<java.lang.String>) strSet65);
        java.util.Spliterator<java.lang.String> strSpliterator69 = strSet65.spliterator();
        compilerOptions30.stripNameSuffixes = strSet65;
        com.google.javascript.jscomp.DependencyOptions dependencyOptions71 = dependencyOptions23.setEntryPoints((java.util.Collection<java.lang.String>) strSet65);
        compilerOptions0.stripNameSuffixes = strSet65;
        org.junit.Assert.assertTrue("'" + checkLevel10 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel10.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(languageMode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(dependencyOptions21);
        org.junit.Assert.assertNotNull(dependencyOptions23);
        org.junit.Assert.assertNotNull(dependencyOptions25);
        org.junit.Assert.assertNotNull(dependencyOptions27);
        org.junit.Assert.assertNotNull(dependencyOptions29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(detailLevel34);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy39 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED + "'", variableRenamingPolicy39.equals(com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED));
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strSpliterator69);
        org.junit.Assert.assertNotNull(dependencyOptions71);
    }

    @Test
    public void test07185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07185");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        boolean boolean10 = compilerOptions0.inlineGetters;
        compilerOptions0.setFlowSensitiveInlineVariables(true);
        compilerOptions0.setLooseTypes(false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test07186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07186");
        com.google.javascript.jscomp.SourceFile.Builder builder2 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile6 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int8 = sourceFile6.getLineOfOffset((int) (short) 1);
        java.io.Reader reader9 = sourceFile6.getCodeReader();
        int int10 = reader9.read();
        com.google.javascript.jscomp.SourceFile sourceFile11 = builder2.buildFromReader("*global*", reader9);
        reader9.reset();
        boolean boolean13 = reader9.markSupported();
        long long15 = reader9.skip(1645456104000L);
        com.google.javascript.jscomp.SourceFile sourceFile16 = com.google.javascript.jscomp.SourceFile.fromReader("java.io.IOException: OFF", reader9);
        com.google.javascript.jscomp.SourceFile sourceFile17 = com.google.javascript.jscomp.SourceFile.fromReader("*global*", reader9);
        reader9.close();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = reader9.read();
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Stream closed");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(sourceFile6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(sourceFile11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(sourceFile16);
        org.junit.Assert.assertNotNull(sourceFile17);
    }

    @Test
    public void test07187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07187");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int4 = sourceFile2.getLineOfOffset((int) (short) 1);
        java.lang.String str5 = sourceFile2.getName();
        java.lang.String str6 = sourceFile2.getName();
        java.lang.String str7 = sourceFile2.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput9 = new com.google.javascript.jscomp.CompilerInput(sourceFile2, true);
        com.google.javascript.jscomp.CompilerInput compilerInput10 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput9);
        com.google.javascript.jscomp.JSModule jSModule11 = compilerInput9.getModule();
        com.google.javascript.jscomp.JSModule jSModule13 = new com.google.javascript.jscomp.JSModule("/");
        jSModule13.setDepth(53);
        java.lang.String str16 = jSModule13.getName();
        compilerInput9.setModule(jSModule13);
        java.util.Set<com.google.javascript.jscomp.JSModule> jSModuleSet18 = jSModule13.getThisAndAllDependencies();
        com.google.javascript.jscomp.CompilerInput compilerInput20 = jSModule13.getByName("goog.exportProperty");
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(jSModule11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/" + "'", str16, "/");
        org.junit.Assert.assertNotNull(jSModuleSet18);
        org.junit.Assert.assertNull(compilerInput20);
    }

    @Test
    public void test07188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07188");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        strMap4.clear();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        java.lang.String str12 = node11.getQualifiedName();
        com.google.javascript.rhino.Node node13 = node11.getLastChild();
        com.google.javascript.rhino.Node node14 = strMap4.replace("FINEST", node11);
        java.nio.charset.Charset charset15 = java.nio.charset.Charset.defaultCharset();
        java.nio.charset.CharsetDecoder charsetDecoder16 = charset15.newDecoder();
        java.lang.String str17 = charset15.name();
        com.google.javascript.rhino.Node node18 = strMap4.get((java.lang.Object) str17);
        com.google.javascript.jscomp.CompilerOptions compilerOptions19 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel20 = compilerOptions19.checkRequires;
        compilerOptions19.setRewriteNewDateGoogNow(true);
        compilerOptions19.setSyntheticBlockStartMarker("OFF");
        compilerOptions19.setChainCalls(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions27.crossModuleMethodMotion = true;
        compilerOptions27.setProtectHiddenSideEffects(true);
        compilerOptions27.setInputDelimiter("PARAM_LIST\n");
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap34 = null;
        compilerOptions27.cssRenamingMap = cssRenamingMap34;
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode37 = null;
        compilerOptions36.setTracerMode(tracerMode37);
        boolean boolean39 = compilerOptions36.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel40 = compilerOptions36.sourceMapDetailLevel;
        compilerOptions36.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet43 = compilerOptions36.stripNameSuffixes;
        strSet43.clear();
        com.google.javascript.jscomp.SourceFile sourceFile47 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int49 = sourceFile47.getLineOfOffset((int) (short) 1);
        java.lang.String str50 = sourceFile47.getName();
        java.lang.String str51 = sourceFile47.getName();
        java.lang.String str52 = sourceFile47.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput54 = new com.google.javascript.jscomp.CompilerInput(sourceFile47, true);
        com.google.javascript.jscomp.SourceAst sourceAst55 = compilerInput54.getAst();
        boolean boolean56 = strSet43.remove((java.lang.Object) sourceAst55);
        compilerOptions27.setExtraAnnotationNames(strSet43);
        compilerOptions19.setReplaceStringsReservedStrings(strSet43);
        com.google.javascript.rhino.Node node59 = strMap4.get((java.lang.Object) strSet43);
        int int60 = strSet43.size();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(charset15);
        org.junit.Assert.assertNotNull(charsetDecoder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "US-ASCII" + "'", str17, "US-ASCII");
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + checkLevel20 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel20.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(detailLevel40);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(sourceFile47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(sourceAst55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test07189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07189");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("Exceeded max number of code motion iterations: {0}", jSTypeNative1);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean12 = node11.isTry();
        java.lang.String str13 = node11.toString();
        boolean boolean14 = node7.hasChild(node11);
        boolean boolean15 = node7.isFromExterns();
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray18 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList19 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList19, jSTypeArray18);
        com.google.javascript.rhino.Node node21 = jSTypeRegistry17.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList19);
        boolean boolean22 = node21.isIn();
        boolean boolean23 = node21.isVoid();
        node21.setOptionalArg(true);
        node21.setVarArgs(true);
        com.google.javascript.rhino.JSDocInfo jSDocInfo28 = node21.getJSDocInfo();
        com.google.javascript.rhino.Node node29 = new com.google.javascript.rhino.Node(42, node7, node21);
        com.google.javascript.rhino.Node node30 = assertionFunctionSpec2.getAssertedParam(node29);
        com.google.javascript.rhino.Node node31 = node30.getFirstChild();
        com.google.javascript.rhino.Node node36 = com.google.javascript.rhino.Node.newString((int) (short) 0, "TYPEOF : 44\n", 37, (int) '4');
        com.google.javascript.rhino.Node node37 = node31.clonePropsFrom(node36);
        com.google.javascript.jscomp.CompilerOptions compilerOptions39 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions39.crossModuleMethodMotion = true;
        compilerOptions39.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy44 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions45 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions45.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy48 = compilerOptions45.propertyRenaming;
        compilerOptions39.setRenamingPolicy(variableRenamingPolicy44, propertyRenamingPolicy48);
        boolean boolean50 = compilerOptions39.checkControlStructures;
        compilerOptions39.syntheticBlockEndMarker = "FINEST";
        compilerOptions39.setOptimizeParameters(true);
        com.google.javascript.jscomp.CompilerOptions.AliasTransformationHandler aliasTransformationHandler55 = compilerOptions39.getAliasTransformationHandler();
        node36.putProp(50, (java.lang.Object) compilerOptions39);
        com.google.javascript.rhino.ErrorReporter errorReporter57 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry58 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter57);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray59 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList60 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList60, jSTypeArray59);
        com.google.javascript.rhino.Node node62 = jSTypeRegistry58.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList60);
        boolean boolean63 = node62.isIn();
        boolean boolean64 = node62.isGetElem();
        java.lang.String str68 = node62.toString(true, false, false);
        com.google.javascript.rhino.Node node70 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node71 = node62.useSourceInfoIfMissingFromForTree(node70);
        boolean boolean72 = node62.isTrue();
        node36.addChildToBack(node62);
        boolean boolean74 = node62.isTrue();
        com.google.javascript.rhino.Node node75 = node62.cloneNode();
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "STRING PARAM_LIST 49" + "'", str13, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(jSTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(jSDocInfo28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy48 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy48.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(aliasTransformationHandler55);
        org.junit.Assert.assertNotNull(jSTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "PARAM_LIST" + "'", str68, "PARAM_LIST");
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(node75);
    }

    @Test
    public void test07190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07190");
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray4 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList5 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList5, jSTypeArray4);
        com.google.javascript.rhino.Node node7 = jSTypeRegistry3.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList5);
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.Node node13 = jSTypeRegistry9.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList11);
        node7.addChildrenToBack(node13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray17 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList18 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList18, jSTypeArray17);
        com.google.javascript.rhino.Node node20 = jSTypeRegistry16.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList18);
        boolean boolean21 = node20.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.Node node27 = jSTypeRegistry23.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = node27.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        com.google.javascript.rhino.Node node34 = jSTypeRegistry30.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        com.google.javascript.rhino.Node node37 = new com.google.javascript.rhino.Node((int) (short) 0, node7, node20, node27, node34, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.Node node44 = jSTypeRegistry40.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        node44.addChildrenToBack(node50);
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList55 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55, jSTypeArray54);
        com.google.javascript.rhino.Node node57 = jSTypeRegistry53.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList55);
        boolean boolean58 = node57.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry60 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        com.google.javascript.rhino.Node node64 = jSTypeRegistry60.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        boolean boolean65 = node64.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter66 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry67 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter66);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.Node node71 = jSTypeRegistry67.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        com.google.javascript.rhino.Node node74 = new com.google.javascript.rhino.Node((int) (short) 0, node44, node57, node64, node71, 0, 49);
        com.google.javascript.rhino.Node node75 = node37.useSourceInfoFrom(node57);
        com.google.javascript.jscomp.CheckLevel checkLevel77 = null;
        com.google.javascript.jscomp.DiagnosticType diagnosticType79 = com.google.javascript.jscomp.DiagnosticType.make("*global*", checkLevel77, "");
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", ":" };
        com.google.javascript.jscomp.JSError jSError87 = com.google.javascript.jscomp.JSError.make("*global*", node75, diagnosticType79, strArray86);
        com.google.javascript.jscomp.CheckLevel checkLevel88 = jSError87.getDefaultLevel();
        java.lang.String str89 = jSError87.description;
        int int90 = jSError87.getCharno();
        java.lang.String str91 = jSError87.sourceName;
        java.lang.String str92 = jSError87.sourceName;
        com.google.javascript.jscomp.CheckLevel checkLevel93 = jSError87.level;
        org.junit.Assert.assertNotNull(jSTypeArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(jSTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(diagnosticType79);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(jSError87);
        org.junit.Assert.assertNull(checkLevel88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "*global*" + "'", str91, "*global*");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "*global*" + "'", str92, "*global*");
        org.junit.Assert.assertNull(checkLevel93);
    }

    @Test
    public void test07191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07191");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        boolean boolean75 = node56.isUnscopedQualifiedName();
        boolean boolean76 = node56.isAdd();
        boolean boolean77 = node56.isInc();
        boolean boolean78 = node56.isGetProp();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test07192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07192");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setProtectHiddenSideEffects(true);
        boolean boolean5 = compilerOptions0.isExternExportsEnabled();
        boolean boolean6 = compilerOptions0.recordFunctionInformation;
        compilerOptions0.setInputDelimiter("FINEST");
        com.google.javascript.jscomp.CheckLevel checkLevel9 = compilerOptions0.checkRequires;
        compilerOptions0.aliasStringsBlacklist = "/experiment/:/OFF4758658444940475831";
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + checkLevel9 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel9.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07193");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        java.lang.String str37 = node26.toStringTree();
        com.google.javascript.rhino.Node node38 = node26.cloneTree();
        com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.Node.newNumber(0.0d, (int) (byte) -1, 37);
        boolean boolean43 = node42.isString();
        com.google.javascript.rhino.Node node44 = node38.srcrefTree(node42);
        boolean boolean45 = node38.isLabel();
        boolean boolean46 = node38.hasOneChild();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PARAM_LIST\n" + "'", str37, "PARAM_LIST\n");
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test07194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07194");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        com.google.javascript.jscomp.CheckLevel checkLevel10 = compilerOptions0.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode11 = compilerOptions0.getLanguageOut();
        boolean boolean12 = compilerOptions0.moveFunctionDeclarations;
        byte[] byteArray13 = null;
        compilerOptions0.inputPropertyMapSerialized = byteArray13;
        compilerOptions0.locale = ":/hi!";
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        com.google.javascript.rhino.ErrorReporter errorReporter25 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry26 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter25);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray27 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList28 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList28, jSTypeArray27);
        com.google.javascript.rhino.Node node30 = jSTypeRegistry26.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList28);
        com.google.javascript.rhino.jstype.JSType jSType35 = jSTypeRegistry26.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray38 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList39 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList39, jSTypeArray38);
        com.google.javascript.rhino.Node node41 = jSTypeRegistry37.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList39);
        com.google.javascript.rhino.jstype.JSType jSType46 = jSTypeRegistry37.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] { jSType46 };
        com.google.javascript.rhino.jstype.FunctionType functionType48 = jSTypeRegistry20.createConstructorTypeWithVarArgs(jSType35, jSTypeArray47);
        boolean boolean50 = jSTypeRegistry18.canPropertyBeDefined(jSType35, "");
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable52 = jSTypeRegistry18.getEachReferenceTypeWithProperty("/");
        java.lang.String[] strArray57 = new java.lang.String[] { "Unversioned directory", "/experiment/:/hi!", ":", "OFF" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        jSTypeRegistry18.setTemplateTypeNames((java.util.List<java.lang.String>) strList58);
        compilerOptions0.setManageClosureDependencies((java.util.List<java.lang.String>) strList58);
        com.google.javascript.jscomp.CompilerOptions compilerOptions62 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode63 = null;
        compilerOptions62.setTracerMode(tracerMode63);
        boolean boolean65 = compilerOptions62.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel66 = compilerOptions62.sourceMapDetailLevel;
        compilerOptions62.setColorizeErrorOutput(true);
        compilerOptions62.collapseProperties = true;
        com.google.common.collect.Multimap<com.google.javascript.jscomp.CustomPassExecutionTime, com.google.javascript.jscomp.CompilerPass> customPassExecutionTimeMultimap71 = null;
        compilerOptions62.setCustomPasses(customPassExecutionTimeMultimap71);
        com.google.javascript.jscomp.CodingConvention codingConvention73 = compilerOptions62.getCodingConvention();
        compilerOptions62.setRuntimeTypeCheck(false);
        com.google.javascript.jscomp.CheckLevel checkLevel76 = compilerOptions62.checkGlobalThisLevel;
        compilerOptions0.checkMissingReturn = checkLevel76;
        compilerOptions0.setLocale("PARAM_LIST\n");
        org.junit.Assert.assertTrue("'" + checkLevel10 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel10.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(languageMode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(jSTypeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(jSType35);
        org.junit.Assert.assertNotNull(jSTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(jSType46);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertNotNull(functionType48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objectTypeIterable52);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(detailLevel66);
        org.junit.Assert.assertNull(codingConvention73);
        org.junit.Assert.assertTrue("'" + checkLevel76 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel76.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07195");
        java.io.File file1 = new java.io.File(":");
        java.io.File file3 = new java.io.File(file1, "FINEST");
        boolean boolean4 = file1.isAbsolute();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), ":");
        org.junit.Assert.assertEquals(file3.getParent(), ":");
        org.junit.Assert.assertEquals(file3.toString(), ":/FINEST");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test07196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07196");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.lang.Object[] objArray6 = jSTypeList3.toArray();
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions7.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode13 = null;
        compilerOptions7.setLanguageOut(languageMode13);
        compilerOptions7.preferLineBreakAtEndOfFile = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.skipAllCompilerPasses();
        compilerOptions17.resetWarningsGuard();
        compilerOptions17.setInlineLocalVariables(false);
        compilerOptions17.setIdeMode(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions26 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions26.crossModuleMethodMotion = true;
        compilerOptions26.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy31 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy35 = compilerOptions32.propertyRenaming;
        compilerOptions26.setRenamingPolicy(variableRenamingPolicy31, propertyRenamingPolicy35);
        com.google.javascript.jscomp.CompilerOptions compilerOptions37 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions37.crossModuleMethodMotion = true;
        compilerOptions37.skipAllCompilerPasses();
        boolean boolean41 = compilerOptions37.flowSensitiveInlineVariables;
        java.lang.String[] strArray51 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet52 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet52, strArray51);
        compilerOptions37.stripTypes = strSet52;
        compilerOptions26.setStripNamePrefixes((java.util.Set<java.lang.String>) strSet52);
        compilerOptions17.setReplaceStringsReservedStrings((java.util.Set<java.lang.String>) strSet52);
        boolean boolean58 = strSet52.add("STRING PARAM_LIST 49");
        compilerOptions7.setIdGenerators((java.util.Set<java.lang.String>) strSet52);
        boolean boolean60 = jSTypeList3.contains((java.lang.Object) compilerOptions7);
        java.util.ListIterator<com.google.javascript.rhino.jstype.JSType> jSTypeItor61 = jSTypeList3.listIterator();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy35 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy35.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(jSTypeItor61);
    }

    @Test
    public void test07197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07197");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(true, false);
        boolean boolean7 = file2.setWritable(false);
        boolean boolean8 = file2.delete();
        long long9 = file2.getUsableSpace();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 280492322816L + "'", long9 == 280492322816L);
    }

    @Test
    public void test07198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07198");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable7 = jSTypeRegistry1.getTypesWithProperty("");
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray13 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList14 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14, jSTypeArray13);
        boolean boolean16 = jSTypeList11.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14);
        com.google.javascript.rhino.Node node17 = jSTypeRegistry9.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList11);
        jSTypeRegistry9.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable21 = jSTypeRegistry9.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType26 = jSTypeRegistry9.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry28 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        boolean boolean35 = jSTypeList30.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        com.google.javascript.rhino.Node node36 = jSTypeRegistry28.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        jSTypeRegistry28.forwardDeclareType("PARAM_LIST");
        jSTypeRegistry28.clearTemplateTypeNames();
        com.google.javascript.rhino.jstype.ObjectType objectType40 = jSTypeRegistry28.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.JSType jSType41 = jSTypeRegistry9.createOptionalNullableType((com.google.javascript.rhino.jstype.JSType) objectType40);
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        com.google.javascript.rhino.ErrorReporter errorReporter49 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry50 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter49);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray51 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList52 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList52, jSTypeArray51);
        com.google.javascript.rhino.Node node54 = jSTypeRegistry50.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList52);
        com.google.javascript.rhino.jstype.JSType jSType59 = jSTypeRegistry50.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter60 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter60);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray62 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList63 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63, jSTypeArray62);
        com.google.javascript.rhino.Node node65 = jSTypeRegistry61.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        com.google.javascript.rhino.jstype.JSType jSType70 = jSTypeRegistry61.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray71 = new com.google.javascript.rhino.jstype.JSType[] { jSType70 };
        com.google.javascript.rhino.jstype.FunctionType functionType72 = jSTypeRegistry44.createConstructorTypeWithVarArgs(jSType59, jSTypeArray71);
        com.google.javascript.rhino.jstype.FunctionType functionType73 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType40, false, jSTypeArray71);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable75 = jSTypeRegistry1.getEachReferenceTypeWithProperty("STRING PARAM_LIST");
        jSTypeRegistry1.identifyNonNullableName("/tmp");
        jSTypeRegistry1.incrementGeneration();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeIterable7);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(jSTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(jSTypeIterable21);
        org.junit.Assert.assertNotNull(jSType26);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(objectType40);
        org.junit.Assert.assertNotNull(jSType41);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(jSTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(jSType59);
        org.junit.Assert.assertNotNull(jSTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNotNull(jSType70);
        org.junit.Assert.assertNotNull(jSTypeArray71);
        org.junit.Assert.assertNotNull(functionType72);
        org.junit.Assert.assertNotNull(functionType73);
        org.junit.Assert.assertNotNull(objectTypeIterable75);
    }

    @Test
    public void test07199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07199");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int4 = sourceFile2.getLineOfOffset((int) (short) 1);
        java.lang.String str5 = sourceFile2.getName();
        com.google.javascript.jscomp.JsAst jsAst6 = new com.google.javascript.jscomp.JsAst(sourceFile2);
        jsAst6.clearAst();
        com.google.javascript.jscomp.CompilerInput compilerInput10 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) jsAst6, "*global*", false);
        com.google.javascript.jscomp.SourceFile sourceFile11 = jsAst6.getSourceFile();
        jsAst6.clearAst();
        com.google.javascript.jscomp.SourceFile sourceFile16 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int18 = sourceFile16.getLineOfOffset((int) (short) 1);
        int int20 = sourceFile16.getLineOfOffset(100);
        java.lang.String str21 = sourceFile16.getName();
        java.io.Reader reader22 = sourceFile16.getCodeReader();
        reader22.reset();
        com.google.javascript.jscomp.SourceFile sourceFile24 = com.google.javascript.jscomp.SourceFile.fromReader("PARAM_LIST", reader22);
        int int26 = sourceFile24.getLineOfOffset(10);
        com.google.javascript.jscomp.CompilerInput compilerInput28 = new com.google.javascript.jscomp.CompilerInput(sourceFile24, false);
        // The following exception was thrown during execution in test generation
        try {
            jsAst6.setSourceFile(sourceFile24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(sourceFile11);
        org.junit.Assert.assertNotNull(sourceFile16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(sourceFile24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test07200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07200");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.syntheticBlockEndMarker = "hi!";
        compilerOptions0.removeUnusedClassProperties = false;
        compilerOptions0.setLineLengthThreshold(4095);
        com.google.javascript.jscomp.ErrorFormat errorFormat9 = compilerOptions0.errorFormat;
        compilerOptions0.setCrossModuleMethodMotion(true);
        compilerOptions0.preferLineBreakAtEndOfFile = true;
        boolean boolean14 = compilerOptions0.ambiguateProperties;
        compilerOptions0.setCollapseAnonymousFunctions(true);
        compilerOptions0.setRemoveDeadCode(false);
        compilerOptions0.setGatherCssNames(false);
        org.junit.Assert.assertNotNull(errorFormat9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test07201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07201");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler2 = new com.google.javascript.jscomp.Compiler();
        jSModule1.sortInputsByDeps(compiler2);
        java.lang.String str4 = jSModule1.getName();
        jSModule1.removeAll();
        com.google.javascript.jscomp.CompilerInput compilerInput7 = jSModule1.getByName("true");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "STRING PARAM_LIST 49" + "'", str4, "STRING PARAM_LIST 49");
        org.junit.Assert.assertNull(compilerInput7);
    }

    @Test
    public void test07202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07202");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        compilerOptions7.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions7.checkGlobalNamesLevel;
        compilerOptions0.setReportMissingOverride(checkLevel15);
        java.util.Set<java.lang.String> strSet17 = compilerOptions0.stripTypes;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel18 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel18);
        compilerOptions0.extractPrototypeMemberDeclarations = true;
        java.util.Set<java.lang.String> strSet22 = compilerOptions0.aliasableStrings;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(detailLevel18);
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test07203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07203");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean4 = node3.isTry();
        java.lang.String str5 = node3.toString();
        boolean boolean6 = node3.isExprResult();
        boolean boolean7 = node3.isBlock();
        com.google.javascript.rhino.jstype.JSType jSType8 = node3.getJSType();
        boolean boolean9 = node3.isAnd();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "STRING PARAM_LIST 49" + "'", str5, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(jSType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test07204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07204");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        compilerOptions0.setDefineToBooleanLiteral("", true);
        boolean boolean12 = compilerOptions0.recordFunctionInformation;
        com.google.javascript.jscomp.CodingConvention codingConvention13 = compilerOptions0.getCodingConvention();
        boolean boolean14 = compilerOptions0.flowSensitiveInlineVariables;
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(codingConvention13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test07205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07205");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec1 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("InputId: STRING PARAM_LIST 49");
    }

    @Test
    public void test07206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07206");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode6 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions0.setTracer(tracerMode6);
        boolean boolean8 = compilerOptions0.collapseVariableDeclarations;
        boolean boolean9 = compilerOptions0.removeUnusedClassProperties;
        boolean boolean10 = compilerOptions0.labelRenaming;
        org.junit.Assert.assertTrue("'" + tracerMode6 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode6.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test07207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07207");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.INTERNET_EXPLORER_CHECKS;
        com.google.javascript.jscomp.DiagnosticGroups.FILEOVERVIEW_JSDOC = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.DEBUGGER_STATEMENT_PRESENT = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.TYPE_INVALIDATION = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.FILEOVERVIEW_JSDOC = diagnosticGroup0;
// flaky:         org.junit.Assert.assertNull(diagnosticGroup0);
    }

    @Test
    public void test07208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07208");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        compilerOptions0.setSkipAllPasses(false);
        com.google.javascript.jscomp.CompilerOptions.Reach reach11 = com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY;
        compilerOptions0.setInlineFunctions(reach11);
        compilerOptions0.setIgnoreCajaProperties(true);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions0.checkMissingReturn;
        compilerOptions0.setGeneratePseudoNames(true);
        java.lang.String str18 = compilerOptions0.checkMissingGetCssNameBlacklist;
        compilerOptions0.optimizeParameters = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + reach11 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY + "'", reach11.equals(com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY));
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test07209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07209");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.syntheticBlockEndMarker = "hi!";
        compilerOptions0.removeUnusedClassProperties = false;
        compilerOptions0.setLineLengthThreshold(4095);
        com.google.javascript.jscomp.ErrorFormat errorFormat9 = compilerOptions0.errorFormat;
        compilerOptions0.setCrossModuleMethodMotion(true);
        compilerOptions0.preferLineBreakAtEndOfFile = true;
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.enableRuntimeTypeCheck("hi!");
        compilerOptions0.setAssumeClosuresOnlyCaptureReferences(false);
        com.google.javascript.jscomp.CheckLevel checkLevel20 = compilerOptions0.checkUnreachableCode;
        org.junit.Assert.assertNotNull(errorFormat9);
        org.junit.Assert.assertTrue("'" + checkLevel20 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel20.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07210");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions0.checkGlobalNamesLevel;
        compilerOptions0.setCheckMissingGetCssNameBlacklist("");
        boolean boolean11 = compilerOptions0.removeTryCatchFinally;
        java.lang.String str12 = compilerOptions0.instrumentationTemplate;
        boolean boolean13 = compilerOptions0.reserveRawExports;
        compilerOptions0.setSkipAllPasses(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions16 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions16.crossModuleMethodMotion = true;
        compilerOptions16.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions21.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy24 = compilerOptions21.propertyRenaming;
        java.lang.String[] strArray27 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        compilerOptions21.setStripTypes((java.util.Set<java.lang.String>) strSet28);
        compilerOptions16.stripNamePrefixes = strSet28;
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy35 = compilerOptions32.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap36 = compilerOptions32.getTweakReplacements();
        boolean boolean37 = strSet28.remove((java.lang.Object) compilerOptions32);
        com.google.javascript.jscomp.CompilerOptions compilerOptions38 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions38.crossModuleMethodMotion = true;
        compilerOptions38.skipAllCompilerPasses();
        compilerOptions38.resetWarningsGuard();
        compilerOptions38.setInlineLocalVariables(false);
        compilerOptions38.setIdeMode(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions47 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions47.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy50 = compilerOptions47.propertyRenaming;
        com.google.javascript.jscomp.AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy51 = com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF;
        compilerOptions47.anonymousFunctionNaming = anonymousFunctionNamingPolicy51;
        compilerOptions38.setAnonymousFunctionNaming(anonymousFunctionNamingPolicy51);
        compilerOptions32.anonymousFunctionNaming = anonymousFunctionNamingPolicy51;
        compilerOptions0.anonymousFunctionNaming = anonymousFunctionNamingPolicy51;
        boolean boolean56 = compilerOptions0.ambiguateProperties;
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy24 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy24.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy35 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy35.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy50 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy50.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + anonymousFunctionNamingPolicy51 + "' != '" + com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF + "'", anonymousFunctionNamingPolicy51.equals(com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test07211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07211");
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray4 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList5 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList5, jSTypeArray4);
        com.google.javascript.rhino.Node node7 = jSTypeRegistry3.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList5);
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.Node node13 = jSTypeRegistry9.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList11);
        node7.addChildrenToBack(node13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray17 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList18 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList18, jSTypeArray17);
        com.google.javascript.rhino.Node node20 = jSTypeRegistry16.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList18);
        boolean boolean21 = node20.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.Node node27 = jSTypeRegistry23.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = node27.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        com.google.javascript.rhino.Node node34 = jSTypeRegistry30.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        com.google.javascript.rhino.Node node37 = new com.google.javascript.rhino.Node((int) (short) 0, node7, node20, node27, node34, 0, 49);
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node40 = node37.useSourceInfoIfMissingFrom(node39);
        com.google.javascript.rhino.InputId inputId41 = node40.getInputId();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry43 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray44 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList45 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList45, jSTypeArray44);
        com.google.javascript.rhino.Node node47 = jSTypeRegistry43.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList45);
        boolean boolean48 = node47.isIn();
        boolean boolean49 = node47.isGetElem();
        com.google.javascript.rhino.Node node53 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        java.lang.String str54 = node53.getQualifiedName();
        com.google.javascript.rhino.Node node55 = node53.getLastChild();
        com.google.javascript.rhino.Node node56 = node53.getLastSibling();
        boolean boolean57 = node56.isFromExterns();
        com.google.javascript.rhino.Node node60 = new com.google.javascript.rhino.Node(9, node40, node47, node56, 300, 11);
        boolean boolean61 = node47.isDebugger();
        boolean boolean62 = node47.isFromExterns();
        boolean boolean63 = node47.isDec();
        org.junit.Assert.assertNotNull(jSTypeArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(jSTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNull(inputId41);
        org.junit.Assert.assertNotNull(jSTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test07212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07212");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        jSTypeRegistry1.setLastGeneration(false);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable13 = jSTypeRegistry1.getEachReferenceTypeWithProperty("*global*.  at *global* line (unknown line) : (unknown column)");
        jSTypeRegistry1.resetForTypeCheck();
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable16 = jSTypeRegistry1.getTypesWithProperty("Node tree inequality:\nTree1:\nPARAM_LIST\n    NAME \n\n\nTree2:\nNUMBER -1.0\n\n\nSubtree1: PARAM_LIST\n    NAME \n\n\nSubtree2: NUMBER -1.0\n");
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList20 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20, jSTypeArray19);
        com.google.javascript.rhino.Node node22 = jSTypeRegistry18.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList20);
        com.google.javascript.rhino.jstype.JSType jSType27 = jSTypeRegistry18.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType jSType32 = jSTypeRegistry18.createNamedType("FINEST", "/", 32, (int) (short) 1);
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        com.google.javascript.rhino.Node node38 = jSTypeRegistry34.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.Node node44 = jSTypeRegistry40.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        com.google.javascript.rhino.jstype.JSType jSType49 = jSTypeRegistry40.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter50 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry51 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter50);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray52 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList53 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList53, jSTypeArray52);
        com.google.javascript.rhino.Node node55 = jSTypeRegistry51.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList53);
        com.google.javascript.rhino.jstype.JSType jSType60 = jSTypeRegistry51.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] { jSType60 };
        com.google.javascript.rhino.jstype.FunctionType functionType62 = jSTypeRegistry34.createConstructorTypeWithVarArgs(jSType49, jSTypeArray61);
        com.google.javascript.rhino.jstype.JSType jSType64 = jSTypeRegistry18.getGreatestSubtypeWithProperty((com.google.javascript.rhino.jstype.JSType) functionType62, "hi!");
        com.google.javascript.rhino.jstype.ObjectType objectType65 = jSTypeRegistry18.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = jSTypeRegistry1.createObjectType(objectType65);
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(objectTypeIterable13);
        org.junit.Assert.assertNotNull(jSTypeIterable16);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(jSType27);
        org.junit.Assert.assertNotNull(jSType32);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(jSType49);
        org.junit.Assert.assertNotNull(jSTypeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(jSType60);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertNotNull(functionType62);
        org.junit.Assert.assertNotNull(jSType64);
        org.junit.Assert.assertNotNull(objectType65);
        org.junit.Assert.assertNotNull(objectType66);
    }

    @Test
    public void test07213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07213");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str1 = compilerOptions0.syntheticBlockStartMarker;
        compilerOptions0.setMarkNoSideEffectCalls(false);
        com.google.javascript.jscomp.CheckLevel checkLevel4 = compilerOptions0.checkGlobalThisLevel;
        java.lang.String str5 = compilerOptions0.renamePrefixNamespace;
        boolean boolean6 = compilerOptions0.shouldColorizeErrorOutput();
        java.lang.String str7 = compilerOptions0.renamePrefix;
        compilerOptions0.setCommonJSModulePathPrefix("PARAM_LIST 47\n    PARAM_LIST\n");
        compilerOptions0.setDevirtualizePrototypeMethods(false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + checkLevel4 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel4.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test07214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07214");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        jSTypeRegistry1.clearNamedTypes();
        jSTypeRegistry1.forwardDeclareType("STRING PARAM_LIST 49");
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray12 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList13 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13, jSTypeArray12);
        boolean boolean15 = jSTypeList10.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        com.google.javascript.rhino.Node node16 = jSTypeRegistry8.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        jSTypeRegistry8.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable20 = jSTypeRegistry8.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType25 = jSTypeRegistry8.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        boolean boolean34 = jSTypeList29.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        com.google.javascript.rhino.Node node35 = jSTypeRegistry27.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        jSTypeRegistry27.forwardDeclareType("PARAM_LIST");
        jSTypeRegistry27.clearTemplateTypeNames();
        com.google.javascript.rhino.jstype.ObjectType objectType39 = jSTypeRegistry27.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry8.createOptionalNullableType((com.google.javascript.rhino.jstype.JSType) objectType39);
        jSTypeRegistry1.registerPropertyOnType("STRING PARAM_LIST 49", (com.google.javascript.rhino.jstype.JSType) objectType39);
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry43 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42);
        jSTypeRegistry43.clearNamedTypes();
        com.google.javascript.rhino.jstype.ObjectType objectType45 = jSTypeRegistry43.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.JSType jSType50 = jSTypeRegistry1.getType((com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) objectType45, ":/hi!", "hi!", 39, 4);
        boolean boolean52 = jSTypeRegistry1.isForwardDeclaredType("Node tree inequality:\nTree1:\nPARAM_LIST\n    NAME \n\n\nTree2:\nBITXOR  43 [opt_arg: 1]\n\n\nSubtree1: PARAM_LIST\n    NAME \n\n\nSubtree2: BITXOR  43 [opt_arg: 1]\n");
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(jSTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(jSTypeIterable20);
        org.junit.Assert.assertNotNull(jSType25);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(objectType39);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertNotNull(objectType45);
        org.junit.Assert.assertNotNull(jSType50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test07215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07215");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        java.lang.Object obj6 = null;
        com.google.javascript.rhino.Node node7 = strMap4.get(obj6);
        java.util.Set<java.lang.String> strSet8 = strMap4.keySet();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.Node node10 = strMap4.remove(obj9);
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions11.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions11.setSourceMapDetailLevel(detailLevel14);
        compilerOptions11.disambiguateProperties = true;
        boolean boolean18 = compilerOptions11.reserveRawExports;
        compilerOptions11.setFlowSensitiveInlineVariables(false);
        boolean boolean21 = compilerOptions11.collapseAnonymousFunctions;
        com.google.javascript.rhino.Node node22 = strMap4.get((java.lang.Object) compilerOptions11);
        com.google.javascript.jscomp.CompilerOptions compilerOptions23 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions23.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy26 = compilerOptions23.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap27 = compilerOptions23.getTweakReplacements();
        boolean boolean28 = strMap27.isEmpty();
        java.lang.Object obj29 = null;
        com.google.javascript.rhino.Node node30 = strMap27.get(obj29);
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions31.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel34 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions31.setSourceMapDetailLevel(detailLevel34);
        boolean boolean36 = compilerOptions31.ideMode;
        compilerOptions31.setUnaliasableGlobals("");
        com.google.javascript.jscomp.CheckLevel checkLevel39 = compilerOptions31.checkUnreachableCode;
        com.google.javascript.rhino.Node node40 = strMap27.remove((java.lang.Object) checkLevel39);
        boolean boolean42 = strMap27.containsValue((java.lang.Object) 280489189376L);
        strMap27.clear();
        com.google.javascript.jscomp.CompilerOptions compilerOptions44 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode45 = null;
        compilerOptions44.setTracerMode(tracerMode45);
        boolean boolean47 = compilerOptions44.generatePseudoNames;
        java.util.Set<java.lang.String> strSet48 = compilerOptions44.stripTypes;
        com.google.javascript.jscomp.CheckLevel checkLevel49 = compilerOptions44.reportMissingOverride;
        com.google.javascript.jscomp.SourceMap.Format format50 = compilerOptions44.sourceMapFormat;
        compilerOptions44.inlineGetters = true;
        compilerOptions44.inlineGetters = true;
        boolean boolean55 = compilerOptions44.optimizeParameters;
        com.google.javascript.rhino.Node node56 = strMap27.get((java.lang.Object) compilerOptions44);
        strMap4.putAll(strMap27);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy26 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy26.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNotNull(detailLevel34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + checkLevel39 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel39.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + checkLevel49 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel49.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(format50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(node56);
    }

    @Test
    public void test07216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07216");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        boolean boolean5 = compilerOptions0.ideMode;
        compilerOptions0.renamePrefix = "hi!";
        boolean boolean8 = compilerOptions0.inlineConstantVars;
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode10 = null;
        compilerOptions9.setTracerMode(tracerMode10);
        boolean boolean12 = compilerOptions9.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel13 = compilerOptions9.sourceMapDetailLevel;
        compilerOptions9.setColorizeErrorOutput(true);
        compilerOptions9.collapseProperties = false;
        com.google.javascript.jscomp.CheckLevel checkLevel18 = com.google.javascript.jscomp.CheckLevel.WARNING;
        compilerOptions9.setCheckMissingGetCssNameLevel(checkLevel18);
        compilerOptions0.checkProvides = checkLevel18;
        compilerOptions0.markAsCompiled = true;
        compilerOptions0.setLocale("OFF");
        compilerOptions0.optimizeReturns = true;
        compilerOptions0.setMoveFunctionDeclarations(true);
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(detailLevel13);
        org.junit.Assert.assertTrue("'" + checkLevel18 + "' != '" + com.google.javascript.jscomp.CheckLevel.WARNING + "'", checkLevel18.equals(com.google.javascript.jscomp.CheckLevel.WARNING));
    }

    @Test
    public void test07217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07217");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        java.io.Reader reader3 = sourceFile2.getCodeReader();
        reader3.reset();
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertNotNull(reader3);
    }

    @Test
    public void test07218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07218");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("FINEST");
        stats1.gzSize = 300;
        int int4 = stats1.gzDiff;
        stats1.gzDiff = 4095;
        int int7 = stats1.changes;
        int int8 = stats1.gzSize;
        stats1.runs = 2147483647;
        stats1.gzDiff = 49;
        java.lang.String str13 = stats1.pass;
        stats1.gzDiff = 10;
        java.lang.String str16 = stats1.pass;
        int int17 = stats1.changes;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 300 + "'", int8 == 300);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "FINEST" + "'", str13, "FINEST");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "FINEST" + "'", str16, "FINEST");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test07219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07219");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(true, false);
        java.io.File file7 = new java.io.File(file2, "PARAM_LIST\n");
        java.io.File file8 = file7.getParentFile();
        boolean boolean9 = file8.createNewFile();
        java.io.File file10 = file8.getAbsoluteFile();
        long long11 = file8.lastModified();
        java.nio.file.Path path12 = file8.toPath();
        boolean boolean13 = file8.canWrite();
        long long14 = file8.getTotalSpace();
        boolean boolean15 = file8.isFile();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals(file7.getParent(), ":/hi!");
        org.junit.Assert.assertEquals(file7.toString(), ":/hi!/PARAM_LIST\n");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), ":");
        org.junit.Assert.assertEquals(file8.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(file10);
// flaky:         org.junit.Assert.assertEquals(file10.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file10.toString(), "/experiment/:/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1645456538000L + "'", long11 == 1645456538000L);
        org.junit.Assert.assertNotNull(path12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 364740218880L + "'", long14 == 364740218880L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test07220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07220");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(false, false);
        java.io.File file6 = file2.getParentFile();
        long long7 = file6.getUsableSpace();
        boolean boolean8 = file6.mkdirs();
        java.nio.charset.Charset charset9 = null;
        com.google.javascript.jscomp.JSSourceFile jSSourceFile10 = com.google.javascript.jscomp.JSSourceFile.fromFile(file6, charset9);
        java.io.File file13 = new java.io.File(":", "hi!");
        boolean boolean16 = file13.setExecutable(true, false);
        boolean boolean18 = file13.setWritable(false);
        boolean boolean19 = file13.canWrite();
        java.net.URI uRI20 = file13.toURI();
        boolean boolean21 = file6.renameTo(file13);
        java.io.File file22 = file6.getCanonicalFile();
        boolean boolean23 = file22.delete();
        boolean boolean25 = file22.setWritable(false);
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), ":");
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 280490766336L + "'", long7 == 280490766336L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(jSSourceFile10);
        org.junit.Assert.assertEquals(file13.getParent(), ":");
        org.junit.Assert.assertEquals(file13.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(uRI20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(file22);
// flaky:         org.junit.Assert.assertEquals(file22.getParent(), "/experiment");
// flaky:         org.junit.Assert.assertEquals(file22.toString(), "/experiment/:");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test07221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07221");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        boolean boolean44 = node43.isIn();
        boolean boolean45 = node43.isVoid();
        node43.setOptionalArg(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions48 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode49 = null;
        compilerOptions48.setTracerMode(tracerMode49);
        boolean boolean51 = compilerOptions48.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel52 = compilerOptions48.sourceMapDetailLevel;
        compilerOptions48.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions55 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions55.crossModuleMethodMotion = true;
        compilerOptions55.optimizeParameters = true;
        compilerOptions55.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel63 = compilerOptions55.checkGlobalNamesLevel;
        compilerOptions48.setReportMissingOverride(checkLevel63);
        com.google.javascript.jscomp.DiagnosticType diagnosticType65 = com.google.javascript.jscomp.Compiler.MOTION_ITERATIONS_ERROR;
        java.lang.String[] strArray66 = null;
        com.google.javascript.jscomp.JSError jSError67 = com.google.javascript.jscomp.JSError.make("", node43, checkLevel63, diagnosticType65, strArray66);
        com.google.javascript.rhino.Node node68 = node33.srcref(node43);
        boolean boolean69 = node68.isDefaultCase();
        node68.setIsSyntheticBlock(true);
        boolean boolean72 = node68.isVarArgs();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node74 = node68.getChildAtIndex((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(detailLevel52);
        org.junit.Assert.assertTrue("'" + checkLevel63 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel63.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(diagnosticType65);
        org.junit.Assert.assertNotNull(jSError67);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test07222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07222");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        compilerOptions0.inlineFunctions = true;
        compilerOptions0.setCommonJSModulePathPrefix(":");
        compilerOptions0.setCrossModuleCodeMotion(true);
        compilerOptions0.setInlineLocalVariables(true);
        compilerOptions0.setReplaceStringsPlaceholderToken("FINEST");
        compilerOptions0.setSyntheticBlockEndMarker("/experiment/:/hi!");
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap17 = compilerOptions0.getTweakReplacements();
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test07223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07223");
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags0 = new com.google.javascript.rhino.Node.SideEffectFlags();
        sideEffectFlags0.setMutatesGlobalState();
        sideEffectFlags0.clearAllFlags();
        sideEffectFlags0.clearSideEffectFlags();
        sideEffectFlags0.setMutatesGlobalState();
    }

    @Test
    public void test07224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07224");
        java.io.IOException iOException1 = new java.io.IOException("");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
        java.io.IOException iOException6 = new java.io.IOException(":");
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException9 = new java.io.IOException("");
        java.io.IOException iOException10 = new java.io.IOException((java.lang.Throwable) iOException9);
        java.io.IOException iOException11 = new java.io.IOException((java.lang.Throwable) iOException10);
        java.io.IOException iOException13 = new java.io.IOException("");
        java.io.IOException iOException14 = new java.io.IOException((java.lang.Throwable) iOException13);
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException16 = new java.io.IOException();
        iOException15.addSuppressed((java.lang.Throwable) iOException16);
        java.lang.Throwable[] throwableArray18 = iOException16.getSuppressed();
        iOException10.addSuppressed((java.lang.Throwable) iOException16);
        iOException7.addSuppressed((java.lang.Throwable) iOException10);
        java.lang.Throwable[] throwableArray21 = iOException7.getSuppressed();
        iOException4.addSuppressed((java.lang.Throwable) iOException7);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test07225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07225");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy12 = compilerOptions9.propertyRenaming;
        compilerOptions0.propertyRenaming = propertyRenamingPolicy12;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions14.checkRequires;
        com.google.javascript.jscomp.CompilerOptions compilerOptions16 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode17 = null;
        compilerOptions16.setTracerMode(tracerMode17);
        boolean boolean19 = compilerOptions16.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel20 = compilerOptions16.sourceMapDetailLevel;
        compilerOptions16.setColorizeErrorOutput(true);
        compilerOptions16.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions25 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions25.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy28 = compilerOptions25.propertyRenaming;
        compilerOptions16.propertyRenaming = propertyRenamingPolicy28;
        com.google.javascript.jscomp.CheckLevel checkLevel30 = compilerOptions16.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel31 = compilerOptions16.checkRequires;
        compilerOptions14.setCheckRequires(checkLevel31);
        compilerOptions0.setCheckProvides(checkLevel31);
        boolean boolean34 = compilerOptions0.inlineGetters;
        com.google.javascript.jscomp.CompilerOptions compilerOptions35 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions35.crossModuleMethodMotion = true;
        compilerOptions35.skipAllCompilerPasses();
        compilerOptions35.resetWarningsGuard();
        compilerOptions35.setInlineLocalVariables(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions42 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode43 = null;
        compilerOptions42.setTracerMode(tracerMode43);
        boolean boolean45 = compilerOptions42.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel46 = compilerOptions42.sourceMapDetailLevel;
        compilerOptions42.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet49 = compilerOptions42.stripNameSuffixes;
        compilerOptions35.setReplaceStringsReservedStrings(strSet49);
        boolean boolean51 = strSet49.isEmpty();
        compilerOptions0.stripNameSuffixes = strSet49;
        compilerOptions0.setGeneratePseudoNames(true);
        compilerOptions0.setOutputCharset("PARAM_LIST: PARAM_LIST\n");
        compilerOptions0.setGenerateExports(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions59 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode60 = null;
        compilerOptions59.setTracerMode(tracerMode60);
        boolean boolean62 = compilerOptions59.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel63 = compilerOptions59.sourceMapDetailLevel;
        compilerOptions59.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions66 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions66.crossModuleMethodMotion = true;
        compilerOptions66.optimizeParameters = true;
        compilerOptions66.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel74 = compilerOptions66.checkGlobalNamesLevel;
        compilerOptions59.setReportMissingOverride(checkLevel74);
        java.util.Set<java.lang.String> strSet76 = compilerOptions59.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions77 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel78 = compilerOptions77.checkRequires;
        compilerOptions59.setReportMissingOverride(checkLevel78);
        com.google.javascript.jscomp.CheckLevel checkLevel80 = compilerOptions59.checkGlobalThisLevel;
        compilerOptions0.checkGlobalNamesLevel = checkLevel80;
        compilerOptions0.setNameReferenceReportPath("FINE");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy12 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy12.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(detailLevel20);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy28 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy28.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel30 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel30.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel31 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel31.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(detailLevel46);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(detailLevel63);
        org.junit.Assert.assertTrue("'" + checkLevel74 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel74.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertTrue("'" + checkLevel78 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel78.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel80 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel80.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07226");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setRuntimeTypeCheckLogFunction("FINEST");
        compilerOptions0.renamePrefixNamespace = ":/hi!";
        compilerOptions0.setMarkAsCompiled(true);
        compilerOptions0.setLooseTypes(true);
    }

    @Test
    public void test07227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07227");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(true, false);
        boolean boolean7 = file2.setWritable(false);
        boolean boolean8 = file2.canWrite();
        java.lang.String str9 = file2.getAbsolutePath();
        long long10 = file2.getUsableSpace();
        java.lang.String str11 = file2.getAbsolutePath();
        boolean boolean12 = file2.exists();
        boolean boolean13 = file2.isDirectory();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/experiment/:/hi!" + "'", str9, "/experiment/:/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + long10 + "' != '" + 280491356160L + "'", long10 == 280491356160L);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/experiment/:/hi!" + "'", str11, "/experiment/:/hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test07228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07228");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str1 = compilerOptions0.syntheticBlockStartMarker;
        compilerOptions0.labelRenaming = true;
        boolean boolean4 = compilerOptions0.inlineLocalFunctions;
        boolean boolean5 = compilerOptions0.removeUnusedVars;
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        compilerOptions6.setUnaliasableGlobals("sun.util.logging.resources.logging");
        com.google.javascript.jscomp.CheckLevel checkLevel11 = com.google.javascript.jscomp.CheckLevel.ERROR;
        compilerOptions6.setCheckGlobalThisLevel(checkLevel11);
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode14 = null;
        compilerOptions13.setTracerMode(tracerMode14);
        boolean boolean16 = compilerOptions13.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel17 = compilerOptions13.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode18 = compilerOptions13.getLanguageOut();
        compilerOptions13.setReplaceStringsPlaceholderToken("PARAM_LIST");
        boolean boolean21 = compilerOptions13.markNoSideEffectCalls;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy22 = compilerOptions13.propertyRenaming;
        compilerOptions6.setPropertyRenaming(propertyRenamingPolicy22);
        compilerOptions0.propertyRenaming = propertyRenamingPolicy22;
        compilerOptions0.flowSensitiveInlineVariables = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        compilerOptions0.setDefineReplacements(strMap27);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + checkLevel11 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel11.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(detailLevel17);
        org.junit.Assert.assertNull(languageMode18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy22 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy22.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
    }

    @Test
    public void test07229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07229");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.crossModuleCodeMotion = true;
        compilerOptions0.checkSymbols = true;
        compilerOptions0.setExtractPrototypeMemberDeclarations(true);
        compilerOptions0.markAsCompiled = false;
        java.util.Set<java.lang.String> strSet10 = compilerOptions0.aliasableStrings;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = strSet10.add("Exceeded max number of code motion iterations: {0}");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test07230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07230");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node8 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean9 = node8.isTry();
        java.lang.String str10 = node8.toString();
        boolean boolean11 = node4.hasChild(node8);
        java.lang.String str12 = node8.getSourceFileName();
        int int13 = node8.getLength();
        com.google.javascript.rhino.Node node16 = new com.google.javascript.rhino.Node(800, node8, 16, 42);
        boolean boolean17 = node16.isNew();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "STRING PARAM_LIST 49" + "'", str10, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test07231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07231");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList15 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15, jSTypeArray14);
        com.google.javascript.rhino.Node node17 = jSTypeRegistry13.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList15);
        com.google.javascript.rhino.jstype.JSType jSType22 = jSTypeRegistry13.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        com.google.javascript.rhino.jstype.JSType jSType33 = jSTypeRegistry24.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray34 = new com.google.javascript.rhino.jstype.JSType[] { jSType33 };
        com.google.javascript.rhino.jstype.FunctionType functionType35 = jSTypeRegistry7.createConstructorTypeWithVarArgs(jSType22, jSTypeArray34);
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        com.google.javascript.rhino.jstype.JSType jSType53 = jSTypeRegistry44.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter54 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter54);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.Node node59 = jSTypeRegistry55.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        com.google.javascript.rhino.jstype.JSType jSType64 = jSTypeRegistry55.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] { jSType64 };
        com.google.javascript.rhino.jstype.FunctionType functionType66 = jSTypeRegistry38.createConstructorTypeWithVarArgs(jSType53, jSTypeArray65);
        boolean boolean67 = jSTypeRegistry7.declareType("", jSType53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray71 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList72 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72, jSTypeArray71);
        boolean boolean74 = jSTypeList69.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator75 = jSTypeList69.spliterator();
        com.google.javascript.rhino.jstype.FunctionType functionType76 = jSTypeRegistry1.createFunctionTypeWithVarArgs(jSType53, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray77 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList78 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList78, jSTypeArray77);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray80 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList81 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList81, jSTypeArray80);
        boolean boolean83 = jSTypeList78.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList81);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator84 = jSTypeList78.spliterator();
        com.google.javascript.rhino.Node node85 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList78);
        com.google.javascript.rhino.Node node89 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        java.lang.String str90 = node89.getQualifiedName();
        com.google.javascript.rhino.Node node91 = node89.getLastChild();
        com.google.javascript.rhino.Node node92 = node89.getLastSibling();
        node85.addChildrenToFront(node92);
        boolean boolean94 = node85.isGetProp();
        node85.setVarArgs(true);
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(jSType22);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(jSType33);
        org.junit.Assert.assertNotNull(jSTypeArray34);
        org.junit.Assert.assertNotNull(functionType35);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(jSType53);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(jSType64);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertNotNull(functionType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(jSTypeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(jSTypeSpliterator75);
        org.junit.Assert.assertNotNull(functionType76);
        org.junit.Assert.assertNotNull(jSTypeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(jSTypeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(jSTypeSpliterator84);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNull(node91);
        org.junit.Assert.assertNotNull(node92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test07232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07232");
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray4 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList5 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList5, jSTypeArray4);
        com.google.javascript.rhino.Node node7 = jSTypeRegistry3.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList5);
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.Node node13 = jSTypeRegistry9.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList11);
        node7.addChildrenToBack(node13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray17 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList18 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList18, jSTypeArray17);
        com.google.javascript.rhino.Node node20 = jSTypeRegistry16.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList18);
        boolean boolean21 = node20.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.Node node27 = jSTypeRegistry23.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = node27.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        com.google.javascript.rhino.Node node34 = jSTypeRegistry30.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        com.google.javascript.rhino.Node node37 = new com.google.javascript.rhino.Node((int) (short) 0, node7, node20, node27, node34, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.Node node44 = jSTypeRegistry40.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        node44.addChildrenToBack(node50);
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList55 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55, jSTypeArray54);
        com.google.javascript.rhino.Node node57 = jSTypeRegistry53.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList55);
        boolean boolean58 = node57.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry60 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        com.google.javascript.rhino.Node node64 = jSTypeRegistry60.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        boolean boolean65 = node64.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter66 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry67 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter66);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.Node node71 = jSTypeRegistry67.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        com.google.javascript.rhino.Node node74 = new com.google.javascript.rhino.Node((int) (short) 0, node44, node57, node64, node71, 0, 49);
        com.google.javascript.rhino.Node node75 = node37.useSourceInfoFrom(node57);
        com.google.javascript.jscomp.CheckLevel checkLevel77 = null;
        com.google.javascript.jscomp.DiagnosticType diagnosticType79 = com.google.javascript.jscomp.DiagnosticType.make("*global*", checkLevel77, "");
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", ":" };
        com.google.javascript.jscomp.JSError jSError87 = com.google.javascript.jscomp.JSError.make("*global*", node75, diagnosticType79, strArray86);
        com.google.javascript.jscomp.CheckLevel checkLevel88 = jSError87.getDefaultLevel();
        int int89 = jSError87.getLineNumber();
        com.google.javascript.jscomp.CheckLevel checkLevel90 = jSError87.getDefaultLevel();
        java.lang.String str91 = jSError87.toString();
        int int92 = jSError87.getCharno();
        org.junit.Assert.assertNotNull(jSTypeArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(jSTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(diagnosticType79);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(jSError87);
        org.junit.Assert.assertNull(checkLevel88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNull(checkLevel90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "*global*.  at *global* line (unknown line) : (unknown column)" + "'", str91, "*global*.  at *global* line (unknown line) : (unknown column)");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test07233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07233");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        compilerOptions0.setSummaryDetailLevel(49);
        compilerOptions0.setRemoveTryCatchFinally(true);
        compilerOptions0.setComputeFunctionSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel12 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions9.setSourceMapDetailLevel(detailLevel12);
        compilerOptions0.sourceMapDetailLevel = detailLevel12;
        boolean boolean15 = compilerOptions0.isRemoveUnusedClassProperties();
        boolean boolean16 = compilerOptions0.inlineLocalFunctions;
        compilerOptions0.setRemoveTryCatchFinally(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap19 = compilerOptions0.getTweakReplacements();
        boolean boolean20 = compilerOptions0.isExternExportsEnabled();
        compilerOptions0.setGatherCssNames(false);
        org.junit.Assert.assertNotNull(detailLevel12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test07234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07234");
        java.io.File file2 = java.io.File.createTempFile("Node tree inequality:\nTree1:\nSTRING \n\n\nTree2:\nPARAM_LIST 0\n\n\nSubtree1: STRING \n\n\nSubtree2: PARAM_LIST 0\n", "PARAM_LIST\n");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file2.toString(), "/tmp/Node tree inequality:\nTree1:\nSTRING \n\n\nTree2:\nPARAM_LIST 0\n\n\nSubtree1: STRING \n\n\nSubtree2: PARAM_LIST 0\n6305474599731589737PARAM_LIST\n");
    }

    @Test
    public void test07235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07235");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setProtectHiddenSideEffects(true);
        compilerOptions0.moveFunctionDeclarations = true;
        boolean boolean7 = compilerOptions0.inlineConstantVars;
        boolean boolean8 = compilerOptions0.disambiguateProperties;
        compilerOptions0.setCollapseObjectLiterals(true);
        compilerOptions0.setProcessCommonJSModules(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test07236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07236");
        java.io.File file4 = new java.io.File(":", "hi!");
        boolean boolean7 = file4.setExecutable(false, false);
        java.net.URI uRI8 = file4.toURI();
        java.io.File file9 = new java.io.File(uRI8);
        java.io.File file12 = new java.io.File(":", "hi!");
        boolean boolean15 = file12.setExecutable(true, false);
        long long16 = file12.lastModified();
        boolean boolean17 = file12.mkdir();
        java.lang.String str18 = file12.getCanonicalPath();
        boolean boolean19 = file9.renameTo(file12);
        java.io.File file21 = new java.io.File(file9, "goog.exportProperty");
        java.io.File file22 = java.io.File.createTempFile("InputId: DiagnosticGroup<checkProvides>", "US-ASCII", file9);
        org.junit.Assert.assertEquals(file4.getParent(), ":");
        org.junit.Assert.assertEquals(file4.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(uRI8);
// flaky:         org.junit.Assert.assertEquals(file9.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file9.toString(), "/experiment/:/hi!");
        org.junit.Assert.assertEquals(file12.getParent(), ":");
        org.junit.Assert.assertEquals(file12.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1645456538000L + "'", long16 == 1645456538000L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/experiment/:/hi!" + "'", str18, "/experiment/:/hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
// flaky:         org.junit.Assert.assertEquals(file21.getParent(), "/experiment/:/hi!");
// flaky:         org.junit.Assert.assertEquals(file21.toString(), "/experiment/:/hi!/goog.exportProperty");
        org.junit.Assert.assertNotNull(file22);
// flaky:         org.junit.Assert.assertEquals(file22.getParent(), "/experiment/:/hi!");
// flaky:         org.junit.Assert.assertEquals(file22.toString(), "/experiment/:/hi!/InputId: DiagnosticGroup<checkProvides>3544993429889048066US-ASCII");
    }

    @Test
    public void test07237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07237");
        java.io.IOException iOException1 = new java.io.IOException("");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException("");
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.io.IOException iOException7 = new java.io.IOException((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException();
        iOException7.addSuppressed((java.lang.Throwable) iOException8);
        java.lang.Throwable[] throwableArray10 = iOException8.getSuppressed();
        iOException2.addSuppressed((java.lang.Throwable) iOException8);
        java.io.IOException iOException14 = new java.io.IOException("");
        java.io.IOException iOException15 = new java.io.IOException((java.lang.Throwable) iOException14);
        java.io.IOException iOException16 = new java.io.IOException("JSC_OPTIMIZE_LOOP_ERROR", (java.lang.Throwable) iOException15);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        java.io.IOException iOException19 = new java.io.IOException("");
        java.io.IOException iOException20 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.io.IOException iOException21 = new java.io.IOException((java.lang.Throwable) iOException20);
        java.io.IOException iOException22 = new java.io.IOException();
        iOException21.addSuppressed((java.lang.Throwable) iOException22);
        java.io.IOException iOException24 = new java.io.IOException((java.lang.Throwable) iOException21);
        iOException16.addSuppressed((java.lang.Throwable) iOException21);
        iOException8.addSuppressed((java.lang.Throwable) iOException16);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException16);
        org.junit.Assert.assertNotNull(throwableArray10);
    }

    @Test
    public void test07238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07238");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.generatePseudoNames = true;
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList15 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15, jSTypeArray14);
        com.google.javascript.rhino.Node node17 = jSTypeRegistry13.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList15);
        com.google.javascript.rhino.ErrorReporter errorReporter18 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter18);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray20 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList21 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList21, jSTypeArray20);
        com.google.javascript.rhino.Node node23 = jSTypeRegistry19.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList21);
        com.google.javascript.rhino.jstype.JSType jSType28 = jSTypeRegistry19.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        com.google.javascript.rhino.Node node34 = jSTypeRegistry30.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        com.google.javascript.rhino.jstype.JSType jSType39 = jSTypeRegistry30.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] { jSType39 };
        com.google.javascript.rhino.jstype.FunctionType functionType41 = jSTypeRegistry13.createConstructorTypeWithVarArgs(jSType28, jSTypeArray40);
        boolean boolean43 = jSTypeRegistry11.canPropertyBeDefined(jSType28, "");
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable45 = jSTypeRegistry11.getEachReferenceTypeWithProperty("/");
        java.lang.String[] strArray50 = new java.lang.String[] { "Unversioned directory", "/experiment/:/hi!", ":", "OFF" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        jSTypeRegistry11.setTemplateTypeNames((java.util.List<java.lang.String>) strList51);
        compilerOptions0.setReplaceStringsConfiguration(":/hi!", (java.util.List<java.lang.String>) strList51);
        compilerOptions0.setInlineProperties(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions57 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel58 = compilerOptions57.checkRequires;
        com.google.javascript.jscomp.CompilerOptions compilerOptions59 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode60 = null;
        compilerOptions59.setTracerMode(tracerMode60);
        boolean boolean62 = compilerOptions59.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel63 = compilerOptions59.sourceMapDetailLevel;
        compilerOptions59.setColorizeErrorOutput(true);
        compilerOptions59.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions68 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions68.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy71 = compilerOptions68.propertyRenaming;
        compilerOptions59.propertyRenaming = propertyRenamingPolicy71;
        com.google.javascript.jscomp.CheckLevel checkLevel73 = compilerOptions59.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel74 = compilerOptions59.checkRequires;
        compilerOptions57.setCheckRequires(checkLevel74);
        compilerOptions57.setDefineToBooleanLiteral("", false);
        compilerOptions57.setRuntimeTypeCheck(false);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy81 = com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED;
        compilerOptions57.variableRenaming = variableRenamingPolicy81;
        compilerOptions0.setVariableRenaming(variableRenamingPolicy81);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(jSTypeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(jSType28);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(jSType39);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertNotNull(functionType41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objectTypeIterable45);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + checkLevel58 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel58.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(detailLevel63);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy71 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy71.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel73 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel73.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel74 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel74.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy81 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED + "'", variableRenamingPolicy81.equals(com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED));
    }

    @Test
    public void test07239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07239");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        int int75 = node74.getLineno();
        boolean boolean76 = node74.isName();
        boolean boolean77 = node74.isAdd();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test07240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07240");
        com.google.javascript.jscomp.SourceMap.LocationMapping locationMapping2 = new com.google.javascript.jscomp.SourceMap.LocationMapping("", "java.io.IOException: java.io.IOException: ");
    }

    @Test
    public void test07241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07241");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        compilerOptions0.setFoldConstants(true);
        compilerOptions0.flowSensitiveInlineVariables = true;
        compilerOptions0.setTweakToStringLiteral("InputId: *global*", "hi!");
        com.google.javascript.jscomp.CompilerOptions compilerOptions12 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode13 = null;
        compilerOptions12.setTracerMode(tracerMode13);
        boolean boolean15 = compilerOptions12.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel16 = compilerOptions12.sourceMapDetailLevel;
        compilerOptions12.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet19 = compilerOptions12.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile21 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput23 = new com.google.javascript.jscomp.CompilerInput(sourceFile21, true);
        com.google.javascript.rhino.InputId inputId25 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput27 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput23, inputId25, true);
        java.lang.String str28 = compilerInput27.toString();
        boolean boolean29 = strSet19.contains((java.lang.Object) compilerInput27);
        java.lang.Object[] objArray30 = strSet19.toArray();
        compilerOptions0.setReplaceStringsReservedStrings(strSet19);
        compilerOptions0.setCheckMissingGetCssNameBlacklist(":/hi!");
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(detailLevel16);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "*global*" + "'", str28, "*global*");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
    }

    @Test
    public void test07242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07242");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        java.lang.Object obj6 = null;
        com.google.javascript.rhino.Node node7 = strMap4.get(obj6);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel11 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions8.setSourceMapDetailLevel(detailLevel11);
        boolean boolean13 = compilerOptions8.ideMode;
        compilerOptions8.setUnaliasableGlobals("");
        com.google.javascript.jscomp.CheckLevel checkLevel16 = compilerOptions8.checkUnreachableCode;
        com.google.javascript.rhino.Node node17 = strMap4.remove((java.lang.Object) checkLevel16);
        java.util.Set<java.lang.String> strSet18 = strMap4.keySet();
        com.google.javascript.rhino.Node node20 = null;
        com.google.javascript.rhino.Node node24 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry27.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry33 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray34 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList35 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList35, jSTypeArray34);
        com.google.javascript.rhino.Node node37 = jSTypeRegistry33.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList35);
        node31.addChildrenToBack(node37);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.Node node44 = jSTypeRegistry40.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        boolean boolean45 = node44.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray48 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList49 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList49, jSTypeArray48);
        com.google.javascript.rhino.Node node51 = jSTypeRegistry47.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList49);
        boolean boolean52 = node51.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry54 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray55 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList56 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56, jSTypeArray55);
        com.google.javascript.rhino.Node node58 = jSTypeRegistry54.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        com.google.javascript.rhino.Node node61 = new com.google.javascript.rhino.Node((int) (short) 0, node31, node44, node51, node58, 0, 49);
        com.google.javascript.jscomp.CodingConvention.Bind bind62 = new com.google.javascript.jscomp.CodingConvention.Bind(node20, node24, node58);
        node58.setSourceEncodedPosition(52);
        com.google.javascript.rhino.Node node65 = strMap4.put("java.io.IOException: sun.util.logging.resources.logging", node58);
        // The following exception was thrown during execution in test generation
        try {
            node65.detachChildren();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(detailLevel11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + checkLevel16 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel16.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(jSTypeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jSTypeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNull(node65);
    }

    @Test
    public void test07243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07243");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        boolean boolean21 = compilerOptions0.shouldColorizeErrorOutput();
        boolean boolean22 = compilerOptions0.extractPrototypeMemberDeclarations;
        compilerOptions0.setNameAnonymousFunctionsOnly(false);
        compilerOptions0.inlineLocalFunctions = true;
        boolean boolean27 = compilerOptions0.markNoSideEffectCalls;
        boolean boolean28 = compilerOptions0.coalesceVariableNames;
        compilerOptions0.setRuntimeTypeCheck(true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test07244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07244");
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintStream printStream2 = new java.io.PrintStream("InputId: JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of code motion iterations: {0}", "Node tree inequality:\nTree1:\nSTRING \n\n\nTree2:\nPARAM_LIST 0\n\n\nSubtree1: STRING \n\n\nSubtree2: PARAM_LIST 0\n");
            org.junit.Assert.fail("Expected exception of type java.io.UnsupportedEncodingException; message: Node tree inequality:?Tree1:?STRING ???Tree2:?PARAM_LIST 0???Subtree1: STRING ???Subtree2: PARAM_LIST 0?");
        } catch (java.io.UnsupportedEncodingException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07245");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler2 = new com.google.javascript.jscomp.Compiler();
        jSModule1.sortInputsByDeps(compiler2);
        com.google.javascript.jscomp.SourceFile.Builder builder4 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile8 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int10 = sourceFile8.getLineOfOffset((int) (short) 1);
        java.io.Reader reader11 = sourceFile8.getCodeReader();
        int int12 = reader11.read();
        com.google.javascript.jscomp.SourceFile sourceFile13 = builder4.buildFromReader("*global*", reader11);
        jSModule1.add(sourceFile13);
        com.google.javascript.jscomp.JSModule jSModule16 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler17 = new com.google.javascript.jscomp.Compiler();
        jSModule16.sortInputsByDeps(compiler17);
        com.google.javascript.jscomp.SourceFile.Builder builder19 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile23 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int25 = sourceFile23.getLineOfOffset((int) (short) 1);
        java.io.Reader reader26 = sourceFile23.getCodeReader();
        int int27 = reader26.read();
        com.google.javascript.jscomp.SourceFile sourceFile28 = builder19.buildFromReader("*global*", reader26);
        jSModule16.add(sourceFile28);
        boolean boolean31 = jSModule16.removeByName("PARAM_LIST");
        jSModule1.addDependency(jSModule16);
        com.google.javascript.jscomp.SourceFile sourceFile34 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput36 = new com.google.javascript.jscomp.CompilerInput(sourceFile34, true);
        com.google.javascript.rhino.InputId inputId38 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput40 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput36, inputId38, true);
        com.google.javascript.jscomp.CompilerInput compilerInput42 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput40, false);
        jSModule1.addFirst(compilerInput40);
        com.google.javascript.jscomp.CompilerInput compilerInput45 = jSModule1.getByName("");
        com.google.javascript.jscomp.SourceFile sourceFile47 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput49 = new com.google.javascript.jscomp.CompilerInput(sourceFile47, true);
        com.google.javascript.rhino.InputId inputId51 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput53 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput49, inputId51, true);
        com.google.javascript.jscomp.CompilerInput compilerInput55 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput53, false);
        com.google.javascript.jscomp.JSModule jSModule57 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler58 = new com.google.javascript.jscomp.Compiler();
        jSModule57.sortInputsByDeps(compiler58);
        java.lang.String str60 = jSModule57.getName();
        compilerInput53.setModule(jSModule57);
        jSModule57.setDepth((int) (byte) 0);
        jSModule1.addDependency(jSModule57);
        java.util.List<java.lang.String> strList65 = jSModule1.getProvides();
        com.google.javascript.jscomp.CompilerInput compilerInput67 = jSModule1.getByName(":");
        com.google.javascript.jscomp.SourceFile sourceFile70 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int72 = sourceFile70.getLineOfOffset((int) (short) 1);
        java.lang.String str73 = sourceFile70.getName();
        java.lang.String str74 = sourceFile70.getName();
        int int76 = sourceFile70.getColumnOfOffset(51);
        jSModule1.addFirst(sourceFile70);
        int int79 = sourceFile70.getLineOfOffset(32);
        org.junit.Assert.assertNotNull(sourceFile8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(sourceFile13);
        org.junit.Assert.assertNotNull(sourceFile23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(sourceFile28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(compilerInput45);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "STRING PARAM_LIST 49" + "'", str60, "STRING PARAM_LIST 49");
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNull(compilerInput67);
        org.junit.Assert.assertNotNull(sourceFile70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 51 + "'", int76 == 51);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
    }

    @Test
    public void test07246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07246");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        java.lang.Object obj5 = compilerOptions0.clone();
        com.google.javascript.jscomp.MessageBundle messageBundle6 = null;
        compilerOptions0.messageBundle = messageBundle6;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNotNull(obj5);
    }

    @Test
    public void test07247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07247");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList15 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15, jSTypeArray14);
        com.google.javascript.rhino.Node node17 = jSTypeRegistry13.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList15);
        com.google.javascript.rhino.jstype.JSType jSType22 = jSTypeRegistry13.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        com.google.javascript.rhino.jstype.JSType jSType33 = jSTypeRegistry24.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray34 = new com.google.javascript.rhino.jstype.JSType[] { jSType33 };
        com.google.javascript.rhino.jstype.FunctionType functionType35 = jSTypeRegistry7.createConstructorTypeWithVarArgs(jSType22, jSTypeArray34);
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        com.google.javascript.rhino.jstype.JSType jSType53 = jSTypeRegistry44.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter54 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter54);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.Node node59 = jSTypeRegistry55.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        com.google.javascript.rhino.jstype.JSType jSType64 = jSTypeRegistry55.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] { jSType64 };
        com.google.javascript.rhino.jstype.FunctionType functionType66 = jSTypeRegistry38.createConstructorTypeWithVarArgs(jSType53, jSTypeArray65);
        boolean boolean67 = jSTypeRegistry7.declareType("", jSType53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray71 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList72 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72, jSTypeArray71);
        boolean boolean74 = jSTypeList69.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator75 = jSTypeList69.spliterator();
        com.google.javascript.rhino.jstype.FunctionType functionType76 = jSTypeRegistry1.createFunctionTypeWithVarArgs(jSType53, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray77 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList78 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList78, jSTypeArray77);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray80 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList81 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList81, jSTypeArray80);
        boolean boolean83 = jSTypeList78.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList81);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator84 = jSTypeList78.spliterator();
        com.google.javascript.rhino.Node node85 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList78);
        boolean boolean86 = node85.isNull();
        boolean boolean87 = node85.isBreak();
        com.google.javascript.rhino.Node node88 = node85.cloneTree();
        boolean boolean89 = node85.isNE();
        boolean boolean90 = node85.isSyntheticBlock();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(jSType22);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(jSType33);
        org.junit.Assert.assertNotNull(jSTypeArray34);
        org.junit.Assert.assertNotNull(functionType35);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(jSType53);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(jSType64);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertNotNull(functionType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(jSTypeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(jSTypeSpliterator75);
        org.junit.Assert.assertNotNull(functionType76);
        org.junit.Assert.assertNotNull(jSTypeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(jSTypeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(jSTypeSpliterator84);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test07248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07248");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setLabelRenaming(true);
        compilerOptions0.setTweakToDoubleLiteral("/", (double) 43);
        compilerOptions0.aliasKeywords = false;
        compilerOptions0.setRemoveUnusedClassProperties(true);
    }

    @Test
    public void test07249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07249");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.generatePseudoNames = true;
        compilerOptions0.setCheckControlStructures(false);
        com.google.javascript.jscomp.AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy11 = com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF;
        compilerOptions0.anonymousFunctionNaming = anonymousFunctionNamingPolicy11;
        com.google.javascript.jscomp.SourceMap.Format format13 = compilerOptions0.sourceMapFormat;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions14.setTweakToDoubleLiteral("", (double) (short) 1);
        compilerOptions14.setCrossModuleCodeMotion(false);
        compilerOptions14.inputDelimiter = "STRING PARAM_LIST 49";
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy24 = compilerOptions14.variableRenaming;
        compilerOptions14.setInlineProperties(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions27.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy30 = compilerOptions27.propertyRenaming;
        java.lang.String[] strArray33 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        compilerOptions27.setStripTypes((java.util.Set<java.lang.String>) strSet34);
        com.google.javascript.jscomp.CompilerOptions compilerOptions37 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode38 = null;
        compilerOptions37.setTracerMode(tracerMode38);
        boolean boolean40 = compilerOptions37.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel41 = compilerOptions37.sourceMapDetailLevel;
        compilerOptions37.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions44 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions44.crossModuleMethodMotion = true;
        compilerOptions44.optimizeParameters = true;
        compilerOptions44.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel52 = compilerOptions44.checkGlobalNamesLevel;
        compilerOptions37.setReportMissingOverride(checkLevel52);
        compilerOptions27.setCheckUnreachableCode(checkLevel52);
        compilerOptions27.syntheticBlockStartMarker = "*global*";
        com.google.javascript.jscomp.CheckLevel checkLevel57 = compilerOptions27.checkMissingReturn;
        compilerOptions14.setBrokenClosureRequiresLevel(checkLevel57);
        com.google.javascript.jscomp.CompilerOptions.AliasTransformationHandler aliasTransformationHandler59 = compilerOptions14.getAliasTransformationHandler();
        compilerOptions0.setAliasTransformationHandler(aliasTransformationHandler59);
        com.google.javascript.jscomp.CheckLevel checkLevel61 = compilerOptions0.checkProvides;
        compilerOptions0.setDefineToDoubleLiteral("PARAM_LIST: PARAM_LIST\n", (double) 10);
        compilerOptions0.gatherCssNames = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + anonymousFunctionNamingPolicy11 + "' != '" + com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF + "'", anonymousFunctionNamingPolicy11.equals(com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format13);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy24 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.OFF + "'", variableRenamingPolicy24.equals(com.google.javascript.jscomp.VariableRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy30 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy30.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(detailLevel41);
        org.junit.Assert.assertTrue("'" + checkLevel52 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel52.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel57 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel57.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(aliasTransformationHandler59);
        org.junit.Assert.assertTrue("'" + checkLevel61 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel61.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07250");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet7 = compilerOptions0.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile9 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput11 = new com.google.javascript.jscomp.CompilerInput(sourceFile9, true);
        com.google.javascript.rhino.InputId inputId13 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput15 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput11, inputId13, true);
        java.lang.String str16 = compilerInput15.toString();
        boolean boolean17 = strSet7.contains((java.lang.Object) compilerInput15);
        com.google.javascript.jscomp.JSModule jSModule18 = compilerInput15.getModule();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = compilerInput15.getNumLines();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "*global*" + "'", str16, "*global*");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(jSModule18);
    }

    @Test
    public void test07251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07251");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("");
        stats1.diff = (byte) 1;
        int int4 = stats1.diff;
        stats1.runs = 900;
        stats1.diff = 32;
        int int9 = stats1.gzSize;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test07252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07252");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        compilerOptions0.setSkipAllPasses(false);
        compilerOptions0.setRewriteNewDateGoogNow(false);
        compilerOptions0.setCrossModuleCodeMotion(false);
        compilerOptions0.setShadowVariables(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
    }

    @Test
    public void test07253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07253");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean8 = node7.isTry();
        java.lang.String str9 = node7.toString();
        boolean boolean10 = node3.hasChild(node7);
        boolean boolean11 = node3.isFromExterns();
        boolean boolean12 = node3.isNull();
        boolean boolean13 = node3.isGetElem();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "STRING PARAM_LIST 49" + "'", str9, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test07254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07254");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.Node node37 = node6.removeFirstChild();
        int int39 = node6.getIntProp(1);
        boolean boolean40 = node6.isTypeOf();
        java.util.Set<java.lang.String> strSet41 = node6.getDirectives();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(strSet41);
    }

    @Test
    public void test07255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07255");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        com.google.javascript.rhino.Node node75 = node36.cloneTree();
        boolean boolean76 = node75.isLocalResultCall();
        node75.setSourceFileForTesting("Unversioned directory");
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test07256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07256");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageOut();
        compilerOptions0.setFoldConstants(true);
        boolean boolean8 = compilerOptions0.generatePseudoNames;
        java.lang.String str9 = compilerOptions0.aliasStringsBlacklist;
        compilerOptions0.setCheckSuspiciousCode(false);
        compilerOptions0.setPrettyPrint(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(languageMode5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test07257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07257");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        boolean boolean10 = compilerOptions0.inlineGetters;
        compilerOptions0.setFlowSensitiveInlineVariables(true);
        compilerOptions0.setInlineGetters(true);
        compilerOptions0.setNameAnonymousFunctionsOnly(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode18 = null;
        compilerOptions17.setTracerMode(tracerMode18);
        boolean boolean20 = compilerOptions17.generatePseudoNames;
        java.util.Set<java.lang.String> strSet21 = compilerOptions17.stripTypes;
        com.google.javascript.jscomp.CheckLevel checkLevel22 = compilerOptions17.reportMissingOverride;
        com.google.javascript.jscomp.SourceMap.Format format23 = compilerOptions17.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format23);
        compilerOptions0.setGeneratePseudoNames(true);
        byte[] byteArray27 = compilerOptions0.inputVariableMapSerialized;
        compilerOptions0.setPreferLineBreakAtEndOfFile(false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + checkLevel22 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel22.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(format23);
        org.junit.Assert.assertNull(byteArray27);
    }

    @Test
    public void test07258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07258");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) 30, 43, (int) ':');
        boolean boolean4 = node3.isVarArgs();
        node3.detachChildren();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test07259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07259");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode6 = null;
        compilerOptions5.setTracerMode(tracerMode6);
        boolean boolean8 = compilerOptions5.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel9 = compilerOptions5.sourceMapDetailLevel;
        compilerOptions5.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet12 = compilerOptions5.stripNameSuffixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode14 = null;
        compilerOptions13.setTracerMode(tracerMode14);
        boolean boolean16 = compilerOptions13.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel17 = compilerOptions13.sourceMapDetailLevel;
        compilerOptions13.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.optimizeParameters = true;
        compilerOptions20.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel28 = compilerOptions20.checkGlobalNamesLevel;
        compilerOptions13.setReportMissingOverride(checkLevel28);
        compilerOptions5.setAggressiveVarCheck(checkLevel28);
        compilerOptions0.setCheckUnreachableCode(checkLevel28);
        com.google.javascript.jscomp.SourceMap.Format format32 = compilerOptions0.sourceMapFormat;
        boolean boolean33 = compilerOptions0.recordFunctionInformation;
        compilerOptions0.setComputeFunctionSideEffects(false);
        boolean boolean36 = compilerOptions0.isRemoveUnusedClassProperties();
        compilerOptions0.setSyntheticBlockEndMarker("US-ASCII");
        compilerOptions0.labelRenaming = true;
        compilerOptions0.setDebugFunctionSideEffectsPath("sun.util.logging.resources.logging");
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap43 = null;
        compilerOptions0.setCssRenamingMap(cssRenamingMap43);
        compilerOptions0.setIdeMode(false);
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(detailLevel9);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(detailLevel17);
        org.junit.Assert.assertTrue("'" + checkLevel28 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel28.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(format32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test07260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07260");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler2 = new com.google.javascript.jscomp.Compiler();
        jSModule1.sortInputsByDeps(compiler2);
        com.google.javascript.jscomp.SourceFile.Builder builder4 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile8 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int10 = sourceFile8.getLineOfOffset((int) (short) 1);
        java.io.Reader reader11 = sourceFile8.getCodeReader();
        int int12 = reader11.read();
        com.google.javascript.jscomp.SourceFile sourceFile13 = builder4.buildFromReader("*global*", reader11);
        jSModule1.add(sourceFile13);
        com.google.javascript.jscomp.JSModule jSModule16 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler17 = new com.google.javascript.jscomp.Compiler();
        jSModule16.sortInputsByDeps(compiler17);
        com.google.javascript.jscomp.SourceFile.Builder builder19 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile23 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int25 = sourceFile23.getLineOfOffset((int) (short) 1);
        java.io.Reader reader26 = sourceFile23.getCodeReader();
        int int27 = reader26.read();
        com.google.javascript.jscomp.SourceFile sourceFile28 = builder19.buildFromReader("*global*", reader26);
        jSModule16.add(sourceFile28);
        boolean boolean31 = jSModule16.removeByName("PARAM_LIST");
        jSModule1.addDependency(jSModule16);
        com.google.javascript.jscomp.SourceFile sourceFile34 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput36 = new com.google.javascript.jscomp.CompilerInput(sourceFile34, true);
        com.google.javascript.rhino.InputId inputId38 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput40 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput36, inputId38, true);
        com.google.javascript.jscomp.CompilerInput compilerInput42 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput40, false);
        jSModule1.addFirst(compilerInput40);
        com.google.javascript.jscomp.CompilerInput compilerInput45 = jSModule1.getByName("");
        com.google.javascript.jscomp.SourceFile sourceFile48 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int50 = sourceFile48.getLineOfOffset((int) (short) 1);
        int int52 = sourceFile48.getLineOfOffset(100);
        java.lang.String str53 = sourceFile48.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput54 = new com.google.javascript.jscomp.CompilerInput(sourceFile48);
        com.google.javascript.rhino.InputId inputId55 = compilerInput54.getInputId();
        jSModule1.add(compilerInput54);
        org.junit.Assert.assertNotNull(sourceFile8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(sourceFile13);
        org.junit.Assert.assertNotNull(sourceFile23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(sourceFile28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(compilerInput45);
        org.junit.Assert.assertNotNull(sourceFile48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(inputId55);
    }

    @Test
    public void test07261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07261");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.crossModuleMethodMotion = true;
        compilerOptions5.setProtectHiddenSideEffects(true);
        compilerOptions5.moveFunctionDeclarations = true;
        boolean boolean12 = compilerOptions5.inlineConstantVars;
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions13.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions13.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode19 = null;
        compilerOptions13.setLanguageOut(languageMode19);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy21 = null;
        compilerOptions13.variableRenaming = variableRenamingPolicy21;
        com.google.javascript.jscomp.CheckLevel checkLevel23 = compilerOptions13.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions24.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy27 = compilerOptions24.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap28 = compilerOptions24.getTweakReplacements();
        boolean boolean29 = strMap28.isEmpty();
        java.lang.Object obj30 = null;
        com.google.javascript.rhino.Node node31 = strMap28.get(obj30);
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel35 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions32.setSourceMapDetailLevel(detailLevel35);
        boolean boolean37 = compilerOptions32.ideMode;
        compilerOptions32.setUnaliasableGlobals("");
        com.google.javascript.jscomp.CheckLevel checkLevel40 = compilerOptions32.checkUnreachableCode;
        com.google.javascript.rhino.Node node41 = strMap28.remove((java.lang.Object) checkLevel40);
        compilerOptions13.checkMissingGetCssNameLevel = checkLevel40;
        compilerOptions5.setCheckUnreachableCode(checkLevel40);
        compilerOptions0.setCheckMissingGetCssNameLevel(checkLevel40);
        com.google.javascript.jscomp.CompilerOptions compilerOptions45 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions45.crossModuleMethodMotion = true;
        compilerOptions45.setUnaliasableGlobals("sun.util.logging.resources.logging");
        compilerOptions45.setRenamePrefixNamespace("OFF");
        com.google.javascript.jscomp.CompilerOptions compilerOptions52 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions52.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel55 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions52.setSourceMapDetailLevel(detailLevel55);
        com.google.javascript.jscomp.CompilerOptions compilerOptions57 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode58 = null;
        compilerOptions57.setTracerMode(tracerMode58);
        boolean boolean60 = compilerOptions57.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel61 = compilerOptions57.sourceMapDetailLevel;
        compilerOptions57.setColorizeErrorOutput(true);
        compilerOptions57.collapseProperties = false;
        compilerOptions57.setSkipAllPasses(false);
        com.google.javascript.jscomp.CompilerOptions.Reach reach68 = com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY;
        compilerOptions57.setInlineFunctions(reach68);
        compilerOptions52.setInlineVariables(reach68);
        compilerOptions45.setRemoveUnusedVariables(reach68);
        compilerOptions45.setClosurePass(true);
        java.util.Set<java.lang.String> strSet74 = compilerOptions45.aliasableStrings;
        compilerOptions0.stripTypePrefixes = strSet74;
        compilerOptions0.setTweakToNumberLiteral("/experiment/:/hi!/goog.exportSymbol6344102151034639300();", 53);
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + checkLevel23 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel23.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy27 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy27.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNotNull(detailLevel35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + checkLevel40 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel40.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(detailLevel55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(detailLevel61);
        org.junit.Assert.assertTrue("'" + reach68 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY + "'", reach68.equals(com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY));
        org.junit.Assert.assertNotNull(strSet74);
    }

    @Test
    public void test07262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07262");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        compilerOptions0.setDefineToBooleanLiteral("", true);
        java.lang.String str12 = compilerOptions0.renamePrefixNamespace;
        java.util.Set<java.lang.String> strSet13 = compilerOptions0.stripNamePrefixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        java.lang.String[] strArray20 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        compilerOptions14.setStripTypes((java.util.Set<java.lang.String>) strSet21);
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode25 = null;
        compilerOptions24.setTracerMode(tracerMode25);
        boolean boolean27 = compilerOptions24.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel28 = compilerOptions24.sourceMapDetailLevel;
        compilerOptions24.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions31.crossModuleMethodMotion = true;
        compilerOptions31.optimizeParameters = true;
        compilerOptions31.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel39 = compilerOptions31.checkGlobalNamesLevel;
        compilerOptions24.setReportMissingOverride(checkLevel39);
        compilerOptions14.setCheckUnreachableCode(checkLevel39);
        compilerOptions14.syntheticBlockStartMarker = "*global*";
        compilerOptions14.prettyPrint = false;
        boolean boolean46 = compilerOptions14.aliasAllStrings;
        com.google.javascript.jscomp.CompilerOptions.Reach reach47 = com.google.javascript.jscomp.CompilerOptions.Reach.NONE;
        compilerOptions14.setInlineVariables(reach47);
        compilerOptions0.setRemoveUnusedVariables(reach47);
        com.google.javascript.jscomp.SourceMap.LocationMapping locationMapping52 = new com.google.javascript.jscomp.SourceMap.LocationMapping("PARAM_LIST", "STRING PARAM_LIST 49");
        com.google.javascript.jscomp.SourceMap.LocationMapping[] locationMappingArray53 = new com.google.javascript.jscomp.SourceMap.LocationMapping[] { locationMapping52 };
        java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping> locationMappingList54 = new java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList54, locationMappingArray53);
        compilerOptions0.sourceMapLocationMappings = locationMappingList54;
        com.google.javascript.jscomp.ErrorFormat errorFormat57 = com.google.javascript.jscomp.ErrorFormat.MULTILINE;
        compilerOptions0.setErrorFormat(errorFormat57);
        com.google.javascript.jscomp.CompilerOptions compilerOptions59 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode60 = null;
        compilerOptions59.setTracerMode(tracerMode60);
        boolean boolean62 = compilerOptions59.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel63 = compilerOptions59.sourceMapDetailLevel;
        compilerOptions59.setColorizeErrorOutput(true);
        compilerOptions59.generatePseudoNames = true;
        java.lang.String str68 = compilerOptions59.renamePrefixNamespace;
        boolean boolean69 = compilerOptions59.recordFunctionInformation;
        com.google.javascript.jscomp.AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy70 = compilerOptions59.anonymousFunctionNaming;
        compilerOptions0.anonymousFunctionNaming = anonymousFunctionNamingPolicy70;
        char[] charArray72 = anonymousFunctionNamingPolicy70.getReservedCharacters();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(detailLevel28);
        org.junit.Assert.assertTrue("'" + checkLevel39 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel39.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + reach47 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.NONE + "'", reach47.equals(com.google.javascript.jscomp.CompilerOptions.Reach.NONE));
        org.junit.Assert.assertNotNull(locationMappingArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(errorFormat57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(detailLevel63);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + anonymousFunctionNamingPolicy70 + "' != '" + com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF + "'", anonymousFunctionNamingPolicy70.equals(com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF));
        org.junit.Assert.assertNull(charArray72);
    }

    @Test
    public void test07263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07263");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        compilerOptions0.setSkipAllPasses(false);
        compilerOptions0.setRewriteNewDateGoogNow(false);
        com.google.javascript.jscomp.MessageBundle messageBundle13 = compilerOptions0.messageBundle;
        com.google.javascript.jscomp.CheckLevel checkLevel14 = com.google.javascript.jscomp.CheckLevel.OFF;
        compilerOptions0.setReportMissingOverride(checkLevel14);
        compilerOptions0.collapseVariableDeclarations = false;
        compilerOptions0.setInferTypes(true);
        compilerOptions0.setLocale("// Input %num%");
        com.google.javascript.jscomp.DiagnosticType diagnosticType24 = com.google.javascript.jscomp.DiagnosticType.warning("Unversioned directory", ":/hi!");
        com.google.javascript.jscomp.CompilerOptions compilerOptions25 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions25.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions25.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode31 = null;
        compilerOptions25.setLanguageOut(languageMode31);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy33 = null;
        compilerOptions25.variableRenaming = variableRenamingPolicy33;
        boolean boolean35 = compilerOptions25.coalesceVariableNames;
        compilerOptions25.setNameAnonymousFunctionsOnly(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions38 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions38.crossModuleMethodMotion = true;
        compilerOptions38.skipAllCompilerPasses();
        compilerOptions38.resetWarningsGuard();
        java.lang.String str43 = compilerOptions38.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy44 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy45 = null;
        compilerOptions38.setRenamingPolicy(variableRenamingPolicy44, propertyRenamingPolicy45);
        com.google.javascript.jscomp.CompilerOptions compilerOptions47 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions47.crossModuleMethodMotion = true;
        compilerOptions47.skipAllCompilerPasses();
        compilerOptions47.resetWarningsGuard();
        compilerOptions47.setInlineLocalVariables(false);
        compilerOptions47.coalesceVariableNames = true;
        java.lang.String str56 = compilerOptions47.aliasStringsBlacklist;
        compilerOptions47.devirtualizePrototypeMethods = false;
        compilerOptions47.optimizeParameters = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy61 = com.google.javascript.jscomp.PropertyRenamingPolicy.HEURISTIC;
        compilerOptions47.setPropertyRenaming(propertyRenamingPolicy61);
        compilerOptions25.setRenamingPolicy(variableRenamingPolicy44, propertyRenamingPolicy61);
        com.google.javascript.jscomp.CompilerOptions compilerOptions64 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions64.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel67 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions64.setSourceMapDetailLevel(detailLevel67);
        compilerOptions64.inlineFunctions = true;
        compilerOptions64.setCommonJSModulePathPrefix(":");
        compilerOptions64.setCrossModuleCodeMotion(true);
        boolean boolean75 = compilerOptions64.exportTestFunctions;
        com.google.javascript.jscomp.CheckLevel checkLevel76 = compilerOptions64.brokenClosureRequiresLevel;
        compilerOptions25.setCheckGlobalThisLevel(checkLevel76);
        diagnosticType24.level = checkLevel76;
        compilerOptions0.reportMissingOverride = checkLevel76;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(messageBundle13);
        org.junit.Assert.assertTrue("'" + checkLevel14 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel14.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(diagnosticType24);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy44 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy44.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy61 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.HEURISTIC + "'", propertyRenamingPolicy61.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.HEURISTIC));
        org.junit.Assert.assertNotNull(detailLevel67);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + checkLevel76 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel76.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
    }

    @Test
    public void test07264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07264");
        com.google.javascript.jscomp.SourceFile.Builder builder0 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile4 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int6 = sourceFile4.getLineOfOffset((int) (short) 1);
        java.io.Reader reader7 = sourceFile4.getCodeReader();
        int int8 = reader7.read();
        com.google.javascript.jscomp.SourceFile sourceFile9 = builder0.buildFromReader("*global*", reader7);
        java.nio.charset.Charset charset10 = null;
        com.google.javascript.jscomp.SourceFile.Builder builder11 = builder0.withCharset(charset10);
        java.io.File file14 = new java.io.File(":", "hi!");
        boolean boolean17 = file14.setExecutable(true, false);
        long long18 = file14.lastModified();
        boolean boolean19 = file14.mkdir();
        com.google.javascript.jscomp.SourceFile sourceFile20 = builder0.buildFromFile(file14);
        com.google.javascript.jscomp.SourceFile.Builder builder22 = builder0.withOriginalPath("java.io.IOException: OFF");
        com.google.javascript.jscomp.SourceFile sourceFile26 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int28 = sourceFile26.getLineOfOffset((int) (short) 1);
        int int30 = sourceFile26.getLineOfOffset(100);
        java.lang.String str31 = sourceFile26.getName();
        java.io.Reader reader32 = sourceFile26.getCodeReader();
        reader32.mark((int) ':');
        com.google.javascript.jscomp.SourceFile sourceFile35 = builder22.buildFromReader("PARAM_LIST", reader32);
        com.google.javascript.jscomp.SourceFile sourceFile37 = builder22.buildFromFile("WARNING: hi!");
        com.google.javascript.jscomp.CompilerInput compilerInput38 = new com.google.javascript.jscomp.CompilerInput(sourceFile37);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<java.lang.String> strCollection39 = compilerInput38.getProvides();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Expected setCompiler to be called first: WARNING: hi!");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(sourceFile4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(sourceFile9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertEquals(file14.getParent(), ":");
        org.junit.Assert.assertEquals(file14.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1645456543000L + "'", long18 == 1645456543000L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(sourceFile20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(sourceFile26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(sourceFile35);
        org.junit.Assert.assertNotNull(sourceFile37);
    }

    @Test
    public void test07265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07265");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.INVALID_CASTS;
        com.google.javascript.jscomp.DiagnosticGroups.STRICT_MODULE_DEP_CHECK = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticType diagnosticType2 = com.google.javascript.jscomp.Compiler.OPTIMIZE_LOOP_ERROR;
        com.google.javascript.rhino.ErrorReporter errorReporter4 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry5 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter4);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray6 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList7 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList7, jSTypeArray6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry5.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList7);
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray12 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList13 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13, jSTypeArray12);
        com.google.javascript.rhino.Node node15 = jSTypeRegistry11.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        node9.addChildrenToBack(node15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList20 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20, jSTypeArray19);
        com.google.javascript.rhino.Node node22 = jSTypeRegistry18.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList20);
        boolean boolean23 = node22.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter24 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry25 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter24);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray26 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList27 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList27, jSTypeArray26);
        com.google.javascript.rhino.Node node29 = jSTypeRegistry25.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList27);
        boolean boolean30 = node29.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray33 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList34 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList34, jSTypeArray33);
        com.google.javascript.rhino.Node node36 = jSTypeRegistry32.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList34);
        com.google.javascript.rhino.Node node39 = new com.google.javascript.rhino.Node((int) (short) 0, node9, node22, node29, node36, 0, 49);
        boolean boolean40 = node9.isDo();
        boolean boolean41 = node9.isWhile();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable42 = node9.children();
        java.lang.String[] strArray49 = new java.lang.String[] { "OFF", "PARAM_LIST", "*global*", ":", "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        node9.setDirectives((java.util.Set<java.lang.String>) strSet50);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        boolean boolean59 = jSTypeList54.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray63 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList64 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList64, jSTypeArray63);
        boolean boolean66 = jSTypeList61.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList64);
        boolean boolean67 = jSTypeList54.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList64);
        boolean boolean68 = strSet50.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList64);
        java.lang.String[] strArray74 = new java.lang.String[] { "*global*", "Unversioned directory", "STRING PARAM_LIST 49", "java.io.IOException: ", "*global*.  at *global* line (unknown line) : (unknown column)" };
        java.lang.Comparable<java.lang.String>[] strComparableArray75 = strSet50.toArray((java.lang.Comparable<java.lang.String>[]) strArray74);
        com.google.javascript.jscomp.JSError jSError76 = com.google.javascript.jscomp.JSError.make(diagnosticType2, strArray74);
        boolean boolean77 = diagnosticGroup0.matches(jSError76);
        com.google.javascript.jscomp.DiagnosticGroups.DEPRECATED = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.CHECK_VARIABLES = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticType diagnosticType82 = com.google.javascript.jscomp.DiagnosticType.error("JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of optimization iterations: {0}", "DiagnosticGroup<checkProvides>");
        boolean boolean83 = diagnosticGroup0.matches(diagnosticType82);
        org.junit.Assert.assertNotNull(diagnosticGroup0);
        org.junit.Assert.assertNotNull(diagnosticType2);
        org.junit.Assert.assertNotNull(jSTypeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(jSTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSTypeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(nodeIterable42);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(jSTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strComparableArray75);
        org.junit.Assert.assertNotNull(jSError76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(diagnosticType82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test07266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07266");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        compilerOptions7.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions7.checkGlobalNamesLevel;
        compilerOptions0.setReportMissingOverride(checkLevel15);
        java.util.Set<java.lang.String> strSet17 = compilerOptions0.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode19 = null;
        compilerOptions18.setTracerMode(tracerMode19);
        boolean boolean21 = compilerOptions18.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel22 = compilerOptions18.sourceMapDetailLevel;
        compilerOptions18.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet25 = compilerOptions18.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile27 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput29 = new com.google.javascript.jscomp.CompilerInput(sourceFile27, true);
        com.google.javascript.rhino.InputId inputId31 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput33 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput29, inputId31, true);
        java.lang.String str34 = compilerInput33.toString();
        boolean boolean35 = strSet25.contains((java.lang.Object) compilerInput33);
        compilerOptions0.stripTypes = strSet25;
        compilerOptions0.setMarkAsCompiled(true);
        java.util.Set<java.lang.String> strSet39 = compilerOptions0.stripTypePrefixes;
        compilerOptions0.setTightenTypes(false);
        boolean boolean42 = compilerOptions0.shouldColorizeErrorOutput();
        compilerOptions0.inlineConstantVars = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(detailLevel22);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "*global*" + "'", str34, "*global*");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test07267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07267");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        compilerOptions7.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions7.checkGlobalNamesLevel;
        compilerOptions0.setReportMissingOverride(checkLevel15);
        java.util.Set<java.lang.String> strSet17 = compilerOptions0.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel19 = compilerOptions18.checkRequires;
        compilerOptions0.setReportMissingOverride(checkLevel19);
        compilerOptions0.setRemoveUnusedVars(false);
        compilerOptions0.syntheticBlockStartMarker = "PARAM_LIST: PARAM_LIST\n";
        boolean boolean25 = compilerOptions0.collapseAnonymousFunctions;
        compilerOptions0.setOptimizeReturns(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + checkLevel19 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel19.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test07268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07268");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy8 = compilerOptions5.propertyRenaming;
        java.lang.String[] strArray11 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        compilerOptions5.setStripTypes((java.util.Set<java.lang.String>) strSet12);
        compilerOptions0.stripNamePrefixes = strSet12;
        compilerOptions0.checkTypes = false;
        boolean boolean18 = compilerOptions0.assumeStrictThis();
        compilerOptions0.convertToDottedProperties = true;
        com.google.javascript.jscomp.CheckLevel checkLevel21 = com.google.javascript.jscomp.CheckLevel.WARNING;
        compilerOptions0.setCheckGlobalThisLevel(checkLevel21);
        com.google.javascript.jscomp.CompilerOptions compilerOptions23 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions23.crossModuleMethodMotion = true;
        compilerOptions23.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions28 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions28.crossModuleMethodMotion = true;
        compilerOptions28.skipAllCompilerPasses();
        compilerOptions28.resetWarningsGuard();
        java.lang.String str33 = compilerOptions28.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy34 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy35 = null;
        compilerOptions28.setRenamingPolicy(variableRenamingPolicy34, propertyRenamingPolicy35);
        com.google.javascript.jscomp.CompilerOptions compilerOptions37 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions37.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy40 = compilerOptions37.propertyRenaming;
        compilerOptions23.setRenamingPolicy(variableRenamingPolicy34, propertyRenamingPolicy40);
        com.google.javascript.jscomp.CompilerOptions compilerOptions42 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions42.crossModuleMethodMotion = true;
        compilerOptions42.optimizeParameters = true;
        compilerOptions42.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel50 = compilerOptions42.checkGlobalNamesLevel;
        com.google.javascript.jscomp.CompilerOptions compilerOptions51 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode52 = null;
        compilerOptions51.setTracerMode(tracerMode52);
        boolean boolean54 = compilerOptions51.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel55 = compilerOptions51.sourceMapDetailLevel;
        compilerOptions51.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet58 = compilerOptions51.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile60 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput62 = new com.google.javascript.jscomp.CompilerInput(sourceFile60, true);
        com.google.javascript.rhino.InputId inputId64 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput66 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput62, inputId64, true);
        java.lang.String str67 = compilerInput66.toString();
        boolean boolean68 = strSet58.contains((java.lang.Object) compilerInput66);
        java.lang.Object[] objArray69 = strSet58.toArray();
        compilerOptions42.setStripTypes(strSet58);
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy71 = compilerOptions42.propertyRenaming;
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy34, propertyRenamingPolicy71);
        compilerOptions0.collapseProperties = false;
        compilerOptions0.setCoalesceVariableNames(true);
        boolean boolean77 = compilerOptions0.labelRenaming;
        compilerOptions0.checkSymbols = true;
        compilerOptions0.setInlineFunctions(false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy8 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy8.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + checkLevel21 + "' != '" + com.google.javascript.jscomp.CheckLevel.WARNING + "'", checkLevel21.equals(com.google.javascript.jscomp.CheckLevel.WARNING));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy34 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy34.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy40 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy40.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel50 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel50.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(detailLevel55);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "*global*" + "'", str67, "*global*");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy71 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy71.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test07269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07269");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.AMBIGUOUS_FUNCTION_DECL;
        com.google.javascript.jscomp.DiagnosticGroups.DUPLICATE_MESSAGE = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.ACCESS_CONTROLS = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.TWEAKS = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.CHECK_USELESS_CODE = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.UNDEFINED_NAMES = diagnosticGroup0;
// flaky:         org.junit.Assert.assertNull(diagnosticGroup0);
    }

    @Test
    public void test07270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07270");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray13 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList14 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14, jSTypeArray13);
        boolean boolean16 = jSTypeList11.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode18 = null;
        compilerOptions17.setTracerMode(tracerMode18);
        boolean boolean20 = compilerOptions17.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel21 = compilerOptions17.sourceMapDetailLevel;
        compilerOptions17.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions24.crossModuleMethodMotion = true;
        compilerOptions24.optimizeParameters = true;
        compilerOptions24.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel32 = compilerOptions24.checkGlobalNamesLevel;
        compilerOptions17.setReportMissingOverride(checkLevel32);
        java.util.Set<java.lang.String> strSet34 = compilerOptions17.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions35 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode36 = null;
        compilerOptions35.setTracerMode(tracerMode36);
        boolean boolean38 = compilerOptions35.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel39 = compilerOptions35.sourceMapDetailLevel;
        compilerOptions35.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet42 = compilerOptions35.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile44 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput46 = new com.google.javascript.jscomp.CompilerInput(sourceFile44, true);
        com.google.javascript.rhino.InputId inputId48 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput50 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput46, inputId48, true);
        java.lang.String str51 = compilerInput50.toString();
        boolean boolean52 = strSet42.contains((java.lang.Object) compilerInput50);
        compilerOptions17.stripTypes = strSet42;
        compilerOptions17.setMarkAsCompiled(true);
        java.util.Set<java.lang.String> strSet56 = compilerOptions17.stripTypePrefixes;
        boolean boolean57 = jSTypeList11.remove((java.lang.Object) strSet56);
        com.google.javascript.jscomp.CompilerOptions compilerOptions58 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions58.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode61 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions58.setTracer(tracerMode61);
        com.google.javascript.jscomp.CompilerOptions.Reach reach63 = com.google.javascript.jscomp.CompilerOptions.Reach.NONE;
        compilerOptions58.setInlineVariables(reach63);
        boolean boolean65 = strSet56.remove((java.lang.Object) reach63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray69 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList70 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70, jSTypeArray69);
        boolean boolean72 = jSTypeList67.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        java.lang.Object[] objArray73 = jSTypeList67.toArray();
        boolean boolean74 = strSet56.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        boolean boolean75 = jSTypeList67.isEmpty();
        boolean boolean76 = jSTypeList3.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        java.lang.Object[] objArray77 = jSTypeList3.toArray();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(jSTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(detailLevel21);
        org.junit.Assert.assertTrue("'" + checkLevel32 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel32.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(detailLevel39);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "*global*" + "'", str51, "*global*");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + tracerMode61 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode61.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + reach63 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.NONE + "'", reach63.equals(com.google.javascript.jscomp.CompilerOptions.Reach.NONE));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(jSTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
    }

    @Test
    public void test07271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07271");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        com.google.javascript.jscomp.CheckLevel checkLevel30 = compilerOptions0.checkMissingReturn;
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions31.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode34 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions31.setTracer(tracerMode34);
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode37 = null;
        compilerOptions36.setTracerMode(tracerMode37);
        boolean boolean39 = compilerOptions36.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel40 = compilerOptions36.sourceMapDetailLevel;
        compilerOptions36.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet43 = compilerOptions36.stripNameSuffixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions44 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode45 = null;
        compilerOptions44.setTracerMode(tracerMode45);
        boolean boolean47 = compilerOptions44.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel48 = compilerOptions44.sourceMapDetailLevel;
        compilerOptions44.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions51 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions51.crossModuleMethodMotion = true;
        compilerOptions51.optimizeParameters = true;
        compilerOptions51.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel59 = compilerOptions51.checkGlobalNamesLevel;
        compilerOptions44.setReportMissingOverride(checkLevel59);
        compilerOptions36.setAggressiveVarCheck(checkLevel59);
        compilerOptions31.setCheckUnreachableCode(checkLevel59);
        com.google.javascript.jscomp.SourceMap.Format format63 = compilerOptions31.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format63);
        java.lang.String str65 = compilerOptions0.locale;
        compilerOptions0.setComputeFunctionSideEffects(false);
        java.lang.String str68 = compilerOptions0.renamePrefix;
        compilerOptions0.removeUnusedPrototypeProperties = false;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel30 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel30.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + tracerMode34 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode34.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(detailLevel40);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(detailLevel48);
        org.junit.Assert.assertTrue("'" + checkLevel59 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel59.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(format63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str68);
    }

    @Test
    public void test07272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07272");
        java.util.logging.Level level0 = java.util.logging.Level.OFF;
        java.lang.String str1 = level0.toString();
        java.lang.String str2 = level0.toString();
        com.google.javascript.jscomp.CompilerOptions compilerOptions3 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions3.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions3.markNoSideEffectCalls = false;
        boolean boolean8 = level0.equals((java.lang.Object) compilerOptions3);
        org.junit.Assert.assertNotNull(level0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "OFF" + "'", str1, "OFF");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "OFF" + "'", str2, "OFF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test07273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07273");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        compilerOptions0.setExternExports(true);
        compilerOptions0.setCollapseAnonymousFunctions(false);
        java.util.Set<java.lang.String> strSet10 = compilerOptions0.stripNameSuffixes;
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test07274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07274");
        java.io.File file1 = new java.io.File(":");
        boolean boolean2 = file1.isFile();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), ":");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test07275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07275");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        boolean boolean4 = node3.isContinue();
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry6 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5);
        jSTypeRegistry6.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSType jSType8 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] { jSType8 };
        com.google.javascript.rhino.Node node10 = jSTypeRegistry6.createParameters(jSTypeArray9);
        int int11 = node3.getIndexOfChild(node10);
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry14.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        node18.addChildrenToBack(node24);
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry27.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        boolean boolean32 = node31.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        com.google.javascript.rhino.Node node38 = jSTypeRegistry34.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        boolean boolean39 = node38.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        com.google.javascript.rhino.Node node48 = new com.google.javascript.rhino.Node((int) (short) 0, node18, node31, node38, node45, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter50 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry51 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter50);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray52 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList53 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList53, jSTypeArray52);
        com.google.javascript.rhino.Node node55 = jSTypeRegistry51.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList53);
        com.google.javascript.rhino.ErrorReporter errorReporter56 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry57 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter56);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray58 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList59 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList59, jSTypeArray58);
        com.google.javascript.rhino.Node node61 = jSTypeRegistry57.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList59);
        node55.addChildrenToBack(node61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList66 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList66, jSTypeArray65);
        com.google.javascript.rhino.Node node68 = jSTypeRegistry64.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList66);
        boolean boolean69 = node68.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray72 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList73 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList73, jSTypeArray72);
        com.google.javascript.rhino.Node node75 = jSTypeRegistry71.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList73);
        boolean boolean76 = node75.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter77 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry78 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter77);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray79 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList80 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList80, jSTypeArray79);
        com.google.javascript.rhino.Node node82 = jSTypeRegistry78.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList80);
        com.google.javascript.rhino.Node node85 = new com.google.javascript.rhino.Node((int) (short) 0, node55, node68, node75, node82, 0, 49);
        com.google.javascript.rhino.Node node86 = node48.useSourceInfoFrom(node68);
        boolean boolean87 = node68.isExprResult();
        int int88 = node3.getIndexOfChild(node68);
        boolean boolean89 = node3.isInc();
        node3.detachChildren();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(jSTypeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(jSTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(jSTypeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(jSTypeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNotNull(node86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test07276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07276");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str1 = compilerOptions0.syntheticBlockStartMarker;
        compilerOptions0.labelRenaming = true;
        boolean boolean4 = compilerOptions0.inlineLocalFunctions;
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.crossModuleMethodMotion = true;
        compilerOptions5.skipAllCompilerPasses();
        boolean boolean9 = compilerOptions5.flowSensitiveInlineVariables;
        java.lang.String[] strArray19 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        compilerOptions5.stripTypes = strSet20;
        compilerOptions0.setStripNameSuffixes((java.util.Set<java.lang.String>) strSet20);
        boolean boolean24 = compilerOptions0.ideMode;
        compilerOptions0.setLooseTypes(true);
        compilerOptions0.setAmbiguateProperties(true);
        compilerOptions0.setManageClosureDependencies(true);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode31 = compilerOptions0.getTracerMode();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + tracerMode31 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode31.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
    }

    @Test
    public void test07277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07277");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy5 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions6.propertyRenaming;
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy5, propertyRenamingPolicy9);
        compilerOptions0.setTransformAMDToCJSModules(true);
        boolean boolean13 = compilerOptions0.rewriteFunctionExpressions;
        compilerOptions0.smartNameRemoval = false;
        compilerOptions0.renamePrefixNamespace = "";
        java.util.Set<java.lang.String> strSet18 = compilerOptions0.stripTypePrefixes;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        compilerOptions0.setDefineReplacements(strMap19);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strSet18);
    }

    @Test
    public void test07278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07278");
        com.google.javascript.rhino.Node node1 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node2 = new com.google.javascript.rhino.Node(97, node1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07279");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        java.lang.Object obj6 = null;
        com.google.javascript.rhino.Node node7 = strMap4.get(obj6);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.Node>> strEntrySet8 = strMap4.entrySet();
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str10 = compilerOptions9.syntheticBlockStartMarker;
        compilerOptions9.labelRenaming = true;
        compilerOptions9.setMoveFunctionDeclarations(false);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray18 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList19 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList19, jSTypeArray18);
        com.google.javascript.rhino.Node node21 = jSTypeRegistry17.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList19);
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.Node node27 = jSTypeRegistry23.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        node21.addChildrenToBack(node27);
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        com.google.javascript.rhino.Node node34 = jSTypeRegistry30.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        boolean boolean35 = node34.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray38 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList39 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList39, jSTypeArray38);
        com.google.javascript.rhino.Node node41 = jSTypeRegistry37.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList39);
        boolean boolean42 = node41.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        com.google.javascript.rhino.Node node51 = new com.google.javascript.rhino.Node((int) (short) 0, node21, node34, node41, node48, 0, 49);
        com.google.javascript.rhino.Node node53 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node54 = node51.useSourceInfoIfMissingFrom(node53);
        com.google.javascript.rhino.JSDocInfo jSDocInfo55 = node51.getJSDocInfo();
        boolean boolean56 = node51.isGetterDef();
        com.google.javascript.rhino.Node node57 = strMap4.getOrDefault((java.lang.Object) compilerOptions9, node51);
        strMap4.clear();
        com.google.javascript.jscomp.CompilerOptions compilerOptions59 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions59.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy62 = compilerOptions59.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap63 = compilerOptions59.getTweakReplacements();
        boolean boolean64 = strMap63.isEmpty();
        strMap63.clear();
        com.google.javascript.rhino.ErrorReporter errorReporter66 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry67 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter66);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.Node node71 = jSTypeRegistry67.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        boolean boolean72 = node71.isIn();
        boolean boolean73 = strMap63.containsValue((java.lang.Object) node71);
        strMap4.putAll(strMap63);
        strMap4.clear();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(strEntrySet8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(jSTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(jSTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNull(jSDocInfo55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy62 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy62.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test07280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07280");
        java.nio.charset.Charset charset0 = java.nio.charset.Charset.defaultCharset();
        boolean boolean1 = charset0.isRegistered();
        java.nio.charset.CharsetEncoder charsetEncoder2 = charset0.newEncoder();
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType3 = com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN;
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean8 = node7.isTry();
        java.lang.String str9 = node7.toString();
        boolean boolean10 = node7.isIn();
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship15 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType3, node7, node14);
        node7.setSourceEncodedPositionForTree((int) 'a');
        com.google.javascript.rhino.JSDocInfo jSDocInfo18 = node7.getJSDocInfo();
        int int19 = node7.getLength();
        boolean boolean20 = charset0.equals((java.lang.Object) node7);
        java.lang.String str21 = charset0.displayName();
        boolean boolean23 = charset0.equals((java.lang.Object) 800);
        java.lang.String str24 = charset0.toString();
        org.junit.Assert.assertNotNull(charset0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(charsetEncoder2);
        org.junit.Assert.assertTrue("'" + subclassType3 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN + "'", subclassType3.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN));
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "STRING PARAM_LIST 49" + "'", str9, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNull(jSDocInfo18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "US-ASCII" + "'", str21, "US-ASCII");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "US-ASCII" + "'", str24, "US-ASCII");
    }

    @Test
    public void test07281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07281");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        node42.addChildrenToBack(node48);
        com.google.javascript.rhino.Node node50 = node6.clonePropsFrom(node48);
        boolean boolean51 = node48.isBlock();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry54 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray55 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList56 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56, jSTypeArray55);
        com.google.javascript.rhino.Node node58 = jSTypeRegistry54.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry60 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        com.google.javascript.rhino.Node node64 = jSTypeRegistry60.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        node58.addChildrenToBack(node64);
        com.google.javascript.rhino.ErrorReporter errorReporter66 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry67 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter66);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.Node node71 = jSTypeRegistry67.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        boolean boolean72 = node71.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter73 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry74 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter73);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray75 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList76 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList76, jSTypeArray75);
        com.google.javascript.rhino.Node node78 = jSTypeRegistry74.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList76);
        boolean boolean79 = node78.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry81 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter80);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray82 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList83 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList83, jSTypeArray82);
        com.google.javascript.rhino.Node node85 = jSTypeRegistry81.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList83);
        com.google.javascript.rhino.Node node88 = new com.google.javascript.rhino.Node((int) (short) 0, node58, node71, node78, node85, 0, 49);
        com.google.javascript.rhino.Node node89 = node58.getNext();
        java.lang.String str90 = node89.getQualifiedName();
        boolean boolean91 = node89.isInc();
        com.google.javascript.rhino.Node node92 = node48.copyInformationFrom(node89);
        boolean boolean93 = node48.isGetterDef();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(jSTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(jSTypeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(jSTypeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(node92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test07282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07282");
        com.google.javascript.jscomp.SourceFile.Builder builder0 = com.google.javascript.jscomp.SourceFile.builder();
        java.nio.charset.Charset charset1 = null;
        com.google.javascript.jscomp.SourceFile.Builder builder2 = builder0.withCharset(charset1);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
    }

    @Test
    public void test07283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07283");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions21.crossModuleMethodMotion = true;
        compilerOptions21.skipAllCompilerPasses();
        boolean boolean25 = compilerOptions21.flowSensitiveInlineVariables;
        java.lang.String[] strArray35 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet36 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet36, strArray35);
        compilerOptions21.stripTypes = strSet36;
        compilerOptions0.stripNameSuffixes = strSet36;
        compilerOptions0.setExtractPrototypeMemberDeclarations(false);
        compilerOptions0.setTweakToStringLiteral("", "java.io.IOException: java.io.IOException: ");
        compilerOptions0.optimizeReturns = true;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test07284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07284");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageOut();
        compilerOptions0.setFoldConstants(true);
        boolean boolean8 = compilerOptions0.generatePseudoNames;
        java.lang.String str9 = compilerOptions0.aliasStringsBlacklist;
        compilerOptions0.setCheckSuspiciousCode(false);
        compilerOptions0.flowSensitiveInlineVariables = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode17 = compilerOptions14.getLanguageIn();
        compilerOptions0.setLanguageOut(languageMode17);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(languageMode5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + languageMode17 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode17.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
    }

    @Test
    public void test07285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07285");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.checkControlStructures = true;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test07286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07286");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        boolean boolean7 = node6.isIn();
        boolean boolean8 = node6.isGetElem();
        node6.setSourceEncodedPositionForTree(38);
        boolean boolean11 = node6.isFromExterns();
        boolean boolean12 = node6.isReturn();
        boolean boolean13 = node6.hasOneChild();
        boolean boolean14 = node6.isString();
        com.google.javascript.rhino.Node node18 = com.google.javascript.rhino.Node.newString("", 48, 51);
        boolean boolean19 = node18.isFromExterns();
        com.google.javascript.rhino.Node node22 = new com.google.javascript.rhino.Node(196607, node6, node18, 44, 42);
        com.google.javascript.rhino.Node node23 = node22.getLastSibling();
        boolean boolean24 = node22.isEmpty();
        com.google.javascript.rhino.Node node29 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node33 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean34 = node33.isTry();
        java.lang.String str35 = node33.toString();
        boolean boolean36 = node29.hasChild(node33);
        java.lang.String str37 = node33.getSourceFileName();
        com.google.javascript.rhino.Node node40 = new com.google.javascript.rhino.Node(51, node33, 42, 43);
        boolean boolean41 = node33.isDec();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry43 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray44 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList45 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList45, jSTypeArray44);
        com.google.javascript.rhino.Node node47 = jSTypeRegistry43.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList45);
        com.google.javascript.rhino.ErrorReporter errorReporter48 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry49 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray50 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList51 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList51, jSTypeArray50);
        com.google.javascript.rhino.Node node53 = jSTypeRegistry49.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList51);
        node47.addChildrenToBack(node53);
        boolean boolean55 = node53.isAssignAdd();
        boolean boolean56 = node53.isNumber();
        com.google.javascript.jscomp.CodingConvention.Bind bind57 = new com.google.javascript.jscomp.CodingConvention.Bind(node22, node33, node53);
        boolean boolean58 = node33.isNot();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "STRING PARAM_LIST 49" + "'", str35, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(jSTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(jSTypeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test07287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07287");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        boolean boolean4 = compilerOptions0.disambiguateProperties;
        compilerOptions0.setFoldConstants(false);
        boolean boolean7 = compilerOptions0.inlineFunctions;
        compilerOptions0.disambiguateProperties = true;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test07288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07288");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec1 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("*global*");
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        com.google.javascript.rhino.Node node8 = jSTypeRegistry4.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray11 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList12 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList12, jSTypeArray11);
        com.google.javascript.rhino.Node node14 = jSTypeRegistry10.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList12);
        node8.addChildrenToBack(node14);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray18 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList19 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList19, jSTypeArray18);
        com.google.javascript.rhino.Node node21 = jSTypeRegistry17.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList19);
        boolean boolean22 = node21.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        boolean boolean29 = node28.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.Node node35 = jSTypeRegistry31.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        com.google.javascript.rhino.Node node38 = new com.google.javascript.rhino.Node((int) (short) 0, node8, node21, node28, node35, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray48 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList49 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList49, jSTypeArray48);
        com.google.javascript.rhino.Node node51 = jSTypeRegistry47.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList49);
        node45.addChildrenToBack(node51);
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry54 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray55 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList56 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56, jSTypeArray55);
        com.google.javascript.rhino.Node node58 = jSTypeRegistry54.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        boolean boolean59 = node58.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter60 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter60);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray62 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList63 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63, jSTypeArray62);
        com.google.javascript.rhino.Node node65 = jSTypeRegistry61.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        boolean boolean66 = node65.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter67 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry68 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter67);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray69 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList70 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70, jSTypeArray69);
        com.google.javascript.rhino.Node node72 = jSTypeRegistry68.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 0, node45, node58, node65, node72, 0, 49);
        com.google.javascript.rhino.Node node76 = node38.useSourceInfoFrom(node58);
        boolean boolean77 = node76.hasChildren();
        boolean boolean78 = node76.isDefaultCase();
        boolean boolean79 = node76.isSwitch();
        com.google.javascript.rhino.Node node80 = assertionFunctionSpec1.getAssertedParam(node76);
        java.lang.String str81 = node76.getSourceFileName();
        com.google.javascript.rhino.Node node85 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean87 = node85.getBooleanProp((int) (byte) 10);
        com.google.javascript.rhino.Node node88 = node76.useSourceInfoIfMissingFrom(node85);
        boolean boolean89 = node76.isDec();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder90 = node76.getJsDocBuilderForNode();
        fileLevelJsDocBuilder90.append("PARAM_LIST [var_args_name: 1] [opt_arg: 1]\n");
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(jSTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(jSTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(jSTypeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(jSTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(jSTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(jSTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder90);
    }

    @Test
    public void test07289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07289");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str1 = compilerOptions0.syntheticBlockStartMarker;
        compilerOptions0.labelRenaming = true;
        compilerOptions0.setDefineToNumberLiteral("InputId: *global*", 54);
        compilerOptions0.generateExports = false;
        compilerOptions0.setDefineToBooleanLiteral("US-ASCII", false);
        compilerOptions0.instrumentationTemplate = "/";
        compilerOptions0.setRemoveUnusedClassProperties(false);
        compilerOptions0.inlineFunctions = true;
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test07290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07290");
        com.google.javascript.jscomp.JSSourceFile jSSourceFile1 = com.google.javascript.jscomp.JSSourceFile.fromFile("Exceeded max number of code motion iterations: Unversioned directory");
        java.lang.String str2 = jSSourceFile1.getOriginalPath();
        org.junit.Assert.assertNotNull(jSSourceFile1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Exceeded max number of code motion iterations: Unversioned directory" + "'", str2, "Exceeded max number of code motion iterations: Unversioned directory");
    }

    @Test
    public void test07291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07291");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("", "Node tree inequality:\nTree1:\nNUMBER 1.645456103E12 47\n\n\nTree2:\nASSIGN_MOD\n\n\nSubtree1: NUMBER 1.645456103E12 47\n\n\nSubtree2: ASSIGN_MOD\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: a source must have a name");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07292");
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags1 = new com.google.javascript.rhino.Node.SideEffectFlags(2147483647);
        sideEffectFlags1.clearAllFlags();
        sideEffectFlags1.setMutatesThis();
        boolean boolean4 = sideEffectFlags1.areAllFlagsSet();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test07293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07293");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        compilerOptions0.setSkipAllPasses(false);
        compilerOptions0.setRewriteNewDateGoogNow(false);
        boolean boolean13 = compilerOptions0.preferLineBreakAtEndOfFile;
        compilerOptions0.setCollapsePropertiesOnExternTypes(true);
        compilerOptions0.setReportPath("");
        boolean boolean18 = compilerOptions0.crossModuleCodeMotion;
        compilerOptions0.setReplaceIdGenerators(true);
        compilerOptions0.recordFunctionInformation = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test07294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07294");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.setSyntheticBlockStartMarker("OFF");
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.setDeadAssignmentElimination(true);
        compilerOptions0.generatePseudoNames = false;
        compilerOptions0.syntheticBlockEndMarker = "TYPEOF : 44\n";
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07295");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newNumber((double) 9);
        // The following exception was thrown during execution in test generation
        try {
            node1.setSideEffectFlags(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test07296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07296");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        compilerOptions0.prettyPrint = false;
        boolean boolean32 = compilerOptions0.aliasAllStrings;
        com.google.javascript.jscomp.CompilerOptions.Reach reach33 = com.google.javascript.jscomp.CompilerOptions.Reach.NONE;
        compilerOptions0.setInlineVariables(reach33);
        compilerOptions0.setTweakToBooleanLiteral("STRING PARAM_LIST 49", true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + reach33 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.NONE + "'", reach33.equals(com.google.javascript.jscomp.CompilerOptions.Reach.NONE));
    }

    @Test
    public void test07297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07297");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.coalesceVariableNames = true;
        java.lang.String str9 = compilerOptions0.aliasStringsBlacklist;
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions10.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy13 = compilerOptions10.propertyRenaming;
        java.lang.String[] strArray16 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        compilerOptions10.setStripTypes((java.util.Set<java.lang.String>) strSet17);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode21 = null;
        compilerOptions20.setTracerMode(tracerMode21);
        boolean boolean23 = compilerOptions20.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel24 = compilerOptions20.sourceMapDetailLevel;
        compilerOptions20.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions27.crossModuleMethodMotion = true;
        compilerOptions27.optimizeParameters = true;
        compilerOptions27.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel35 = compilerOptions27.checkGlobalNamesLevel;
        compilerOptions20.setReportMissingOverride(checkLevel35);
        compilerOptions10.setCheckUnreachableCode(checkLevel35);
        compilerOptions10.syntheticBlockStartMarker = "*global*";
        compilerOptions10.prettyPrint = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions42 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions42.crossModuleMethodMotion = true;
        compilerOptions42.optimizeParameters = true;
        compilerOptions42.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel50 = compilerOptions42.checkGlobalNamesLevel;
        compilerOptions10.checkGlobalNamesLevel = checkLevel50;
        compilerOptions0.setCheckUnreachableCode(checkLevel50);
        java.util.Set<java.lang.String> strSet53 = null;
        compilerOptions0.setStripNamePrefixes(strSet53);
        boolean boolean55 = compilerOptions0.printInputDelimiter;
        com.google.common.collect.Multimap<com.google.javascript.jscomp.CustomPassExecutionTime, com.google.javascript.jscomp.CompilerPass> customPassExecutionTimeMultimap56 = null;
        compilerOptions0.setCustomPasses(customPassExecutionTimeMultimap56);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy13 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy13.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(detailLevel24);
        org.junit.Assert.assertTrue("'" + checkLevel35 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel35.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel50 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel50.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test07298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07298");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("/experiment/:", jSTypeNative1);
        java.lang.String str3 = assertionFunctionSpec2.getFunctionName();
        java.lang.String str4 = assertionFunctionSpec2.getFunctionName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/experiment/:" + "'", str3, "/experiment/:");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/experiment/:" + "'", str4, "/experiment/:");
    }

    @Test
    public void test07299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07299");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean1 = java.nio.charset.Charset.isSupported("InputId: hi!");
            org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: InputId: hi!");
        } catch (java.nio.charset.IllegalCharsetNameException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07300");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        compilerOptions0.setCrossModuleCodeMotion(false);
        java.lang.String str8 = compilerOptions0.sourceMapOutputPath;
        boolean boolean9 = compilerOptions0.checkSymbols;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray13 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList14 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14, jSTypeArray13);
        boolean boolean16 = jSTypeList11.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode18 = null;
        compilerOptions17.setTracerMode(tracerMode18);
        boolean boolean20 = compilerOptions17.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel21 = compilerOptions17.sourceMapDetailLevel;
        compilerOptions17.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions24.crossModuleMethodMotion = true;
        compilerOptions24.optimizeParameters = true;
        compilerOptions24.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel32 = compilerOptions24.checkGlobalNamesLevel;
        compilerOptions17.setReportMissingOverride(checkLevel32);
        java.util.Set<java.lang.String> strSet34 = compilerOptions17.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions35 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode36 = null;
        compilerOptions35.setTracerMode(tracerMode36);
        boolean boolean38 = compilerOptions35.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel39 = compilerOptions35.sourceMapDetailLevel;
        compilerOptions35.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet42 = compilerOptions35.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile44 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput46 = new com.google.javascript.jscomp.CompilerInput(sourceFile44, true);
        com.google.javascript.rhino.InputId inputId48 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput50 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput46, inputId48, true);
        java.lang.String str51 = compilerInput50.toString();
        boolean boolean52 = strSet42.contains((java.lang.Object) compilerInput50);
        compilerOptions17.stripTypes = strSet42;
        compilerOptions17.setMarkAsCompiled(true);
        java.util.Set<java.lang.String> strSet56 = compilerOptions17.stripTypePrefixes;
        boolean boolean57 = jSTypeList11.remove((java.lang.Object) strSet56);
        com.google.javascript.jscomp.CompilerOptions compilerOptions58 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions58.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode61 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions58.setTracer(tracerMode61);
        com.google.javascript.jscomp.CompilerOptions.Reach reach63 = com.google.javascript.jscomp.CompilerOptions.Reach.NONE;
        compilerOptions58.setInlineVariables(reach63);
        boolean boolean65 = strSet56.remove((java.lang.Object) reach63);
        compilerOptions0.setRemoveUnusedVariables(reach63);
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.setExtractPrototypeMemberDeclarations(false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(jSTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(detailLevel21);
        org.junit.Assert.assertTrue("'" + checkLevel32 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel32.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(detailLevel39);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "*global*" + "'", str51, "*global*");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + tracerMode61 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode61.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + reach63 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.NONE + "'", reach63.equals(com.google.javascript.jscomp.CompilerOptions.Reach.NONE));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test07301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07301");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setLooseTypes(false);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode3 = compilerOptions0.getLanguageIn();
        compilerOptions0.rewriteFunctionExpressions = true;
        compilerOptions0.setCheckControlStructures(false);
        org.junit.Assert.assertTrue("'" + languageMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode3.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
    }

    @Test
    public void test07302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07302");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.inputDelimiter = "/experiment/:/hi!";
        compilerOptions0.locale = "hi!";
        compilerOptions0.devirtualizePrototypeMethods = true;
        boolean boolean10 = compilerOptions0.generatePseudoNames;
        com.google.javascript.jscomp.CheckLevel checkLevel11 = compilerOptions0.reportMissingOverride;
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + checkLevel11 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel11.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07303");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        compilerOptions9.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy14 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions15 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions15.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy18 = compilerOptions15.propertyRenaming;
        compilerOptions9.setRenamingPolicy(variableRenamingPolicy14, propertyRenamingPolicy18);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.skipAllCompilerPasses();
        boolean boolean24 = compilerOptions20.flowSensitiveInlineVariables;
        java.lang.String[] strArray34 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        compilerOptions20.stripTypes = strSet35;
        compilerOptions9.setStripNamePrefixes((java.util.Set<java.lang.String>) strSet35);
        compilerOptions0.setReplaceStringsReservedStrings((java.util.Set<java.lang.String>) strSet35);
        compilerOptions0.setOutputCharset("/");
        compilerOptions0.collapseAnonymousFunctions = false;
        compilerOptions0.setSyntheticBlockStartMarker(":/hi!");
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap46 = null;
        compilerOptions0.setCssRenamingMap(cssRenamingMap46);
        boolean boolean48 = compilerOptions0.assumeStrictThis();
        com.google.javascript.jscomp.CheckLevel checkLevel49 = compilerOptions0.brokenClosureRequiresLevel;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy18 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy18.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + checkLevel49 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel49.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
    }

    @Test
    public void test07304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07304");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        compilerOptions0.setCrossModuleCodeMotion(false);
        compilerOptions0.inputDelimiter = "STRING PARAM_LIST 49";
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy10 = compilerOptions0.variableRenaming;
        com.google.javascript.rhino.InputId inputId12 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode14 = null;
        compilerOptions13.setTracerMode(tracerMode14);
        boolean boolean16 = compilerOptions13.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel17 = compilerOptions13.sourceMapDetailLevel;
        compilerOptions13.setColorizeErrorOutput(true);
        compilerOptions13.generatePseudoNames = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy22 = com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED;
        compilerOptions13.setVariableRenaming(variableRenamingPolicy22);
        boolean boolean24 = inputId12.equals((java.lang.Object) variableRenamingPolicy22);
        compilerOptions0.variableRenaming = variableRenamingPolicy22;
        compilerOptions0.collapseAnonymousFunctions = true;
        com.google.javascript.jscomp.JSModule jSModule29 = new com.google.javascript.jscomp.JSModule("*global*.  at *global* line (unknown line) : (unknown column)");
        java.util.List<java.lang.String> strList30 = jSModule29.getRequires();
        compilerOptions0.setManageClosureDependencies(strList30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        compilerOptions0.setTweakReplacements(strMap32);
        com.google.javascript.jscomp.CompilerOptions compilerOptions34 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions34.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy37 = compilerOptions34.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap38 = compilerOptions34.getTweakReplacements();
        com.google.javascript.jscomp.CompilerOptions compilerOptions39 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel40 = compilerOptions39.checkRequires;
        compilerOptions39.setRewriteNewDateGoogNow(true);
        compilerOptions39.setSyntheticBlockStartMarker("OFF");
        compilerOptions39.skipAllCompilerPasses();
        com.google.javascript.jscomp.CompilerOptions compilerOptions46 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions46.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy49 = compilerOptions46.propertyRenaming;
        java.lang.String[] strArray52 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet53, strArray52);
        compilerOptions46.setStripTypes((java.util.Set<java.lang.String>) strSet53);
        com.google.javascript.jscomp.CompilerOptions compilerOptions56 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode57 = null;
        compilerOptions56.setTracerMode(tracerMode57);
        boolean boolean59 = compilerOptions56.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel60 = compilerOptions56.sourceMapDetailLevel;
        compilerOptions56.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions63 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions63.crossModuleMethodMotion = true;
        compilerOptions63.optimizeParameters = true;
        compilerOptions63.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel71 = compilerOptions63.checkGlobalNamesLevel;
        compilerOptions56.setReportMissingOverride(checkLevel71);
        compilerOptions46.setCheckUnreachableCode(checkLevel71);
        compilerOptions39.setCheckMissingReturn(checkLevel71);
        compilerOptions34.setBrokenClosureRequiresLevel(checkLevel71);
        boolean boolean76 = compilerOptions34.inlineFunctions;
        com.google.javascript.jscomp.CheckLevel checkLevel77 = compilerOptions34.checkRequires;
        compilerOptions0.checkGlobalNamesLevel = checkLevel77;
        com.google.javascript.jscomp.CompilerOptions compilerOptions79 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions79.crossModuleMethodMotion = true;
        compilerOptions79.setProtectHiddenSideEffects(true);
        boolean boolean84 = compilerOptions79.isExternExportsEnabled();
        com.google.javascript.jscomp.CompilerOptions.Reach reach85 = com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY;
        compilerOptions79.setInlineFunctions(reach85);
        compilerOptions0.setRemoveUnusedVariables(reach85);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy10 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.OFF + "'", variableRenamingPolicy10.equals(com.google.javascript.jscomp.VariableRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(detailLevel17);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy22 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED + "'", variableRenamingPolicy22.equals(com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy37 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy37.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + checkLevel40 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel40.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy49 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy49.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(detailLevel60);
        org.junit.Assert.assertTrue("'" + checkLevel71 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel71.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + checkLevel77 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel77.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + reach85 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY + "'", reach85.equals(com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY));
    }

    @Test
    public void test07305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07305");
        com.google.javascript.jscomp.SourceFile sourceFile1 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput3 = new com.google.javascript.jscomp.CompilerInput(sourceFile1, true);
        com.google.javascript.jscomp.CompilerInput compilerInput6 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput3, "/experiment/:/hi!", false);
        com.google.javascript.rhino.InputId inputId7 = compilerInput6.getInputId();
        org.junit.Assert.assertNotNull(inputId7);
    }

    @Test
    public void test07306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07306");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec1 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("*global*");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString((int) ' ', "OFF");
        com.google.javascript.rhino.Node node5 = assertionFunctionSpec1.getAssertedParam(node4);
        boolean boolean6 = node5.isOr();
        boolean boolean7 = node5.isTry();
        boolean boolean8 = node5.isCall();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test07307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07307");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        boolean boolean9 = compilerOptions0.optimizeParameters;
        compilerOptions0.setFoldConstants(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions12 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions12.crossModuleMethodMotion = true;
        compilerOptions12.skipAllCompilerPasses();
        compilerOptions12.resetWarningsGuard();
        compilerOptions12.setInlineLocalVariables(false);
        compilerOptions12.setIdeMode(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions21.crossModuleMethodMotion = true;
        compilerOptions21.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy26 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions27.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy30 = compilerOptions27.propertyRenaming;
        compilerOptions21.setRenamingPolicy(variableRenamingPolicy26, propertyRenamingPolicy30);
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.crossModuleMethodMotion = true;
        compilerOptions32.skipAllCompilerPasses();
        boolean boolean36 = compilerOptions32.flowSensitiveInlineVariables;
        java.lang.String[] strArray46 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        compilerOptions32.stripTypes = strSet47;
        compilerOptions21.setStripNamePrefixes((java.util.Set<java.lang.String>) strSet47);
        compilerOptions12.setReplaceStringsReservedStrings((java.util.Set<java.lang.String>) strSet47);
        boolean boolean52 = compilerOptions12.generateExports;
        compilerOptions12.setFoldConstants(true);
        boolean boolean55 = compilerOptions12.recordFunctionInformation;
        compilerOptions12.setMoveFunctionDeclarations(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions58 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode59 = null;
        compilerOptions58.setTracerMode(tracerMode59);
        boolean boolean61 = compilerOptions58.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel62 = compilerOptions58.sourceMapDetailLevel;
        compilerOptions58.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions65 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions65.crossModuleMethodMotion = true;
        compilerOptions65.optimizeParameters = true;
        compilerOptions65.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel73 = compilerOptions65.checkGlobalNamesLevel;
        compilerOptions58.setReportMissingOverride(checkLevel73);
        java.util.Set<java.lang.String> strSet75 = compilerOptions58.stripNameSuffixes;
        boolean boolean76 = compilerOptions58.jqueryPass;
        com.google.javascript.jscomp.CompilerOptions compilerOptions77 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions77.crossModuleMethodMotion = true;
        compilerOptions77.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy82 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions83 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions83.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy86 = compilerOptions83.propertyRenaming;
        compilerOptions77.setRenamingPolicy(variableRenamingPolicy82, propertyRenamingPolicy86);
        compilerOptions77.setTransformAMDToCJSModules(true);
        boolean boolean90 = compilerOptions77.exportTestFunctions;
        boolean boolean91 = compilerOptions77.exportTestFunctions;
        boolean boolean92 = compilerOptions77.foldConstants;
        byte[] byteArray93 = new byte[] {};
        compilerOptions77.setInputVariableMapSerialized(byteArray93);
        compilerOptions58.setInputVariableMapSerialized(byteArray93);
        compilerOptions12.inputPropertyMapSerialized = byteArray93;
        compilerOptions0.inputVariableMapSerialized = byteArray93;
        compilerOptions0.lineBreak = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy30 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy30.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(detailLevel62);
        org.junit.Assert.assertTrue("'" + checkLevel73 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel73.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy86 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy86.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[]");
    }

    @Test
    public void test07308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07308");
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags1 = new com.google.javascript.rhino.Node.SideEffectFlags(50);
        sideEffectFlags1.setMutatesThis();
        sideEffectFlags1.clearSideEffectFlags();
        sideEffectFlags1.setMutatesGlobalState();
    }

    @Test
    public void test07309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07309");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean1 = java.nio.charset.Charset.isSupported("PARAM_LIST5278126033942481271Unversioned directory");
            org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: PARAM_LIST5278126033942481271Unversioned directory");
        } catch (java.nio.charset.IllegalCharsetNameException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07310");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str1 = compilerOptions0.syntheticBlockStartMarker;
        compilerOptions0.labelRenaming = true;
        boolean boolean4 = compilerOptions0.inlineLocalFunctions;
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.crossModuleMethodMotion = true;
        compilerOptions5.skipAllCompilerPasses();
        boolean boolean9 = compilerOptions5.flowSensitiveInlineVariables;
        java.lang.String[] strArray19 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        compilerOptions5.stripTypes = strSet20;
        compilerOptions0.setStripNameSuffixes((java.util.Set<java.lang.String>) strSet20);
        boolean boolean24 = compilerOptions0.ideMode;
        compilerOptions0.crossModuleMethodMotion = false;
        compilerOptions0.setOutputJsStringUsage(true);
        boolean boolean29 = compilerOptions0.aliasKeywords;
        boolean boolean30 = compilerOptions0.gatherCssNames;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test07311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07311");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        compilerOptions0.setDefineToBooleanLiteral("", true);
        java.lang.String str12 = compilerOptions0.renamePrefixNamespace;
        compilerOptions0.labelRenaming = false;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode15 = compilerOptions0.getLanguageOut();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(languageMode15);
    }

    @Test
    public void test07312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07312");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.DUPLICATE_MESSAGE;
        com.google.javascript.jscomp.DiagnosticGroups.ACCESS_CONTROLS = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.UNDEFINED_NAMES = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.GLOBAL_THIS = diagnosticGroup0;
// flaky:         org.junit.Assert.assertNull(diagnosticGroup0);
    }

    @Test
    public void test07313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07313");
        java.io.PrintStream printStream1 = new java.io.PrintStream("*global*.  at *global* line (unknown line) : (unknown column)");
        printStream1.println(true);
        printStream1.print((double) 280489607168L);
        com.google.javascript.jscomp.Compiler compiler6 = new com.google.javascript.jscomp.Compiler(printStream1);
    }

    @Test
    public void test07314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07314");
        java.io.File file3 = new java.io.File(":");
        java.io.File file5 = new java.io.File(file3, "FINEST");
        java.io.File file6 = java.io.File.createTempFile("OFF", "", file3);
        java.io.File file8 = new java.io.File(file6, "PARAM_LIST");
        java.io.File file9 = file8.getParentFile();
        java.io.File file12 = new java.io.File(":", "hi!");
        boolean boolean15 = file12.setExecutable(false, false);
        java.io.File file16 = file12.getParentFile();
        long long17 = file16.getUsableSpace();
        boolean boolean18 = file16.mkdirs();
        java.nio.charset.Charset charset19 = null;
        com.google.javascript.jscomp.JSSourceFile jSSourceFile20 = com.google.javascript.jscomp.JSSourceFile.fromFile(file16, charset19);
        java.io.File file23 = new java.io.File(":", "hi!");
        boolean boolean26 = file23.setExecutable(true, false);
        boolean boolean28 = file23.setWritable(false);
        boolean boolean29 = file23.canWrite();
        java.net.URI uRI30 = file23.toURI();
        boolean boolean31 = file16.renameTo(file23);
        boolean boolean32 = file23.setReadOnly();
        boolean boolean33 = file23.canWrite();
        boolean boolean34 = file23.createNewFile();
        int int35 = file8.compareTo(file23);
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), ":");
        org.junit.Assert.assertEquals(file5.getParent(), ":");
        org.junit.Assert.assertEquals(file5.toString(), ":/FINEST");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), ":");
// flaky:         org.junit.Assert.assertEquals(file6.toString(), ":/OFF2115301071388083008");
// flaky:         org.junit.Assert.assertEquals(file8.getParent(), ":/OFF2115301071388083008");
// flaky:         org.junit.Assert.assertEquals(file8.toString(), ":/OFF2115301071388083008/PARAM_LIST");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), ":");
// flaky:         org.junit.Assert.assertEquals(file9.toString(), ":/OFF2115301071388083008");
        org.junit.Assert.assertEquals(file12.getParent(), ":");
        org.junit.Assert.assertEquals(file12.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertNull("file16.getParent() == null", file16.getParent());
        org.junit.Assert.assertEquals(file16.toString(), ":");
// flaky:         org.junit.Assert.assertTrue("'" + long17 + "' != '" + 280491847680L + "'", long17 == 280491847680L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(jSSourceFile20);
        org.junit.Assert.assertEquals(file23.getParent(), ":");
        org.junit.Assert.assertEquals(file23.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(uRI30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-25) + "'", int35 == (-25));
    }

    @Test
    public void test07315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07315");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.Node node37 = node6.removeFirstChild();
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.Node node44 = jSTypeRegistry40.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        node44.addChildrenToBack(node50);
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList55 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55, jSTypeArray54);
        com.google.javascript.rhino.Node node57 = jSTypeRegistry53.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList55);
        boolean boolean58 = node57.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry60 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        com.google.javascript.rhino.Node node64 = jSTypeRegistry60.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        boolean boolean65 = node64.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter66 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry67 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter66);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.Node node71 = jSTypeRegistry67.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        com.google.javascript.rhino.Node node74 = new com.google.javascript.rhino.Node((int) (short) 0, node44, node57, node64, node71, 0, 49);
        boolean boolean75 = node44.isDo();
        boolean boolean76 = node44.isWhile();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable77 = node44.children();
        java.lang.String str78 = node44.getQualifiedName();
        boolean boolean79 = node44.isString();
        com.google.javascript.rhino.Node node80 = node6.useSourceInfoIfMissingFromForTree(node44);
        com.google.javascript.rhino.Node node81 = node6.cloneNode();
        node81.setLineno((int) 'a');
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(nodeIterable77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertNotNull(node81);
    }

    @Test
    public void test07316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07316");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        byte[] byteArray32 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 1 };
        compilerOptions0.inputVariableMapSerialized = byteArray32;
        compilerOptions0.setIgnoreCajaProperties(true);
        compilerOptions0.setNameReferenceReportPath("DiagnosticGroup<java.io.IOException: OFF>");
        compilerOptions0.labelRenaming = false;
        compilerOptions0.setPropertyAffinity(false);
        boolean boolean42 = compilerOptions0.reserveRawExports;
        compilerOptions0.inlineConstantVars = true;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 1, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test07317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07317");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.coalesceVariableNames = true;
        java.lang.String str9 = compilerOptions0.aliasStringsBlacklist;
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions10.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy13 = compilerOptions10.propertyRenaming;
        java.lang.String[] strArray16 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        compilerOptions10.setStripTypes((java.util.Set<java.lang.String>) strSet17);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode21 = null;
        compilerOptions20.setTracerMode(tracerMode21);
        boolean boolean23 = compilerOptions20.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel24 = compilerOptions20.sourceMapDetailLevel;
        compilerOptions20.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions27.crossModuleMethodMotion = true;
        compilerOptions27.optimizeParameters = true;
        compilerOptions27.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel35 = compilerOptions27.checkGlobalNamesLevel;
        compilerOptions20.setReportMissingOverride(checkLevel35);
        compilerOptions10.setCheckUnreachableCode(checkLevel35);
        compilerOptions10.syntheticBlockStartMarker = "*global*";
        compilerOptions10.prettyPrint = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions42 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions42.crossModuleMethodMotion = true;
        compilerOptions42.optimizeParameters = true;
        compilerOptions42.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel50 = compilerOptions42.checkGlobalNamesLevel;
        compilerOptions10.checkGlobalNamesLevel = checkLevel50;
        compilerOptions0.setCheckUnreachableCode(checkLevel50);
        java.util.Set<java.lang.String> strSet53 = null;
        compilerOptions0.setStripNamePrefixes(strSet53);
        boolean boolean55 = compilerOptions0.optimizeArgumentsArray;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions58 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions58.setInlineLocalFunctions(false);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy61 = null;
        compilerOptions58.variableRenaming = variableRenamingPolicy61;
        compilerOptions58.setProtectHiddenSideEffects(false);
        compilerOptions58.syntheticBlockEndMarker = "OFF";
        compilerOptions58.reserveRawExports = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions69 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode70 = null;
        compilerOptions69.setTracerMode(tracerMode70);
        compilerOptions69.setGeneratePseudoNames(false);
        compilerOptions69.setDefineToNumberLiteral("PARAM_LIST\n", (int) '/');
        java.lang.String str77 = compilerOptions69.syntheticBlockStartMarker;
        compilerOptions69.setRemoveAbstractMethods(false);
        com.google.javascript.jscomp.CheckLevel checkLevel80 = compilerOptions69.checkMissingGetCssNameLevel;
        compilerOptions58.setCheckMissingReturn(checkLevel80);
        compilerOptions0.setCheckMissingReturn(checkLevel80);
        boolean boolean83 = compilerOptions0.ambiguateProperties;
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy13 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy13.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(detailLevel24);
        org.junit.Assert.assertTrue("'" + checkLevel35 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel35.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel50 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel50.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + checkLevel80 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel80.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test07318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07318");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        compilerOptions0.setLocale("STRING PARAM_LIST 49");
        boolean boolean32 = compilerOptions0.aliasAllStrings;
        compilerOptions0.setTweakToBooleanLiteral("CONFIG", true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test07319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07319");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        boolean boolean4 = compilerOptions0.flowSensitiveInlineVariables;
        compilerOptions0.setRemoveUnusedPrototypePropertiesInExterns(false);
        boolean boolean7 = compilerOptions0.removeUnusedClassProperties;
        compilerOptions0.setCollapsePropertiesOnExternTypes(true);
        boolean boolean10 = compilerOptions0.checkTypes;
        boolean boolean11 = compilerOptions0.checkSymbols;
        compilerOptions0.setGroupVariableDeclarations(false);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray17 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList18 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList18, jSTypeArray17);
        com.google.javascript.rhino.Node node20 = jSTypeRegistry16.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList18);
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        node20.addChildrenToBack(node26);
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        boolean boolean34 = node33.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter35 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter35);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.Node node40 = jSTypeRegistry36.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        boolean boolean41 = node40.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry43 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray44 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList45 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList45, jSTypeArray44);
        com.google.javascript.rhino.Node node47 = jSTypeRegistry43.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList45);
        com.google.javascript.rhino.Node node50 = new com.google.javascript.rhino.Node((int) (short) 0, node20, node33, node40, node47, 0, 49);
        boolean boolean51 = node20.isDo();
        boolean boolean52 = node20.isWhile();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable53 = node20.children();
        java.lang.String[] strArray60 = new java.lang.String[] { "OFF", "PARAM_LIST", "*global*", ":", "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet61, strArray60);
        node20.setDirectives((java.util.Set<java.lang.String>) strSet61);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray64 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList65 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList65, jSTypeArray64);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        boolean boolean70 = jSTypeList65.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray71 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList72 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72, jSTypeArray71);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray74 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList75 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList75, jSTypeArray74);
        boolean boolean77 = jSTypeList72.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList75);
        boolean boolean78 = jSTypeList65.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList75);
        boolean boolean79 = strSet61.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList75);
        java.lang.String[] strArray85 = new java.lang.String[] { "*global*", "Unversioned directory", "STRING PARAM_LIST 49", "java.io.IOException: ", "*global*.  at *global* line (unknown line) : (unknown column)" };
        java.lang.Comparable<java.lang.String>[] strComparableArray86 = strSet61.toArray((java.lang.Comparable<java.lang.String>[]) strArray85);
        compilerOptions0.setReplaceStringsReservedStrings((java.util.Set<java.lang.String>) strSet61);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(jSTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(jSTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(nodeIterable53);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(jSTypeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(jSTypeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(jSTypeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strComparableArray86);
    }

    @Test
    public void test07320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07320");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("");
    }

    @Test
    public void test07321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07321");
        java.lang.Throwable throwable2 = null;
        java.io.IOException iOException3 = new java.io.IOException("*global*", throwable2);
        java.io.IOException iOException4 = new java.io.IOException("PARAM_LIST\n", (java.lang.Throwable) iOException3);
    }

    @Test
    public void test07322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07322");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setUnaliasableGlobals("sun.util.logging.resources.logging");
        compilerOptions0.setRenamePrefixNamespace("OFF");
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel10 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions7.setSourceMapDetailLevel(detailLevel10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions12 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode13 = null;
        compilerOptions12.setTracerMode(tracerMode13);
        boolean boolean15 = compilerOptions12.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel16 = compilerOptions12.sourceMapDetailLevel;
        compilerOptions12.setColorizeErrorOutput(true);
        compilerOptions12.collapseProperties = false;
        compilerOptions12.setSkipAllPasses(false);
        com.google.javascript.jscomp.CompilerOptions.Reach reach23 = com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY;
        compilerOptions12.setInlineFunctions(reach23);
        compilerOptions7.setInlineVariables(reach23);
        compilerOptions0.setRemoveUnusedVariables(reach23);
        compilerOptions0.setClosurePass(true);
        boolean boolean29 = compilerOptions0.extractPrototypeMemberDeclarations;
        compilerOptions0.setAliasableGlobals("STRING java.io.IOException:  43");
        org.junit.Assert.assertNotNull(detailLevel10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(detailLevel16);
        org.junit.Assert.assertTrue("'" + reach23 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY + "'", reach23.equals(com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test07323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07323");
        java.util.logging.Level level0 = java.util.logging.Level.FINEST;
        java.lang.String str1 = level0.getResourceBundleName();
        java.lang.String str2 = level0.getLocalizedName();
        int int3 = level0.intValue();
        com.google.javascript.jscomp.CompilerOptions compilerOptions4 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode5 = null;
        compilerOptions4.setTracerMode(tracerMode5);
        boolean boolean7 = compilerOptions4.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel8 = compilerOptions4.sourceMapDetailLevel;
        compilerOptions4.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions11.crossModuleMethodMotion = true;
        compilerOptions11.optimizeParameters = true;
        compilerOptions11.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel19 = compilerOptions11.checkGlobalNamesLevel;
        compilerOptions4.setReportMissingOverride(checkLevel19);
        java.util.Set<java.lang.String> strSet21 = compilerOptions4.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions22 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel23 = compilerOptions22.checkRequires;
        compilerOptions4.setReportMissingOverride(checkLevel23);
        compilerOptions4.setGatherCssNames(true);
        compilerOptions4.setLineBreak(false);
        boolean boolean29 = compilerOptions4.flowSensitiveInlineVariables;
        compilerOptions4.setSyntheticBlockStartMarker("/experiment/:");
        compilerOptions4.renamePrefixNamespace = "/experiment/:/hi!";
        boolean boolean34 = level0.equals((java.lang.Object) compilerOptions4);
        org.junit.Assert.assertNotNull(level0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "sun.util.logging.resources.logging" + "'", str1, "sun.util.logging.resources.logging");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "FINEST" + "'", str2, "FINEST");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 300 + "'", int3 == 300);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(detailLevel8);
        org.junit.Assert.assertTrue("'" + checkLevel19 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel19.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + checkLevel23 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel23.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test07324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07324");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.Node node37 = node6.getNext();
        java.lang.String str38 = node37.getQualifiedName();
        boolean boolean39 = node37.isSetterDef();
        boolean boolean40 = node37.isOnlyModifiesThisCall();
        int int41 = node37.getChildCount();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test07325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07325");
        java.io.InputStream inputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.jscomp.JSSourceFile jSSourceFile2 = com.google.javascript.jscomp.JSSourceFile.fromInputStream("PARAM_LIST5278126033942481271Unversioned directory", inputStream1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07326");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(true, false);
        java.io.File file7 = new java.io.File(file2, "PARAM_LIST\n");
        boolean boolean9 = file2.setWritable(false);
        boolean boolean11 = file2.setReadable(false);
        java.io.File file12 = file2.getAbsoluteFile();
        com.google.javascript.jscomp.JSSourceFile jSSourceFile13 = com.google.javascript.jscomp.JSSourceFile.fromFile(file2);
        java.io.File file14 = file2.getParentFile();
        boolean boolean17 = file2.setReadable(true, false);
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals(file7.getParent(), ":/hi!");
        org.junit.Assert.assertEquals(file7.toString(), ":/hi!/PARAM_LIST\n");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(file12);
// flaky:         org.junit.Assert.assertEquals(file12.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/experiment/:/hi!");
        org.junit.Assert.assertNotNull(jSSourceFile13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertNull("file14.getParent() == null", file14.getParent());
        org.junit.Assert.assertEquals(file14.toString(), ":");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test07327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07327");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.AMBIGUOUS_FUNCTION_DECL;
        com.google.javascript.jscomp.DiagnosticGroups.DUPLICATE_MESSAGE = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.ACCESS_CONTROLS = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.TWEAKS = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.DEBUGGER_STATEMENT_PRESENT = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.DUPLICATE_VARS = diagnosticGroup0;
// flaky:         org.junit.Assert.assertNull(diagnosticGroup0);
    }

    @Test
    public void test07328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07328");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions0.checkGlobalNamesLevel;
        compilerOptions0.setCheckMissingGetCssNameBlacklist("");
        compilerOptions0.deadAssignmentElimination = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions13.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions13.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode19 = null;
        compilerOptions13.setLanguageOut(languageMode19);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy21 = null;
        compilerOptions13.variableRenaming = variableRenamingPolicy21;
        com.google.javascript.jscomp.CheckLevel checkLevel23 = compilerOptions13.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode24 = compilerOptions13.getLanguageOut();
        boolean boolean25 = compilerOptions13.moveFunctionDeclarations;
        byte[] byteArray26 = null;
        compilerOptions13.inputPropertyMapSerialized = byteArray26;
        com.google.javascript.jscomp.DependencyOptions dependencyOptions28 = new com.google.javascript.jscomp.DependencyOptions();
        com.google.javascript.jscomp.DependencyOptions dependencyOptions30 = dependencyOptions28.setDependencyPruning(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions32 = dependencyOptions30.setMoocherDropping(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions34 = dependencyOptions32.setDependencySorting(false);
        compilerOptions13.setDependencyOptions(dependencyOptions34);
        compilerOptions0.setDependencyOptions(dependencyOptions34);
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel37 = compilerOptions0.sourceMapDetailLevel;
        boolean boolean38 = compilerOptions0.checkTypes;
        boolean boolean39 = compilerOptions0.exportTestFunctions;
        compilerOptions0.setInlineConstantVars(true);
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel23 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel23.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(languageMode24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(dependencyOptions30);
        org.junit.Assert.assertNotNull(dependencyOptions32);
        org.junit.Assert.assertNotNull(dependencyOptions34);
        org.junit.Assert.assertNotNull(detailLevel37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test07329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07329");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        compilerOptions0.setLineBreak(false);
        compilerOptions0.syntheticBlockStartMarker = "/";
        com.google.javascript.jscomp.CompilerOptions compilerOptions12 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions12.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy15 = compilerOptions12.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap16 = compilerOptions12.getTweakReplacements();
        boolean boolean17 = strMap16.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.Node>> strEntrySet18 = strMap16.entrySet();
        com.google.javascript.jscomp.CompilerOptions.TweakProcessing tweakProcessing19 = com.google.javascript.jscomp.CompilerOptions.TweakProcessing.STRIP;
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.setInlineLocalFunctions(false);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy23 = null;
        compilerOptions20.variableRenaming = variableRenamingPolicy23;
        compilerOptions20.setProtectHiddenSideEffects(false);
        boolean boolean27 = strMap16.remove((java.lang.Object) tweakProcessing19, (java.lang.Object) false);
        compilerOptions0.setTweakProcessing(tweakProcessing19);
        compilerOptions0.markNoSideEffectCalls = false;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy15 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy15.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strEntrySet18);
        org.junit.Assert.assertTrue("'" + tweakProcessing19 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TweakProcessing.STRIP + "'", tweakProcessing19.equals(com.google.javascript.jscomp.CompilerOptions.TweakProcessing.STRIP));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test07330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07330");
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray0 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList1 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList1, jSTypeArray0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        boolean boolean6 = jSTypeList1.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator7 = jSTypeList1.spliterator();
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions8.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode14 = null;
        compilerOptions8.setLanguageOut(languageMode14);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy16 = null;
        compilerOptions8.variableRenaming = variableRenamingPolicy16;
        boolean boolean18 = compilerOptions8.inlineGetters;
        compilerOptions8.setFlowSensitiveInlineVariables(true);
        compilerOptions8.setInlineGetters(true);
        compilerOptions8.setRemoveAbstractMethods(false);
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap25 = compilerOptions8.cssRenamingMap;
        int int26 = jSTypeList1.indexOf((java.lang.Object) compilerOptions8);
        jSTypeList1.clear();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.JSType jSType29 = jSTypeList1.remove(51);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 51, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(jSTypeSpliterator7);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(cssRenamingMap25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test07331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07331");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        compilerOptions0.setGeneratePseudoNames(false);
        compilerOptions0.setDefineToNumberLiteral("PARAM_LIST\n", (int) '/');
        java.lang.String str8 = compilerOptions0.syntheticBlockStartMarker;
        compilerOptions0.checkControlStructures = true;
        compilerOptions0.closurePass = true;
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test07332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07332");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.UNKNOWN_DEFINES;
        com.google.javascript.jscomp.DiagnosticGroups.CHECK_USELESS_CODE = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.INVALID_CASTS = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticType diagnosticType5 = com.google.javascript.jscomp.DiagnosticType.warning("PARAM_LIST", "PARAM_LIST\n");
        com.google.javascript.jscomp.DiagnosticType diagnosticType8 = com.google.javascript.jscomp.DiagnosticType.error("InputId: *global*", "");
        int int9 = diagnosticType5.compareTo(diagnosticType8);
        com.google.javascript.jscomp.DiagnosticType diagnosticType10 = com.google.javascript.jscomp.Compiler.OPTIMIZE_LOOP_ERROR;
        java.lang.String str11 = diagnosticType10.toString();
        int int12 = diagnosticType8.compareTo(diagnosticType10);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = diagnosticGroup0.matches(diagnosticType8);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNull(diagnosticGroup0);
        org.junit.Assert.assertNotNull(diagnosticType5);
        org.junit.Assert.assertNotNull(diagnosticType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
        org.junit.Assert.assertNotNull(diagnosticType10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of optimization iterations: {0}" + "'", str11, "JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of optimization iterations: {0}");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test07333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07333");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setRuntimeTypeCheckLogFunction("FINEST");
        compilerOptions0.setRemoveDeadCode(true);
        compilerOptions0.setCheckSuspiciousCode(false);
        compilerOptions0.preferLineBreakAtEndOfFile = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions11.crossModuleMethodMotion = true;
        compilerOptions11.skipAllCompilerPasses();
        compilerOptions11.resetWarningsGuard();
        compilerOptions11.setInlineLocalVariables(false);
        compilerOptions11.coalesceVariableNames = true;
        java.lang.String str20 = compilerOptions11.aliasStringsBlacklist;
        compilerOptions11.setGatherCssNames(true);
        boolean boolean23 = compilerOptions11.inlineLocalFunctions;
        compilerOptions11.setDefineToDoubleLiteral("java.io.IOException: OFF", (double) 32);
        compilerOptions11.setCheckCaja(true);
        com.google.javascript.jscomp.CheckLevel checkLevel29 = compilerOptions11.checkGlobalNamesLevel;
        compilerOptions0.setCheckMissingReturn(checkLevel29);
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel31 = compilerOptions0.sourceMapDetailLevel;
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + checkLevel29 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel29.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(detailLevel31);
    }

    @Test
    public void test07334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07334");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        compilerOptions0.inlineFunctions = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy10 = compilerOptions7.propertyRenaming;
        java.lang.String[] strArray13 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        compilerOptions7.setStripTypes((java.util.Set<java.lang.String>) strSet14);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode18 = null;
        compilerOptions17.setTracerMode(tracerMode18);
        boolean boolean20 = compilerOptions17.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel21 = compilerOptions17.sourceMapDetailLevel;
        compilerOptions17.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions24.crossModuleMethodMotion = true;
        compilerOptions24.optimizeParameters = true;
        compilerOptions24.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel32 = compilerOptions24.checkGlobalNamesLevel;
        compilerOptions17.setReportMissingOverride(checkLevel32);
        compilerOptions7.setCheckUnreachableCode(checkLevel32);
        byte[] byteArray39 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 1 };
        compilerOptions7.inputVariableMapSerialized = byteArray39;
        compilerOptions0.inputVariableMapSerialized = byteArray39;
        compilerOptions0.syntheticBlockStartMarker = "FINEST";
        com.google.javascript.jscomp.CompilerOptions compilerOptions44 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions44.setLooseTypes(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions47 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel48 = compilerOptions47.checkRequires;
        compilerOptions44.setCheckProvides(checkLevel48);
        compilerOptions0.setCheckProvides(checkLevel48);
        compilerOptions0.coalesceVariableNames = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions53 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions53.crossModuleMethodMotion = true;
        compilerOptions53.optimizeParameters = true;
        compilerOptions53.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions61 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions61.crossModuleMethodMotion = true;
        compilerOptions61.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy66 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions67 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions67.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy70 = compilerOptions67.propertyRenaming;
        compilerOptions61.setRenamingPolicy(variableRenamingPolicy66, propertyRenamingPolicy70);
        com.google.javascript.jscomp.SourceMap.Format format72 = compilerOptions61.sourceMapFormat;
        compilerOptions53.setSourceMapFormat(format72);
        boolean boolean74 = compilerOptions53.shouldColorizeErrorOutput();
        boolean boolean75 = compilerOptions53.removeTryCatchFinally;
        com.google.javascript.jscomp.SourceMap.Format format76 = compilerOptions53.sourceMapFormat;
        com.google.javascript.jscomp.CompilerOptions compilerOptions77 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions77.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions77.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode83 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions77.setTracer(tracerMode83);
        compilerOptions77.setSyntheticBlockStartMarker("");
        java.util.Set<java.lang.String> strSet87 = compilerOptions77.stripTypePrefixes;
        compilerOptions53.setStripNamePrefixes(strSet87);
        compilerOptions0.setReplaceStringsReservedStrings(strSet87);
        compilerOptions0.setPropertyAffinity(true);
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy10 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy10.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(detailLevel21);
        org.junit.Assert.assertTrue("'" + checkLevel32 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel32.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 1, 10, 1]");
        org.junit.Assert.assertTrue("'" + checkLevel48 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel48.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy70 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy70.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(format76);
        org.junit.Assert.assertTrue("'" + tracerMode83 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode83.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertNotNull(strSet87);
    }

    @Test
    public void test07335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07335");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageOut();
        compilerOptions0.setFoldConstants(true);
        java.lang.String str8 = compilerOptions0.inputDelimiter;
        compilerOptions0.sourceMapOutputPath = "/experiment/:/hi!";
        boolean boolean11 = compilerOptions0.coalesceVariableNames;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(languageMode5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "// Input %num%" + "'", str8, "// Input %num%");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test07336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07336");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        jSTypeRegistry1.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable13 = jSTypeRegistry1.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType18 = jSTypeRegistry1.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        jSTypeRegistry1.identifyNonNullableName("");
        com.google.javascript.rhino.jstype.JSTypeNative[] jSTypeNativeArray21 = new com.google.javascript.rhino.jstype.JSTypeNative[] {};
        com.google.javascript.rhino.jstype.JSType jSType22 = jSTypeRegistry1.createUnionType(jSTypeNativeArray21);
        com.google.javascript.rhino.jstype.JSType jSType27 = jSTypeRegistry1.createNamedType("java.io.IOException: java.io.IOException: ", ":/hi!/PARAM_LIST\n", 51, 2);
        boolean boolean29 = jSTypeRegistry1.hasNamespace("PARAM_LIST 47\n    PARAM_LIST\n");
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        boolean boolean38 = jSTypeList33.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        com.google.javascript.rhino.Node node39 = jSTypeRegistry31.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        jSTypeRegistry31.setLastGeneration(false);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable43 = jSTypeRegistry31.getEachReferenceTypeWithProperty("*global*.  at *global* line (unknown line) : (unknown column)");
        jSTypeRegistry31.resetForTypeCheck();
        jSTypeRegistry31.clearTemplateTypeNames();
        jSTypeRegistry31.setLastGeneration(false);
        com.google.javascript.rhino.ErrorReporter errorReporter48 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry49 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray50 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList51 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList51, jSTypeArray50);
        com.google.javascript.rhino.Node node53 = jSTypeRegistry49.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList51);
        com.google.javascript.rhino.ErrorReporter errorReporter54 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter54);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.Node node59 = jSTypeRegistry55.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        com.google.javascript.rhino.jstype.JSType jSType64 = jSTypeRegistry55.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.jstype.JSType jSType75 = jSTypeRegistry66.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray76 = new com.google.javascript.rhino.jstype.JSType[] { jSType75 };
        com.google.javascript.rhino.jstype.FunctionType functionType77 = jSTypeRegistry49.createConstructorTypeWithVarArgs(jSType64, jSTypeArray76);
        com.google.javascript.rhino.jstype.JSType jSType78 = jSTypeRegistry31.createDefaultObjectUnion((com.google.javascript.rhino.jstype.JSType) functionType77);
        com.google.javascript.rhino.jstype.JSType jSType83 = jSTypeRegistry1.getType((com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>) functionType77, "", "JSC_OPTIMIZE_LOOP_ERROR. Exceeded max number of code motion iterations: Unversioned directory at / line (unknown line) : 48", 35, (int) (short) 100);
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative84 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.JSType jSType85 = jSTypeRegistry1.getNativeType(jSTypeNative84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeIterable13);
        org.junit.Assert.assertNotNull(jSType18);
        org.junit.Assert.assertNotNull(jSTypeNativeArray21);
        org.junit.Assert.assertNotNull(jSType22);
        org.junit.Assert.assertNotNull(jSType27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(objectTypeIterable43);
        org.junit.Assert.assertNotNull(jSTypeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(jSType64);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(jSType75);
        org.junit.Assert.assertNotNull(jSTypeArray76);
        org.junit.Assert.assertNotNull(functionType77);
        org.junit.Assert.assertNotNull(jSType78);
        org.junit.Assert.assertNotNull(jSType83);
    }

    @Test
    public void test07337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07337");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(false, false);
        java.io.File file6 = file2.getParentFile();
        long long7 = file6.getUsableSpace();
        boolean boolean8 = file6.mkdirs();
        java.nio.charset.Charset charset9 = null;
        com.google.javascript.jscomp.JSSourceFile jSSourceFile10 = com.google.javascript.jscomp.JSSourceFile.fromFile(file6, charset9);
        jSSourceFile10.clearCachedSource();
        jSSourceFile10.clearCachedSource();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), ":");
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 280488644608L + "'", long7 == 280488644608L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(jSSourceFile10);
    }

    @Test
    public void test07338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07338");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        jSModule1.removeAll();
        com.google.javascript.jscomp.SourceFile sourceFile4 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput6 = new com.google.javascript.jscomp.CompilerInput(sourceFile4, true);
        com.google.javascript.rhino.InputId inputId8 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput10 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput6, inputId8, true);
        java.lang.String str11 = compilerInput10.toString();
        com.google.javascript.jscomp.SourceFile sourceFile12 = compilerInput10.getSourceFile();
        jSModule1.remove(compilerInput10);
        com.google.javascript.jscomp.CompilerInput compilerInput15 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput10, true);
        java.lang.String str16 = compilerInput15.getCode();
        com.google.javascript.jscomp.SourceFile sourceFile17 = compilerInput15.getSourceFile();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "*global*" + "'", str11, "*global*");
        org.junit.Assert.assertNotNull(sourceFile12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(sourceFile17);
    }

    @Test
    public void test07339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07339");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy5 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions6.propertyRenaming;
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy5, propertyRenamingPolicy9);
        compilerOptions0.setTransformAMDToCJSModules(true);
        boolean boolean13 = compilerOptions0.rewriteFunctionExpressions;
        boolean boolean14 = compilerOptions0.deadAssignmentElimination;
        compilerOptions0.setExtractPrototypeMemberDeclarations(false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test07340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07340");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setProtectHiddenSideEffects(true);
        boolean boolean5 = compilerOptions0.isExternExportsEnabled();
        compilerOptions0.optimizeArgumentsArray = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        boolean boolean13 = compilerOptions8.collapseAnonymousFunctions;
        com.google.javascript.jscomp.DiagnosticType diagnosticType14 = com.google.javascript.jscomp.Compiler.MOTION_ITERATIONS_ERROR;
        com.google.javascript.jscomp.CheckLevel checkLevel15 = diagnosticType14.defaultLevel;
        compilerOptions8.checkProvides = checkLevel15;
        compilerOptions0.checkRequires = checkLevel15;
        compilerOptions0.removeUnusedVars = false;
        boolean boolean20 = compilerOptions0.rewriteFunctionExpressions;
        boolean boolean21 = compilerOptions0.ideMode;
        compilerOptions0.setShadowVariables(true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(diagnosticType14);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test07341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07341");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.generatePseudoNames;
        com.google.javascript.jscomp.SourceMap.LocationMapping[] locationMappingArray4 = new com.google.javascript.jscomp.SourceMap.LocationMapping[] {};
        java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping> locationMappingList5 = new java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList5, locationMappingArray4);
        compilerOptions0.sourceMapLocationMappings = locationMappingList5;
        compilerOptions0.removeUnusedPrototypePropertiesInExterns = true;
        compilerOptions0.aliasKeywords = true;
        com.google.common.collect.Multimap<com.google.javascript.jscomp.CustomPassExecutionTime, com.google.javascript.jscomp.CompilerPass> customPassExecutionTimeMultimap12 = null;
        compilerOptions0.customPasses = customPassExecutionTimeMultimap12;
        com.google.javascript.jscomp.CheckLevel checkLevel14 = compilerOptions0.checkGlobalNamesLevel;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(locationMappingArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + checkLevel14 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel14.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07342");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        compilerOptions0.inlineFunctions = true;
        compilerOptions0.setCommonJSModulePathPrefix(":");
        compilerOptions0.setCrossModuleCodeMotion(true);
        compilerOptions0.disableRuntimeTypeCheck();
        boolean boolean12 = compilerOptions0.removeUnusedLocalVars;
        boolean boolean13 = compilerOptions0.generateExports;
        compilerOptions0.foldConstants = true;
        java.util.Map<java.lang.String, com.google.javascript.jscomp.CheckLevel> strMap16 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerOptions0.setPropertyInvalidationErrors(strMap16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test07343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07343");
        com.google.javascript.jscomp.SourceFile sourceFile3 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", ":", "goog.abstractMethod");
        java.lang.String str4 = sourceFile3.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput6 = new com.google.javascript.jscomp.CompilerInput(sourceFile3, false);
        java.lang.String str7 = sourceFile3.getCode();
        int int9 = sourceFile3.getLineOfOffset(49);
        com.google.javascript.jscomp.CompilerInput compilerInput11 = new com.google.javascript.jscomp.CompilerInput(sourceFile3, false);
        org.junit.Assert.assertNotNull(sourceFile3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "goog.abstractMethod" + "'", str7, "goog.abstractMethod");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test07344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07344");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("FINEST");
        stats1.gzDiff = (short) 0;
        stats1.changes = 32;
    }

    @Test
    public void test07345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07345");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        boolean boolean7 = node6.isIn();
        boolean boolean8 = node6.isVoid();
        node6.setOptionalArg(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode12 = null;
        compilerOptions11.setTracerMode(tracerMode12);
        boolean boolean14 = compilerOptions11.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel15 = compilerOptions11.sourceMapDetailLevel;
        compilerOptions11.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions18.crossModuleMethodMotion = true;
        compilerOptions18.optimizeParameters = true;
        compilerOptions18.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel26 = compilerOptions18.checkGlobalNamesLevel;
        compilerOptions11.setReportMissingOverride(checkLevel26);
        com.google.javascript.jscomp.DiagnosticType diagnosticType28 = com.google.javascript.jscomp.Compiler.MOTION_ITERATIONS_ERROR;
        java.lang.String[] strArray29 = null;
        com.google.javascript.jscomp.JSError jSError30 = com.google.javascript.jscomp.JSError.make("", node6, checkLevel26, diagnosticType28, strArray29);
        java.text.MessageFormat messageFormat31 = diagnosticType28.format;
        com.google.javascript.jscomp.CheckLevel checkLevel32 = diagnosticType28.defaultLevel;
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup33 = com.google.javascript.jscomp.DiagnosticGroup.forType(diagnosticType28);
        com.google.javascript.jscomp.DiagnosticGroups.DUPLICATE_VARS = diagnosticGroup33;
        com.google.javascript.jscomp.DiagnosticGroups.UNDEFINED_NAMES = diagnosticGroup33;
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(detailLevel15);
        org.junit.Assert.assertTrue("'" + checkLevel26 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel26.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(diagnosticType28);
        org.junit.Assert.assertNotNull(jSError30);
        org.junit.Assert.assertNotNull(messageFormat31);
        org.junit.Assert.assertTrue("'" + checkLevel32 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel32.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertNotNull(diagnosticGroup33);
    }

    @Test
    public void test07346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07346");
        com.google.javascript.rhino.Node[] nodeArray5 = new com.google.javascript.rhino.Node[] {};
        com.google.javascript.rhino.Node node6 = new com.google.javascript.rhino.Node((-9), nodeArray5);
        com.google.javascript.rhino.Node node9 = new com.google.javascript.rhino.Node(12, nodeArray5, (int) (byte) 10, 31);
        com.google.javascript.rhino.Node node12 = new com.google.javascript.rhino.Node(0, nodeArray5, 2, 700);
        com.google.javascript.rhino.Node node15 = new com.google.javascript.rhino.Node(300, nodeArray5, 11, 0);
        com.google.javascript.rhino.Node node18 = new com.google.javascript.rhino.Node(37, nodeArray5, 83, 45);
        org.junit.Assert.assertNotNull(nodeArray5);
    }

    @Test
    public void test07347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07347");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy12 = compilerOptions9.propertyRenaming;
        compilerOptions0.propertyRenaming = propertyRenamingPolicy12;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap14 = compilerOptions0.getTweakReplacements();
        compilerOptions0.setRemoveDeadCode(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy12 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy12.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test07348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07348");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy8 = compilerOptions5.propertyRenaming;
        java.lang.String[] strArray11 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        compilerOptions5.setStripTypes((java.util.Set<java.lang.String>) strSet12);
        compilerOptions0.stripNamePrefixes = strSet12;
        compilerOptions0.checkTypes = false;
        boolean boolean18 = compilerOptions0.assumeStrictThis();
        compilerOptions0.setInlineVariables(false);
        compilerOptions0.jqueryPass = true;
        boolean boolean23 = compilerOptions0.removeUnusedPrototypeProperties;
        com.google.javascript.jscomp.CheckLevel checkLevel24 = compilerOptions0.checkUnreachableCode;
        compilerOptions0.inlineGetters = false;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy8 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy8.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + checkLevel24 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel24.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07349");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setRuntimeTypeCheckLogFunction("FINEST");
        compilerOptions0.setRemoveDeadCode(true);
        compilerOptions0.setCheckSuspiciousCode(false);
        compilerOptions0.preferLineBreakAtEndOfFile = false;
        compilerOptions0.setRemoveUnusedClassProperties(true);
        compilerOptions0.ideMode = true;
        compilerOptions0.setExternExportsPath("JSC_OPTIMIZE_LOOP_ERROR. Exceeded max number of code motion iterations: Unversioned directory at STRING PARAM_LIST 49: hi! line 97 : 48");
        compilerOptions0.setComputeFunctionSideEffects(false);
        compilerOptions0.removeTryCatchFinally = false;
    }

    @Test
    public void test07350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07350");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setInlineLocalFunctions(false);
        compilerOptions0.moveFunctionDeclarations = true;
        boolean boolean5 = compilerOptions0.isRemoveUnusedClassProperties();
        compilerOptions0.setSmartNameRemoval(true);
        compilerOptions0.locale = "WARNING";
        boolean boolean10 = compilerOptions0.optimizeCalls;
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions11.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy14 = compilerOptions11.propertyRenaming;
        java.lang.String[] strArray17 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        compilerOptions11.setStripTypes((java.util.Set<java.lang.String>) strSet18);
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode22 = null;
        compilerOptions21.setTracerMode(tracerMode22);
        boolean boolean24 = compilerOptions21.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel25 = compilerOptions21.sourceMapDetailLevel;
        compilerOptions21.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions28 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions28.crossModuleMethodMotion = true;
        compilerOptions28.optimizeParameters = true;
        compilerOptions28.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel36 = compilerOptions28.checkGlobalNamesLevel;
        compilerOptions21.setReportMissingOverride(checkLevel36);
        compilerOptions11.setCheckUnreachableCode(checkLevel36);
        compilerOptions11.syntheticBlockStartMarker = "*global*";
        compilerOptions11.prettyPrint = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions43 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions43.crossModuleMethodMotion = true;
        compilerOptions43.optimizeParameters = true;
        compilerOptions43.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel51 = compilerOptions43.checkGlobalNamesLevel;
        compilerOptions11.checkGlobalNamesLevel = checkLevel51;
        compilerOptions11.setDefineToDoubleLiteral(":", (double) 12);
        compilerOptions11.setManageClosureDependencies(true);
        com.google.javascript.jscomp.JSModule jSModule60 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler61 = new com.google.javascript.jscomp.Compiler();
        jSModule60.sortInputsByDeps(compiler61);
        com.google.javascript.jscomp.SourceFile.Builder builder63 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile67 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int69 = sourceFile67.getLineOfOffset((int) (short) 1);
        java.io.Reader reader70 = sourceFile67.getCodeReader();
        int int71 = reader70.read();
        com.google.javascript.jscomp.SourceFile sourceFile72 = builder63.buildFromReader("*global*", reader70);
        jSModule60.add(sourceFile72);
        com.google.javascript.jscomp.JSModule jSModule75 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler76 = new com.google.javascript.jscomp.Compiler();
        jSModule75.sortInputsByDeps(compiler76);
        com.google.javascript.jscomp.SourceFile.Builder builder78 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile82 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int84 = sourceFile82.getLineOfOffset((int) (short) 1);
        java.io.Reader reader85 = sourceFile82.getCodeReader();
        int int86 = reader85.read();
        com.google.javascript.jscomp.SourceFile sourceFile87 = builder78.buildFromReader("*global*", reader85);
        jSModule75.add(sourceFile87);
        boolean boolean90 = jSModule75.removeByName("PARAM_LIST");
        jSModule60.addDependency(jSModule75);
        java.util.List<java.lang.String> strList92 = jSModule75.getRequires();
        compilerOptions11.setReplaceStringsConfiguration("STRING PARAM_LIST", strList92);
        compilerOptions0.setReplaceStringsFunctionDescriptions(strList92);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy14 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy14.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(detailLevel25);
        org.junit.Assert.assertTrue("'" + checkLevel36 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel36.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel51 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel51.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(sourceFile67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(reader70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(sourceFile72);
        org.junit.Assert.assertNotNull(sourceFile82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(reader85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(sourceFile87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strList92);
    }

    @Test
    public void test07351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07351");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.lang.Object obj10 = null;
        boolean boolean11 = jSTypeList3.remove(obj10);
        java.lang.Object obj12 = null;
        int int13 = jSTypeList3.indexOf(obj12);
        com.google.javascript.jscomp.SourceFile sourceFile16 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int18 = sourceFile16.getLineOfOffset((int) (short) 1);
        int int19 = jSTypeList3.indexOf((java.lang.Object) sourceFile16);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions25 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions25.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy28 = compilerOptions25.propertyRenaming;
        java.lang.String[] strArray31 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        compilerOptions25.setStripTypes((java.util.Set<java.lang.String>) strSet32);
        compilerOptions20.stripNamePrefixes = strSet32;
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions36.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy39 = compilerOptions36.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap40 = compilerOptions36.getTweakReplacements();
        boolean boolean41 = strSet32.remove((java.lang.Object) compilerOptions36);
        com.google.javascript.jscomp.CompilerOptions compilerOptions42 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel43 = compilerOptions42.checkRequires;
        compilerOptions42.setRewriteNewDateGoogNow(true);
        compilerOptions42.setSyntheticBlockStartMarker("OFF");
        compilerOptions42.skipAllCompilerPasses();
        compilerOptions42.jqueryPass = false;
        java.lang.String[] strArray56 = new java.lang.String[] { "PARAM_LIST\n", "/", "STRING PARAM_LIST 49", "hi!", "/" };
        java.util.LinkedHashSet<java.lang.String> strSet57 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet57, strArray56);
        compilerOptions42.stripNameSuffixes = strSet57;
        com.google.javascript.rhino.ErrorReporter errorReporter60 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter60);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray62 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList63 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63, jSTypeArray62);
        com.google.javascript.rhino.Node node65 = jSTypeRegistry61.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream66 = jSTypeList63.parallelStream();
        boolean boolean67 = strSet57.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        boolean boolean68 = strSet32.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        boolean boolean69 = jSTypeList3.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        jSTypeList63.clear();
        int int71 = jSTypeList63.size();
        boolean boolean72 = jSTypeList63.isEmpty();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(sourceFile16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy28 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy28.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy39 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy39.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + checkLevel43 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel43.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNotNull(jSTypeStream66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test07352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07352");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.lang.Object[] objArray6 = jSTypeList3.toArray();
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream7 = jSTypeList3.stream();
        java.util.ListIterator<com.google.javascript.rhino.jstype.JSType> jSTypeItor8 = jSTypeList3.listIterator();
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray11 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList12 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList12, jSTypeArray11);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList15 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15, jSTypeArray14);
        boolean boolean17 = jSTypeList12.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry10.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList12);
        jSTypeRegistry10.forwardDeclareType("PARAM_LIST");
        jSTypeRegistry10.incrementGeneration();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.Node node27 = jSTypeRegistry23.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream28 = jSTypeList25.parallelStream();
        com.google.javascript.jscomp.CompilerOptions compilerOptions29 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean30 = compilerOptions29.moveFunctionDeclarations;
        compilerOptions29.crossModuleCodeMotion = true;
        compilerOptions29.setManageClosureDependencies(false);
        boolean boolean35 = compilerOptions29.inlineLocalFunctions;
        compilerOptions29.disableRuntimeTypeCheck();
        boolean boolean37 = jSTypeList25.equals((java.lang.Object) compilerOptions29);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream38 = jSTypeList25.parallelStream();
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator39 = jSTypeList25.spliterator();
        com.google.javascript.rhino.Node node40 = jSTypeRegistry10.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        int int41 = jSTypeList3.lastIndexOf((java.lang.Object) jSTypeList25);
        com.google.javascript.rhino.Node node46 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean51 = node50.isTry();
        java.lang.String str52 = node50.toString();
        boolean boolean53 = node46.hasChild(node50);
        boolean boolean54 = node46.isFromExterns();
        com.google.javascript.rhino.ErrorReporter errorReporter55 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry56 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter55);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray57 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList58 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList58, jSTypeArray57);
        com.google.javascript.rhino.Node node60 = jSTypeRegistry56.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList58);
        boolean boolean61 = node60.isIn();
        boolean boolean62 = node60.isVoid();
        node60.setOptionalArg(true);
        node60.setVarArgs(true);
        com.google.javascript.rhino.JSDocInfo jSDocInfo67 = node60.getJSDocInfo();
        com.google.javascript.rhino.Node node68 = new com.google.javascript.rhino.Node(42, node46, node60);
        int int69 = node68.getType();
        int int71 = node68.getIntProp(30);
        int int72 = jSTypeList3.lastIndexOf((java.lang.Object) int71);
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(jSTypeStream7);
        org.junit.Assert.assertNotNull(jSTypeItor8);
        org.junit.Assert.assertNotNull(jSTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(jSTypeStream28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(jSTypeStream38);
        org.junit.Assert.assertNotNull(jSTypeSpliterator39);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "STRING PARAM_LIST 49" + "'", str52, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(jSTypeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(jSDocInfo67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 42 + "'", int69 == 42);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }

    @Test
    public void test07353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07353");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream6 = jSTypeList3.parallelStream();
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream13 = jSTypeList10.parallelStream();
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator14 = jSTypeList10.spliterator();
        boolean boolean15 = jSTypeList3.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList20 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20, jSTypeArray19);
        boolean boolean22 = jSTypeList17.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray26 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList27 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList27, jSTypeArray26);
        boolean boolean29 = jSTypeList24.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList27);
        boolean boolean30 = jSTypeList17.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList27);
        boolean boolean31 = jSTypeList17.isEmpty();
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream32 = jSTypeList17.parallelStream();
        boolean boolean33 = jSTypeList3.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean34 = jSTypeList3.isEmpty();
        int int35 = jSTypeList3.size();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.JSType jSType37 = jSTypeList3.remove(700);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 700, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeStream6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeStream13);
        org.junit.Assert.assertNotNull(jSTypeSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(jSTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(jSTypeStream32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test07354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07354");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        compilerOptions0.setSummaryDetailLevel(49);
        compilerOptions0.setRemoveTryCatchFinally(true);
        compilerOptions0.setOptimizeArgumentsArray(true);
        compilerOptions0.setLocale("hi!");
        compilerOptions0.setChainCalls(true);
        boolean boolean13 = compilerOptions0.optimizeReturns;
        boolean boolean14 = compilerOptions0.getInferTypes();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test07355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07355");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        compilerOptions0.setFoldConstants(true);
        compilerOptions0.flowSensitiveInlineVariables = true;
        compilerOptions0.setTweakToStringLiteral("InputId: *global*", "hi!");
        com.google.javascript.jscomp.CompilerOptions compilerOptions12 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode13 = null;
        compilerOptions12.setTracerMode(tracerMode13);
        boolean boolean15 = compilerOptions12.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel16 = compilerOptions12.sourceMapDetailLevel;
        compilerOptions12.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet19 = compilerOptions12.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile21 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput23 = new com.google.javascript.jscomp.CompilerInput(sourceFile21, true);
        com.google.javascript.rhino.InputId inputId25 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput27 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput23, inputId25, true);
        java.lang.String str28 = compilerInput27.toString();
        boolean boolean29 = strSet19.contains((java.lang.Object) compilerInput27);
        java.lang.Object[] objArray30 = strSet19.toArray();
        compilerOptions0.setReplaceStringsReservedStrings(strSet19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        boolean boolean38 = jSTypeList33.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        java.lang.Object[] objArray39 = jSTypeList33.toArray();
        com.google.javascript.rhino.ErrorReporter errorReporter41 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry42 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter41);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray43 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList44 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList44, jSTypeArray43);
        com.google.javascript.rhino.Node node46 = jSTypeRegistry42.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList44);
        com.google.javascript.rhino.ErrorReporter errorReporter47 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry48 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter47);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray49 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList50 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList50, jSTypeArray49);
        com.google.javascript.rhino.Node node52 = jSTypeRegistry48.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList50);
        node46.addChildrenToBack(node52);
        com.google.javascript.rhino.ErrorReporter errorReporter54 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter54);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.Node node59 = jSTypeRegistry55.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        boolean boolean60 = node59.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray63 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList64 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList64, jSTypeArray63);
        com.google.javascript.rhino.Node node66 = jSTypeRegistry62.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList64);
        boolean boolean67 = node66.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter68 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry69 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter68);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray70 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList71 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList71, jSTypeArray70);
        com.google.javascript.rhino.Node node73 = jSTypeRegistry69.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList71);
        com.google.javascript.rhino.Node node76 = new com.google.javascript.rhino.Node((int) (short) 0, node46, node59, node66, node73, 0, 49);
        boolean boolean77 = node46.isDo();
        boolean boolean78 = node46.isWith();
        int int79 = jSTypeList33.lastIndexOf((java.lang.Object) node46);
        boolean boolean80 = strSet19.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator81 = jSTypeList33.spliterator();
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(detailLevel16);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "*global*" + "'", str28, "*global*");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(jSTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(jSTypeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(jSTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(jSTypeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(jSTypeSpliterator81);
    }

    @Test
    public void test07356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07356");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList15 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15, jSTypeArray14);
        com.google.javascript.rhino.Node node17 = jSTypeRegistry13.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList15);
        com.google.javascript.rhino.jstype.JSType jSType22 = jSTypeRegistry13.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        com.google.javascript.rhino.jstype.JSType jSType33 = jSTypeRegistry24.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray34 = new com.google.javascript.rhino.jstype.JSType[] { jSType33 };
        com.google.javascript.rhino.jstype.FunctionType functionType35 = jSTypeRegistry7.createConstructorTypeWithVarArgs(jSType22, jSTypeArray34);
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        com.google.javascript.rhino.jstype.JSType jSType53 = jSTypeRegistry44.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter54 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter54);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.Node node59 = jSTypeRegistry55.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        com.google.javascript.rhino.jstype.JSType jSType64 = jSTypeRegistry55.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] { jSType64 };
        com.google.javascript.rhino.jstype.FunctionType functionType66 = jSTypeRegistry38.createConstructorTypeWithVarArgs(jSType53, jSTypeArray65);
        boolean boolean67 = jSTypeRegistry7.declareType("", jSType53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray71 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList72 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72, jSTypeArray71);
        boolean boolean74 = jSTypeList69.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator75 = jSTypeList69.spliterator();
        com.google.javascript.rhino.jstype.FunctionType functionType76 = jSTypeRegistry1.createFunctionTypeWithVarArgs(jSType53, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray77 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList78 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList78, jSTypeArray77);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray80 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList81 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList81, jSTypeArray80);
        boolean boolean83 = jSTypeList78.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList81);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator84 = jSTypeList78.spliterator();
        com.google.javascript.rhino.Node node85 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList78);
        com.google.javascript.rhino.Node node89 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        java.lang.String str90 = node89.getQualifiedName();
        com.google.javascript.rhino.Node node91 = node89.getLastChild();
        com.google.javascript.rhino.Node node92 = node89.getLastSibling();
        node85.addChildrenToFront(node92);
        boolean boolean94 = node85.isTry();
        boolean boolean95 = node85.isOptionalArg();
        node85.removeProp((int) (byte) -1);
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(jSType22);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(jSType33);
        org.junit.Assert.assertNotNull(jSTypeArray34);
        org.junit.Assert.assertNotNull(functionType35);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(jSType53);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(jSType64);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertNotNull(functionType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(jSTypeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(jSTypeSpliterator75);
        org.junit.Assert.assertNotNull(functionType76);
        org.junit.Assert.assertNotNull(jSTypeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(jSTypeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(jSTypeSpliterator84);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNull(node91);
        org.junit.Assert.assertNotNull(node92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test07357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07357");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setRuntimeTypeCheckLogFunction("FINEST");
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap5 = null;
        compilerOptions0.setCssRenamingMap(cssRenamingMap5);
        boolean boolean7 = compilerOptions0.checkControlStructures;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test07358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07358");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        com.google.javascript.jscomp.CheckLevel checkLevel10 = compilerOptions0.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode11 = compilerOptions0.getLanguageOut();
        boolean boolean12 = compilerOptions0.moveFunctionDeclarations;
        byte[] byteArray13 = null;
        compilerOptions0.inputPropertyMapSerialized = byteArray13;
        compilerOptions0.locale = ":/hi!";
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        com.google.javascript.rhino.ErrorReporter errorReporter25 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry26 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter25);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray27 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList28 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList28, jSTypeArray27);
        com.google.javascript.rhino.Node node30 = jSTypeRegistry26.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList28);
        com.google.javascript.rhino.jstype.JSType jSType35 = jSTypeRegistry26.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray38 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList39 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList39, jSTypeArray38);
        com.google.javascript.rhino.Node node41 = jSTypeRegistry37.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList39);
        com.google.javascript.rhino.jstype.JSType jSType46 = jSTypeRegistry37.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] { jSType46 };
        com.google.javascript.rhino.jstype.FunctionType functionType48 = jSTypeRegistry20.createConstructorTypeWithVarArgs(jSType35, jSTypeArray47);
        boolean boolean50 = jSTypeRegistry18.canPropertyBeDefined(jSType35, "");
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable52 = jSTypeRegistry18.getEachReferenceTypeWithProperty("/");
        java.lang.String[] strArray57 = new java.lang.String[] { "Unversioned directory", "/experiment/:/hi!", ":", "OFF" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        jSTypeRegistry18.setTemplateTypeNames((java.util.List<java.lang.String>) strList58);
        compilerOptions0.setManageClosureDependencies((java.util.List<java.lang.String>) strList58);
        compilerOptions0.setGroupVariableDeclarations(true);
        compilerOptions0.setRecordFunctionInformation(false);
        compilerOptions0.setRewriteFunctionExpressions(true);
        org.junit.Assert.assertTrue("'" + checkLevel10 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel10.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(languageMode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(jSTypeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(jSType35);
        org.junit.Assert.assertNotNull(jSTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(jSType46);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertNotNull(functionType48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objectTypeIterable52);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test07359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07359");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        compilerOptions9.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy14 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions15 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions15.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy18 = compilerOptions15.propertyRenaming;
        compilerOptions9.setRenamingPolicy(variableRenamingPolicy14, propertyRenamingPolicy18);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.skipAllCompilerPasses();
        boolean boolean24 = compilerOptions20.flowSensitiveInlineVariables;
        java.lang.String[] strArray34 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        compilerOptions20.stripTypes = strSet35;
        compilerOptions9.setStripNamePrefixes((java.util.Set<java.lang.String>) strSet35);
        compilerOptions0.setReplaceStringsReservedStrings((java.util.Set<java.lang.String>) strSet35);
        compilerOptions0.setOutputCharset("/");
        compilerOptions0.collapseAnonymousFunctions = false;
        compilerOptions0.setSyntheticBlockStartMarker(":/hi!");
        boolean boolean46 = compilerOptions0.checkSymbols;
        com.google.javascript.jscomp.CheckLevel checkLevel48 = com.google.javascript.jscomp.CheckLevel.WARNING;
        com.google.javascript.jscomp.DiagnosticType diagnosticType50 = com.google.javascript.jscomp.DiagnosticType.make("WARNING", checkLevel48, "hi!");
        compilerOptions0.setReportMissingOverride(checkLevel48);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy18 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy18.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + checkLevel48 + "' != '" + com.google.javascript.jscomp.CheckLevel.WARNING + "'", checkLevel48.equals(com.google.javascript.jscomp.CheckLevel.WARNING));
        org.junit.Assert.assertNotNull(diagnosticType50);
    }

    @Test
    public void test07360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07360");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.setReportPath("java.io.IOException: ");
        boolean boolean4 = compilerOptions0.inlineConstantVars;
        boolean boolean5 = compilerOptions0.deadAssignmentElimination;
        java.util.Set<java.lang.String> strSet6 = compilerOptions0.stripNameSuffixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean8 = compilerOptions7.moveFunctionDeclarations;
        compilerOptions7.setReportPath("java.io.IOException: ");
        boolean boolean11 = compilerOptions7.inlineConstantVars;
        boolean boolean12 = compilerOptions7.deadAssignmentElimination;
        java.util.Set<java.lang.String> strSet13 = compilerOptions7.stripNameSuffixes;
        java.io.File file15 = new java.io.File(":");
        java.io.File file17 = new java.io.File(file15, "FINEST");
        boolean boolean18 = file15.setReadOnly();
        java.io.File file21 = new java.io.File(":", "hi!");
        boolean boolean24 = file21.setExecutable(true, false);
        boolean boolean25 = file15.renameTo(file21);
        java.io.File file28 = new java.io.File(":", "hi!");
        boolean boolean31 = file28.setExecutable(true, false);
        java.io.File file33 = new java.io.File(file28, "PARAM_LIST\n");
        java.io.File file34 = file33.getParentFile();
        boolean boolean35 = file34.createNewFile();
        java.io.File file36 = file34.getAbsoluteFile();
        long long37 = file34.lastModified();
        java.nio.file.Path path38 = file34.toPath();
        boolean boolean39 = file21.renameTo(file34);
        boolean boolean40 = strSet13.contains((java.lang.Object) boolean39);
        compilerOptions0.setStripTypePrefixes(strSet13);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNull("file15.getParent() == null", file15.getParent());
        org.junit.Assert.assertEquals(file15.toString(), ":");
        org.junit.Assert.assertEquals(file17.getParent(), ":");
        org.junit.Assert.assertEquals(file17.toString(), ":/FINEST");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals(file21.getParent(), ":");
        org.junit.Assert.assertEquals(file21.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals(file28.getParent(), ":");
        org.junit.Assert.assertEquals(file28.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals(file33.getParent(), ":/hi!");
        org.junit.Assert.assertEquals(file33.toString(), ":/hi!/PARAM_LIST\n");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), ":");
        org.junit.Assert.assertEquals(file34.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(file36);
// flaky:         org.junit.Assert.assertEquals(file36.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file36.toString(), "/experiment/:/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1645456543000L + "'", long37 == 1645456543000L);
        org.junit.Assert.assertNotNull(path38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test07361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07361");
        java.nio.charset.Charset charset1 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str2 = charset1.name();
        java.util.Locale locale3 = null;
        java.lang.String str4 = charset1.displayName(locale3);
        java.nio.ByteBuffer byteBuffer6 = charset1.encode("/experiment/:/hi!");
        java.nio.charset.Charset charset7 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str8 = charset7.name();
        java.util.Set<java.lang.String> strSet9 = charset7.aliases();
        java.util.Set<java.lang.String> strSet10 = charset7.aliases();
        int int11 = charset1.compareTo(charset7);
        com.google.javascript.jscomp.JSSourceFile jSSourceFile12 = com.google.javascript.jscomp.JSSourceFile.fromFile(":/hi!", charset7);
        int int14 = jSSourceFile12.getColumnOfOffset(0);
        int int16 = jSSourceFile12.getColumnOfOffset(196607);
        org.junit.Assert.assertNotNull(charset1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "US-ASCII" + "'", str2, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "US-ASCII" + "'", str4, "US-ASCII");
        org.junit.Assert.assertNotNull(byteBuffer6);
        org.junit.Assert.assertNotNull(charset7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "US-ASCII" + "'", str8, "US-ASCII");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(jSSourceFile12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 196607 + "'", int16 == 196607);
    }

    @Test
    public void test07362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07362");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        boolean boolean2 = compilerOptions0.markAsCompiled;
        compilerOptions0.inlineLocalFunctions = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode6 = null;
        compilerOptions5.setTracerMode(tracerMode6);
        boolean boolean8 = compilerOptions5.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel9 = compilerOptions5.sourceMapDetailLevel;
        compilerOptions5.setColorizeErrorOutput(true);
        compilerOptions5.generatePseudoNames = true;
        compilerOptions5.setCheckControlStructures(false);
        com.google.javascript.jscomp.AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy16 = com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF;
        compilerOptions5.anonymousFunctionNaming = anonymousFunctionNamingPolicy16;
        com.google.javascript.jscomp.SourceMap.Format format18 = compilerOptions5.sourceMapFormat;
        com.google.javascript.jscomp.CompilerOptions compilerOptions19 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions19.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions19.setTweakToDoubleLiteral("", (double) (short) 1);
        compilerOptions19.setCrossModuleCodeMotion(false);
        compilerOptions19.inputDelimiter = "STRING PARAM_LIST 49";
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy29 = compilerOptions19.variableRenaming;
        compilerOptions19.setInlineProperties(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy35 = compilerOptions32.propertyRenaming;
        java.lang.String[] strArray38 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        compilerOptions32.setStripTypes((java.util.Set<java.lang.String>) strSet39);
        com.google.javascript.jscomp.CompilerOptions compilerOptions42 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode43 = null;
        compilerOptions42.setTracerMode(tracerMode43);
        boolean boolean45 = compilerOptions42.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel46 = compilerOptions42.sourceMapDetailLevel;
        compilerOptions42.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions49 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions49.crossModuleMethodMotion = true;
        compilerOptions49.optimizeParameters = true;
        compilerOptions49.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel57 = compilerOptions49.checkGlobalNamesLevel;
        compilerOptions42.setReportMissingOverride(checkLevel57);
        compilerOptions32.setCheckUnreachableCode(checkLevel57);
        compilerOptions32.syntheticBlockStartMarker = "*global*";
        com.google.javascript.jscomp.CheckLevel checkLevel62 = compilerOptions32.checkMissingReturn;
        compilerOptions19.setBrokenClosureRequiresLevel(checkLevel62);
        com.google.javascript.jscomp.CompilerOptions.AliasTransformationHandler aliasTransformationHandler64 = compilerOptions19.getAliasTransformationHandler();
        compilerOptions5.setAliasTransformationHandler(aliasTransformationHandler64);
        com.google.javascript.jscomp.CheckLevel checkLevel66 = compilerOptions5.checkProvides;
        compilerOptions0.setCheckGlobalThisLevel(checkLevel66);
        compilerOptions0.setGenerateExports(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(detailLevel9);
        org.junit.Assert.assertTrue("'" + anonymousFunctionNamingPolicy16 + "' != '" + com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF + "'", anonymousFunctionNamingPolicy16.equals(com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format18);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy29 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.OFF + "'", variableRenamingPolicy29.equals(com.google.javascript.jscomp.VariableRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy35 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy35.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(detailLevel46);
        org.junit.Assert.assertTrue("'" + checkLevel57 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel57.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel62 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel62.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(aliasTransformationHandler64);
        org.junit.Assert.assertTrue("'" + checkLevel66 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel66.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07363");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec1 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("*global*");
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        com.google.javascript.rhino.Node node8 = jSTypeRegistry4.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray11 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList12 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList12, jSTypeArray11);
        com.google.javascript.rhino.Node node14 = jSTypeRegistry10.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList12);
        node8.addChildrenToBack(node14);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray18 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList19 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList19, jSTypeArray18);
        com.google.javascript.rhino.Node node21 = jSTypeRegistry17.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList19);
        boolean boolean22 = node21.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        boolean boolean29 = node28.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.Node node35 = jSTypeRegistry31.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        com.google.javascript.rhino.Node node38 = new com.google.javascript.rhino.Node((int) (short) 0, node8, node21, node28, node35, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray48 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList49 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList49, jSTypeArray48);
        com.google.javascript.rhino.Node node51 = jSTypeRegistry47.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList49);
        node45.addChildrenToBack(node51);
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry54 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray55 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList56 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56, jSTypeArray55);
        com.google.javascript.rhino.Node node58 = jSTypeRegistry54.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        boolean boolean59 = node58.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter60 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter60);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray62 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList63 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63, jSTypeArray62);
        com.google.javascript.rhino.Node node65 = jSTypeRegistry61.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        boolean boolean66 = node65.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter67 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry68 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter67);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray69 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList70 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70, jSTypeArray69);
        com.google.javascript.rhino.Node node72 = jSTypeRegistry68.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 0, node45, node58, node65, node72, 0, 49);
        com.google.javascript.rhino.Node node76 = node38.useSourceInfoFrom(node58);
        boolean boolean77 = node76.hasChildren();
        boolean boolean78 = node76.isDefaultCase();
        boolean boolean79 = node76.isSwitch();
        com.google.javascript.rhino.Node node80 = assertionFunctionSpec1.getAssertedParam(node76);
        java.lang.String str81 = node76.getSourceFileName();
        com.google.javascript.rhino.Node node85 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean87 = node85.getBooleanProp((int) (byte) 10);
        com.google.javascript.rhino.Node node88 = node76.useSourceInfoIfMissingFrom(node85);
        boolean boolean89 = node76.isDec();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder90 = node76.getJsDocBuilderForNode();
        boolean boolean91 = node76.hasChildren();
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(jSTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(jSTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(jSTypeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(jSTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(jSTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(jSTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test07364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07364");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.crossModuleCodeMotion = true;
        compilerOptions0.checkSymbols = true;
        compilerOptions0.setExtractPrototypeMemberDeclarations(true);
        boolean boolean8 = compilerOptions0.checkSuspiciousCode;
        compilerOptions0.setCollapseProperties(false);
        compilerOptions0.setDefineToDoubleLiteral("OFF", (double) 280489734144L);
        com.google.common.collect.Multimap<com.google.javascript.jscomp.CustomPassExecutionTime, com.google.javascript.jscomp.CompilerPass> customPassExecutionTimeMultimap14 = null;
        compilerOptions0.customPasses = customPassExecutionTimeMultimap14;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test07365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07365");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode6 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions0.setTracer(tracerMode6);
        boolean boolean8 = compilerOptions0.collapseVariableDeclarations;
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode10 = null;
        compilerOptions9.setTracerMode(tracerMode10);
        boolean boolean12 = compilerOptions9.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel13 = compilerOptions9.sourceMapDetailLevel;
        compilerOptions9.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions16 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions16.crossModuleMethodMotion = true;
        compilerOptions16.optimizeParameters = true;
        compilerOptions16.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel24 = compilerOptions16.checkGlobalNamesLevel;
        compilerOptions9.setReportMissingOverride(checkLevel24);
        java.util.Set<java.lang.String> strSet26 = compilerOptions9.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile29 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int31 = sourceFile29.getLineOfOffset((int) (short) 1);
        java.lang.String str32 = sourceFile29.getName();
        java.lang.String str33 = sourceFile29.getName();
        java.lang.String str34 = sourceFile29.getName();
        int int36 = sourceFile29.getLineOfOffset((-1));
        boolean boolean37 = strSet26.equals((java.lang.Object) int36);
        compilerOptions0.setStripNamePrefixes(strSet26);
        compilerOptions0.setProcessObjectPropertyString(false);
        compilerOptions0.closurePass = true;
        org.junit.Assert.assertTrue("'" + tracerMode6 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode6.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(detailLevel13);
        org.junit.Assert.assertTrue("'" + checkLevel24 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel24.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(sourceFile29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test07366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07366");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode6 = null;
        compilerOptions5.setTracerMode(tracerMode6);
        boolean boolean8 = compilerOptions5.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel9 = compilerOptions5.sourceMapDetailLevel;
        compilerOptions5.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet12 = compilerOptions5.stripNameSuffixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode14 = null;
        compilerOptions13.setTracerMode(tracerMode14);
        boolean boolean16 = compilerOptions13.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel17 = compilerOptions13.sourceMapDetailLevel;
        compilerOptions13.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.optimizeParameters = true;
        compilerOptions20.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel28 = compilerOptions20.checkGlobalNamesLevel;
        compilerOptions13.setReportMissingOverride(checkLevel28);
        compilerOptions5.setAggressiveVarCheck(checkLevel28);
        compilerOptions0.setCheckUnreachableCode(checkLevel28);
        com.google.javascript.jscomp.SourceMap.Format format32 = compilerOptions0.sourceMapFormat;
        boolean boolean33 = compilerOptions0.recordFunctionInformation;
        compilerOptions0.setComputeFunctionSideEffects(false);
        boolean boolean36 = compilerOptions0.inlineLocalFunctions;
        compilerOptions0.setGroupVariableDeclarations(false);
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(detailLevel9);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(detailLevel17);
        org.junit.Assert.assertTrue("'" + checkLevel28 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel28.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(format32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test07367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07367");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions0.checkGlobalNamesLevel;
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode10 = null;
        compilerOptions9.setTracerMode(tracerMode10);
        boolean boolean12 = compilerOptions9.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel13 = compilerOptions9.sourceMapDetailLevel;
        compilerOptions9.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet16 = compilerOptions9.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile18 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput20 = new com.google.javascript.jscomp.CompilerInput(sourceFile18, true);
        com.google.javascript.rhino.InputId inputId22 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput24 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput20, inputId22, true);
        java.lang.String str25 = compilerInput24.toString();
        boolean boolean26 = strSet16.contains((java.lang.Object) compilerInput24);
        java.lang.Object[] objArray27 = strSet16.toArray();
        compilerOptions0.setStripTypes(strSet16);
        compilerOptions0.labelRenaming = false;
        java.util.Set<java.lang.String> strSet31 = compilerOptions0.stripTypePrefixes;
        compilerOptions0.convertToDottedProperties = true;
        boolean boolean34 = compilerOptions0.checkSymbols;
        java.lang.Class<?> wildcardClass35 = compilerOptions0.getClass();
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(detailLevel13);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "*global*" + "'", str25, "*global*");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test07368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07368");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean3 = file2.createNewFile();
        java.lang.String str4 = file2.getName();
        java.lang.String str5 = file2.getCanonicalPath();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/experiment/:/hi!" + "'", str5, "/experiment/:/hi!");
    }

    @Test
    public void test07369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07369");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        compilerOptions7.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions7.checkGlobalNamesLevel;
        compilerOptions0.setReportMissingOverride(checkLevel15);
        java.util.Set<java.lang.String> strSet17 = compilerOptions0.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel19 = compilerOptions18.checkRequires;
        compilerOptions0.setReportMissingOverride(checkLevel19);
        compilerOptions0.setGatherCssNames(true);
        compilerOptions0.setLineBreak(false);
        compilerOptions0.setGroupVariableDeclarations(false);
        compilerOptions0.setSyntheticBlockStartMarker("PARAM_LIST\n");
        compilerOptions0.setTweakToNumberLiteral("DiagnosticGroup<goog.exportSymbol>", 36);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + checkLevel19 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel19.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07370");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.Node node38 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node39 = node36.useSourceInfoIfMissingFrom(node38);
        node38.setType(50);
        int int42 = node38.getChildCount();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable43 = node38.children();
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        boolean boolean50 = node49.isIn();
        boolean boolean51 = node49.isGetElem();
        boolean boolean52 = node49.isIn();
        com.google.javascript.rhino.Node node53 = node49.getLastSibling();
        boolean boolean54 = node53.isTypeOf();
        com.google.javascript.rhino.InputId inputId55 = node53.getInputId();
        java.lang.String str56 = node53.toString();
        com.google.javascript.rhino.Node node57 = node38.clonePropsFrom(node53);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(nodeIterable43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(inputId55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PARAM_LIST" + "'", str56, "PARAM_LIST");
        org.junit.Assert.assertNotNull(node57);
    }

    @Test
    public void test07371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07371");
        com.google.javascript.jscomp.JSSourceFile jSSourceFile1 = com.google.javascript.jscomp.JSSourceFile.fromFile("/");
        // The following exception was thrown during execution in test generation
        try {
            int int3 = jSSourceFile1.getLineOffset(41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Expected line number between 1 and 1?Actual: 41");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSSourceFile1);
    }

    @Test
    public void test07372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07372");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(true, false);
        java.io.File file7 = new java.io.File(file2, "PARAM_LIST\n");
        long long8 = file2.getUsableSpace();
        boolean boolean10 = file2.setWritable(false);
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals(file7.getParent(), ":/hi!");
        org.junit.Assert.assertEquals(file7.toString(), ":/hi!/PARAM_LIST\n");
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 280490270720L + "'", long8 == 280490270720L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test07373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07373");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy5 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions6.propertyRenaming;
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy5, propertyRenamingPolicy9);
        boolean boolean11 = compilerOptions0.checkControlStructures;
        com.google.javascript.jscomp.CheckLevel checkLevel12 = compilerOptions0.aggressiveVarCheck;
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions13.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel16 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions13.setSourceMapDetailLevel(detailLevel16);
        boolean boolean18 = compilerOptions13.ideMode;
        compilerOptions13.renamePrefix = "hi!";
        boolean boolean21 = compilerOptions13.inlineConstantVars;
        com.google.javascript.jscomp.CompilerOptions compilerOptions22 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode23 = null;
        compilerOptions22.setTracerMode(tracerMode23);
        boolean boolean25 = compilerOptions22.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel26 = compilerOptions22.sourceMapDetailLevel;
        compilerOptions22.setColorizeErrorOutput(true);
        compilerOptions22.collapseProperties = false;
        com.google.javascript.jscomp.CheckLevel checkLevel31 = com.google.javascript.jscomp.CheckLevel.WARNING;
        compilerOptions22.setCheckMissingGetCssNameLevel(checkLevel31);
        compilerOptions13.checkProvides = checkLevel31;
        compilerOptions13.markAsCompiled = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions36.crossModuleMethodMotion = true;
        compilerOptions36.syntheticBlockEndMarker = "hi!";
        compilerOptions36.removeUnusedClassProperties = false;
        compilerOptions36.setLineLengthThreshold(4095);
        boolean boolean45 = compilerOptions36.collapseVariableDeclarations;
        byte[] byteArray51 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 1, (byte) -1 };
        compilerOptions36.setInputVariableMapSerialized(byteArray51);
        compilerOptions13.inputVariableMapSerialized = byteArray51;
        compilerOptions0.inputPropertyMapSerialized = byteArray51;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + checkLevel12 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel12.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(detailLevel16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(detailLevel26);
        org.junit.Assert.assertTrue("'" + checkLevel31 + "' != '" + com.google.javascript.jscomp.CheckLevel.WARNING + "'", checkLevel31.equals(com.google.javascript.jscomp.CheckLevel.WARNING));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, 100, 10, 1, -1]");
    }

    @Test
    public void test07374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07374");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        compilerOptions0.setDefineToBooleanLiteral("", true);
        java.lang.String str12 = compilerOptions0.renamePrefixNamespace;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap13 = compilerOptions0.getTweakReplacements();
        compilerOptions0.setOptimizeParameters(true);
        boolean boolean16 = compilerOptions0.removeUnusedPrototypeProperties;
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy20 = compilerOptions17.propertyRenaming;
        boolean boolean21 = compilerOptions17.disambiguateProperties;
        compilerOptions17.setFoldConstants(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode25 = null;
        compilerOptions24.setTracerMode(tracerMode25);
        boolean boolean27 = compilerOptions24.generatePseudoNames;
        com.google.javascript.jscomp.SourceMap.LocationMapping[] locationMappingArray28 = new com.google.javascript.jscomp.SourceMap.LocationMapping[] {};
        java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping> locationMappingList29 = new java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList29, locationMappingArray28);
        compilerOptions24.sourceMapLocationMappings = locationMappingList29;
        compilerOptions17.sourceMapLocationMappings = locationMappingList29;
        compilerOptions0.sourceMapLocationMappings = locationMappingList29;
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy20 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy20.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(locationMappingArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test07375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07375");
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags1 = new com.google.javascript.rhino.Node.SideEffectFlags(300);
        sideEffectFlags1.setAllFlags();
    }

    @Test
    public void test07376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07376");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        jSTypeRegistry1.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable13 = jSTypeRegistry1.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType18 = jSTypeRegistry1.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream25 = jSTypeList22.parallelStream();
        com.google.javascript.rhino.Node node26 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry28 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        boolean boolean35 = jSTypeList30.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        com.google.javascript.rhino.Node node36 = jSTypeRegistry28.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        java.lang.Object obj37 = null;
        boolean boolean38 = jSTypeList30.remove(obj37);
        java.lang.Object obj39 = null;
        int int40 = jSTypeList30.indexOf(obj39);
        com.google.javascript.jscomp.SourceFile sourceFile43 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int45 = sourceFile43.getLineOfOffset((int) (short) 1);
        int int46 = jSTypeList30.indexOf((java.lang.Object) sourceFile43);
        node26.setStaticSourceFile((com.google.javascript.rhino.jstype.StaticSourceFile) sourceFile43);
        boolean boolean48 = node26.isSetterDef();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeIterable13);
        org.junit.Assert.assertNotNull(jSType18);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(jSTypeStream25);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(sourceFile43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test07377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07377");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        compilerOptions0.exportTestFunctions = false;
        com.google.javascript.jscomp.CheckLevel checkLevel23 = compilerOptions0.brokenClosureRequiresLevel;
        boolean boolean24 = compilerOptions0.closurePass;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertTrue("'" + checkLevel23 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel23.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test07378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07378");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode(":", "");
        int int4 = sourceFile2.getLineOfOffset(39);
        com.google.javascript.jscomp.Region region6 = sourceFile2.getRegion(49);
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNull(region6);
    }

    @Test
    public void test07379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07379");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(true, false);
        java.io.File file7 = new java.io.File(file2, "PARAM_LIST\n");
        java.io.File file8 = file7.getParentFile();
        boolean boolean9 = file8.createNewFile();
        java.lang.String str10 = file8.getAbsolutePath();
        long long11 = file8.length();
        boolean boolean14 = file8.setWritable(false, true);
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals(file7.getParent(), ":/hi!");
        org.junit.Assert.assertEquals(file7.toString(), ":/hi!/PARAM_LIST\n");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), ":");
        org.junit.Assert.assertEquals(file8.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/experiment/:/hi!" + "'", str10, "/experiment/:/hi!");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 4096L + "'", long11 == 4096L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test07380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07380");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        jSTypeRegistry1.setLastGeneration(false);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        com.google.javascript.rhino.ErrorReporter errorReporter20 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter20);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray22 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList23 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList23, jSTypeArray22);
        com.google.javascript.rhino.Node node25 = jSTypeRegistry21.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList23);
        com.google.javascript.rhino.jstype.JSType jSType30 = jSTypeRegistry21.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray33 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList34 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList34, jSTypeArray33);
        com.google.javascript.rhino.Node node36 = jSTypeRegistry32.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList34);
        com.google.javascript.rhino.jstype.JSType jSType41 = jSTypeRegistry32.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] { jSType41 };
        com.google.javascript.rhino.jstype.FunctionType functionType43 = jSTypeRegistry15.createConstructorTypeWithVarArgs(jSType30, jSTypeArray42);
        boolean boolean45 = jSTypeRegistry13.canPropertyBeDefined(jSType30, "");
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray48 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList49 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList49, jSTypeArray48);
        com.google.javascript.rhino.Node node51 = jSTypeRegistry47.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList49);
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList55 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55, jSTypeArray54);
        com.google.javascript.rhino.Node node57 = jSTypeRegistry53.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList55);
        com.google.javascript.rhino.jstype.JSType jSType62 = jSTypeRegistry53.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList66 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList66, jSTypeArray65);
        com.google.javascript.rhino.Node node68 = jSTypeRegistry64.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList66);
        com.google.javascript.rhino.jstype.JSType jSType73 = jSTypeRegistry64.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray74 = new com.google.javascript.rhino.jstype.JSType[] { jSType73 };
        com.google.javascript.rhino.jstype.FunctionType functionType75 = jSTypeRegistry47.createConstructorTypeWithVarArgs(jSType62, jSTypeArray74);
        com.google.javascript.rhino.ErrorReporter errorReporter76 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry77 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter76);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray78 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList79 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList79, jSTypeArray78);
        com.google.javascript.rhino.Node node81 = jSTypeRegistry77.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList79);
        com.google.javascript.rhino.jstype.JSType jSType86 = jSTypeRegistry77.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType jSType91 = jSTypeRegistry77.createNamedType("FINEST", "/", 32, (int) (short) 1);
        com.google.javascript.rhino.jstype.JSType jSType92 = jSTypeRegistry47.createNullableType(jSType91);
        com.google.javascript.rhino.jstype.JSType jSType93 = jSTypeRegistry13.createOptionalNullableType(jSType91);
        com.google.javascript.rhino.jstype.JSType jSType94 = jSTypeRegistry1.createOptionalNullableType(jSType93);
        jSTypeRegistry1.forwardDeclareType("NUMBER -1.0");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative97 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.ObjectType objectType98 = jSTypeRegistry1.getNativeObjectType(jSTypeNative97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(jSTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(jSType30);
        org.junit.Assert.assertNotNull(jSTypeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(jSType41);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertNotNull(functionType43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jSTypeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(jSTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(jSType62);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(jSType73);
        org.junit.Assert.assertNotNull(jSTypeArray74);
        org.junit.Assert.assertNotNull(functionType75);
        org.junit.Assert.assertNotNull(jSTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNotNull(jSType86);
        org.junit.Assert.assertNotNull(jSType91);
        org.junit.Assert.assertNotNull(jSType92);
        org.junit.Assert.assertNotNull(jSType93);
        org.junit.Assert.assertNotNull(jSType94);
    }

    @Test
    public void test07381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07381");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        jSTypeRegistry1.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable13 = jSTypeRegistry1.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType18 = jSTypeRegistry1.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream25 = jSTypeList22.parallelStream();
        com.google.javascript.rhino.Node node26 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        java.lang.Object obj27 = null;
        int int28 = jSTypeList22.lastIndexOf(obj27);
        com.google.javascript.jscomp.CompilerOptions compilerOptions29 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions29.crossModuleMethodMotion = true;
        compilerOptions29.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions34 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions34.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy37 = compilerOptions34.propertyRenaming;
        java.lang.String[] strArray40 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        compilerOptions34.setStripTypes((java.util.Set<java.lang.String>) strSet41);
        compilerOptions29.stripNamePrefixes = strSet41;
        com.google.javascript.jscomp.CompilerOptions compilerOptions45 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions45.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy48 = compilerOptions45.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap49 = compilerOptions45.getTweakReplacements();
        boolean boolean50 = strSet41.remove((java.lang.Object) compilerOptions45);
        com.google.javascript.jscomp.CompilerOptions compilerOptions51 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel52 = compilerOptions51.checkRequires;
        compilerOptions51.setRewriteNewDateGoogNow(true);
        compilerOptions51.setSyntheticBlockStartMarker("OFF");
        compilerOptions51.skipAllCompilerPasses();
        compilerOptions51.jqueryPass = false;
        java.lang.String[] strArray65 = new java.lang.String[] { "PARAM_LIST\n", "/", "STRING PARAM_LIST 49", "hi!", "/" };
        java.util.LinkedHashSet<java.lang.String> strSet66 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet66, strArray65);
        compilerOptions51.stripNameSuffixes = strSet66;
        com.google.javascript.rhino.ErrorReporter errorReporter69 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry70 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter69);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray71 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList72 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72, jSTypeArray71);
        com.google.javascript.rhino.Node node74 = jSTypeRegistry70.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream75 = jSTypeList72.parallelStream();
        boolean boolean76 = strSet66.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        boolean boolean77 = strSet41.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        boolean boolean78 = jSTypeList22.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream79 = jSTypeList72.stream();
        java.util.Iterator<com.google.javascript.rhino.jstype.JSType> jSTypeItor80 = jSTypeList72.iterator();
        java.lang.Object[] objArray81 = jSTypeList72.toArray();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeIterable13);
        org.junit.Assert.assertNotNull(jSType18);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(jSTypeStream25);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy37 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy37.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy48 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy48.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + checkLevel52 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel52.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(jSTypeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNotNull(jSTypeStream75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(jSTypeStream79);
        org.junit.Assert.assertNotNull(jSTypeItor80);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
    }

    @Test
    public void test07382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07382");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler2 = new com.google.javascript.jscomp.Compiler();
        jSModule1.sortInputsByDeps(compiler2);
        com.google.javascript.jscomp.SourceFile.Builder builder4 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile8 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int10 = sourceFile8.getLineOfOffset((int) (short) 1);
        java.io.Reader reader11 = sourceFile8.getCodeReader();
        int int12 = reader11.read();
        com.google.javascript.jscomp.SourceFile sourceFile13 = builder4.buildFromReader("*global*", reader11);
        jSModule1.add(sourceFile13);
        com.google.javascript.jscomp.JSModule jSModule16 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler17 = new com.google.javascript.jscomp.Compiler();
        jSModule16.sortInputsByDeps(compiler17);
        com.google.javascript.jscomp.SourceFile.Builder builder19 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile23 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int25 = sourceFile23.getLineOfOffset((int) (short) 1);
        java.io.Reader reader26 = sourceFile23.getCodeReader();
        int int27 = reader26.read();
        com.google.javascript.jscomp.SourceFile sourceFile28 = builder19.buildFromReader("*global*", reader26);
        jSModule16.add(sourceFile28);
        boolean boolean31 = jSModule16.removeByName("PARAM_LIST");
        jSModule1.addDependency(jSModule16);
        boolean boolean34 = jSModule16.removeByName("InputId: *global*");
        jSModule16.removeAll();
        boolean boolean37 = jSModule16.removeByName("/experiment/:/hi!");
        org.junit.Assert.assertNotNull(sourceFile8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(sourceFile13);
        org.junit.Assert.assertNotNull(sourceFile23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(sourceFile28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test07383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07383");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setRuntimeTypeCheckLogFunction("FINEST");
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageIn();
        boolean boolean6 = compilerOptions0.removeUnusedVars;
        compilerOptions0.disableRuntimeTypeCheck();
        boolean boolean8 = compilerOptions0.gatherCssNames;
        compilerOptions0.setTweakToBooleanLiteral("java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ", false);
        org.junit.Assert.assertTrue("'" + languageMode5 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode5.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test07384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07384");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("FINEST");
        stats1.gzSize = 300;
        int int4 = stats1.gzDiff;
        stats1.gzDiff = 4095;
        stats1.diff = 52;
        stats1.gzSize = 53;
        int int11 = stats1.runs;
        int int12 = stats1.changes;
        int int13 = stats1.gzDiff;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 4095 + "'", int13 == 4095);
    }

    @Test
    public void test07385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07385");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        boolean boolean75 = node74.hasChildren();
        boolean boolean76 = node74.isArrayLit();
        com.google.javascript.rhino.InputId inputId78 = new com.google.javascript.rhino.InputId("*global*");
        java.lang.String str79 = inputId78.toString();
        node74.setInputId(inputId78);
        boolean boolean81 = node74.isInstanceOf();
        boolean boolean82 = node74.isNew();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "InputId: *global*" + "'", str79, "InputId: *global*");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test07386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07386");
        java.nio.charset.Charset charset2 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str3 = charset2.name();
        java.util.Locale locale4 = null;
        java.lang.String str5 = charset2.displayName(locale4);
        com.google.javascript.jscomp.JSSourceFile jSSourceFile6 = com.google.javascript.jscomp.JSSourceFile.fromFile("Node tree inequality:\nTree1:\nPARAM_LIST\n    NAME \n\n\nTree2:\nNUMBER -1.0\n\n\nSubtree1: PARAM_LIST\n    NAME \n\n\nSubtree2: NUMBER -1.0\n", charset2);
        java.nio.charset.CharsetEncoder charsetEncoder7 = charset2.newEncoder();
        boolean boolean8 = charset2.canEncode();
        com.google.javascript.jscomp.SourceFile sourceFile9 = com.google.javascript.jscomp.SourceFile.fromFile("InputId: *global*", charset2);
        java.nio.charset.CharsetEncoder charsetEncoder10 = charset2.newEncoder();
        java.util.Locale locale11 = null;
        java.lang.String str12 = charset2.displayName(locale11);
        org.junit.Assert.assertNotNull(charset2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "US-ASCII" + "'", str3, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "US-ASCII" + "'", str5, "US-ASCII");
        org.junit.Assert.assertNotNull(jSSourceFile6);
        org.junit.Assert.assertNotNull(charsetEncoder7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sourceFile9);
        org.junit.Assert.assertNotNull(charsetEncoder10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "US-ASCII" + "'", str12, "US-ASCII");
    }

    @Test
    public void test07387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07387");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode6 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions0.setTracer(tracerMode6);
        compilerOptions0.setSyntheticBlockStartMarker("");
        java.util.Set<java.lang.String> strSet10 = compilerOptions0.stripNameSuffixes;
        boolean boolean11 = compilerOptions0.getInferTypes();
        com.google.javascript.jscomp.CompilerOptions compilerOptions12 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions12.inputDelimiter = "";
        com.google.javascript.jscomp.CompilerOptions compilerOptions15 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions15.crossModuleMethodMotion = true;
        compilerOptions15.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy20 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions21.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy24 = compilerOptions21.propertyRenaming;
        compilerOptions15.setRenamingPolicy(variableRenamingPolicy20, propertyRenamingPolicy24);
        boolean boolean26 = compilerOptions15.checkControlStructures;
        compilerOptions15.syntheticBlockEndMarker = "FINEST";
        compilerOptions15.setOptimizeParameters(true);
        com.google.javascript.jscomp.CompilerOptions.AliasTransformationHandler aliasTransformationHandler31 = compilerOptions15.getAliasTransformationHandler();
        compilerOptions12.setAliasTransformationHandler(aliasTransformationHandler31);
        compilerOptions0.setAliasTransformationHandler(aliasTransformationHandler31);
        org.junit.Assert.assertTrue("'" + tracerMode6 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode6.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy24 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy24.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(aliasTransformationHandler31);
    }

    @Test
    public void test07388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07388");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        compilerOptions0.prettyPrint = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.crossModuleMethodMotion = true;
        compilerOptions32.optimizeParameters = true;
        compilerOptions32.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel40 = compilerOptions32.checkGlobalNamesLevel;
        compilerOptions0.checkGlobalNamesLevel = checkLevel40;
        compilerOptions0.setDefineToDoubleLiteral(":", (double) 12);
        compilerOptions0.setDefineToNumberLiteral("PARAM_LIST\n    PARAM_LIST\n", 2147483647);
        compilerOptions0.setCollapseObjectLiterals(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = null;
        compilerOptions0.setDefineReplacements(strMap50);
        compilerOptions0.inlineFunctions = true;
        compilerOptions0.setShadowVariables(true);
        boolean boolean56 = compilerOptions0.optimizeArgumentsArray;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel40 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel40.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test07389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07389");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        node36.setSourceEncodedPosition(16);
        boolean boolean77 = node36.isName();
        boolean boolean78 = node36.hasOneChild();
        // The following exception was thrown during execution in test generation
        try {
            node36.setSideEffectFlags(50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: 0");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test07390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07390");
        java.io.IOException iOException2 = new java.io.IOException(":");
        java.io.IOException iOException3 = new java.io.IOException("JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of code motion iterations: {0}", (java.lang.Throwable) iOException2);
        java.lang.String str4 = iOException2.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "java.io.IOException: :" + "'", str4, "java.io.IOException: :");
    }

    @Test
    public void test07391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07391");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.crossModuleCodeMotion = true;
        compilerOptions0.setExportTestFunctions(false);
        compilerOptions0.setAcceptConstKeyword(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions8.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode14 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions8.setTracer(tracerMode14);
        compilerOptions8.setSyntheticBlockStartMarker("");
        boolean boolean18 = compilerOptions8.computeFunctionSideEffects;
        com.google.javascript.jscomp.CompilerOptions compilerOptions19 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel20 = compilerOptions19.checkRequires;
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode22 = null;
        compilerOptions21.setTracerMode(tracerMode22);
        boolean boolean24 = compilerOptions21.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel25 = compilerOptions21.sourceMapDetailLevel;
        compilerOptions21.setColorizeErrorOutput(true);
        compilerOptions21.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions30 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions30.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy33 = compilerOptions30.propertyRenaming;
        compilerOptions21.propertyRenaming = propertyRenamingPolicy33;
        com.google.javascript.jscomp.CheckLevel checkLevel35 = compilerOptions21.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel36 = compilerOptions21.checkRequires;
        compilerOptions19.setCheckRequires(checkLevel36);
        compilerOptions8.setCheckGlobalThisLevel(checkLevel36);
        compilerOptions0.setCheckGlobalNamesLevel(checkLevel36);
        java.util.Set<java.lang.String> strSet40 = null;
        compilerOptions0.setStripNameSuffixes(strSet40);
        compilerOptions0.resetWarningsGuard();
        byte[] byteArray43 = compilerOptions0.inputVariableMapSerialized;
        com.google.javascript.jscomp.CompilerOptions compilerOptions44 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions44.crossModuleMethodMotion = true;
        compilerOptions44.skipAllCompilerPasses();
        compilerOptions44.resetWarningsGuard();
        com.google.javascript.rhino.ErrorReporter errorReporter50 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry51 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter50);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray52 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList53 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList53, jSTypeArray52);
        com.google.javascript.rhino.Node node55 = jSTypeRegistry51.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList53);
        boolean boolean56 = node55.isIn();
        boolean boolean57 = node55.isVoid();
        node55.setOptionalArg(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions60 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode61 = null;
        compilerOptions60.setTracerMode(tracerMode61);
        boolean boolean63 = compilerOptions60.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel64 = compilerOptions60.sourceMapDetailLevel;
        compilerOptions60.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions67 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions67.crossModuleMethodMotion = true;
        compilerOptions67.optimizeParameters = true;
        compilerOptions67.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel75 = compilerOptions67.checkGlobalNamesLevel;
        compilerOptions60.setReportMissingOverride(checkLevel75);
        com.google.javascript.jscomp.DiagnosticType diagnosticType77 = com.google.javascript.jscomp.Compiler.MOTION_ITERATIONS_ERROR;
        java.lang.String[] strArray78 = null;
        com.google.javascript.jscomp.JSError jSError79 = com.google.javascript.jscomp.JSError.make("", node55, checkLevel75, diagnosticType77, strArray78);
        compilerOptions44.checkUnreachableCode = checkLevel75;
        compilerOptions0.setCheckUnreachableCode(checkLevel75);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + tracerMode14 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode14.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + checkLevel20 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel20.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(detailLevel25);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy33 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy33.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel35 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel35.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel36 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel36.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertNotNull(jSTypeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(detailLevel64);
        org.junit.Assert.assertTrue("'" + checkLevel75 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel75.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(diagnosticType77);
        org.junit.Assert.assertNotNull(jSError79);
    }

    @Test
    public void test07392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07392");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int4 = sourceFile2.getLineOfOffset((int) (short) 1);
        java.io.Reader reader5 = sourceFile2.getCodeReader();
        int int6 = reader5.read();
        long long8 = reader5.skip(0L);
        boolean boolean9 = reader5.markSupported();
        long long11 = reader5.skip(280489455616L);
        reader5.close();
        // The following exception was thrown during execution in test generation
        try {
            reader5.mark(3);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Stream closed");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(reader5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test07393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07393");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(true, false);
        boolean boolean7 = file2.setWritable(false);
        boolean boolean8 = file2.delete();
        java.lang.String str9 = file2.getAbsolutePath();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/experiment/:/hi!" + "'", str9, "/experiment/:/hi!");
    }

    @Test
    public void test07394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07394");
        com.google.javascript.jscomp.SourceFile.Generator generator1 = null;
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromGenerator("/experiment/:/hi!/goog.exportSymbol6344102151034639300();", generator1);
        java.lang.String str3 = sourceFile2.getName();
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/experiment/:/hi!/goog.exportSymbol6344102151034639300();" + "'", str3, "/experiment/:/hi!/goog.exportSymbol6344102151034639300();");
    }

    @Test
    public void test07395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07395");
        java.nio.charset.Charset charset0 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str1 = charset0.name();
        java.util.Locale locale2 = null;
        java.lang.String str3 = charset0.displayName(locale2);
        java.nio.ByteBuffer byteBuffer5 = charset0.encode("/experiment/:/hi!");
        java.nio.charset.CharsetEncoder charsetEncoder6 = charset0.newEncoder();
        java.nio.charset.CharsetEncoder charsetEncoder7 = charset0.newEncoder();
        org.junit.Assert.assertNotNull(charset0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "US-ASCII" + "'", str1, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "US-ASCII" + "'", str3, "US-ASCII");
        org.junit.Assert.assertNotNull(byteBuffer5);
        org.junit.Assert.assertNotNull(charsetEncoder6);
        org.junit.Assert.assertNotNull(charsetEncoder7);
    }

    @Test
    public void test07396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07396");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        boolean boolean4 = compilerOptions0.disambiguateProperties;
        compilerOptions0.setRemoveClosureAsserts(false);
        java.io.PrintStream printStream8 = new java.io.PrintStream("PARAM_LIST");
        printStream8.write(40);
        printStream8.flush();
        printStream8.println((double) 'a');
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode15 = null;
        compilerOptions14.setTracerMode(tracerMode15);
        boolean boolean17 = compilerOptions14.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel18 = compilerOptions14.sourceMapDetailLevel;
        compilerOptions14.optimizeArgumentsArray = false;
        compilerOptions14.setAliasableGlobals("STRING PARAM_LIST 49");
        boolean boolean23 = compilerOptions14.aliasAllStrings;
        com.google.javascript.jscomp.CompilerOptions.TweakProcessing tweakProcessing24 = com.google.javascript.jscomp.CompilerOptions.TweakProcessing.CHECK;
        boolean boolean25 = tweakProcessing24.shouldStrip();
        compilerOptions14.setTweakProcessing(tweakProcessing24);
        boolean boolean27 = compilerOptions14.reserveRawExports;
        compilerOptions14.setMarkNoSideEffectCalls(false);
        compilerOptions14.setAliasAllStrings(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.crossModuleMethodMotion = true;
        compilerOptions32.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy37 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions38 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions38.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy41 = compilerOptions38.propertyRenaming;
        compilerOptions32.setRenamingPolicy(variableRenamingPolicy37, propertyRenamingPolicy41);
        compilerOptions32.setTransformAMDToCJSModules(true);
        boolean boolean45 = compilerOptions32.exportTestFunctions;
        boolean boolean46 = compilerOptions32.exportTestFunctions;
        boolean boolean47 = compilerOptions32.foldConstants;
        byte[] byteArray48 = new byte[] {};
        compilerOptions32.setInputVariableMapSerialized(byteArray48);
        compilerOptions14.inputPropertyMapSerialized = byteArray48;
        printStream8.write(byteArray48);
        compilerOptions0.setInputPropertyMapSerialized(byteArray48);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(detailLevel18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + tweakProcessing24 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TweakProcessing.CHECK + "'", tweakProcessing24.equals(com.google.javascript.jscomp.CompilerOptions.TweakProcessing.CHECK));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy41 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy41.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
    }

    @Test
    public void test07397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07397");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("OFF");
        boolean boolean2 = node1.isNot();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test07398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07398");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions12 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions12.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy15 = compilerOptions12.propertyRenaming;
        java.lang.String[] strArray18 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        compilerOptions12.setStripTypes((java.util.Set<java.lang.String>) strSet19);
        compilerOptions7.stripNamePrefixes = strSet19;
        compilerOptions0.stripNamePrefixes = strSet19;
        compilerOptions0.optimizeReturns = false;
        compilerOptions0.setRenamePrefix("sun.util.logging.resources.logging");
        compilerOptions0.setOptimizeParameters(false);
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap30 = null;
        compilerOptions0.setCssRenamingMap(cssRenamingMap30);
        compilerOptions0.optimizeReturns = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy15 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy15.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test07399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07399");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setProtectHiddenSideEffects(true);
        compilerOptions0.moveFunctionDeclarations = true;
        boolean boolean7 = compilerOptions0.inlineConstantVars;
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions8.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode14 = null;
        compilerOptions8.setLanguageOut(languageMode14);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy16 = null;
        compilerOptions8.variableRenaming = variableRenamingPolicy16;
        com.google.javascript.jscomp.CheckLevel checkLevel18 = compilerOptions8.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions compilerOptions19 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions19.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy22 = compilerOptions19.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap23 = compilerOptions19.getTweakReplacements();
        boolean boolean24 = strMap23.isEmpty();
        java.lang.Object obj25 = null;
        com.google.javascript.rhino.Node node26 = strMap23.get(obj25);
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions27.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel30 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions27.setSourceMapDetailLevel(detailLevel30);
        boolean boolean32 = compilerOptions27.ideMode;
        compilerOptions27.setUnaliasableGlobals("");
        com.google.javascript.jscomp.CheckLevel checkLevel35 = compilerOptions27.checkUnreachableCode;
        com.google.javascript.rhino.Node node36 = strMap23.remove((java.lang.Object) checkLevel35);
        compilerOptions8.checkMissingGetCssNameLevel = checkLevel35;
        compilerOptions0.setCheckUnreachableCode(checkLevel35);
        compilerOptions0.checkMissingGetCssNameBlacklist = "";
        compilerOptions0.setRemoveAbstractMethods(false);
        com.google.javascript.jscomp.MessageBundle messageBundle43 = compilerOptions0.messageBundle;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + checkLevel18 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel18.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy22 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy22.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNotNull(detailLevel30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + checkLevel35 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel35.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(messageBundle43);
    }

    @Test
    public void test07400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07400");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(false, false);
        boolean boolean7 = file2.setReadable(false);
        java.io.File file8 = file2.getCanonicalFile();
        java.io.File file9 = file8.getAbsoluteFile();
        java.io.File file10 = file9.getParentFile();
        long long11 = file10.getUsableSpace();
        java.nio.file.Path path12 = file10.toPath();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(file8);
// flaky:         org.junit.Assert.assertEquals(file8.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file8.toString(), "/experiment/:/hi!");
        org.junit.Assert.assertNotNull(file9);
// flaky:         org.junit.Assert.assertEquals(file9.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file9.toString(), "/experiment/:/hi!");
        org.junit.Assert.assertNotNull(file10);
// flaky:         org.junit.Assert.assertEquals(file10.getParent(), "/experiment");
// flaky:         org.junit.Assert.assertEquals(file10.toString(), "/experiment/:");
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 280492433408L + "'", long11 == 280492433408L);
        org.junit.Assert.assertNotNull(path12);
    }

    @Test
    public void test07401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07401");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        strMap4.clear();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        java.lang.String str12 = node11.getQualifiedName();
        com.google.javascript.rhino.Node node13 = node11.getLastChild();
        com.google.javascript.rhino.Node node14 = strMap4.replace("FINEST", node11);
        boolean boolean15 = node11.isUnscopedQualifiedName();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test07402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07402");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str1 = compilerOptions0.syntheticBlockStartMarker;
        compilerOptions0.labelRenaming = true;
        boolean boolean4 = compilerOptions0.inlineLocalFunctions;
        compilerOptions0.setInlineGetters(true);
        boolean boolean7 = compilerOptions0.removeUnusedClassProperties;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode8 = compilerOptions0.getLanguageIn();
        compilerOptions0.setSkipAllPasses(true);
        boolean boolean11 = compilerOptions0.aliasKeywords;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + languageMode8 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode8.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test07403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07403");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.CompilerOptions compilerOptions4 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions4.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode7 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions4.setTracer(tracerMode7);
        compilerOptions4.setFoldConstants(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode12 = null;
        compilerOptions11.setTracerMode(tracerMode12);
        boolean boolean14 = compilerOptions11.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel15 = compilerOptions11.sourceMapDetailLevel;
        compilerOptions11.setColorizeErrorOutput(true);
        compilerOptions11.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy23 = compilerOptions20.propertyRenaming;
        compilerOptions11.propertyRenaming = propertyRenamingPolicy23;
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions11.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel26 = compilerOptions11.checkRequires;
        compilerOptions4.reportMissingOverride = checkLevel26;
        compilerOptions0.setAggressiveVarCheck(checkLevel26);
        com.google.javascript.jscomp.CompilerOptions compilerOptions29 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode30 = null;
        compilerOptions29.setTracerMode(tracerMode30);
        boolean boolean32 = compilerOptions29.generatePseudoNames;
        com.google.javascript.jscomp.SourceMap.LocationMapping[] locationMappingArray33 = new com.google.javascript.jscomp.SourceMap.LocationMapping[] {};
        java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping> locationMappingList34 = new java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList34, locationMappingArray33);
        compilerOptions29.sourceMapLocationMappings = locationMappingList34;
        compilerOptions0.sourceMapLocationMappings = locationMappingList34;
        compilerOptions0.renamePrefix = "JSC_OPTIMIZE_LOOP_ERROR. Exceeded max number of code motion iterations: {0} at (unknown source) line (unknown line) : (unknown column)";
        compilerOptions0.setAliasStringsBlacklist("Node tree inequality:\nTree1:\nTHIS\n    STRING java.io.IOException:  43\n    PARAM_LIST [var_args_name: 1] [opt_arg: 1]\n\n\nTree2:\nSTRING \n\n\nSubtree1: THIS\n    STRING java.io.IOException:  43\n    PARAM_LIST [var_args_name: 1] [opt_arg: 1]\n\n\nSubtree2: STRING \n");
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap42 = null;
        compilerOptions0.cssRenamingMap = cssRenamingMap42;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + tracerMode7 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode7.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(detailLevel15);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy23 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy23.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel26 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel26.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(locationMappingArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test07404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07404");
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray4 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList5 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList5, jSTypeArray4);
        com.google.javascript.rhino.Node node7 = jSTypeRegistry3.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList5);
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.Node node13 = jSTypeRegistry9.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList11);
        node7.addChildrenToBack(node13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray17 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList18 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList18, jSTypeArray17);
        com.google.javascript.rhino.Node node20 = jSTypeRegistry16.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList18);
        boolean boolean21 = node20.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.Node node27 = jSTypeRegistry23.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = node27.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        com.google.javascript.rhino.Node node34 = jSTypeRegistry30.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        com.google.javascript.rhino.Node node37 = new com.google.javascript.rhino.Node((int) (short) 0, node7, node20, node27, node34, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.Node node44 = jSTypeRegistry40.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        node44.addChildrenToBack(node50);
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList55 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55, jSTypeArray54);
        com.google.javascript.rhino.Node node57 = jSTypeRegistry53.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList55);
        boolean boolean58 = node57.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry60 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        com.google.javascript.rhino.Node node64 = jSTypeRegistry60.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        boolean boolean65 = node64.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter66 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry67 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter66);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.Node node71 = jSTypeRegistry67.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        com.google.javascript.rhino.Node node74 = new com.google.javascript.rhino.Node((int) (short) 0, node44, node57, node64, node71, 0, 49);
        com.google.javascript.rhino.Node node75 = node37.useSourceInfoFrom(node57);
        com.google.javascript.jscomp.CheckLevel checkLevel77 = null;
        com.google.javascript.jscomp.DiagnosticType diagnosticType79 = com.google.javascript.jscomp.DiagnosticType.make("*global*", checkLevel77, "");
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", ":" };
        com.google.javascript.jscomp.JSError jSError87 = com.google.javascript.jscomp.JSError.make("*global*", node75, diagnosticType79, strArray86);
        com.google.javascript.jscomp.CheckLevel checkLevel88 = jSError87.getDefaultLevel();
        java.lang.String str89 = jSError87.description;
        int int90 = jSError87.getCharno();
        java.lang.String str91 = jSError87.sourceName;
        java.lang.String str92 = jSError87.sourceName;
        com.google.javascript.jscomp.CheckLevel checkLevel93 = jSError87.getDefaultLevel();
        org.junit.Assert.assertNotNull(jSTypeArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(jSTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(diagnosticType79);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(jSError87);
        org.junit.Assert.assertNull(checkLevel88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "*global*" + "'", str91, "*global*");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "*global*" + "'", str92, "*global*");
        org.junit.Assert.assertNull(checkLevel93);
    }

    @Test
    public void test07405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07405");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        boolean boolean5 = node4.isContinue();
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        jSTypeRegistry7.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSType jSType9 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] { jSType9 };
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParameters(jSTypeArray10);
        int int12 = node4.getIndexOfChild(node11);
        boolean boolean13 = node4.isDelProp();
        com.google.javascript.rhino.Node node17 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean18 = node17.isTry();
        java.lang.String str19 = node17.toString();
        node4.addChildToBack(node17);
        boolean boolean21 = node17.isArrayLit();
        com.google.javascript.rhino.Node node22 = node17.getLastSibling();
        boolean boolean23 = node17.isGetProp();
        com.google.javascript.rhino.ErrorReporter errorReporter24 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry25 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter24);
        jSTypeRegistry25.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSType jSType27 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] { jSType27 };
        com.google.javascript.rhino.Node node29 = jSTypeRegistry25.createParameters(jSTypeArray28);
        com.google.javascript.rhino.Node node30 = node17.useSourceInfoIfMissingFromForTree(node29);
        java.lang.String str31 = node29.getQualifiedName();
        com.google.javascript.rhino.Node node34 = com.google.javascript.rhino.Node.newString((int) (short) 10, ":/hi!");
        int int35 = node34.getLineno();
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean44 = node43.isTry();
        java.lang.String str45 = node43.toString();
        boolean boolean46 = node39.hasChild(node43);
        com.google.javascript.rhino.Node node47 = node39.getLastSibling();
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable48 = node39.getAncestors();
        com.google.javascript.rhino.Node node49 = node34.useSourceInfoFrom(node39);
        node34.setString("");
        node34.setOptionalArg(true);
        int int54 = node34.getChildCount();
        java.lang.String str55 = node29.checkTreeEquals(node34);
        com.google.javascript.rhino.Node node56 = null;
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative58 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec59 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("Exceeded max number of code motion iterations: {0}", jSTypeNative58);
        com.google.javascript.rhino.Node node64 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean69 = node68.isTry();
        java.lang.String str70 = node68.toString();
        boolean boolean71 = node64.hasChild(node68);
        boolean boolean72 = node64.isFromExterns();
        com.google.javascript.rhino.ErrorReporter errorReporter73 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry74 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter73);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray75 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList76 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList76, jSTypeArray75);
        com.google.javascript.rhino.Node node78 = jSTypeRegistry74.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList76);
        boolean boolean79 = node78.isIn();
        boolean boolean80 = node78.isVoid();
        node78.setOptionalArg(true);
        node78.setVarArgs(true);
        com.google.javascript.rhino.JSDocInfo jSDocInfo85 = node78.getJSDocInfo();
        com.google.javascript.rhino.Node node86 = new com.google.javascript.rhino.Node(42, node64, node78);
        com.google.javascript.rhino.Node node87 = assertionFunctionSpec59.getAssertedParam(node86);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node90 = new com.google.javascript.rhino.Node(0, node34, node56, node87, (int) ' ', 48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "STRING PARAM_LIST 49" + "'", str19, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "STRING PARAM_LIST 49" + "'", str45, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(ancestorIterable48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Node tree inequality:\nTree1:\nPARAM_LIST\n    NAME \n\n\nTree2:\nBITXOR  43 [opt_arg: 1]\n\n\nSubtree1: PARAM_LIST\n    NAME \n\n\nSubtree2: BITXOR  43 [opt_arg: 1]\n" + "'", str55, "Node tree inequality:\nTree1:\nPARAM_LIST\n    NAME \n\n\nTree2:\nBITXOR  43 [opt_arg: 1]\n\n\nSubtree1: PARAM_LIST\n    NAME \n\n\nSubtree2: BITXOR  43 [opt_arg: 1]\n");
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "STRING PARAM_LIST 49" + "'", str70, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(jSTypeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(jSDocInfo85);
        org.junit.Assert.assertNotNull(node87);
    }

    @Test
    public void test07406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07406");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.JSDocInfo jSDocInfo37 = null;
        node19.setJSDocInfo(jSDocInfo37);
        node19.putBooleanProp((int) (short) 1, false);
        boolean boolean42 = node19.isAssign();
        boolean boolean43 = node19.isIf();
        boolean boolean44 = node19.isRegExp();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test07407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07407");
        com.google.javascript.jscomp.SourceFile sourceFile1 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput3 = new com.google.javascript.jscomp.CompilerInput(sourceFile1, true);
        com.google.javascript.rhino.InputId inputId5 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput7 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput3, inputId5, true);
        java.lang.String str8 = compilerInput7.toString();
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray12 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList13 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13, jSTypeArray12);
        com.google.javascript.rhino.Node node15 = jSTypeRegistry11.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray18 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList19 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList19, jSTypeArray18);
        com.google.javascript.rhino.Node node21 = jSTypeRegistry17.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList19);
        node15.addChildrenToBack(node21);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        boolean boolean29 = node28.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.Node node35 = jSTypeRegistry31.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        boolean boolean36 = node35.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        com.google.javascript.rhino.Node node45 = new com.google.javascript.rhino.Node((int) (short) 0, node15, node28, node35, node42, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter47 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry48 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter47);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray49 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList50 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList50, jSTypeArray49);
        com.google.javascript.rhino.Node node52 = jSTypeRegistry48.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList50);
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry54 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray55 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList56 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56, jSTypeArray55);
        com.google.javascript.rhino.Node node58 = jSTypeRegistry54.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        node52.addChildrenToBack(node58);
        com.google.javascript.rhino.ErrorReporter errorReporter60 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter60);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray62 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList63 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63, jSTypeArray62);
        com.google.javascript.rhino.Node node65 = jSTypeRegistry61.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        boolean boolean66 = node65.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter67 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry68 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter67);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray69 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList70 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70, jSTypeArray69);
        com.google.javascript.rhino.Node node72 = jSTypeRegistry68.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        boolean boolean73 = node72.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter74 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry75 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter74);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray76 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList77 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList77, jSTypeArray76);
        com.google.javascript.rhino.Node node79 = jSTypeRegistry75.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList77);
        com.google.javascript.rhino.Node node82 = new com.google.javascript.rhino.Node((int) (short) 0, node52, node65, node72, node79, 0, 49);
        com.google.javascript.rhino.Node node83 = node45.useSourceInfoFrom(node65);
        boolean boolean84 = node83.hasChildren();
        boolean boolean85 = node83.isArrayLit();
        com.google.javascript.rhino.InputId inputId87 = new com.google.javascript.rhino.InputId("*global*");
        java.lang.String str88 = inputId87.toString();
        node83.setInputId(inputId87);
        java.lang.String str90 = inputId87.getIdName();
        com.google.javascript.jscomp.CompilerInput compilerInput92 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput7, inputId87, false);
        com.google.javascript.jscomp.CompilerInput compilerInput93 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput7);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = compilerInput7.getNumLines();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "*global*" + "'", str8, "*global*");
        org.junit.Assert.assertNotNull(jSTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(jSTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(jSTypeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(jSTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(jSTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(jSTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(jSTypeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "InputId: *global*" + "'", str88, "InputId: *global*");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "*global*" + "'", str90, "*global*");
    }

    @Test
    public void test07408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07408");
        com.google.javascript.rhino.Node node2 = new com.google.javascript.rhino.Node((int) (short) 1);
        boolean boolean3 = node2.isTry();
        java.lang.String str4 = node2.getQualifiedName();
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList15 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15, jSTypeArray14);
        com.google.javascript.rhino.Node node17 = jSTypeRegistry13.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList15);
        node11.addChildrenToBack(node17);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        boolean boolean25 = node24.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry27.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        boolean boolean32 = node31.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        com.google.javascript.rhino.Node node38 = jSTypeRegistry34.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        com.google.javascript.rhino.Node node41 = new com.google.javascript.rhino.Node((int) (short) 0, node11, node24, node31, node38, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        com.google.javascript.rhino.ErrorReporter errorReporter49 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry50 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter49);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray51 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList52 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList52, jSTypeArray51);
        com.google.javascript.rhino.Node node54 = jSTypeRegistry50.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList52);
        node48.addChildrenToBack(node54);
        com.google.javascript.rhino.ErrorReporter errorReporter56 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry57 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter56);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray58 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList59 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList59, jSTypeArray58);
        com.google.javascript.rhino.Node node61 = jSTypeRegistry57.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList59);
        boolean boolean62 = node61.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList66 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList66, jSTypeArray65);
        com.google.javascript.rhino.Node node68 = jSTypeRegistry64.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList66);
        boolean boolean69 = node68.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray72 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList73 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList73, jSTypeArray72);
        com.google.javascript.rhino.Node node75 = jSTypeRegistry71.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList73);
        com.google.javascript.rhino.Node node78 = new com.google.javascript.rhino.Node((int) (short) 0, node48, node61, node68, node75, 0, 49);
        com.google.javascript.rhino.Node node79 = node41.useSourceInfoFrom(node61);
        int int80 = node41.getSourcePosition();
        com.google.javascript.rhino.JSDocInfo jSDocInfo81 = node41.getJSDocInfo();
        boolean boolean82 = node41.isQuotedString();
        com.google.javascript.rhino.Node node83 = new com.google.javascript.rhino.Node((int) (byte) 100, node2, node41);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder84 = node83.getJsDocBuilderForNode();
        fileLevelJsDocBuilder84.append("Node tree inequality:\nTree1:\nNUMBER -1.0\n\n\nTree2:\nPARAM_LIST\n    PARAM_LIST\n\n\nSubtree1: NUMBER -1.0\n\n\nSubtree2: PARAM_LIST\n    PARAM_LIST\n");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(jSTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(jSTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(jSTypeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNull(jSDocInfo81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder84);
    }

    @Test
    public void test07409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07409");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setOutputJsStringUsage(true);
        java.util.Set<java.lang.String> strSet4 = compilerOptions0.stripNamePrefixes;
        boolean boolean5 = compilerOptions0.reserveRawExports;
        compilerOptions0.collapseAnonymousFunctions = false;
        compilerOptions0.setReportPath("DiagnosticGroup<java.io.IOException: OFF>");
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test07410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07410");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        compilerOptions0.setSkipAllPasses(false);
        compilerOptions0.setLabelRenaming(false);
        boolean boolean13 = compilerOptions0.checkSuspiciousCode;
        boolean boolean14 = compilerOptions0.labelRenaming;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test07411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07411");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        boolean boolean75 = node56.hasOneChild();
        node56.putIntProp(1, 16);
        boolean boolean79 = node56.isName();
        boolean boolean80 = node56.isOptionalArg();
        int int81 = node56.getLength();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test07412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07412");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.setSyntheticBlockStartMarker("OFF");
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.setDeadAssignmentElimination(true);
        compilerOptions0.setInferTypes(true);
        boolean boolean11 = compilerOptions0.optimizeArgumentsArray;
        com.google.javascript.jscomp.CompilerOptions compilerOptions12 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode13 = null;
        compilerOptions12.setTracerMode(tracerMode13);
        boolean boolean15 = compilerOptions12.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel16 = compilerOptions12.sourceMapDetailLevel;
        compilerOptions12.setColorizeErrorOutput(true);
        compilerOptions12.collapseProperties = false;
        compilerOptions12.setSkipAllPasses(false);
        compilerOptions12.setPropertyAffinity(false);
        compilerOptions12.setPropertyAffinity(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions27.crossModuleMethodMotion = true;
        compilerOptions27.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy32 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions33 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions33.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy36 = compilerOptions33.propertyRenaming;
        compilerOptions27.setRenamingPolicy(variableRenamingPolicy32, propertyRenamingPolicy36);
        com.google.javascript.jscomp.CompilerOptions compilerOptions38 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions38.crossModuleMethodMotion = true;
        compilerOptions38.skipAllCompilerPasses();
        boolean boolean42 = compilerOptions38.flowSensitiveInlineVariables;
        java.lang.String[] strArray52 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet53, strArray52);
        compilerOptions38.stripTypes = strSet53;
        compilerOptions27.setStripNamePrefixes((java.util.Set<java.lang.String>) strSet53);
        compilerOptions12.setReplaceStringsReservedStrings((java.util.Set<java.lang.String>) strSet53);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet53);
        compilerOptions0.setInlineConstantVars(true);
        compilerOptions0.convertToDottedProperties = false;
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(detailLevel16);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy36 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy36.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test07413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07413");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        node33.setWasEmptyNode(false);
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable39 = node33.getAncestors();
        boolean boolean40 = node33.isTypeOf();
        java.lang.String str41 = node33.getQualifiedName();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(ancestorIterable39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test07414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07414");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int4 = sourceFile2.getLineOfOffset((int) (short) 1);
        java.lang.String str5 = sourceFile2.getName();
        java.lang.String str6 = sourceFile2.getName();
        java.lang.String str7 = sourceFile2.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput9 = new com.google.javascript.jscomp.CompilerInput(sourceFile2, true);
        com.google.javascript.jscomp.CompilerInput compilerInput10 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput9);
        com.google.javascript.jscomp.JSModule jSModule11 = compilerInput9.getModule();
        com.google.javascript.jscomp.JSModule jSModule13 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler14 = new com.google.javascript.jscomp.Compiler();
        jSModule13.sortInputsByDeps(compiler14);
        java.lang.String str16 = jSModule13.getName();
        compilerInput9.setModule(jSModule13);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = compilerInput9.getLineOffset((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Expected line number between 1 and 1?Actual: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(jSModule11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "STRING PARAM_LIST 49" + "'", str16, "STRING PARAM_LIST 49");
    }

    @Test
    public void test07415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07415");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        compilerOptions0.prettyPrint = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.crossModuleMethodMotion = true;
        compilerOptions32.optimizeParameters = true;
        compilerOptions32.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel40 = compilerOptions32.checkGlobalNamesLevel;
        compilerOptions0.checkGlobalNamesLevel = checkLevel40;
        compilerOptions0.checkSymbols = false;
        com.google.javascript.jscomp.CodingConvention codingConvention44 = compilerOptions0.getCodingConvention();
        com.google.javascript.jscomp.CheckLevel checkLevel45 = compilerOptions0.checkRequires;
        boolean boolean46 = compilerOptions0.deadAssignmentElimination;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap47 = compilerOptions0.getTweakReplacements();
        java.io.File file50 = new java.io.File(":", "hi!");
        boolean boolean53 = file50.setExecutable(false, false);
        java.io.File file54 = file50.getParentFile();
        long long55 = file54.getUsableSpace();
        boolean boolean56 = file54.mkdirs();
        java.nio.charset.Charset charset57 = null;
        com.google.javascript.jscomp.JSSourceFile jSSourceFile58 = com.google.javascript.jscomp.JSSourceFile.fromFile(file54, charset57);
        java.nio.file.Path path59 = file54.toPath();
        boolean boolean60 = strMap47.containsKey((java.lang.Object) path59);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel40 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel40.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(codingConvention44);
        org.junit.Assert.assertTrue("'" + checkLevel45 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel45.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertEquals(file50.getParent(), ":");
        org.junit.Assert.assertEquals(file50.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertNull("file54.getParent() == null", file54.getParent());
        org.junit.Assert.assertEquals(file54.toString(), ":");
// flaky:         org.junit.Assert.assertTrue("'" + long55 + "' != '" + 280489578496L + "'", long55 == 280489578496L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(jSSourceFile58);
        org.junit.Assert.assertNotNull(path59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test07416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07416");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        compilerOptions9.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy14 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions15 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions15.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy18 = compilerOptions15.propertyRenaming;
        compilerOptions9.setRenamingPolicy(variableRenamingPolicy14, propertyRenamingPolicy18);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.skipAllCompilerPasses();
        boolean boolean24 = compilerOptions20.flowSensitiveInlineVariables;
        java.lang.String[] strArray34 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        compilerOptions20.stripTypes = strSet35;
        compilerOptions9.setStripNamePrefixes((java.util.Set<java.lang.String>) strSet35);
        compilerOptions0.setReplaceStringsReservedStrings((java.util.Set<java.lang.String>) strSet35);
        boolean boolean40 = compilerOptions0.generateExports;
        compilerOptions0.setFoldConstants(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions43 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions43.crossModuleMethodMotion = true;
        compilerOptions43.skipAllCompilerPasses();
        compilerOptions43.resetWarningsGuard();
        compilerOptions43.setInlineLocalVariables(false);
        compilerOptions43.setIdeMode(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions52 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions52.crossModuleMethodMotion = true;
        compilerOptions52.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy57 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions58 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions58.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy61 = compilerOptions58.propertyRenaming;
        compilerOptions52.setRenamingPolicy(variableRenamingPolicy57, propertyRenamingPolicy61);
        com.google.javascript.jscomp.CompilerOptions compilerOptions63 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions63.crossModuleMethodMotion = true;
        compilerOptions63.skipAllCompilerPasses();
        boolean boolean67 = compilerOptions63.flowSensitiveInlineVariables;
        java.lang.String[] strArray77 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet78 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet78, strArray77);
        compilerOptions63.stripTypes = strSet78;
        compilerOptions52.setStripNamePrefixes((java.util.Set<java.lang.String>) strSet78);
        compilerOptions43.setReplaceStringsReservedStrings((java.util.Set<java.lang.String>) strSet78);
        compilerOptions0.stripTypePrefixes = strSet78;
        strSet78.clear();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy18 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy18.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy61 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy61.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test07417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07417");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        compilerOptions0.setFoldConstants(true);
        java.lang.String str7 = compilerOptions0.renamePrefix;
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode9 = null;
        compilerOptions8.setTracerMode(tracerMode9);
        boolean boolean11 = compilerOptions8.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel12 = compilerOptions8.sourceMapDetailLevel;
        compilerOptions8.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet15 = compilerOptions8.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile17 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput19 = new com.google.javascript.jscomp.CompilerInput(sourceFile17, true);
        com.google.javascript.rhino.InputId inputId21 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput23 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput19, inputId21, true);
        java.lang.String str24 = compilerInput23.toString();
        boolean boolean25 = strSet15.contains((java.lang.Object) compilerInput23);
        java.lang.Object[] objArray26 = strSet15.toArray();
        java.lang.Object obj27 = null;
        boolean boolean28 = strSet15.contains(obj27);
        compilerOptions0.stripTypes = strSet15;
        com.google.javascript.jscomp.CompilerOptions compilerOptions30 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions30.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel33 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions30.setSourceMapDetailLevel(detailLevel33);
        compilerOptions30.inlineFunctions = true;
        compilerOptions30.setCommonJSModulePathPrefix(":");
        compilerOptions30.setCrossModuleCodeMotion(true);
        compilerOptions30.disableRuntimeTypeCheck();
        boolean boolean42 = compilerOptions30.removeUnusedLocalVars;
        boolean boolean43 = compilerOptions30.generateExports;
        compilerOptions30.foldConstants = true;
        compilerOptions30.setProcessObjectPropertyString(true);
        boolean boolean48 = strSet15.equals((java.lang.Object) compilerOptions30);
        boolean boolean49 = strSet15.isEmpty();
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(detailLevel12);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "*global*" + "'", str24, "*global*");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(detailLevel33);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test07418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07418");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        boolean boolean10 = compilerOptions0.inlineGetters;
        compilerOptions0.setFlowSensitiveInlineVariables(true);
        compilerOptions0.setInlineGetters(true);
        compilerOptions0.setRemoveTryCatchFinally(false);
        compilerOptions0.setExternExports(true);
        compilerOptions0.setReportPath("Node tree inequality:\nTree1:\nPARAM_LIST\n    NAME \n\n\nTree2:\nNUMBER -1.0\n\n\nSubtree1: PARAM_LIST\n    NAME \n\n\nSubtree2: NUMBER -1.0\n");
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap21 = null;
        compilerOptions0.cssRenamingMap = cssRenamingMap21;
        com.google.javascript.jscomp.CompilerOptions compilerOptions23 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions23.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel26 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions23.setSourceMapDetailLevel(detailLevel26);
        compilerOptions23.inlineFunctions = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions30 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions30.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy33 = compilerOptions30.propertyRenaming;
        java.lang.String[] strArray36 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        compilerOptions30.setStripTypes((java.util.Set<java.lang.String>) strSet37);
        com.google.javascript.jscomp.CompilerOptions compilerOptions40 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode41 = null;
        compilerOptions40.setTracerMode(tracerMode41);
        boolean boolean43 = compilerOptions40.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel44 = compilerOptions40.sourceMapDetailLevel;
        compilerOptions40.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions47 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions47.crossModuleMethodMotion = true;
        compilerOptions47.optimizeParameters = true;
        compilerOptions47.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel55 = compilerOptions47.checkGlobalNamesLevel;
        compilerOptions40.setReportMissingOverride(checkLevel55);
        compilerOptions30.setCheckUnreachableCode(checkLevel55);
        byte[] byteArray62 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 1 };
        compilerOptions30.inputVariableMapSerialized = byteArray62;
        compilerOptions23.inputVariableMapSerialized = byteArray62;
        compilerOptions23.syntheticBlockStartMarker = "FINEST";
        com.google.javascript.jscomp.CompilerOptions compilerOptions67 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions67.setLooseTypes(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions70 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel71 = compilerOptions70.checkRequires;
        compilerOptions67.setCheckProvides(checkLevel71);
        compilerOptions23.setCheckProvides(checkLevel71);
        compilerOptions0.setReportUnknownTypes(checkLevel71);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(detailLevel26);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy33 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy33.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(detailLevel44);
        org.junit.Assert.assertTrue("'" + checkLevel55 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel55.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0, 1, 10, 1]");
        org.junit.Assert.assertTrue("'" + checkLevel71 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel71.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07419");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        boolean boolean10 = node9.isVarArgs();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable11 = node9.siblings();
        com.google.javascript.rhino.Node node12 = node9.cloneTree();
        int int13 = node12.getSourcePosition();
        com.google.javascript.rhino.Node node14 = node12.getLastSibling();
        boolean boolean15 = node14.isDec();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(nodeIterable11);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test07420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07420");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.generatePseudoNames = true;
        java.lang.String str9 = compilerOptions0.renamePrefixNamespace;
        boolean boolean10 = compilerOptions0.recordFunctionInformation;
        com.google.javascript.jscomp.AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy11 = compilerOptions0.anonymousFunctionNaming;
        compilerOptions0.setRemoveDeadCode(false);
        com.google.javascript.jscomp.CheckLevel checkLevel14 = compilerOptions0.checkMissingGetCssNameLevel;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + anonymousFunctionNamingPolicy11 + "' != '" + com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF + "'", anonymousFunctionNamingPolicy11.equals(com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel14 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel14.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07421");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        boolean boolean37 = node6.isDelProp();
        int int38 = node6.getSourceOffset();
        com.google.javascript.rhino.Node node39 = node6.detachFromParent();
        com.google.javascript.rhino.Node node43 = com.google.javascript.rhino.Node.newString("OFF", 2147483647, 4);
        com.google.javascript.rhino.InputId inputId45 = new com.google.javascript.rhino.InputId("InputId: *global*");
        node43.setInputId(inputId45);
        node39.addChildrenToBack(node43);
        node43.addSuppression("STRING PARAM_LIST 0");
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(node43);
    }

    @Test
    public void test07422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07422");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        boolean boolean4 = compilerOptions0.flowSensitiveInlineVariables;
        compilerOptions0.setRemoveUnusedPrototypePropertiesInExterns(false);
        boolean boolean7 = compilerOptions0.removeUnusedClassProperties;
        compilerOptions0.setLocale("java.io.IOException: java.io.IOException: ");
        compilerOptions0.prettyPrint = true;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test07423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07423");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        boolean boolean4 = node3.isContinue();
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry6 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5);
        jSTypeRegistry6.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSType jSType8 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] { jSType8 };
        com.google.javascript.rhino.Node node10 = jSTypeRegistry6.createParameters(jSTypeArray9);
        int int11 = node3.getIndexOfChild(node10);
        boolean boolean12 = node3.isDelProp();
        java.lang.Object obj14 = null;
        node3.putProp((int) '#', obj14);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList20 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20, jSTypeArray19);
        com.google.javascript.rhino.Node node22 = jSTypeRegistry18.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList20);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        node22.addChildrenToBack(node28);
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.Node node35 = jSTypeRegistry31.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        boolean boolean36 = node35.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        boolean boolean43 = node42.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        com.google.javascript.rhino.Node node52 = new com.google.javascript.rhino.Node((int) (short) 0, node22, node35, node42, node49, 0, 49);
        com.google.javascript.rhino.Node node53 = node22.getNext();
        com.google.javascript.jscomp.CompilerOptions compilerOptions54 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions54.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel57 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions54.setSourceMapDetailLevel(detailLevel57);
        compilerOptions54.inlineFunctions = true;
        compilerOptions54.setCommonJSModulePathPrefix(":");
        compilerOptions54.setCrossModuleCodeMotion(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions65 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions65.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy68 = compilerOptions65.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap69 = compilerOptions65.getTweakReplacements();
        boolean boolean70 = strMap69.isEmpty();
        java.lang.Object obj71 = null;
        com.google.javascript.rhino.Node node72 = strMap69.get(obj71);
        java.util.Set<java.lang.String> strSet73 = strMap69.keySet();
        compilerOptions54.setIdGenerators(strSet73);
        node53.setDirectives(strSet73);
        com.google.javascript.rhino.Node node76 = node3.useSourceInfoIfMissingFrom(node53);
        node53.setSourceEncodedPosition(196607);
        com.google.javascript.rhino.jstype.JSType jSType79 = node53.getJSType();
        node53.setLineno(40);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(detailLevel57);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy68 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy68.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNull(jSType79);
    }

    @Test
    public void test07424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07424");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean8 = node7.isTry();
        java.lang.String str9 = node7.toString();
        boolean boolean10 = node3.hasChild(node7);
        com.google.javascript.rhino.Node node11 = node3.getLastSibling();
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable12 = node3.getAncestors();
        com.google.javascript.rhino.Node node14 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.JSDocInfo jSDocInfo15 = null;
        node14.setJSDocInfo(jSDocInfo15);
        com.google.javascript.rhino.Node node17 = node14.getNext();
        com.google.javascript.rhino.Node node18 = node3.srcref(node14);
        int int19 = node3.getLineno();
        node3.setLength(8);
        boolean boolean22 = node3.isDelProp();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "STRING PARAM_LIST 49" + "'", str9, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(ancestorIterable12);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test07425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07425");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        compilerOptions0.setFoldConstants(true);
        compilerOptions0.flowSensitiveInlineVariables = true;
        compilerOptions0.foldConstants = true;
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.recordFunctionInformation = false;
        compilerOptions0.setLineLengthThreshold(41);
        compilerOptions0.resetWarningsGuard();
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
    }

    @Test
    public void test07426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07426");
        java.io.File file2 = java.io.File.createTempFile(":/hi!", "*global*.  at *global* line (unknown line) : (unknown column)");
        boolean boolean5 = file2.setWritable(false, true);
        java.lang.String str6 = file2.getCanonicalPath();
        boolean boolean8 = file2.setReadable(false);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file2.toString(), "/tmp/hi!101189495729710090*global*.  at *global* line (unknown line) : (unknown column)");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/tmp/hi!101189495729710090*global*.  at *global* line (unknown line) : (unknown column)" + "'", str6, "/tmp/hi!101189495729710090*global*.  at *global* line (unknown line) : (unknown column)");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test07427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07427");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable11 = jSTypeRegistry1.getTypesWithProperty(":");
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        jSTypeRegistry13.clearNamedTypes();
        jSTypeRegistry13.forwardDeclareType("STRING PARAM_LIST 49");
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry13.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.JSType jSType18 = jSTypeRegistry1.createNullableType((com.google.javascript.rhino.jstype.JSType) objectType17);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable20 = jSTypeRegistry1.getTypesWithProperty("2019/07/12 07:12");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable22 = jSTypeRegistry1.getTypesWithProperty("();");
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeIterable11);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(jSType18);
        org.junit.Assert.assertNotNull(jSTypeIterable20);
        org.junit.Assert.assertNotNull(jSTypeIterable22);
    }

    @Test
    public void test07428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07428");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.crossModuleCodeMotion = true;
        compilerOptions0.setCollapseProperties(true);
        compilerOptions0.setInlineLocalFunctions(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test07429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07429");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        compilerOptions0.setSkipAllPasses(false);
        compilerOptions0.setRewriteNewDateGoogNow(false);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode13 = compilerOptions0.getLanguageIn();
        boolean boolean14 = compilerOptions0.closurePass;
        boolean boolean15 = compilerOptions0.disambiguateProperties;
        compilerOptions0.setExternExports(false);
        compilerOptions0.setCollapseObjectLiterals(false);
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup20 = com.google.javascript.jscomp.DiagnosticGroups.UNKNOWN_DEFINES;
        com.google.javascript.jscomp.DiagnosticGroups.CHECK_USELESS_CODE = diagnosticGroup20;
        com.google.javascript.jscomp.DiagnosticGroups.INVALID_CASTS = diagnosticGroup20;
        com.google.javascript.jscomp.DiagnosticGroups.UNDEFINED_VARIABLES = diagnosticGroup20;
        com.google.javascript.jscomp.DiagnosticType diagnosticType26 = com.google.javascript.jscomp.DiagnosticType.error("STRING PARAM_LIST 49", "hi!");
        java.lang.String str27 = diagnosticType26.toString();
        com.google.javascript.jscomp.CheckLevel checkLevel28 = diagnosticType26.level;
        com.google.javascript.jscomp.CheckLevel checkLevel29 = diagnosticType26.defaultLevel;
        compilerOptions0.setWarningLevel(diagnosticGroup20, checkLevel29);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + languageMode13 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode13.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertNull(diagnosticGroup20);
        org.junit.Assert.assertNotNull(diagnosticType26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "STRING PARAM_LIST 49: hi!" + "'", str27, "STRING PARAM_LIST 49: hi!");
        org.junit.Assert.assertTrue("'" + checkLevel28 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel28.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel29 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel29.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
    }

    @Test
    public void test07430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07430");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy12 = compilerOptions9.propertyRenaming;
        compilerOptions0.propertyRenaming = propertyRenamingPolicy12;
        com.google.javascript.jscomp.CheckLevel checkLevel14 = compilerOptions0.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions0.checkRequires;
        compilerOptions0.setRemoveUnusedVars(false);
        boolean boolean18 = compilerOptions0.jqueryPass;
        compilerOptions0.recordFunctionInformation = true;
        com.google.javascript.jscomp.SourceMap.Format format21 = compilerOptions0.sourceMapFormat;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy12 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy12.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel14 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel14.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(format21);
    }

    @Test
    public void test07431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07431");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        boolean boolean75 = node56.isExprResult();
        int int76 = node56.getLength();
        boolean boolean77 = node56.isOptionalArg();
        boolean boolean78 = node56.isNoSideEffectsCall();
        boolean boolean79 = node56.isAssignAdd();
        com.google.javascript.rhino.Node node80 = node56.getLastSibling();
        boolean boolean81 = node56.isUnscopedQualifiedName();
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile82 = node56.getStaticSourceFile();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(staticSourceFile82);
    }

    @Test
    public void test07432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07432");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.setInlineLocalFunctions(false);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions5.variableRenaming = variableRenamingPolicy8;
        compilerOptions5.setProtectHiddenSideEffects(false);
        compilerOptions5.syntheticBlockEndMarker = "OFF";
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions14.checkRequires;
        compilerOptions5.setCheckUnreachableCode(checkLevel15);
        compilerOptions0.setCheckRequires(checkLevel15);
        compilerOptions0.setRemoveClosureAsserts(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions20.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode26 = null;
        compilerOptions20.setLanguageOut(languageMode26);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy28 = null;
        compilerOptions20.variableRenaming = variableRenamingPolicy28;
        com.google.javascript.jscomp.CheckLevel checkLevel30 = compilerOptions20.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode31 = compilerOptions20.getLanguageOut();
        boolean boolean32 = compilerOptions20.moveFunctionDeclarations;
        byte[] byteArray33 = null;
        compilerOptions20.inputPropertyMapSerialized = byteArray33;
        compilerOptions20.locale = ":/hi!";
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.Node node44 = jSTypeRegistry40.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        com.google.javascript.rhino.jstype.JSType jSType55 = jSTypeRegistry46.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter56 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry57 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter56);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray58 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList59 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList59, jSTypeArray58);
        com.google.javascript.rhino.Node node61 = jSTypeRegistry57.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList59);
        com.google.javascript.rhino.jstype.JSType jSType66 = jSTypeRegistry57.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] { jSType66 };
        com.google.javascript.rhino.jstype.FunctionType functionType68 = jSTypeRegistry40.createConstructorTypeWithVarArgs(jSType55, jSTypeArray67);
        boolean boolean70 = jSTypeRegistry38.canPropertyBeDefined(jSType55, "");
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable72 = jSTypeRegistry38.getEachReferenceTypeWithProperty("/");
        java.lang.String[] strArray77 = new java.lang.String[] { "Unversioned directory", "/experiment/:/hi!", ":", "OFF" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        jSTypeRegistry38.setTemplateTypeNames((java.util.List<java.lang.String>) strList78);
        compilerOptions20.setManageClosureDependencies((java.util.List<java.lang.String>) strList78);
        compilerOptions20.setCheckTypes(false);
        java.util.Set<java.lang.String> strSet84 = compilerOptions20.stripTypePrefixes;
        java.util.Set<java.lang.String> strSet85 = compilerOptions20.stripTypePrefixes;
        compilerOptions0.stripNameSuffixes = strSet85;
        compilerOptions0.setRemoveTryCatchFinally(false);
        compilerOptions0.setRemoveTryCatchFinally(true);
        compilerOptions0.computeFunctionSideEffects = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel30 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel30.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(languageMode31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSType55);
        org.junit.Assert.assertNotNull(jSTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(jSType66);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertNotNull(functionType68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objectTypeIterable72);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertNotNull(strSet85);
    }

    @Test
    public void test07433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07433");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.crossModuleCodeMotion = true;
        compilerOptions0.checkSymbols = true;
        compilerOptions0.setManageClosureDependencies(false);
        boolean boolean8 = compilerOptions0.computeFunctionSideEffects;
        com.google.javascript.jscomp.MessageBundle messageBundle9 = null;
        compilerOptions0.messageBundle = messageBundle9;
        compilerOptions0.setCheckSymbols(false);
        compilerOptions0.resetWarningsGuard();
        com.google.common.collect.Multimap<com.google.javascript.jscomp.CustomPassExecutionTime, com.google.javascript.jscomp.CompilerPass> customPassExecutionTimeMultimap14 = compilerOptions0.customPasses;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(customPassExecutionTimeMultimap14);
    }

    @Test
    public void test07434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07434");
        java.io.File file2 = new java.io.File("InputId: *global*", "DiagnosticGroup<checkProvides>");
        boolean boolean3 = file2.canRead();
        org.junit.Assert.assertEquals(file2.getParent(), "InputId: *global*");
        org.junit.Assert.assertEquals(file2.toString(), "InputId: *global*/DiagnosticGroup<checkProvides>");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test07435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07435");
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags1 = new com.google.javascript.rhino.Node.SideEffectFlags((int) (byte) 100);
        int int2 = sideEffectFlags1.valueOf();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    }

    @Test
    public void test07436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07436");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.crossModuleCodeMotion = true;
        compilerOptions0.checkSymbols = true;
        compilerOptions0.setExtractPrototypeMemberDeclarations(true);
        boolean boolean8 = compilerOptions0.checkSuspiciousCode;
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str10 = compilerOptions9.syntheticBlockStartMarker;
        compilerOptions9.labelRenaming = true;
        boolean boolean13 = compilerOptions9.inlineLocalFunctions;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        compilerOptions14.skipAllCompilerPasses();
        boolean boolean18 = compilerOptions14.flowSensitiveInlineVariables;
        java.lang.String[] strArray28 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        compilerOptions14.stripTypes = strSet29;
        compilerOptions9.setStripNameSuffixes((java.util.Set<java.lang.String>) strSet29);
        compilerOptions0.setExtraAnnotationNames((java.util.Set<java.lang.String>) strSet29);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        compilerOptions0.setTweakReplacements(strMap34);
        compilerOptions0.setInferTypes(true);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode38 = com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY;
        compilerOptions0.setTracer(tracerMode38);
        compilerOptions0.setRemoveUnusedVars(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + tracerMode38 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY + "'", tracerMode38.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY));
    }

    @Test
    public void test07437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07437");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.AMBIGUOUS_FUNCTION_DECL;
        com.google.javascript.jscomp.DiagnosticGroups.DUPLICATE_MESSAGE = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.ACCESS_CONTROLS = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.TWEAKS = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.DEBUGGER_STATEMENT_PRESENT = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.CHECK_VARIABLES = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.DEBUGGER_STATEMENT_PRESENT = diagnosticGroup0;
// flaky:         org.junit.Assert.assertNull(diagnosticGroup0);
    }

    @Test
    public void test07438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07438");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions12 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions12.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy15 = compilerOptions12.propertyRenaming;
        java.lang.String[] strArray18 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        compilerOptions12.setStripTypes((java.util.Set<java.lang.String>) strSet19);
        compilerOptions7.stripNamePrefixes = strSet19;
        compilerOptions0.stripNamePrefixes = strSet19;
        compilerOptions0.optimizeReturns = false;
        boolean boolean26 = compilerOptions0.optimizeReturns;
        com.google.javascript.jscomp.CompilerOptions.TweakProcessing tweakProcessing27 = compilerOptions0.getTweakProcessing();
        com.google.javascript.jscomp.CompilerOptions compilerOptions28 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions28.crossModuleMethodMotion = true;
        compilerOptions28.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions33 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions33.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy36 = compilerOptions33.propertyRenaming;
        java.lang.String[] strArray39 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        compilerOptions33.setStripTypes((java.util.Set<java.lang.String>) strSet40);
        compilerOptions28.stripNamePrefixes = strSet40;
        compilerOptions28.checkTypes = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions46 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions46.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel49 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions46.setSourceMapDetailLevel(detailLevel49);
        boolean boolean51 = compilerOptions46.ideMode;
        compilerOptions46.renamePrefix = "hi!";
        boolean boolean54 = compilerOptions46.inlineConstantVars;
        com.google.javascript.jscomp.CompilerOptions.Reach reach55 = com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY;
        compilerOptions46.setInlineVariables(reach55);
        compilerOptions28.setRemoveUnusedVariable(reach55);
        compilerOptions0.setInlineFunctions(reach55);
        compilerOptions0.removeUnusedLocalVars = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy15 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy15.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + tweakProcessing27 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF + "'", tweakProcessing27.equals(com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy36 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy36.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(detailLevel49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + reach55 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY + "'", reach55.equals(com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY));
    }

    @Test
    public void test07439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07439");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.CONST;
        com.google.javascript.jscomp.DiagnosticGroups.TYPE_INVALIDATION = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.UNDEFINED_NAMES = diagnosticGroup0;
        org.junit.Assert.assertNull(diagnosticGroup0);
    }

    @Test
    public void test07440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07440");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        compilerOptions0.setSkipAllPasses(false);
        compilerOptions0.setLabelRenaming(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions13.crossModuleMethodMotion = true;
        compilerOptions13.syntheticBlockEndMarker = "hi!";
        compilerOptions13.removeUnusedClassProperties = false;
        compilerOptions13.setLineLengthThreshold(4095);
        com.google.javascript.jscomp.ErrorFormat errorFormat22 = compilerOptions13.errorFormat;
        compilerOptions0.setErrorFormat(errorFormat22);
        java.util.Set<java.lang.String> strSet24 = compilerOptions0.stripNamePrefixes;
        compilerOptions0.setCheckSuspiciousCode(true);
        compilerOptions0.checkControlStructures = false;
        compilerOptions0.gatherCssNames = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNotNull(errorFormat22);
        org.junit.Assert.assertNotNull(strSet24);
    }

    @Test
    public void test07441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07441");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy12 = compilerOptions9.propertyRenaming;
        compilerOptions0.propertyRenaming = propertyRenamingPolicy12;
        com.google.javascript.jscomp.CheckLevel checkLevel14 = compilerOptions0.brokenClosureRequiresLevel;
        boolean boolean15 = compilerOptions0.checkTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions16 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode17 = null;
        compilerOptions16.setTracerMode(tracerMode17);
        boolean boolean19 = compilerOptions16.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel20 = compilerOptions16.sourceMapDetailLevel;
        compilerOptions16.optimizeArgumentsArray = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions23 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions23.crossModuleMethodMotion = true;
        compilerOptions23.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy28 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions29 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions29.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy32 = compilerOptions29.propertyRenaming;
        compilerOptions23.setRenamingPolicy(variableRenamingPolicy28, propertyRenamingPolicy32);
        com.google.javascript.jscomp.SourceMap.Format format34 = compilerOptions23.sourceMapFormat;
        compilerOptions16.setSourceMapFormat(format34);
        compilerOptions0.setSourceMapFormat(format34);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy12 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy12.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel14 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel14.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(detailLevel20);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy32 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy32.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format34);
    }

    @Test
    public void test07442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07442");
        com.google.javascript.jscomp.DiagnosticType diagnosticType0 = com.google.javascript.jscomp.Compiler.OPTIMIZE_LOOP_ERROR;
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray4 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList5 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList5, jSTypeArray4);
        com.google.javascript.rhino.Node node7 = jSTypeRegistry3.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList5);
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.Node node13 = jSTypeRegistry9.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList11);
        node7.addChildrenToBack(node13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray17 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList18 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList18, jSTypeArray17);
        com.google.javascript.rhino.Node node20 = jSTypeRegistry16.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList18);
        boolean boolean21 = node20.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.Node node27 = jSTypeRegistry23.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = node27.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        com.google.javascript.rhino.Node node34 = jSTypeRegistry30.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        com.google.javascript.rhino.Node node37 = new com.google.javascript.rhino.Node((int) (short) 0, node7, node20, node27, node34, 0, 49);
        boolean boolean38 = node7.isDo();
        boolean boolean39 = node7.isWhile();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable40 = node7.children();
        java.lang.String[] strArray47 = new java.lang.String[] { "OFF", "PARAM_LIST", "*global*", ":", "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet48 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet48, strArray47);
        node7.setDirectives((java.util.Set<java.lang.String>) strSet48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray51 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList52 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList52, jSTypeArray51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList55 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55, jSTypeArray54);
        boolean boolean57 = jSTypeList52.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray58 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList59 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList59, jSTypeArray58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        boolean boolean64 = jSTypeList59.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        boolean boolean65 = jSTypeList52.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        boolean boolean66 = strSet48.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        java.lang.String[] strArray72 = new java.lang.String[] { "*global*", "Unversioned directory", "STRING PARAM_LIST 49", "java.io.IOException: ", "*global*.  at *global* line (unknown line) : (unknown column)" };
        java.lang.Comparable<java.lang.String>[] strComparableArray73 = strSet48.toArray((java.lang.Comparable<java.lang.String>[]) strArray72);
        com.google.javascript.jscomp.JSError jSError74 = com.google.javascript.jscomp.JSError.make(diagnosticType0, strArray72);
        com.google.javascript.jscomp.CheckLevel checkLevel75 = jSError74.getDefaultLevel();
        int int76 = jSError74.getNodeSourceOffset();
        org.junit.Assert.assertNotNull(diagnosticType0);
        org.junit.Assert.assertNotNull(jSTypeArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(jSTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(nodeIterable40);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(jSTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(jSTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strComparableArray73);
        org.junit.Assert.assertNotNull(jSError74);
        org.junit.Assert.assertTrue("'" + checkLevel75 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel75.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test07443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07443");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler2 = new com.google.javascript.jscomp.Compiler();
        jSModule1.sortInputsByDeps(compiler2);
        com.google.javascript.jscomp.SourceFile.Builder builder4 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile8 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int10 = sourceFile8.getLineOfOffset((int) (short) 1);
        java.io.Reader reader11 = sourceFile8.getCodeReader();
        int int12 = reader11.read();
        com.google.javascript.jscomp.SourceFile sourceFile13 = builder4.buildFromReader("*global*", reader11);
        jSModule1.add(sourceFile13);
        com.google.javascript.jscomp.JSModule jSModule16 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler17 = new com.google.javascript.jscomp.Compiler();
        jSModule16.sortInputsByDeps(compiler17);
        com.google.javascript.jscomp.SourceFile.Builder builder19 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile23 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int25 = sourceFile23.getLineOfOffset((int) (short) 1);
        java.io.Reader reader26 = sourceFile23.getCodeReader();
        int int27 = reader26.read();
        com.google.javascript.jscomp.SourceFile sourceFile28 = builder19.buildFromReader("*global*", reader26);
        jSModule16.add(sourceFile28);
        boolean boolean31 = jSModule16.removeByName("PARAM_LIST");
        jSModule1.addDependency(jSModule16);
        com.google.javascript.jscomp.JSModule jSModule34 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler35 = new com.google.javascript.jscomp.Compiler();
        jSModule34.sortInputsByDeps(compiler35);
        com.google.javascript.jscomp.SourceFile.Builder builder37 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile41 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int43 = sourceFile41.getLineOfOffset((int) (short) 1);
        java.io.Reader reader44 = sourceFile41.getCodeReader();
        int int45 = reader44.read();
        com.google.javascript.jscomp.SourceFile sourceFile46 = builder37.buildFromReader("*global*", reader44);
        jSModule34.add(sourceFile46);
        boolean boolean49 = jSModule34.removeByName("PARAM_LIST");
        jSModule1.addDependency(jSModule34);
        com.google.javascript.jscomp.SourceFile sourceFile53 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int55 = sourceFile53.getLineOfOffset((int) (short) 1);
        java.lang.String str56 = sourceFile53.getName();
        java.lang.String str57 = sourceFile53.getName();
        java.lang.String str58 = sourceFile53.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput60 = new com.google.javascript.jscomp.CompilerInput(sourceFile53, true);
        com.google.javascript.jscomp.CompilerInput compilerInput61 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput60);
        boolean boolean62 = compilerInput60.isExtern();
        jSModule34.addFirst(compilerInput60);
        java.util.List<com.google.javascript.jscomp.JSModule> jSModuleList64 = jSModule34.getDependencies();
        org.junit.Assert.assertNotNull(sourceFile8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(sourceFile13);
        org.junit.Assert.assertNotNull(sourceFile23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(sourceFile28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(sourceFile41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(sourceFile46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(sourceFile53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(jSModuleList64);
    }

    @Test
    public void test07444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07444");
        java.io.PrintStream printStream1 = new java.io.PrintStream("*global*.  at *global* line (unknown line) : (unknown column)");
        printStream1.println("java.io.IOException: ");
        printStream1.println((double) 38);
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel9 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions6.setSourceMapDetailLevel(detailLevel9);
        compilerOptions6.inlineFunctions = true;
        compilerOptions6.setCommonJSModulePathPrefix(":");
        compilerOptions6.setCrossModuleCodeMotion(true);
        compilerOptions6.setInlineLocalVariables(true);
        compilerOptions6.setNameReferenceReportPath("2019/07/12 07:12");
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions21.crossModuleMethodMotion = true;
        compilerOptions21.syntheticBlockEndMarker = "hi!";
        compilerOptions21.removeUnusedClassProperties = false;
        compilerOptions21.setLineLengthThreshold(4095);
        boolean boolean30 = compilerOptions21.collapseVariableDeclarations;
        byte[] byteArray36 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 1, (byte) -1 };
        compilerOptions21.setInputVariableMapSerialized(byteArray36);
        compilerOptions6.setInputPropertyMapSerialized(byteArray36);
        // The following exception was thrown during execution in test generation
        try {
            printStream1.write(byteArray36, 1, (int) ':');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(detailLevel9);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, 100, 10, 1, -1]");
    }

    @Test
    public void test07445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07445");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        compilerOptions0.setSkipAllPasses(false);
        compilerOptions0.setRewriteNewDateGoogNow(false);
        com.google.javascript.jscomp.MessageBundle messageBundle13 = compilerOptions0.messageBundle;
        com.google.javascript.jscomp.CheckLevel checkLevel14 = com.google.javascript.jscomp.CheckLevel.OFF;
        compilerOptions0.setReportMissingOverride(checkLevel14);
        compilerOptions0.collapseVariableDeclarations = false;
        com.google.javascript.jscomp.CompilerOptions.AliasTransformationHandler aliasTransformationHandler18 = compilerOptions0.getAliasTransformationHandler();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(messageBundle13);
        org.junit.Assert.assertTrue("'" + checkLevel14 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel14.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(aliasTransformationHandler18);
    }

    @Test
    public void test07446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07446");
        java.io.File file1 = new java.io.File(":");
        java.io.File file3 = new java.io.File(file1, "FINEST");
        boolean boolean4 = file1.setReadOnly();
        java.io.File file7 = new java.io.File(":", "hi!");
        boolean boolean10 = file7.setExecutable(true, false);
        boolean boolean11 = file1.renameTo(file7);
        boolean boolean12 = file7.mkdirs();
        java.io.File file14 = new java.io.File(file7, "InputId: JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of code motion iterations: {0}");
        java.lang.String str15 = file7.getAbsolutePath();
        java.io.File file16 = file7.getCanonicalFile();
        java.lang.String str17 = file16.getPath();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), ":");
        org.junit.Assert.assertEquals(file3.getParent(), ":");
        org.junit.Assert.assertEquals(file3.toString(), ":/FINEST");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals(file7.getParent(), ":");
        org.junit.Assert.assertEquals(file7.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals(file14.getParent(), ":/hi!");
        org.junit.Assert.assertEquals(file14.toString(), ":/hi!/InputId: JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of code motion iterations: {0}");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "/experiment/:/hi!" + "'", str15, "/experiment/:/hi!");
        org.junit.Assert.assertNotNull(file16);
// flaky:         org.junit.Assert.assertEquals(file16.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file16.toString(), "/experiment/:/hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/experiment/:/hi!" + "'", str17, "/experiment/:/hi!");
    }

    @Test
    public void test07447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07447");
        java.util.logging.Level level0 = java.util.logging.Level.FINEST;
        int int1 = level0.intValue();
        java.lang.String str2 = level0.getLocalizedName();
        org.junit.Assert.assertNotNull(level0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 300 + "'", int1 == 300);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "FINEST" + "'", str2, "FINEST");
    }

    @Test
    public void test07448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07448");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        jSTypeRegistry1.forwardDeclareType("PARAM_LIST");
        jSTypeRegistry1.setLastGeneration(true);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable15 = jSTypeRegistry1.getTypesWithProperty("sun.util.logging.resources.logging");
        com.google.javascript.rhino.Node node17 = null;
        com.google.javascript.rhino.ErrorReporter errorReporter18 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter18);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray20 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList21 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList21, jSTypeArray20);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        boolean boolean26 = jSTypeList21.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        com.google.javascript.rhino.Node node27 = jSTypeRegistry19.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList21);
        jSTypeRegistry19.forwardDeclareType("PARAM_LIST");
        com.google.javascript.rhino.ErrorReporter errorReporter30 = jSTypeRegistry19.getErrorReporter();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = jSTypeRegistry19.getErrorReporter();
        com.google.javascript.rhino.jstype.JSType jSType36 = jSTypeRegistry19.createNamedType("2019/07/12 07:12", "DiagnosticGroup<checkProvides>", 38, (int) (byte) 10);
        com.google.javascript.rhino.jstype.EnumType enumType37 = jSTypeRegistry1.createEnumType("PARAM_LIST [var_args_name: 1] [opt_arg: 1]", node17, jSType36);
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeIterable15);
        org.junit.Assert.assertNotNull(jSTypeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNull(errorReporter30);
        org.junit.Assert.assertNull(errorReporter31);
        org.junit.Assert.assertNotNull(jSType36);
        org.junit.Assert.assertNotNull(enumType37);
    }

    @Test
    public void test07449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07449");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy8 = compilerOptions5.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap9 = compilerOptions5.getTweakReplacements();
        boolean boolean10 = strMap9.isEmpty();
        java.lang.Object obj11 = null;
        com.google.javascript.rhino.Node node12 = strMap9.get(obj11);
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions13.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel16 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions13.setSourceMapDetailLevel(detailLevel16);
        boolean boolean18 = compilerOptions13.ideMode;
        compilerOptions13.setUnaliasableGlobals("");
        com.google.javascript.jscomp.CheckLevel checkLevel21 = compilerOptions13.checkUnreachableCode;
        com.google.javascript.rhino.Node node22 = strMap9.remove((java.lang.Object) checkLevel21);
        strMap9.clear();
        strMap4.putAll(strMap9);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.Node>> strEntrySet25 = strMap4.entrySet();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy8 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy8.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNotNull(detailLevel16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + checkLevel21 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel21.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(strEntrySet25);
    }

    @Test
    public void test07450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07450");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.syntheticBlockEndMarker = "hi!";
        compilerOptions0.setCheckControlStructures(true);
        compilerOptions0.setAliasableGlobals("();");
    }

    @Test
    public void test07451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07451");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setProtectHiddenSideEffects(true);
        boolean boolean5 = compilerOptions0.isExternExportsEnabled();
        boolean boolean6 = compilerOptions0.aliasAllStrings;
        com.google.javascript.jscomp.AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy7 = compilerOptions0.anonymousFunctionNaming;
        compilerOptions0.setSmartNameRemoval(false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + anonymousFunctionNamingPolicy7 + "' != '" + com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF + "'", anonymousFunctionNamingPolicy7.equals(com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF));
    }

    @Test
    public void test07452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07452");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.CompilerOptions compilerOptions4 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions4.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode7 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions4.setTracer(tracerMode7);
        compilerOptions4.setFoldConstants(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode12 = null;
        compilerOptions11.setTracerMode(tracerMode12);
        boolean boolean14 = compilerOptions11.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel15 = compilerOptions11.sourceMapDetailLevel;
        compilerOptions11.setColorizeErrorOutput(true);
        compilerOptions11.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy23 = compilerOptions20.propertyRenaming;
        compilerOptions11.propertyRenaming = propertyRenamingPolicy23;
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions11.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel26 = compilerOptions11.checkRequires;
        compilerOptions4.reportMissingOverride = checkLevel26;
        compilerOptions0.setAggressiveVarCheck(checkLevel26);
        compilerOptions0.setReplaceIdGenerators(true);
        compilerOptions0.setOptimizeParameters(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions33 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions33.setLooseTypes(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str37 = compilerOptions36.syntheticBlockStartMarker;
        compilerOptions36.labelRenaming = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions40 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions40.crossModuleMethodMotion = true;
        compilerOptions40.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions45 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions45.crossModuleMethodMotion = true;
        compilerOptions45.skipAllCompilerPasses();
        compilerOptions45.resetWarningsGuard();
        java.lang.String str50 = compilerOptions45.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy51 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy52 = null;
        compilerOptions45.setRenamingPolicy(variableRenamingPolicy51, propertyRenamingPolicy52);
        com.google.javascript.jscomp.CompilerOptions compilerOptions54 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions54.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy57 = compilerOptions54.propertyRenaming;
        compilerOptions40.setRenamingPolicy(variableRenamingPolicy51, propertyRenamingPolicy57);
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy59 = com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC;
        compilerOptions36.setRenamingPolicy(variableRenamingPolicy51, propertyRenamingPolicy59);
        com.google.javascript.jscomp.CompilerOptions compilerOptions61 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str62 = compilerOptions61.syntheticBlockStartMarker;
        compilerOptions61.labelRenaming = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions65 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions65.crossModuleMethodMotion = true;
        compilerOptions65.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions70 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions70.crossModuleMethodMotion = true;
        compilerOptions70.skipAllCompilerPasses();
        compilerOptions70.resetWarningsGuard();
        java.lang.String str75 = compilerOptions70.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy76 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy77 = null;
        compilerOptions70.setRenamingPolicy(variableRenamingPolicy76, propertyRenamingPolicy77);
        com.google.javascript.jscomp.CompilerOptions compilerOptions79 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions79.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy82 = compilerOptions79.propertyRenaming;
        compilerOptions65.setRenamingPolicy(variableRenamingPolicy76, propertyRenamingPolicy82);
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy84 = com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC;
        compilerOptions61.setRenamingPolicy(variableRenamingPolicy76, propertyRenamingPolicy84);
        compilerOptions33.setRenamingPolicy(variableRenamingPolicy51, propertyRenamingPolicy84);
        compilerOptions0.propertyRenaming = propertyRenamingPolicy84;
        boolean boolean88 = compilerOptions0.assumeStrictThis();
        boolean boolean89 = compilerOptions0.labelRenaming;
        compilerOptions0.setRenamePrefix("Node tree inequality:\nTree1:\nSTRING \n\n\nTree2:\nPARAM_LIST 0\n\n\nSubtree1: STRING \n\n\nSubtree2: PARAM_LIST 0\n");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + tracerMode7 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode7.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(detailLevel15);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy23 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy23.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel26 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel26.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy51 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy51.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy57 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy57.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy59 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC + "'", propertyRenamingPolicy59.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC));
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy76 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy76.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy82 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy82.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy84 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC + "'", propertyRenamingPolicy84.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test07453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07453");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setInlineLocalFunctions(false);
        compilerOptions0.moveFunctionDeclarations = true;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageIn();
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.setInlineLocalFunctions(false);
        compilerOptions6.moveFunctionDeclarations = true;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode11 = compilerOptions6.getLanguageIn();
        compilerOptions0.setLanguageIn(languageMode11);
        compilerOptions0.setPropertyAffinity(true);
        compilerOptions0.setInlineVariables(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean18 = compilerOptions17.moveFunctionDeclarations;
        compilerOptions17.setReportPath("java.io.IOException: ");
        boolean boolean21 = compilerOptions17.inlineConstantVars;
        boolean boolean22 = compilerOptions17.deadAssignmentElimination;
        com.google.javascript.jscomp.CompilerOptions compilerOptions23 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode24 = null;
        compilerOptions23.setTracerMode(tracerMode24);
        boolean boolean26 = compilerOptions23.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel27 = compilerOptions23.sourceMapDetailLevel;
        compilerOptions23.setColorizeErrorOutput(true);
        compilerOptions23.generatePseudoNames = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy32 = com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED;
        compilerOptions23.setVariableRenaming(variableRenamingPolicy32);
        com.google.javascript.jscomp.ErrorFormat errorFormat34 = compilerOptions23.errorFormat;
        compilerOptions17.setErrorFormat(errorFormat34);
        compilerOptions0.errorFormat = errorFormat34;
        compilerOptions0.setRemoveDeadCode(false);
        boolean boolean39 = compilerOptions0.prettyPrint;
        org.junit.Assert.assertTrue("'" + languageMode5 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode5.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertTrue("'" + languageMode11 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode11.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(detailLevel27);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy32 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED + "'", variableRenamingPolicy32.equals(com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED));
        org.junit.Assert.assertNotNull(errorFormat34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test07454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07454");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec1 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("*global*");
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        com.google.javascript.rhino.Node node8 = jSTypeRegistry4.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray11 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList12 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList12, jSTypeArray11);
        com.google.javascript.rhino.Node node14 = jSTypeRegistry10.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList12);
        node8.addChildrenToBack(node14);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray18 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList19 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList19, jSTypeArray18);
        com.google.javascript.rhino.Node node21 = jSTypeRegistry17.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList19);
        boolean boolean22 = node21.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        boolean boolean29 = node28.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.Node node35 = jSTypeRegistry31.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        com.google.javascript.rhino.Node node38 = new com.google.javascript.rhino.Node((int) (short) 0, node8, node21, node28, node35, 0, 49);
        boolean boolean39 = node28.isInc();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable47 = jSTypeRegistry41.getTypesWithProperty("");
        com.google.javascript.rhino.jstype.JSType jSType48 = assertionFunctionSpec1.getAssertedType(node28, jSTypeRegistry41);
        com.google.javascript.rhino.Node node51 = com.google.javascript.rhino.Node.newString((int) (short) 10, ":/hi!");
        int int52 = node51.getLineno();
        boolean boolean53 = node51.isThrow();
        com.google.javascript.rhino.Node node54 = assertionFunctionSpec1.getAssertedParam(node51);
        node54.setLength(44);
        node54.setVarArgs(false);
        boolean boolean59 = node54.isWith();
        com.google.javascript.jscomp.CompilerOptions compilerOptions60 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions60.crossModuleMethodMotion = true;
        compilerOptions60.skipAllCompilerPasses();
        compilerOptions60.resetWarningsGuard();
        compilerOptions60.setInlineLocalVariables(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions67 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode68 = null;
        compilerOptions67.setTracerMode(tracerMode68);
        boolean boolean70 = compilerOptions67.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel71 = compilerOptions67.sourceMapDetailLevel;
        compilerOptions67.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet74 = compilerOptions67.stripNameSuffixes;
        compilerOptions60.setReplaceStringsReservedStrings(strSet74);
        int int76 = strSet74.size();
        com.google.javascript.rhino.ErrorReporter errorReporter77 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry78 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter77);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray79 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList80 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList80, jSTypeArray79);
        com.google.javascript.rhino.Node node82 = jSTypeRegistry78.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList80);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream83 = jSTypeList80.parallelStream();
        boolean boolean84 = strSet74.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList80);
        java.util.Iterator<java.lang.String> strItor85 = strSet74.iterator();
        node54.setDirectives(strSet74);
        boolean boolean87 = node54.isNull();
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(jSTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(jSTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(jSTypeIterable47);
        org.junit.Assert.assertNull(jSType48);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(detailLevel71);
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(jSTypeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNotNull(jSTypeStream83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(strItor85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test07455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07455");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        boolean boolean4 = compilerOptions0.disambiguateProperties;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.collapseVariableDeclarations = false;
        boolean boolean9 = compilerOptions0.lineBreak;
        boolean boolean10 = compilerOptions0.recordFunctionInformation;
        compilerOptions0.setRemoveTryCatchFinally(false);
        compilerOptions0.setLabelRenaming(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions15 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions15.crossModuleMethodMotion = true;
        compilerOptions15.setProtectHiddenSideEffects(true);
        compilerOptions15.moveFunctionDeclarations = true;
        boolean boolean22 = compilerOptions15.inlineConstantVars;
        boolean boolean23 = compilerOptions15.disambiguateProperties;
        com.google.javascript.jscomp.CheckLevel checkLevel24 = compilerOptions15.aggressiveVarCheck;
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions15.checkMissingReturn;
        compilerOptions0.brokenClosureRequiresLevel = checkLevel25;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = null;
        compilerOptions0.setDefineReplacements(strMap27);
        compilerOptions0.coalesceVariableNames = true;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + checkLevel24 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel24.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07456");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec1 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("*global*");
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        com.google.javascript.rhino.Node node8 = jSTypeRegistry4.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray11 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList12 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList12, jSTypeArray11);
        com.google.javascript.rhino.Node node14 = jSTypeRegistry10.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList12);
        node8.addChildrenToBack(node14);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray18 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList19 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList19, jSTypeArray18);
        com.google.javascript.rhino.Node node21 = jSTypeRegistry17.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList19);
        boolean boolean22 = node21.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        boolean boolean29 = node28.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.Node node35 = jSTypeRegistry31.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        com.google.javascript.rhino.Node node38 = new com.google.javascript.rhino.Node((int) (short) 0, node8, node21, node28, node35, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray48 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList49 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList49, jSTypeArray48);
        com.google.javascript.rhino.Node node51 = jSTypeRegistry47.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList49);
        node45.addChildrenToBack(node51);
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry54 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray55 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList56 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56, jSTypeArray55);
        com.google.javascript.rhino.Node node58 = jSTypeRegistry54.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        boolean boolean59 = node58.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter60 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter60);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray62 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList63 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63, jSTypeArray62);
        com.google.javascript.rhino.Node node65 = jSTypeRegistry61.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        boolean boolean66 = node65.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter67 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry68 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter67);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray69 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList70 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70, jSTypeArray69);
        com.google.javascript.rhino.Node node72 = jSTypeRegistry68.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node((int) (short) 0, node45, node58, node65, node72, 0, 49);
        com.google.javascript.rhino.Node node76 = node38.useSourceInfoFrom(node58);
        boolean boolean77 = node76.hasChildren();
        boolean boolean78 = node76.isDefaultCase();
        boolean boolean79 = node76.isSwitch();
        com.google.javascript.rhino.Node node80 = assertionFunctionSpec1.getAssertedParam(node76);
        java.lang.String str81 = node76.getSourceFileName();
        com.google.javascript.rhino.Node node85 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean87 = node85.getBooleanProp((int) (byte) 10);
        com.google.javascript.rhino.Node node88 = node76.useSourceInfoIfMissingFrom(node85);
        boolean boolean90 = node85.getBooleanProp(52);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(jSTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(jSTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(jSTypeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNotNull(jSTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(jSTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(jSTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test07457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07457");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setLabelRenaming(true);
        compilerOptions0.setTweakToDoubleLiteral("/", (double) 43);
        compilerOptions0.aliasKeywords = false;
        com.google.javascript.jscomp.DiagnosticType diagnosticType14 = com.google.javascript.jscomp.DiagnosticType.error("InputId: *global*", "");
        com.google.javascript.jscomp.CheckLevel checkLevel15 = diagnosticType14.defaultLevel;
        compilerOptions0.aggressiveVarCheck = checkLevel15;
        compilerOptions0.setAliasStringsBlacklist("JSC_OPTIMIZE_LOOP_ERROR. Exceeded max number of code motion iterations: Unversioned directory at STRING PARAM_LIST 49: hi! line 97 : 48");
        org.junit.Assert.assertNotNull(diagnosticType14);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
    }

    @Test
    public void test07458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07458");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setInlineLocalFunctions(false);
        compilerOptions0.moveFunctionDeclarations = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.crossModuleMethodMotion = true;
        compilerOptions5.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy10 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions11.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy14 = compilerOptions11.propertyRenaming;
        compilerOptions5.setRenamingPolicy(variableRenamingPolicy10, propertyRenamingPolicy14);
        boolean boolean16 = compilerOptions5.checkControlStructures;
        compilerOptions5.syntheticBlockEndMarker = "FINEST";
        compilerOptions5.setOptimizeParameters(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel22 = compilerOptions21.checkRequires;
        com.google.javascript.jscomp.CompilerOptions compilerOptions23 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode24 = null;
        compilerOptions23.setTracerMode(tracerMode24);
        boolean boolean26 = compilerOptions23.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel27 = compilerOptions23.sourceMapDetailLevel;
        compilerOptions23.setColorizeErrorOutput(true);
        compilerOptions23.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy35 = compilerOptions32.propertyRenaming;
        compilerOptions23.propertyRenaming = propertyRenamingPolicy35;
        com.google.javascript.jscomp.CheckLevel checkLevel37 = compilerOptions23.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel38 = compilerOptions23.checkRequires;
        compilerOptions21.setCheckRequires(checkLevel38);
        compilerOptions5.setCheckGlobalNamesLevel(checkLevel38);
        boolean boolean41 = compilerOptions5.devirtualizePrototypeMethods;
        com.google.javascript.jscomp.CompilerOptions compilerOptions42 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode43 = null;
        compilerOptions42.setTracerMode(tracerMode43);
        compilerOptions42.setSmartNameRemoval(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions47 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions47.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy50 = compilerOptions47.propertyRenaming;
        java.lang.String[] strArray53 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet54 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet54, strArray53);
        compilerOptions47.setStripTypes((java.util.Set<java.lang.String>) strSet54);
        com.google.javascript.jscomp.CompilerOptions compilerOptions57 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode58 = null;
        compilerOptions57.setTracerMode(tracerMode58);
        boolean boolean60 = compilerOptions57.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel61 = compilerOptions57.sourceMapDetailLevel;
        compilerOptions57.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions64 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions64.crossModuleMethodMotion = true;
        compilerOptions64.optimizeParameters = true;
        compilerOptions64.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel72 = compilerOptions64.checkGlobalNamesLevel;
        compilerOptions57.setReportMissingOverride(checkLevel72);
        compilerOptions47.setCheckUnreachableCode(checkLevel72);
        compilerOptions47.syntheticBlockStartMarker = "*global*";
        compilerOptions47.prettyPrint = false;
        boolean boolean79 = compilerOptions47.aliasAllStrings;
        com.google.javascript.jscomp.CompilerOptions.Reach reach80 = com.google.javascript.jscomp.CompilerOptions.Reach.NONE;
        compilerOptions47.setInlineVariables(reach80);
        compilerOptions42.setInlineVariables(reach80);
        compilerOptions5.setInlineFunctions(reach80);
        compilerOptions0.setRemoveUnusedVariable(reach80);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy14 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy14.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + checkLevel22 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel22.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(detailLevel27);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy35 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy35.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel37 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel37.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel38 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel38.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy50 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy50.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(detailLevel61);
        org.junit.Assert.assertTrue("'" + checkLevel72 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel72.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + reach80 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.NONE + "'", reach80.equals(com.google.javascript.jscomp.CompilerOptions.Reach.NONE));
    }

    @Test
    public void test07459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07459");
        java.io.InputStream inputStream2 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.jscomp.SourceFile sourceFile3 = com.google.javascript.jscomp.SourceFile.fromInputStream("", "JSC_OPTIMIZE_LOOP_ERROR. Exceeded max number of code motion iterations: Unversioned directory at / line (unknown line) : 48", inputStream2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07460");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageOut();
        compilerOptions0.setFoldConstants(true);
        boolean boolean8 = compilerOptions0.generatePseudoNames;
        compilerOptions0.checkSymbols = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode12 = null;
        compilerOptions11.setTracerMode(tracerMode12);
        boolean boolean14 = compilerOptions11.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel15 = compilerOptions11.sourceMapDetailLevel;
        compilerOptions0.setSourceMapDetailLevel(detailLevel15);
        byte[] byteArray17 = compilerOptions0.inputVariableMapSerialized;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(languageMode5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(detailLevel15);
        org.junit.Assert.assertNull(byteArray17);
    }

    @Test
    public void test07461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07461");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        compilerOptions0.inlineConstantVars = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions10.crossModuleMethodMotion = true;
        compilerOptions10.skipAllCompilerPasses();
        compilerOptions10.resetWarningsGuard();
        compilerOptions10.setLabelRenaming(true);
        compilerOptions10.setTweakToDoubleLiteral("/", (double) 43);
        boolean boolean20 = compilerOptions10.removeTryCatchFinally;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode21 = com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY;
        compilerOptions10.setTracer(tracerMode21);
        compilerOptions0.setTracerMode(tracerMode21);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + tracerMode21 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY + "'", tracerMode21.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY));
    }

    @Test
    public void test07462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07462");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        java.lang.Object obj6 = null;
        com.google.javascript.rhino.Node node7 = strMap4.get(obj6);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.Node>> strEntrySet8 = strMap4.entrySet();
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode10 = null;
        compilerOptions9.setTracerMode(tracerMode10);
        boolean boolean12 = compilerOptions9.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel13 = compilerOptions9.sourceMapDetailLevel;
        compilerOptions9.setColorizeErrorOutput(true);
        compilerOptions9.collapseProperties = false;
        compilerOptions9.setSkipAllPasses(false);
        compilerOptions9.setPropertyAffinity(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions22 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode23 = null;
        compilerOptions22.setTracerMode(tracerMode23);
        boolean boolean25 = compilerOptions22.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel26 = compilerOptions22.sourceMapDetailLevel;
        compilerOptions22.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions29 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions29.crossModuleMethodMotion = true;
        compilerOptions29.optimizeParameters = true;
        compilerOptions29.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel37 = compilerOptions29.checkGlobalNamesLevel;
        compilerOptions22.setReportMissingOverride(checkLevel37);
        compilerOptions9.setCheckGlobalNamesLevel(checkLevel37);
        boolean boolean40 = compilerOptions9.ambiguateProperties;
        compilerOptions9.setRecordFunctionInformation(false);
        com.google.javascript.jscomp.SourceFile sourceFile44 = com.google.javascript.jscomp.SourceFile.fromFile("java.io.IOException: OFF");
        java.lang.String str46 = sourceFile44.getLine(40);
        com.google.javascript.jscomp.CompilerInput compilerInput48 = new com.google.javascript.jscomp.CompilerInput(sourceFile44, true);
        boolean boolean49 = strMap4.remove((java.lang.Object) compilerOptions9, (java.lang.Object) compilerInput48);
        com.google.javascript.jscomp.SourceFile.Builder builder50 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile54 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int56 = sourceFile54.getLineOfOffset((int) (short) 1);
        java.io.Reader reader57 = sourceFile54.getCodeReader();
        int int58 = reader57.read();
        com.google.javascript.jscomp.SourceFile sourceFile59 = builder50.buildFromReader("*global*", reader57);
        java.nio.charset.Charset charset60 = null;
        com.google.javascript.jscomp.SourceFile.Builder builder61 = builder50.withCharset(charset60);
        com.google.javascript.jscomp.SourceFile sourceFile63 = builder61.buildFromFile("/experiment/:/hi!");
        com.google.javascript.jscomp.SourceFile.Builder builder65 = builder61.withOriginalPath(":");
        com.google.javascript.jscomp.SourceFile.Generator generator67 = null;
        com.google.javascript.jscomp.SourceFile sourceFile68 = builder61.buildFromGenerator("DiagnosticGroup<checkProvides>", generator67);
        // The following exception was thrown during execution in test generation
        try {
            compilerInput48.setSourceFile(sourceFile68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(strEntrySet8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(detailLevel13);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(detailLevel26);
        org.junit.Assert.assertTrue("'" + checkLevel37 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel37.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(sourceFile44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(sourceFile54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(sourceFile59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(sourceFile63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(sourceFile68);
    }

    @Test
    public void test07463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07463");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.crossModuleCodeMotion = true;
        compilerOptions0.checkSymbols = true;
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap6 = null;
        compilerOptions0.cssRenamingMap = cssRenamingMap6;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy8 = compilerOptions0.propertyRenaming;
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        compilerOptions9.syntheticBlockEndMarker = "hi!";
        compilerOptions9.removeUnusedClassProperties = false;
        compilerOptions9.setLineLengthThreshold(4095);
        com.google.javascript.jscomp.ErrorFormat errorFormat18 = compilerOptions9.errorFormat;
        compilerOptions9.inlineConstantVars = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions21.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode24 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions21.setTracer(tracerMode24);
        compilerOptions21.setFoldConstants(true);
        compilerOptions21.flowSensitiveInlineVariables = true;
        compilerOptions21.ambiguateProperties = false;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel32 = compilerOptions21.sourceMapDetailLevel;
        compilerOptions9.sourceMapDetailLevel = detailLevel32;
        compilerOptions0.setSourceMapDetailLevel(detailLevel32);
        boolean boolean35 = compilerOptions0.gatherCssNames;
        boolean boolean36 = compilerOptions0.optimizeReturns;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy8 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy8.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(errorFormat18);
        org.junit.Assert.assertTrue("'" + tracerMode24 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode24.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertNotNull(detailLevel32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test07464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07464");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        byte[] byteArray32 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 1 };
        compilerOptions0.inputVariableMapSerialized = byteArray32;
        compilerOptions0.setIgnoreCajaProperties(true);
        compilerOptions0.setNameReferenceReportPath("DiagnosticGroup<java.io.IOException: OFF>");
        compilerOptions0.setExportTestFunctions(true);
        compilerOptions0.collapseAnonymousFunctions = true;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 1, 10, 1]");
    }

    @Test
    public void test07465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07465");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        boolean boolean75 = node56.hasOneChild();
        com.google.javascript.rhino.ErrorReporter errorReporter76 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry77 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter76);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray78 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList79 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList79, jSTypeArray78);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray81 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList82 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList82, jSTypeArray81);
        boolean boolean84 = jSTypeList79.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList82);
        com.google.javascript.rhino.Node node85 = jSTypeRegistry77.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList79);
        boolean boolean86 = node85.isVarArgs();
        com.google.javascript.rhino.Node node87 = node56.clonePropsFrom(node85);
        node85.setWasEmptyNode(true);
        com.google.javascript.rhino.InputId inputId90 = node85.getInputId();
        node85.putIntProp((int) (short) 0, 196607);
        com.google.javascript.rhino.Node node94 = null;
        com.google.javascript.rhino.Node node95 = null;
        com.google.javascript.jscomp.CodingConvention.Bind bind96 = new com.google.javascript.jscomp.CodingConvention.Bind(node85, node94, node95);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(jSTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(jSTypeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertNull(inputId90);
    }

    @Test
    public void test07466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07466");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        compilerOptions0.prettyPrint = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.crossModuleMethodMotion = true;
        compilerOptions32.optimizeParameters = true;
        compilerOptions32.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel40 = compilerOptions32.checkGlobalNamesLevel;
        compilerOptions0.checkGlobalNamesLevel = checkLevel40;
        compilerOptions0.checkSymbols = false;
        java.lang.String str44 = compilerOptions0.aliasStringsBlacklist;
        com.google.javascript.jscomp.CompilerOptions compilerOptions45 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions45.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel48 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions45.setSourceMapDetailLevel(detailLevel48);
        boolean boolean50 = compilerOptions45.ideMode;
        com.google.javascript.jscomp.CheckLevel checkLevel51 = compilerOptions45.checkMissingGetCssNameLevel;
        compilerOptions0.checkGlobalThisLevel = checkLevel51;
        compilerOptions0.setManageClosureDependencies(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions55 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions55.crossModuleMethodMotion = true;
        compilerOptions55.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy60 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions61 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions61.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy64 = compilerOptions61.propertyRenaming;
        compilerOptions55.setRenamingPolicy(variableRenamingPolicy60, propertyRenamingPolicy64);
        compilerOptions55.preferLineBreakAtEndOfFile = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions68 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode69 = null;
        compilerOptions68.setTracerMode(tracerMode69);
        boolean boolean71 = compilerOptions68.generatePseudoNames;
        java.util.Set<java.lang.String> strSet72 = compilerOptions68.stripTypes;
        com.google.javascript.jscomp.CheckLevel checkLevel73 = compilerOptions68.reportMissingOverride;
        boolean boolean74 = compilerOptions68.exportTestFunctions;
        java.util.Set<java.lang.String> strSet75 = compilerOptions68.stripTypes;
        compilerOptions55.setIdGenerators(strSet75);
        compilerOptions0.setIdGenerators(strSet75);
        compilerOptions0.inputDelimiter = "STRING PARAM_LIST 49: hi!";
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel40 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel40.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(detailLevel48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + checkLevel51 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel51.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy64 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy64.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertTrue("'" + checkLevel73 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel73.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strSet75);
    }

    @Test
    public void test07467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07467");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(true, false);
        boolean boolean7 = file2.setWritable(false);
        boolean boolean8 = file2.canWrite();
        java.net.URI uRI9 = file2.toURI();
        com.google.javascript.jscomp.JSSourceFile jSSourceFile10 = com.google.javascript.jscomp.JSSourceFile.fromFile(file2);
        boolean boolean12 = file2.setLastModified((long) 300);
        boolean boolean13 = file2.canRead();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(uRI9);
        org.junit.Assert.assertNotNull(jSSourceFile10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test07468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07468");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setLooseTypes(false);
        boolean boolean4 = compilerOptions0.optimizeReturns;
        compilerOptions0.setInferTypes(true);
        compilerOptions0.setRemoveUnusedVars(true);
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test07469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07469");
        com.google.javascript.jscomp.DependencyOptions dependencyOptions0 = new com.google.javascript.jscomp.DependencyOptions();
        com.google.javascript.jscomp.DependencyOptions dependencyOptions2 = dependencyOptions0.setDependencyPruning(true);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions4 = dependencyOptions2.setDependencySorting(true);
        org.junit.Assert.assertNotNull(dependencyOptions2);
        org.junit.Assert.assertNotNull(dependencyOptions4);
    }

    @Test
    public void test07470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07470");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int4 = sourceFile2.getLineOfOffset((int) (short) 1);
        java.lang.String str5 = sourceFile2.getName();
        java.lang.String str6 = sourceFile2.getName();
        int int8 = sourceFile2.getColumnOfOffset(51);
        java.lang.String str9 = sourceFile2.getName();
        sourceFile2.clearCachedSource();
        java.io.Reader reader11 = sourceFile2.getCodeReader();
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 51 + "'", int8 == 51);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(reader11);
    }

    @Test
    public void test07471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07471");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) 1645456103000L, (int) '/', 0);
        node3.setSourceFileForTesting("InputId: FINEST");
        boolean boolean6 = node3.hasChildren();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test07472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07472");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        jSModule1.removeAll();
        com.google.javascript.jscomp.SourceFile sourceFile4 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput6 = new com.google.javascript.jscomp.CompilerInput(sourceFile4, true);
        com.google.javascript.rhino.InputId inputId8 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput10 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput6, inputId8, true);
        java.lang.String str11 = compilerInput10.toString();
        com.google.javascript.jscomp.SourceFile sourceFile12 = compilerInput10.getSourceFile();
        jSModule1.remove(compilerInput10);
        com.google.javascript.jscomp.CompilerInput compilerInput15 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput10, true);
        com.google.javascript.jscomp.SourceAst sourceAst16 = compilerInput10.getAst();
        compilerInput10.clearAst();
        com.google.javascript.jscomp.JSModule jSModule18 = compilerInput10.getModule();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "*global*" + "'", str11, "*global*");
        org.junit.Assert.assertNotNull(sourceFile12);
        org.junit.Assert.assertNotNull(sourceAst16);
        org.junit.Assert.assertNull(jSModule18);
    }

    @Test
    public void test07473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07473");
        com.google.javascript.jscomp.WarningsGuard.Priority priority0 = com.google.javascript.jscomp.WarningsGuard.Priority.FILTER_BY_PATH;
        int int1 = priority0.getValue();
        int int2 = priority0.getValue();
        int int3 = priority0.getValue();
        int int4 = priority0.getValue();
        org.junit.Assert.assertTrue("'" + priority0 + "' != '" + com.google.javascript.jscomp.WarningsGuard.Priority.FILTER_BY_PATH + "'", priority0.equals(com.google.javascript.jscomp.WarningsGuard.Priority.FILTER_BY_PATH));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }

    @Test
    public void test07474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07474");
        com.google.javascript.jscomp.SourceFile.Builder builder0 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile4 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int6 = sourceFile4.getLineOfOffset((int) (short) 1);
        java.io.Reader reader7 = sourceFile4.getCodeReader();
        int int8 = reader7.read();
        com.google.javascript.jscomp.SourceFile sourceFile9 = builder0.buildFromReader("*global*", reader7);
        java.nio.charset.Charset charset10 = null;
        com.google.javascript.jscomp.SourceFile.Builder builder11 = builder0.withCharset(charset10);
        java.io.File file14 = new java.io.File(":", "hi!");
        boolean boolean17 = file14.setExecutable(true, false);
        long long18 = file14.lastModified();
        boolean boolean19 = file14.mkdir();
        com.google.javascript.jscomp.SourceFile sourceFile20 = builder0.buildFromFile(file14);
        com.google.javascript.jscomp.SourceFile.Builder builder22 = builder0.withOriginalPath("java.io.IOException: OFF");
        com.google.javascript.jscomp.SourceFile sourceFile26 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int28 = sourceFile26.getLineOfOffset((int) (short) 1);
        int int30 = sourceFile26.getLineOfOffset(100);
        java.lang.String str31 = sourceFile26.getName();
        java.io.Reader reader32 = sourceFile26.getCodeReader();
        reader32.mark((int) ':');
        com.google.javascript.jscomp.SourceFile sourceFile35 = builder22.buildFromReader("PARAM_LIST", reader32);
        com.google.javascript.jscomp.SourceFile sourceFile37 = builder22.buildFromFile("WARNING: hi!");
        sourceFile37.clearCachedSource();
        org.junit.Assert.assertNotNull(sourceFile4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(sourceFile9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertEquals(file14.getParent(), ":");
        org.junit.Assert.assertEquals(file14.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(sourceFile20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(sourceFile26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertNotNull(sourceFile35);
        org.junit.Assert.assertNotNull(sourceFile37);
    }

    @Test
    public void test07475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07475");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        boolean boolean37 = node6.isDo();
        boolean boolean38 = node6.isWhile();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable39 = node6.children();
        boolean boolean40 = node6.isTry();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(nodeIterable39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test07476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07476");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean5 = node3.getBooleanProp((int) (byte) 10);
        java.lang.String str9 = node3.toString(false, false, false);
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray12 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList13 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13, jSTypeArray12);
        com.google.javascript.rhino.Node node15 = jSTypeRegistry11.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        boolean boolean16 = node15.isIn();
        boolean boolean17 = node15.isGetElem();
        node15.setSourceEncodedPositionForTree(38);
        com.google.javascript.rhino.Node node20 = node3.srcref(node15);
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.Node node27 = jSTypeRegistry23.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        node27.addChildrenToBack(node33);
        com.google.javascript.rhino.ErrorReporter errorReporter35 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter35);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.Node node40 = jSTypeRegistry36.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        boolean boolean41 = node40.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry43 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray44 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList45 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList45, jSTypeArray44);
        com.google.javascript.rhino.Node node47 = jSTypeRegistry43.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList45);
        boolean boolean48 = node47.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter49 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry50 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter49);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray51 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList52 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList52, jSTypeArray51);
        com.google.javascript.rhino.Node node54 = jSTypeRegistry50.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList52);
        com.google.javascript.rhino.Node node57 = new com.google.javascript.rhino.Node((int) (short) 0, node27, node40, node47, node54, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry60 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        com.google.javascript.rhino.Node node64 = jSTypeRegistry60.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        node64.addChildrenToBack(node70);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray74 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList75 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList75, jSTypeArray74);
        com.google.javascript.rhino.Node node77 = jSTypeRegistry73.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList75);
        boolean boolean78 = node77.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter79 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry80 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter79);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray81 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList82 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList82, jSTypeArray81);
        com.google.javascript.rhino.Node node84 = jSTypeRegistry80.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList82);
        boolean boolean85 = node84.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter86 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry87 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter86);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray88 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList89 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList89, jSTypeArray88);
        com.google.javascript.rhino.Node node91 = jSTypeRegistry87.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList89);
        com.google.javascript.rhino.Node node94 = new com.google.javascript.rhino.Node((int) (short) 0, node64, node77, node84, node91, 0, 49);
        com.google.javascript.rhino.Node node95 = node57.useSourceInfoFrom(node77);
        boolean boolean96 = node77.isExprResult();
        com.google.javascript.rhino.Node node97 = node15.clonePropsFrom(node77);
        boolean boolean98 = node77.isObjectLit();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "STRING PARAM_LIST" + "'", str9, "STRING PARAM_LIST");
        org.junit.Assert.assertNotNull(jSTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(jSTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(jSTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(jSTypeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(jSTypeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(jSTypeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(node91);
        org.junit.Assert.assertNotNull(node95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(node97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test07477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07477");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int4 = sourceFile2.getLineOfOffset((int) (short) 1);
        java.lang.String str5 = sourceFile2.getName();
        com.google.javascript.jscomp.JsAst jsAst6 = new com.google.javascript.jscomp.JsAst(sourceFile2);
        jsAst6.clearAst();
        com.google.javascript.jscomp.CompilerInput compilerInput10 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) jsAst6, "*global*", false);
        com.google.javascript.jscomp.SourceFile sourceFile13 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int15 = sourceFile13.getLineOfOffset((int) (short) 1);
        java.lang.String str16 = sourceFile13.getName();
        java.lang.String str17 = sourceFile13.getName();
        java.lang.String str18 = sourceFile13.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput20 = new com.google.javascript.jscomp.CompilerInput(sourceFile13, true);
        com.google.javascript.jscomp.CompilerInput compilerInput21 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput20);
        com.google.javascript.jscomp.SourceFile sourceFile24 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int26 = sourceFile24.getLineOfOffset((int) (short) 1);
        int int28 = sourceFile24.getColumnOfOffset(8);
        compilerInput21.setSourceFile(sourceFile24);
        jsAst6.setSourceFile(sourceFile24);
        java.lang.String str31 = sourceFile24.toString();
        java.io.Reader reader32 = sourceFile24.getCodeReader();
        java.lang.String str33 = sourceFile24.getName();
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(sourceFile13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(sourceFile24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8 + "'", int28 == 8);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(reader32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
    }

    @Test
    public void test07478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07478");
        java.io.PrintStream printStream1 = new java.io.PrintStream("*global*.  at *global* line (unknown line) : (unknown column)");
        printStream1.println(false);
        com.google.javascript.jscomp.SourceFile.Builder builder6 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile10 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int12 = sourceFile10.getLineOfOffset((int) (short) 1);
        java.io.Reader reader13 = sourceFile10.getCodeReader();
        int int14 = reader13.read();
        com.google.javascript.jscomp.SourceFile sourceFile15 = builder6.buildFromReader("*global*", reader13);
        reader13.reset();
        boolean boolean17 = reader13.markSupported();
        long long19 = reader13.skip(1645456104000L);
        com.google.javascript.jscomp.SourceFile sourceFile20 = com.google.javascript.jscomp.SourceFile.fromReader("java.io.IOException: OFF", reader13);
        com.google.javascript.jscomp.SourceFile sourceFile21 = com.google.javascript.jscomp.SourceFile.fromReader("*global*", reader13);
        com.google.javascript.jscomp.SourceFile sourceFile24 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int26 = sourceFile24.getLineOfOffset((int) (short) 1);
        int int28 = sourceFile24.getLineOfOffset(100);
        java.lang.String str29 = sourceFile24.getName();
        java.io.Reader reader30 = sourceFile24.getCodeReader();
        int int31 = reader30.read();
        reader30.mark(15);
        com.google.javascript.jscomp.SourceFile sourceFile37 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int39 = sourceFile37.getLineOfOffset((int) (short) 1);
        int int41 = sourceFile37.getLineOfOffset(100);
        java.lang.String str42 = sourceFile37.getName();
        java.io.Reader reader43 = sourceFile37.getCodeReader();
        reader43.reset();
        com.google.javascript.jscomp.SourceFile sourceFile45 = com.google.javascript.jscomp.SourceFile.fromReader("PARAM_LIST", reader43);
        com.google.javascript.jscomp.SourceFile sourceFile48 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        java.io.Reader reader49 = sourceFile48.getCodeReader();
        com.google.javascript.jscomp.SourceFile sourceFile52 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int54 = sourceFile52.getLineOfOffset((int) (short) 1);
        int int56 = sourceFile52.getLineOfOffset(100);
        java.lang.String str57 = sourceFile52.getName();
        java.io.Reader reader58 = sourceFile52.getCodeReader();
        reader58.mark((int) ':');
        char[] charArray65 = new char[] { '#', '#', ' ', ':' };
        int int66 = reader58.read(charArray65);
        int int69 = reader49.read(charArray65, (int) (short) 0, (int) (byte) 1);
        int int70 = reader43.read(charArray65);
        int int71 = reader30.read(charArray65);
        int int72 = reader13.read(charArray65);
        printStream1.print(charArray65);
        org.junit.Assert.assertNotNull(sourceFile10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(sourceFile15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(sourceFile20);
        org.junit.Assert.assertNotNull(sourceFile21);
        org.junit.Assert.assertNotNull(sourceFile24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(reader30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(sourceFile37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(reader43);
        org.junit.Assert.assertNotNull(sourceFile45);
        org.junit.Assert.assertNotNull(sourceFile48);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(sourceFile52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(reader58);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "## :");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "## :");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[#, #,  , :]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }

    @Test
    public void test07479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07479");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        jSTypeRegistry1.clearNamedTypes();
        jSTypeRegistry1.forwardDeclareType("STRING PARAM_LIST 49");
        com.google.javascript.rhino.jstype.ObjectType objectType5 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray12 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList13 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13, jSTypeArray12);
        boolean boolean15 = jSTypeList10.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        com.google.javascript.rhino.Node node16 = jSTypeRegistry8.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        jSTypeRegistry8.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable20 = jSTypeRegistry8.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType25 = jSTypeRegistry8.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        boolean boolean34 = jSTypeList29.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        com.google.javascript.rhino.Node node35 = jSTypeRegistry27.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        jSTypeRegistry27.forwardDeclareType("PARAM_LIST");
        jSTypeRegistry27.clearTemplateTypeNames();
        com.google.javascript.rhino.jstype.ObjectType objectType39 = jSTypeRegistry27.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry8.createOptionalNullableType((com.google.javascript.rhino.jstype.JSType) objectType39);
        jSTypeRegistry1.registerPropertyOnType("STRING PARAM_LIST 49", (com.google.javascript.rhino.jstype.JSType) objectType39);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        com.google.javascript.rhino.ErrorReporter errorReporter50 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry51 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter50);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray52 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList53 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList53, jSTypeArray52);
        com.google.javascript.rhino.Node node55 = jSTypeRegistry51.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList53);
        node49.addChildrenToBack(node55);
        com.google.javascript.rhino.ErrorReporter errorReporter57 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry58 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter57);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray59 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList60 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList60, jSTypeArray59);
        com.google.javascript.rhino.Node node62 = jSTypeRegistry58.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList60);
        boolean boolean63 = node62.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter64 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry65 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter64);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        com.google.javascript.rhino.Node node69 = jSTypeRegistry65.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        boolean boolean70 = node69.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter71 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry72 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter71);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray73 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList74 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList74, jSTypeArray73);
        com.google.javascript.rhino.Node node76 = jSTypeRegistry72.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList74);
        com.google.javascript.rhino.Node node79 = new com.google.javascript.rhino.Node((int) (short) 0, node49, node62, node69, node76, 0, 49);
        boolean boolean80 = node49.isDo();
        boolean boolean81 = node49.isWhile();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable82 = node49.children();
        java.lang.String str83 = node49.getQualifiedName();
        node49.setCharno((int) '/');
        com.google.javascript.rhino.Node node86 = node49.detachFromParent();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.FunctionType functionType87 = jSTypeRegistry1.createInterfaceType("Node tree inequality:\nTree1:\nPARAM_LIST\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: PARAM_LIST\n\n\nSubtree2: NUMBER 0.0\n", node86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectType5);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(jSTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(jSTypeIterable20);
        org.junit.Assert.assertNotNull(jSType25);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(objectType39);
        org.junit.Assert.assertNotNull(jSType40);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(jSTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(jSTypeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(nodeIterable82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(node86);
    }

    @Test
    public void test07480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07480");
        java.io.File file3 = new java.io.File(":", "hi!");
        boolean boolean6 = file3.setExecutable(false, false);
        java.net.URI uRI7 = file3.toURI();
        java.io.File file8 = new java.io.File(uRI7);
        com.google.javascript.jscomp.SourceFile.Builder builder9 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile13 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int15 = sourceFile13.getLineOfOffset((int) (short) 1);
        java.io.Reader reader16 = sourceFile13.getCodeReader();
        int int17 = reader16.read();
        com.google.javascript.jscomp.SourceFile sourceFile18 = builder9.buildFromReader("*global*", reader16);
        java.nio.charset.Charset charset19 = null;
        com.google.javascript.jscomp.SourceFile.Builder builder20 = builder9.withCharset(charset19);
        java.io.File file23 = new java.io.File(":", "hi!");
        boolean boolean26 = file23.setExecutable(true, false);
        long long27 = file23.lastModified();
        boolean boolean28 = file23.mkdir();
        com.google.javascript.jscomp.SourceFile sourceFile29 = builder9.buildFromFile(file23);
        com.google.javascript.jscomp.SourceFile.Builder builder31 = builder9.withOriginalPath("java.io.IOException: OFF");
        java.nio.charset.Charset charset32 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str33 = charset32.name();
        java.lang.String str34 = charset32.name();
        com.google.javascript.jscomp.SourceFile.Builder builder35 = builder9.withCharset(charset32);
        com.google.javascript.jscomp.SourceFile sourceFile36 = com.google.javascript.jscomp.SourceFile.fromFile(file8, charset32);
        com.google.javascript.jscomp.SourceFile sourceFile38 = com.google.javascript.jscomp.SourceFile.fromFile("hi!");
        java.lang.String str39 = sourceFile38.toString();
        boolean boolean40 = charset32.equals((java.lang.Object) str39);
        java.nio.charset.Charset charset42 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str43 = charset42.name();
        java.lang.String str44 = charset42.name();
        com.google.javascript.jscomp.JSSourceFile jSSourceFile45 = com.google.javascript.jscomp.JSSourceFile.fromFile("STRING PARAM_LIST 49: hi!", charset42);
        java.lang.String str46 = charset42.displayName();
        int int47 = charset32.compareTo(charset42);
        com.google.javascript.jscomp.SourceFile sourceFile48 = com.google.javascript.jscomp.SourceFile.fromFile("JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of optimization iterations: {0}", charset32);
        org.junit.Assert.assertEquals(file3.getParent(), ":");
        org.junit.Assert.assertEquals(file3.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(uRI7);
// flaky:         org.junit.Assert.assertEquals(file8.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file8.toString(), "/experiment/:/hi!");
        org.junit.Assert.assertNotNull(sourceFile13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(sourceFile18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertEquals(file23.getParent(), ":");
        org.junit.Assert.assertEquals(file23.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(sourceFile29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(charset32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "US-ASCII" + "'", str33, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "US-ASCII" + "'", str34, "US-ASCII");
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(sourceFile36);
        org.junit.Assert.assertNotNull(sourceFile38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charset42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "US-ASCII" + "'", str43, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "US-ASCII" + "'", str44, "US-ASCII");
        org.junit.Assert.assertNotNull(jSSourceFile45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "US-ASCII" + "'", str46, "US-ASCII");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(sourceFile48);
    }

    @Test
    public void test07481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07481");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        boolean boolean4 = compilerOptions0.flowSensitiveInlineVariables;
        compilerOptions0.setRemoveUnusedPrototypePropertiesInExterns(false);
        boolean boolean7 = compilerOptions0.removeUnusedClassProperties;
        compilerOptions0.inlineFunctions = true;
        com.google.javascript.jscomp.CompilerOptions.AliasTransformationHandler aliasTransformationHandler10 = compilerOptions0.getAliasTransformationHandler();
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel12 = compilerOptions11.checkRequires;
        compilerOptions11.setRewriteNewDateGoogNow(true);
        compilerOptions11.setSyntheticBlockStartMarker("OFF");
        compilerOptions11.setChainCalls(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions19 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions19.crossModuleMethodMotion = true;
        compilerOptions19.setProtectHiddenSideEffects(true);
        compilerOptions19.setInputDelimiter("PARAM_LIST\n");
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap26 = null;
        compilerOptions19.cssRenamingMap = cssRenamingMap26;
        com.google.javascript.jscomp.CompilerOptions compilerOptions28 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode29 = null;
        compilerOptions28.setTracerMode(tracerMode29);
        boolean boolean31 = compilerOptions28.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel32 = compilerOptions28.sourceMapDetailLevel;
        compilerOptions28.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet35 = compilerOptions28.stripNameSuffixes;
        strSet35.clear();
        com.google.javascript.jscomp.SourceFile sourceFile39 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int41 = sourceFile39.getLineOfOffset((int) (short) 1);
        java.lang.String str42 = sourceFile39.getName();
        java.lang.String str43 = sourceFile39.getName();
        java.lang.String str44 = sourceFile39.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput46 = new com.google.javascript.jscomp.CompilerInput(sourceFile39, true);
        com.google.javascript.jscomp.SourceAst sourceAst47 = compilerInput46.getAst();
        boolean boolean48 = strSet35.remove((java.lang.Object) sourceAst47);
        compilerOptions19.setExtraAnnotationNames(strSet35);
        compilerOptions11.setReplaceStringsReservedStrings(strSet35);
        compilerOptions11.setFoldConstants(true);
        java.lang.String str53 = compilerOptions11.aliasStringsBlacklist;
        com.google.javascript.jscomp.CompilerOptions compilerOptions54 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode55 = null;
        compilerOptions54.setTracerMode(tracerMode55);
        boolean boolean57 = compilerOptions54.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel58 = compilerOptions54.sourceMapDetailLevel;
        compilerOptions54.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions61 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions61.crossModuleMethodMotion = true;
        compilerOptions61.optimizeParameters = true;
        compilerOptions61.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel69 = compilerOptions61.checkGlobalNamesLevel;
        compilerOptions54.setReportMissingOverride(checkLevel69);
        java.util.Set<java.lang.String> strSet71 = compilerOptions54.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions72 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel73 = compilerOptions72.checkRequires;
        compilerOptions54.setReportMissingOverride(checkLevel73);
        compilerOptions54.setInlineProperties(false);
        compilerOptions54.setDefineToBooleanLiteral("/", false);
        compilerOptions54.removeUnusedPrototypeProperties = true;
        boolean boolean82 = compilerOptions54.prettyPrint;
        com.google.javascript.jscomp.CompilerOptions compilerOptions83 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode84 = null;
        compilerOptions83.setTracerMode(tracerMode84);
        compilerOptions83.setGeneratePseudoNames(false);
        compilerOptions83.setDefineToNumberLiteral("PARAM_LIST\n", (int) '/');
        java.lang.String str91 = compilerOptions83.syntheticBlockStartMarker;
        compilerOptions83.setRemoveAbstractMethods(false);
        com.google.javascript.jscomp.CheckLevel checkLevel94 = compilerOptions83.checkMissingGetCssNameLevel;
        compilerOptions54.aggressiveVarCheck = checkLevel94;
        compilerOptions11.setCheckGlobalThisLevel(checkLevel94);
        compilerOptions0.setBrokenClosureRequiresLevel(checkLevel94);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(aliasTransformationHandler10);
        org.junit.Assert.assertTrue("'" + checkLevel12 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel12.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(detailLevel32);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(sourceFile39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(sourceAst47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(detailLevel58);
        org.junit.Assert.assertTrue("'" + checkLevel69 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel69.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertTrue("'" + checkLevel73 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel73.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertTrue("'" + checkLevel94 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel94.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07482");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        compilerOptions0.inlineFunctions = true;
        compilerOptions0.setCommonJSModulePathPrefix(":");
        compilerOptions0.setCrossModuleCodeMotion(true);
        compilerOptions0.disableRuntimeTypeCheck();
        boolean boolean12 = compilerOptions0.removeUnusedLocalVars;
        boolean boolean13 = compilerOptions0.generateExports;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        compilerOptions14.optimizeParameters = true;
        compilerOptions14.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel22 = compilerOptions14.checkGlobalNamesLevel;
        com.google.javascript.jscomp.CompilerOptions compilerOptions23 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode24 = null;
        compilerOptions23.setTracerMode(tracerMode24);
        boolean boolean26 = compilerOptions23.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel27 = compilerOptions23.sourceMapDetailLevel;
        compilerOptions23.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet30 = compilerOptions23.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile32 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput34 = new com.google.javascript.jscomp.CompilerInput(sourceFile32, true);
        com.google.javascript.rhino.InputId inputId36 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput38 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput34, inputId36, true);
        java.lang.String str39 = compilerInput38.toString();
        boolean boolean40 = strSet30.contains((java.lang.Object) compilerInput38);
        java.lang.Object[] objArray41 = strSet30.toArray();
        compilerOptions14.setStripTypes(strSet30);
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy43 = compilerOptions14.propertyRenaming;
        compilerOptions0.propertyRenaming = propertyRenamingPolicy43;
        compilerOptions0.setTweakToDoubleLiteral("/experiment/:/OFF6512485966767396418", (double) 280490852352L);
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + checkLevel22 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel22.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(detailLevel27);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "*global*" + "'", str39, "*global*");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy43 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy43.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
    }

    @Test
    public void test07483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07483");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.Node node37 = node26.removeChildren();
        // The following exception was thrown during execution in test generation
        try {
            node37.removeProp(39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNull(node37);
    }

    @Test
    public void test07484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07484");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        compilerOptions0.exportTestFunctions = false;
        compilerOptions0.setNameReferenceReportPath("PARAM_LIST");
        com.google.common.collect.Multimap<com.google.javascript.jscomp.CustomPassExecutionTime, com.google.javascript.jscomp.CompilerPass> customPassExecutionTimeMultimap25 = null;
        compilerOptions0.setCustomPasses(customPassExecutionTimeMultimap25);
        compilerOptions0.setRemoveTryCatchFinally(true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
    }

    @Test
    public void test07485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07485");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        compilerOptions0.setFoldConstants(true);
        com.google.javascript.jscomp.CheckLevel checkLevel7 = compilerOptions0.checkRequires;
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions8.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode14 = null;
        compilerOptions8.setLanguageOut(languageMode14);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy16 = null;
        compilerOptions8.variableRenaming = variableRenamingPolicy16;
        boolean boolean18 = compilerOptions8.coalesceVariableNames;
        compilerOptions8.setOptimizeArgumentsArray(true);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode21 = com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT5_STRICT;
        compilerOptions8.setLanguageOut(languageMode21);
        com.google.javascript.jscomp.CompilerOptions compilerOptions23 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions23.crossModuleMethodMotion = true;
        compilerOptions23.setProtectHiddenSideEffects(true);
        boolean boolean28 = compilerOptions23.isExternExportsEnabled();
        boolean boolean29 = compilerOptions23.recordFunctionInformation;
        compilerOptions23.setInputDelimiter("FINEST");
        com.google.javascript.jscomp.CheckLevel checkLevel32 = compilerOptions23.checkRequires;
        compilerOptions8.setCheckUnreachableCode(checkLevel32);
        compilerOptions0.checkMissingGetCssNameLevel = checkLevel32;
        compilerOptions0.setInlineFunctions(false);
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel7 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel7.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + languageMode21 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT5_STRICT + "'", languageMode21.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT5_STRICT));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + checkLevel32 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel32.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test07486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07486");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        boolean boolean44 = node43.isIn();
        boolean boolean45 = node43.isVoid();
        node43.setOptionalArg(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions48 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode49 = null;
        compilerOptions48.setTracerMode(tracerMode49);
        boolean boolean51 = compilerOptions48.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel52 = compilerOptions48.sourceMapDetailLevel;
        compilerOptions48.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions55 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions55.crossModuleMethodMotion = true;
        compilerOptions55.optimizeParameters = true;
        compilerOptions55.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel63 = compilerOptions55.checkGlobalNamesLevel;
        compilerOptions48.setReportMissingOverride(checkLevel63);
        com.google.javascript.jscomp.DiagnosticType diagnosticType65 = com.google.javascript.jscomp.Compiler.MOTION_ITERATIONS_ERROR;
        java.lang.String[] strArray66 = null;
        com.google.javascript.jscomp.JSError jSError67 = com.google.javascript.jscomp.JSError.make("", node43, checkLevel63, diagnosticType65, strArray66);
        com.google.javascript.rhino.Node node68 = node33.srcref(node43);
        boolean boolean69 = node68.isDefaultCase();
        node68.setIsSyntheticBlock(true);
        java.lang.String str72 = node68.getSourceFileName();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(detailLevel52);
        org.junit.Assert.assertTrue("'" + checkLevel63 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel63.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(diagnosticType65);
        org.junit.Assert.assertNotNull(jSError67);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test07487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07487");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions6.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap10 = compilerOptions6.getTweakReplacements();
        boolean boolean11 = strMap10.isEmpty();
        strMap10.clear();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry14.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        boolean boolean19 = node18.isIn();
        boolean boolean20 = strMap10.containsValue((java.lang.Object) node18);
        boolean boolean21 = strMap4.containsKey((java.lang.Object) strMap10);
        boolean boolean22 = strMap10.isEmpty();
        com.google.javascript.jscomp.CompilerOptions compilerOptions23 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode24 = null;
        compilerOptions23.setTracerMode(tracerMode24);
        boolean boolean26 = compilerOptions23.coalesceVariableNames;
        boolean boolean27 = compilerOptions23.removeUnusedLocalVars;
        boolean boolean28 = compilerOptions23.lineBreak;
        boolean boolean29 = compilerOptions23.optimizeParameters;
        compilerOptions23.setColorizeErrorOutput(true);
        byte[] byteArray37 = new byte[] { (byte) 1, (byte) -1, (byte) 100, (byte) -1, (byte) 10 };
        compilerOptions23.inputPropertyMapSerialized = byteArray37;
        com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean43 = node42.isTry();
        java.lang.String str44 = node42.toString();
        boolean boolean45 = node42.isExprResult();
        com.google.javascript.rhino.Node node46 = strMap10.getOrDefault((java.lang.Object) compilerOptions23, node42);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode47 = compilerOptions23.getLanguageIn();
        com.google.javascript.jscomp.MessageBundle messageBundle48 = null;
        compilerOptions23.messageBundle = messageBundle48;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, -1, 100, -1, 10]");
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "STRING PARAM_LIST 49" + "'", str44, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + languageMode47 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode47.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
    }

    @Test
    public void test07488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07488");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.VISIBILITY;
        com.google.javascript.jscomp.DiagnosticGroups.CONSTANT_PROPERTY = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.INVALID_CASTS = diagnosticGroup0;
// flaky:         org.junit.Assert.assertNull(diagnosticGroup0);
    }

    @Test
    public void test07489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07489");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.skipAllCompilerPasses();
        compilerOptions8.resetWarningsGuard();
        compilerOptions8.setInlineLocalVariables(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions15 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode16 = null;
        compilerOptions15.setTracerMode(tracerMode16);
        boolean boolean18 = compilerOptions15.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel19 = compilerOptions15.sourceMapDetailLevel;
        compilerOptions15.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet22 = compilerOptions15.stripNameSuffixes;
        compilerOptions8.setReplaceStringsReservedStrings(strSet22);
        boolean boolean24 = strSet22.isEmpty();
        compilerOptions0.stripNamePrefixes = strSet22;
        compilerOptions0.setRemoveDeadCode(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions28 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions28.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions28.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode34 = null;
        compilerOptions28.setLanguageOut(languageMode34);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy36 = null;
        compilerOptions28.variableRenaming = variableRenamingPolicy36;
        com.google.javascript.jscomp.CheckLevel checkLevel38 = compilerOptions28.checkUnreachableCode;
        compilerOptions0.setCheckProvides(checkLevel38);
        java.lang.String str40 = compilerOptions0.syntheticBlockEndMarker;
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(detailLevel19);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + checkLevel38 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel38.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test07490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07490");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions6.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap10 = compilerOptions6.getTweakReplacements();
        boolean boolean11 = strMap10.isEmpty();
        strMap10.clear();
        java.io.File file15 = new java.io.File(":", "hi!");
        boolean boolean18 = file15.setExecutable(true, false);
        java.io.File file20 = new java.io.File(file15, "PARAM_LIST\n");
        java.io.File file21 = file20.getParentFile();
        boolean boolean22 = strMap10.equals((java.lang.Object) file20);
        strMap4.putAll(strMap10);
        java.util.logging.Level level24 = java.util.logging.Level.FINEST;
        java.lang.String str25 = level24.getName();
        com.google.javascript.jscomp.JSModule jSModule27 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler28 = new com.google.javascript.jscomp.Compiler();
        jSModule27.sortInputsByDeps(compiler28);
        com.google.javascript.jscomp.SourceFile.Builder builder30 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile34 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int36 = sourceFile34.getLineOfOffset((int) (short) 1);
        java.io.Reader reader37 = sourceFile34.getCodeReader();
        int int38 = reader37.read();
        com.google.javascript.jscomp.SourceFile sourceFile39 = builder30.buildFromReader("*global*", reader37);
        jSModule27.add(sourceFile39);
        boolean boolean41 = level24.equals((java.lang.Object) jSModule27);
        com.google.javascript.rhino.Node node42 = strMap4.remove((java.lang.Object) level24);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals(file15.getParent(), ":");
        org.junit.Assert.assertEquals(file15.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals(file20.getParent(), ":/hi!");
        org.junit.Assert.assertEquals(file20.toString(), ":/hi!/PARAM_LIST\n");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), ":");
        org.junit.Assert.assertEquals(file21.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(level24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "FINEST" + "'", str25, "FINEST");
        org.junit.Assert.assertNotNull(sourceFile34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(sourceFile39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(node42);
    }

    @Test
    public void test07491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07491");
        com.google.javascript.jscomp.SourceFile.Generator generator1 = null;
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromGenerator("PARAM_LIST8468507651125183373Unversioned directory", generator1);
        org.junit.Assert.assertNotNull(sourceFile2);
    }

    @Test
    public void test07492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07492");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.generatePseudoNames;
        java.util.Set<java.lang.String> strSet4 = compilerOptions0.stripTypes;
        compilerOptions0.setCollapseProperties(true);
        compilerOptions0.inlineLocalFunctions = false;
        compilerOptions0.setRemoveUnusedLocalVars(true);
        compilerOptions0.syntheticBlockEndMarker = "/experiment/:/OFF4758658444940475831";
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test07493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07493");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("/experiment/:");
        java.lang.String str2 = node1.getQualifiedName();
        com.google.javascript.rhino.ErrorReporter errorReporter4 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry5 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter4);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray6 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList7 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList7, jSTypeArray6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry5.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList7);
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray12 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList13 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13, jSTypeArray12);
        com.google.javascript.rhino.Node node15 = jSTypeRegistry11.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        node9.addChildrenToBack(node15);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList20 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20, jSTypeArray19);
        com.google.javascript.rhino.Node node22 = jSTypeRegistry18.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList20);
        boolean boolean23 = node22.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter24 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry25 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter24);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray26 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList27 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList27, jSTypeArray26);
        com.google.javascript.rhino.Node node29 = jSTypeRegistry25.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList27);
        boolean boolean30 = node29.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray33 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList34 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList34, jSTypeArray33);
        com.google.javascript.rhino.Node node36 = jSTypeRegistry32.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList34);
        com.google.javascript.rhino.Node node39 = new com.google.javascript.rhino.Node((int) (short) 0, node9, node22, node29, node36, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter41 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry42 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter41);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray43 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList44 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList44, jSTypeArray43);
        com.google.javascript.rhino.Node node46 = jSTypeRegistry42.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList44);
        com.google.javascript.rhino.ErrorReporter errorReporter47 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry48 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter47);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray49 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList50 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList50, jSTypeArray49);
        com.google.javascript.rhino.Node node52 = jSTypeRegistry48.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList50);
        node46.addChildrenToBack(node52);
        com.google.javascript.rhino.ErrorReporter errorReporter54 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter54);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.Node node59 = jSTypeRegistry55.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        boolean boolean60 = node59.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray63 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList64 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList64, jSTypeArray63);
        com.google.javascript.rhino.Node node66 = jSTypeRegistry62.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList64);
        boolean boolean67 = node66.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter68 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry69 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter68);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray70 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList71 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList71, jSTypeArray70);
        com.google.javascript.rhino.Node node73 = jSTypeRegistry69.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList71);
        com.google.javascript.rhino.Node node76 = new com.google.javascript.rhino.Node((int) (short) 0, node46, node59, node66, node73, 0, 49);
        com.google.javascript.rhino.Node node77 = node39.useSourceInfoFrom(node59);
        boolean boolean78 = node59.isExprResult();
        int int79 = node59.getLength();
        boolean boolean80 = node59.isOptionalArg();
        boolean boolean81 = node59.isNoSideEffectsCall();
        boolean boolean82 = node59.isAssignAdd();
        int int83 = node1.getIndexOfChild(node59);
        boolean boolean84 = node59.isSetterDef();
        boolean boolean85 = node59.isFromExterns();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(jSTypeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(jSTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(jSTypeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(jSTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(jSTypeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(jSTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(jSTypeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test07494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07494");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        boolean boolean75 = node56.hasOneChild();
        com.google.javascript.rhino.ErrorReporter errorReporter76 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry77 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter76);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray78 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList79 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList79, jSTypeArray78);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray81 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList82 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList82, jSTypeArray81);
        boolean boolean84 = jSTypeList79.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList82);
        com.google.javascript.rhino.Node node85 = jSTypeRegistry77.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList79);
        boolean boolean86 = node85.isVarArgs();
        com.google.javascript.rhino.Node node87 = node56.clonePropsFrom(node85);
        boolean boolean88 = node87.isObjectLit();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(jSTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(jSTypeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test07495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07495");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newNumber(0.0d, 10, (-1));
        com.google.javascript.rhino.Node node7 = new com.google.javascript.rhino.Node(2147483647, node4, 7, (int) (short) 0);
        boolean boolean8 = node4.isBreak();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test07496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07496");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec1 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("*global*");
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        com.google.javascript.rhino.Node node8 = jSTypeRegistry4.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray11 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList12 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList12, jSTypeArray11);
        com.google.javascript.rhino.Node node14 = jSTypeRegistry10.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList12);
        node8.addChildrenToBack(node14);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray18 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList19 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList19, jSTypeArray18);
        com.google.javascript.rhino.Node node21 = jSTypeRegistry17.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList19);
        boolean boolean22 = node21.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        boolean boolean29 = node28.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.Node node35 = jSTypeRegistry31.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        com.google.javascript.rhino.Node node38 = new com.google.javascript.rhino.Node((int) (short) 0, node8, node21, node28, node35, 0, 49);
        boolean boolean39 = node28.isInc();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable47 = jSTypeRegistry41.getTypesWithProperty("");
        com.google.javascript.rhino.jstype.JSType jSType48 = assertionFunctionSpec1.getAssertedType(node28, jSTypeRegistry41);
        com.google.javascript.rhino.Node node51 = com.google.javascript.rhino.Node.newString((int) (short) 10, ":/hi!");
        int int52 = node51.getLineno();
        boolean boolean53 = node51.isThrow();
        com.google.javascript.rhino.Node node54 = assertionFunctionSpec1.getAssertedParam(node51);
        node54.setQuotedString();
        com.google.javascript.rhino.Node node56 = node54.getNext();
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(jSTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(jSTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(jSTypeIterable47);
        org.junit.Assert.assertNull(jSType48);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNull(node56);
    }

    @Test
    public void test07497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07497");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        compilerOptions0.setFoldConstants(true);
        compilerOptions0.flowSensitiveInlineVariables = true;
        compilerOptions0.setTweakToStringLiteral("InputId: *global*", "hi!");
        compilerOptions0.collapseAnonymousFunctions = false;
        boolean boolean14 = compilerOptions0.inlineGetters;
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test07498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07498");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.crossModuleCodeMotion = true;
        compilerOptions0.checkSymbols = true;
        compilerOptions0.setExtractPrototypeMemberDeclarations(true);
        boolean boolean8 = compilerOptions0.checkSuspiciousCode;
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str10 = compilerOptions9.syntheticBlockStartMarker;
        compilerOptions9.labelRenaming = true;
        boolean boolean13 = compilerOptions9.inlineLocalFunctions;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        compilerOptions14.skipAllCompilerPasses();
        boolean boolean18 = compilerOptions14.flowSensitiveInlineVariables;
        java.lang.String[] strArray28 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        compilerOptions14.stripTypes = strSet29;
        compilerOptions9.setStripNameSuffixes((java.util.Set<java.lang.String>) strSet29);
        compilerOptions0.setExtraAnnotationNames((java.util.Set<java.lang.String>) strSet29);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        compilerOptions0.setTweakReplacements(strMap34);
        compilerOptions0.setInferTypes(true);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode38 = com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY;
        compilerOptions0.setTracer(tracerMode38);
        compilerOptions0.setFlowSensitiveInlineVariables(true);
        boolean boolean42 = compilerOptions0.assumeClosuresOnlyCaptureReferences();
        com.google.javascript.jscomp.SourceMap.Format format43 = compilerOptions0.sourceMapFormat;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + tracerMode38 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY + "'", tracerMode38.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(format43);
    }

    @Test
    public void test07499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07499");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setInlineLocalFunctions(false);
        compilerOptions0.moveFunctionDeclarations = true;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageIn();
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.setInlineLocalFunctions(false);
        compilerOptions6.moveFunctionDeclarations = true;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode11 = compilerOptions6.getLanguageIn();
        compilerOptions0.setLanguageIn(languageMode11);
        compilerOptions0.setPropertyAffinity(true);
        compilerOptions0.setInlineVariables(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean18 = compilerOptions17.moveFunctionDeclarations;
        compilerOptions17.setReportPath("java.io.IOException: ");
        boolean boolean21 = compilerOptions17.inlineConstantVars;
        boolean boolean22 = compilerOptions17.deadAssignmentElimination;
        com.google.javascript.jscomp.CompilerOptions compilerOptions23 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode24 = null;
        compilerOptions23.setTracerMode(tracerMode24);
        boolean boolean26 = compilerOptions23.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel27 = compilerOptions23.sourceMapDetailLevel;
        compilerOptions23.setColorizeErrorOutput(true);
        compilerOptions23.generatePseudoNames = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy32 = com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED;
        compilerOptions23.setVariableRenaming(variableRenamingPolicy32);
        com.google.javascript.jscomp.ErrorFormat errorFormat34 = compilerOptions23.errorFormat;
        compilerOptions17.setErrorFormat(errorFormat34);
        compilerOptions0.errorFormat = errorFormat34;
        java.util.Set<java.lang.String> strSet37 = compilerOptions0.stripNameSuffixes;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions40 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions40.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions40.setTweakToDoubleLiteral("", (double) (short) 1);
        compilerOptions40.setCrossModuleCodeMotion(false);
        compilerOptions40.inputDelimiter = "STRING PARAM_LIST 49";
        compilerOptions40.setPropertyAffinity(true);
        boolean boolean52 = compilerOptions40.crossModuleCodeMotion;
        com.google.javascript.jscomp.CompilerOptions compilerOptions53 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode54 = null;
        compilerOptions53.setTracerMode(tracerMode54);
        boolean boolean56 = compilerOptions53.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel57 = compilerOptions53.sourceMapDetailLevel;
        compilerOptions53.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions60 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions60.crossModuleMethodMotion = true;
        compilerOptions60.optimizeParameters = true;
        compilerOptions60.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel68 = compilerOptions60.checkGlobalNamesLevel;
        compilerOptions53.setReportMissingOverride(checkLevel68);
        java.util.Set<java.lang.String> strSet70 = compilerOptions53.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions71 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel72 = compilerOptions71.checkRequires;
        compilerOptions53.setReportMissingOverride(checkLevel72);
        java.util.Set<java.lang.String> strSet74 = compilerOptions53.stripNameSuffixes;
        compilerOptions53.setOptimizeReturns(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions77 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions77.crossModuleMethodMotion = true;
        compilerOptions77.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy82 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions83 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions83.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy86 = compilerOptions83.propertyRenaming;
        compilerOptions77.setRenamingPolicy(variableRenamingPolicy82, propertyRenamingPolicy86);
        compilerOptions77.setTransformAMDToCJSModules(true);
        boolean boolean90 = compilerOptions77.exportTestFunctions;
        boolean boolean91 = compilerOptions77.exportTestFunctions;
        boolean boolean92 = compilerOptions77.foldConstants;
        byte[] byteArray93 = new byte[] {};
        compilerOptions77.setInputVariableMapSerialized(byteArray93);
        compilerOptions53.inputPropertyMapSerialized = byteArray93;
        compilerOptions40.inputVariableMapSerialized = byteArray93;
        compilerOptions0.setInputVariableMapSerialized(byteArray93);
        org.junit.Assert.assertTrue("'" + languageMode5 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode5.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertTrue("'" + languageMode11 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode11.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(detailLevel27);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy32 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED + "'", variableRenamingPolicy32.equals(com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED));
        org.junit.Assert.assertNotNull(errorFormat34);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(detailLevel57);
        org.junit.Assert.assertTrue("'" + checkLevel68 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel68.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertTrue("'" + checkLevel72 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel72.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy86 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy86.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[]");
    }

    @Test
    public void test07500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07500");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        strMap4.clear();
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        boolean boolean13 = node12.isIn();
        boolean boolean14 = strMap4.containsValue((java.lang.Object) node12);
        int int15 = strMap4.size();
        java.util.Set<java.lang.String> strSet16 = strMap4.keySet();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strSet16);
    }
}
