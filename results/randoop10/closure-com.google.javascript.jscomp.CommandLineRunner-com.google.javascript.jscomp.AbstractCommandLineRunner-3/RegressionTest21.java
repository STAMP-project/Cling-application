import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest21 {

    public static boolean debug = false;

    @Test
    public void test10501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10501");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        boolean boolean7 = node6.isIn();
        boolean boolean8 = node6.isVoid();
        node6.setOptionalArg(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode12 = null;
        compilerOptions11.setTracerMode(tracerMode12);
        boolean boolean14 = compilerOptions11.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel15 = compilerOptions11.sourceMapDetailLevel;
        compilerOptions11.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions18.crossModuleMethodMotion = true;
        compilerOptions18.optimizeParameters = true;
        compilerOptions18.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel26 = compilerOptions18.checkGlobalNamesLevel;
        compilerOptions11.setReportMissingOverride(checkLevel26);
        com.google.javascript.jscomp.DiagnosticType diagnosticType28 = com.google.javascript.jscomp.Compiler.MOTION_ITERATIONS_ERROR;
        java.lang.String[] strArray29 = null;
        com.google.javascript.jscomp.JSError jSError30 = com.google.javascript.jscomp.JSError.make("", node6, checkLevel26, diagnosticType28, strArray29);
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions31.crossModuleMethodMotion = true;
        compilerOptions31.skipAllCompilerPasses();
        compilerOptions31.resetWarningsGuard();
        compilerOptions31.setInlineLocalVariables(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions38 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode39 = null;
        compilerOptions38.setTracerMode(tracerMode39);
        boolean boolean41 = compilerOptions38.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel42 = compilerOptions38.sourceMapDetailLevel;
        compilerOptions38.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet45 = compilerOptions38.stripNameSuffixes;
        compilerOptions31.setReplaceStringsReservedStrings(strSet45);
        boolean boolean47 = strSet45.isEmpty();
        node6.setDirectives(strSet45);
        com.google.javascript.jscomp.CompilerOptions compilerOptions49 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions49.crossModuleMethodMotion = true;
        compilerOptions49.skipAllCompilerPasses();
        compilerOptions49.resetWarningsGuard();
        compilerOptions49.setInlineLocalVariables(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions56 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode57 = null;
        compilerOptions56.setTracerMode(tracerMode57);
        boolean boolean59 = compilerOptions56.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel60 = compilerOptions56.sourceMapDetailLevel;
        compilerOptions56.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet63 = compilerOptions56.stripNameSuffixes;
        compilerOptions49.setReplaceStringsReservedStrings(strSet63);
        boolean boolean65 = strSet45.remove((java.lang.Object) compilerOptions49);
        com.google.javascript.jscomp.CompilerOptions compilerOptions66 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions66.setInlineLocalFunctions(false);
        compilerOptions66.moveFunctionDeclarations = true;
        compilerOptions66.setInlineLocalFunctions(false);
        boolean boolean73 = strSet45.contains((java.lang.Object) compilerOptions66);
        compilerOptions66.setRuntimeTypeCheckLogFunction("// Input %num%");
        compilerOptions66.setDebugFunctionSideEffectsPath("/tmp/hi!7336816644001498209*global*.  at *global* line (unknown line) : (unknown column)");
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(detailLevel15);
        org.junit.Assert.assertTrue("'" + checkLevel26 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel26.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(diagnosticType28);
        org.junit.Assert.assertNotNull(jSError30);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(detailLevel42);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(detailLevel60);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test10502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10502");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.generatePseudoNames = true;
        compilerOptions0.setCheckControlStructures(false);
        com.google.javascript.jscomp.AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy11 = com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF;
        compilerOptions0.anonymousFunctionNaming = anonymousFunctionNamingPolicy11;
        com.google.javascript.jscomp.SourceMap.Format format13 = compilerOptions0.sourceMapFormat;
        compilerOptions0.enableExternExports(false);
        compilerOptions0.setCollapseVariableDeclarations(false);
        compilerOptions0.ambiguateProperties = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + anonymousFunctionNamingPolicy11 + "' != '" + com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF + "'", anonymousFunctionNamingPolicy11.equals(com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format13);
    }

    @Test
    public void test10503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10503");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream6 = jSTypeList3.parallelStream();
        java.lang.Object obj7 = null;
        int int8 = jSTypeList3.lastIndexOf(obj7);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream9 = jSTypeList3.stream();
        java.util.ListIterator<com.google.javascript.rhino.jstype.JSType> jSTypeItor10 = jSTypeList3.listIterator();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeStream6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(jSTypeStream9);
        org.junit.Assert.assertNotNull(jSTypeItor10);
    }

    @Test
    public void test10504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10504");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        strMap4.clear();
        int int7 = strMap4.size();
        com.google.javascript.jscomp.SourceFile sourceFile10 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int12 = sourceFile10.getLineOfOffset((int) (short) 1);
        java.lang.String str13 = sourceFile10.getName();
        com.google.javascript.jscomp.JsAst jsAst14 = new com.google.javascript.jscomp.JsAst(sourceFile10);
        jsAst14.clearAst();
        com.google.javascript.rhino.InputId inputId16 = jsAst14.getInputId();
        com.google.javascript.rhino.ErrorReporter errorReporter18 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter18);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray20 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList21 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList21, jSTypeArray20);
        com.google.javascript.rhino.Node node23 = jSTypeRegistry19.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList21);
        com.google.javascript.rhino.ErrorReporter errorReporter24 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry25 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter24);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray26 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList27 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList27, jSTypeArray26);
        com.google.javascript.rhino.Node node29 = jSTypeRegistry25.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList27);
        node23.addChildrenToBack(node29);
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray33 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList34 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList34, jSTypeArray33);
        com.google.javascript.rhino.Node node36 = jSTypeRegistry32.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList34);
        boolean boolean37 = node36.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        boolean boolean44 = node43.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        com.google.javascript.rhino.Node node53 = new com.google.javascript.rhino.Node((int) (short) 0, node23, node36, node43, node50, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter55 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry56 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter55);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray57 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList58 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList58, jSTypeArray57);
        com.google.javascript.rhino.Node node60 = jSTypeRegistry56.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList58);
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray63 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList64 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList64, jSTypeArray63);
        com.google.javascript.rhino.Node node66 = jSTypeRegistry62.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList64);
        node60.addChildrenToBack(node66);
        com.google.javascript.rhino.ErrorReporter errorReporter68 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry69 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter68);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray70 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList71 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList71, jSTypeArray70);
        com.google.javascript.rhino.Node node73 = jSTypeRegistry69.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList71);
        boolean boolean74 = node73.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter75 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry76 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter75);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray77 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList78 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList78, jSTypeArray77);
        com.google.javascript.rhino.Node node80 = jSTypeRegistry76.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList78);
        boolean boolean81 = node80.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter82 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry83 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter82);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray84 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList85 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList85, jSTypeArray84);
        com.google.javascript.rhino.Node node87 = jSTypeRegistry83.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList85);
        com.google.javascript.rhino.Node node90 = new com.google.javascript.rhino.Node((int) (short) 0, node60, node73, node80, node87, 0, 49);
        com.google.javascript.rhino.Node node91 = node53.useSourceInfoFrom(node73);
        boolean boolean92 = node73.isExprResult();
        int int93 = node73.getLength();
        boolean boolean94 = node73.isVarArgs();
        boolean boolean95 = node73.isFunction();
        com.google.javascript.rhino.Node node96 = strMap4.getOrDefault((java.lang.Object) jsAst14, node73);
        com.google.javascript.jscomp.CompilerInput compilerInput98 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) jsAst14, false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(sourceFile10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(inputId16);
        org.junit.Assert.assertNotNull(jSTypeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(jSTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(jSTypeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSTypeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(jSTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertNotNull(jSTypeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(jSTypeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(jSTypeArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertNotNull(node91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(node96);
    }

    @Test
    public void test10505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10505");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int4 = sourceFile2.getLineOfOffset((int) (short) 1);
        java.lang.String str5 = sourceFile2.getName();
        com.google.javascript.jscomp.JsAst jsAst6 = new com.google.javascript.jscomp.JsAst(sourceFile2);
        jsAst6.clearAst();
        com.google.javascript.jscomp.CompilerInput compilerInput10 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) jsAst6, "*global*", false);
        com.google.javascript.rhino.InputId inputId11 = compilerInput10.getInputId();
        com.google.javascript.jscomp.CompilerInput compilerInput13 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput10, false);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = compilerInput10.getLineOffset((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Expected line number between 1 and 1?Actual: 100");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(inputId11);
    }

    @Test
    public void test10506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10506");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        byte[] byteArray32 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 1 };
        compilerOptions0.inputVariableMapSerialized = byteArray32;
        compilerOptions0.setIgnoreCajaProperties(true);
        compilerOptions0.setNameReferenceReportPath("DiagnosticGroup<java.io.IOException: OFF>");
        compilerOptions0.setDefineToStringLiteral("STRING PARAM_LIST 49", "goog.exportProperty");
        com.google.javascript.jscomp.CompilerOptions compilerOptions41 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions41.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions41.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode47 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions41.setTracer(tracerMode47);
        compilerOptions41.setSyntheticBlockStartMarker("");
        boolean boolean51 = compilerOptions41.computeFunctionSideEffects;
        com.google.javascript.jscomp.CompilerOptions compilerOptions52 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel53 = compilerOptions52.checkRequires;
        com.google.javascript.jscomp.CompilerOptions compilerOptions54 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode55 = null;
        compilerOptions54.setTracerMode(tracerMode55);
        boolean boolean57 = compilerOptions54.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel58 = compilerOptions54.sourceMapDetailLevel;
        compilerOptions54.setColorizeErrorOutput(true);
        compilerOptions54.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions63 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions63.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy66 = compilerOptions63.propertyRenaming;
        compilerOptions54.propertyRenaming = propertyRenamingPolicy66;
        com.google.javascript.jscomp.CheckLevel checkLevel68 = compilerOptions54.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel69 = compilerOptions54.checkRequires;
        compilerOptions52.setCheckRequires(checkLevel69);
        compilerOptions41.setCheckGlobalThisLevel(checkLevel69);
        compilerOptions0.setAggressiveVarCheck(checkLevel69);
        boolean boolean73 = compilerOptions0.checkTypes;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 1, 10, 1]");
        org.junit.Assert.assertTrue("'" + tracerMode47 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode47.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + checkLevel53 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel53.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(detailLevel58);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy66 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy66.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel68 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel68.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel69 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel69.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test10507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10507");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setInlineLocalFunctions(false);
        java.util.Set<java.lang.String> strSet3 = compilerOptions0.stripNameSuffixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions4 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions4.crossModuleMethodMotion = true;
        compilerOptions4.optimizeParameters = true;
        compilerOptions4.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel12 = compilerOptions4.checkGlobalNamesLevel;
        compilerOptions0.checkRequires = checkLevel12;
        compilerOptions0.setDefineToDoubleLiteral("PARAM_LIST\n    PARAM_LIST\n", (double) 280489246720L);
        compilerOptions0.setOptimizeParameters(false);
        com.google.javascript.jscomp.CheckLevel checkLevel19 = compilerOptions0.checkUnreachableCode;
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + checkLevel12 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel12.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel19 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel19.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10508");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        compilerOptions0.setDefineToBooleanLiteral("", true);
        boolean boolean12 = compilerOptions0.recordFunctionInformation;
        compilerOptions0.setRenamePrefix(":");
        compilerOptions0.setLooseTypes(false);
        boolean boolean17 = compilerOptions0.crossModuleMethodMotion;
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test10509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10509");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.DUPLICATE_VARS;
        com.google.javascript.jscomp.DiagnosticGroups.GLOBAL_THIS = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.EXTERNS_VALIDATION = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.ES5_STRICT = diagnosticGroup0;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = diagnosticGroup0.toString();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNull(diagnosticGroup0);
    }

    @Test
    public void test10510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10510");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageOut();
        compilerOptions0.setFoldConstants(true);
        boolean boolean8 = compilerOptions0.generatePseudoNames;
        java.lang.String str9 = compilerOptions0.aliasStringsBlacklist;
        compilerOptions0.setCheckSuspiciousCode(false);
        compilerOptions0.setCheckSuspiciousCode(false);
        compilerOptions0.setCheckTypes(true);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList20 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20, jSTypeArray19);
        com.google.javascript.rhino.Node node22 = jSTypeRegistry18.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList20);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        node22.addChildrenToBack(node28);
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.Node node35 = jSTypeRegistry31.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        boolean boolean36 = node35.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        boolean boolean43 = node42.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        com.google.javascript.rhino.Node node52 = new com.google.javascript.rhino.Node((int) (short) 0, node22, node35, node42, node49, 0, 49);
        boolean boolean53 = node22.isDo();
        boolean boolean54 = node22.isWhile();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable55 = node22.children();
        java.lang.String[] strArray62 = new java.lang.String[] { "OFF", "PARAM_LIST", "*global*", ":", "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet63 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet63, strArray62);
        node22.setDirectives((java.util.Set<java.lang.String>) strSet63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray69 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList70 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70, jSTypeArray69);
        boolean boolean72 = jSTypeList67.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray73 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList74 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList74, jSTypeArray73);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray76 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList77 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList77, jSTypeArray76);
        boolean boolean79 = jSTypeList74.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList77);
        boolean boolean80 = jSTypeList67.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList77);
        boolean boolean81 = strSet63.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList77);
        java.lang.String[] strArray87 = new java.lang.String[] { "*global*", "Unversioned directory", "STRING PARAM_LIST 49", "java.io.IOException: ", "*global*.  at *global* line (unknown line) : (unknown column)" };
        java.lang.Comparable<java.lang.String>[] strComparableArray88 = strSet63.toArray((java.lang.Comparable<java.lang.String>[]) strArray87);
        compilerOptions0.setReplaceStringsReservedStrings((java.util.Set<java.lang.String>) strSet63);
        int int90 = strSet63.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(languageMode5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(nodeIterable55);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(jSTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(jSTypeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(jSTypeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strComparableArray88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
    }

    @Test
    public void test10511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10511");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("FINEST");
        stats1.gzSize = 300;
        int int4 = stats1.gzDiff;
        stats1.size = 31;
        int int7 = stats1.changes;
        stats1.runs = 35;
        stats1.runtime = 280490864640L;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test10512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10512");
        java.io.File file1 = new java.io.File(":");
        java.io.File file3 = new java.io.File(file1, "FINEST");
        boolean boolean4 = file1.setReadOnly();
        java.io.File file7 = new java.io.File(":", "hi!");
        boolean boolean10 = file7.setExecutable(true, false);
        boolean boolean11 = file1.renameTo(file7);
        java.io.File file14 = new java.io.File(":", "hi!");
        boolean boolean17 = file14.setExecutable(true, false);
        java.io.File file19 = new java.io.File(file14, "PARAM_LIST\n");
        java.io.File file20 = file19.getParentFile();
        boolean boolean21 = false; // flaky: file20.createNewFile();
        java.io.File file22 = file20.getAbsoluteFile();
        long long23 = file20.lastModified();
        java.nio.file.Path path24 = file20.toPath();
        boolean boolean25 = file7.renameTo(file20);
        long long26 = file7.length();
        org.junit.Assert.assertNull("file1.getParent() == null", file1.getParent());
        org.junit.Assert.assertEquals(file1.toString(), ":");
        org.junit.Assert.assertEquals(file3.getParent(), ":");
        org.junit.Assert.assertEquals(file3.toString(), ":/FINEST");
// flaky:         org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals(file7.getParent(), ":");
        org.junit.Assert.assertEquals(file7.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals(file14.getParent(), ":");
        org.junit.Assert.assertEquals(file14.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals(file19.getParent(), ":/hi!");
        org.junit.Assert.assertEquals(file19.toString(), ":/hi!/PARAM_LIST\n");
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), ":");
        org.junit.Assert.assertEquals(file20.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(file22);
// flaky:         org.junit.Assert.assertEquals(file22.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file22.toString(), "/experiment/:/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 280487309000L + "'", long23 == 280487309000L);
        org.junit.Assert.assertNotNull(path24);
// flaky:         org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 4096L + "'", long26 == 4096L);
    }

    @Test
    public void test10513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10513");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str1 = compilerOptions0.syntheticBlockStartMarker;
        compilerOptions0.labelRenaming = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions4 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions4.crossModuleMethodMotion = true;
        compilerOptions4.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        compilerOptions9.skipAllCompilerPasses();
        compilerOptions9.resetWarningsGuard();
        java.lang.String str14 = compilerOptions9.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy15 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy16 = null;
        compilerOptions9.setRenamingPolicy(variableRenamingPolicy15, propertyRenamingPolicy16);
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions18.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy21 = compilerOptions18.propertyRenaming;
        compilerOptions4.setRenamingPolicy(variableRenamingPolicy15, propertyRenamingPolicy21);
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy23 = com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC;
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy15, propertyRenamingPolicy23);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions0.checkRequires;
        compilerOptions0.setInlineLocalFunctions(true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy15 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy15.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy21 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy21.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy23 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC + "'", propertyRenamingPolicy23.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC));
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10514");
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray4 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList5 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList5, jSTypeArray4);
        com.google.javascript.rhino.Node node7 = jSTypeRegistry3.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList5);
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.Node node13 = jSTypeRegistry9.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList11);
        node7.addChildrenToBack(node13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray17 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList18 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList18, jSTypeArray17);
        com.google.javascript.rhino.Node node20 = jSTypeRegistry16.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList18);
        boolean boolean21 = node20.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.Node node27 = jSTypeRegistry23.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = node27.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        com.google.javascript.rhino.Node node34 = jSTypeRegistry30.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        com.google.javascript.rhino.Node node37 = new com.google.javascript.rhino.Node((int) (short) 0, node7, node20, node27, node34, 0, 49);
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node40 = node37.useSourceInfoIfMissingFrom(node39);
        com.google.javascript.rhino.InputId inputId41 = node40.getInputId();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry43 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray44 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList45 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList45, jSTypeArray44);
        com.google.javascript.rhino.Node node47 = jSTypeRegistry43.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList45);
        boolean boolean48 = node47.isIn();
        boolean boolean49 = node47.isGetElem();
        com.google.javascript.rhino.Node node53 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        java.lang.String str54 = node53.getQualifiedName();
        com.google.javascript.rhino.Node node55 = node53.getLastChild();
        com.google.javascript.rhino.Node node56 = node53.getLastSibling();
        boolean boolean57 = node56.isFromExterns();
        com.google.javascript.rhino.Node node60 = new com.google.javascript.rhino.Node(9, node40, node47, node56, 300, 11);
        boolean boolean61 = node40.isThrow();
        boolean boolean62 = node40.isObjectLit();
        org.junit.Assert.assertNotNull(jSTypeArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(jSTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNull(inputId41);
        org.junit.Assert.assertNotNull(jSTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test10515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10515");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("Unversioned directory");
        stats1.gzDiff = 38;
        stats1.changes = 192512;
    }

    @Test
    public void test10516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10516");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("FINEST");
        stats1.gzSize = 300;
        int int4 = stats1.gzDiff;
        stats1.gzDiff = 4095;
        java.lang.String str7 = stats1.pass;
        stats1.diff = 400;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "FINEST" + "'", str7, "FINEST");
    }

    @Test
    public void test10517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10517");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        compilerOptions0.prettyPrint = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.crossModuleMethodMotion = true;
        compilerOptions32.optimizeParameters = true;
        compilerOptions32.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel40 = compilerOptions32.checkGlobalNamesLevel;
        compilerOptions0.checkGlobalNamesLevel = checkLevel40;
        compilerOptions0.checkSymbols = false;
        com.google.javascript.jscomp.CodingConvention codingConvention44 = compilerOptions0.getCodingConvention();
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap45 = compilerOptions0.getTweakReplacements();
        boolean boolean46 = strMap45.isEmpty();
        java.util.Collection<com.google.javascript.rhino.Node> nodeCollection47 = strMap45.values();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel40 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel40.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(codingConvention44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(nodeCollection47);
    }

    @Test
    public void test10518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10518");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable7 = jSTypeRegistry1.getTypesWithProperty("");
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray13 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList14 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14, jSTypeArray13);
        boolean boolean16 = jSTypeList11.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14);
        com.google.javascript.rhino.Node node17 = jSTypeRegistry9.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList11);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable19 = jSTypeRegistry9.getTypesWithProperty(":");
        com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode resolveMode20 = com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode.IMMEDIATE;
        jSTypeRegistry9.setResolveMode(resolveMode20);
        jSTypeRegistry1.setResolveMode(resolveMode20);
        com.google.javascript.rhino.jstype.ObjectType objectType23 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter24 = jSTypeRegistry1.getErrorReporter();
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable26 = jSTypeRegistry1.getEachReferenceTypeWithProperty("/tmp/PARAM_LIST1732384991772173346Unversioned directory");
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeIterable7);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(jSTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(jSTypeIterable19);
        org.junit.Assert.assertTrue("'" + resolveMode20 + "' != '" + com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode.IMMEDIATE + "'", resolveMode20.equals(com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode.IMMEDIATE));
        org.junit.Assert.assertNotNull(objectType23);
        org.junit.Assert.assertNull(errorReporter24);
        org.junit.Assert.assertNotNull(objectTypeIterable26);
    }

    @Test
    public void test10519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10519");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        compilerOptions7.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions7.checkGlobalNamesLevel;
        compilerOptions0.setReportMissingOverride(checkLevel15);
        java.util.Set<java.lang.String> strSet17 = compilerOptions0.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel19 = compilerOptions18.checkRequires;
        compilerOptions0.setReportMissingOverride(checkLevel19);
        compilerOptions0.setGatherCssNames(true);
        compilerOptions0.setLineBreak(false);
        boolean boolean25 = compilerOptions0.flowSensitiveInlineVariables;
        compilerOptions0.setSyntheticBlockStartMarker("/experiment/:");
        compilerOptions0.setSmartNameRemoval(true);
        compilerOptions0.removeUnusedClassProperties = true;
        java.lang.String str32 = compilerOptions0.checkMissingGetCssNameBlacklist;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + checkLevel19 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel19.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test10520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10520");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray12 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList13 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13, jSTypeArray12);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        boolean boolean18 = jSTypeList13.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry11.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        com.google.javascript.rhino.ErrorReporter errorReporter20 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter20);
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.Node node27 = jSTypeRegistry23.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.jstype.JSType jSType38 = jSTypeRegistry29.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.Node node44 = jSTypeRegistry40.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        com.google.javascript.rhino.jstype.JSType jSType49 = jSTypeRegistry40.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray50 = new com.google.javascript.rhino.jstype.JSType[] { jSType49 };
        com.google.javascript.rhino.jstype.FunctionType functionType51 = jSTypeRegistry23.createConstructorTypeWithVarArgs(jSType38, jSTypeArray50);
        boolean boolean53 = jSTypeRegistry21.canPropertyBeDefined(jSType38, "");
        com.google.javascript.rhino.ErrorReporter errorReporter54 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter54);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.Node node59 = jSTypeRegistry55.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        com.google.javascript.rhino.ErrorReporter errorReporter60 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter60);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray62 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList63 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63, jSTypeArray62);
        com.google.javascript.rhino.Node node65 = jSTypeRegistry61.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        com.google.javascript.rhino.jstype.JSType jSType70 = jSTypeRegistry61.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter71 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry72 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter71);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray73 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList74 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList74, jSTypeArray73);
        com.google.javascript.rhino.Node node76 = jSTypeRegistry72.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList74);
        com.google.javascript.rhino.jstype.JSType jSType81 = jSTypeRegistry72.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray82 = new com.google.javascript.rhino.jstype.JSType[] { jSType81 };
        com.google.javascript.rhino.jstype.FunctionType functionType83 = jSTypeRegistry55.createConstructorTypeWithVarArgs(jSType70, jSTypeArray82);
        com.google.javascript.rhino.jstype.FunctionType functionType84 = jSTypeRegistry11.createFunctionTypeWithVarArgs(jSType38, jSTypeArray82);
        com.google.javascript.rhino.Node node85 = jSTypeRegistry1.createParameters(jSTypeArray82);
        boolean boolean86 = node85.isNumber();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(jSType49);
        org.junit.Assert.assertNotNull(jSTypeArray50);
        org.junit.Assert.assertNotNull(functionType51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(jSTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNotNull(jSType70);
        org.junit.Assert.assertNotNull(jSTypeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNotNull(jSType81);
        org.junit.Assert.assertNotNull(jSTypeArray82);
        org.junit.Assert.assertNotNull(functionType83);
        org.junit.Assert.assertNotNull(functionType84);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test10521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10521");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.crossModuleCodeMotion = true;
        compilerOptions0.checkSymbols = true;
        compilerOptions0.setExtractPrototypeMemberDeclarations(true);
        boolean boolean8 = compilerOptions0.removeUnusedVars;
        boolean boolean9 = compilerOptions0.markAsCompiled;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test10522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10522");
        java.io.PrintStream printStream1 = new java.io.PrintStream("JSC_OPTIMIZE_LOOP_ERROR");
        printStream1.println(800);
        printStream1.println();
        java.io.PrintStream printStream6 = printStream1.append(':');
        java.io.PrintStream printStream10 = printStream6.append((java.lang.CharSequence) "/tmp/hi!3190730483535265188*global*.  at *global* line (unknown line) : (unknown column)", 1, 15);
        org.junit.Assert.assertNotNull(printStream6);
        org.junit.Assert.assertNotNull(printStream10);
    }

    @Test
    public void test10523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10523");
        com.google.javascript.jscomp.SourceFile.Builder builder0 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile4 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int6 = sourceFile4.getLineOfOffset((int) (short) 1);
        java.io.Reader reader7 = sourceFile4.getCodeReader();
        int int8 = reader7.read();
        com.google.javascript.jscomp.SourceFile sourceFile9 = builder0.buildFromReader("*global*", reader7);
        java.nio.charset.Charset charset10 = null;
        com.google.javascript.jscomp.SourceFile.Builder builder11 = builder0.withCharset(charset10);
        java.io.File file14 = new java.io.File(":", "hi!");
        boolean boolean17 = file14.setExecutable(true, false);
        long long18 = file14.lastModified();
        boolean boolean19 = file14.mkdir();
        com.google.javascript.jscomp.SourceFile sourceFile20 = builder0.buildFromFile(file14);
        com.google.javascript.jscomp.SourceFile.Builder builder22 = builder0.withOriginalPath("java.io.IOException: OFF");
        java.nio.charset.Charset charset23 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str24 = charset23.name();
        java.lang.String str25 = charset23.name();
        com.google.javascript.jscomp.SourceFile.Builder builder26 = builder0.withCharset(charset23);
        com.google.javascript.jscomp.SourceFile sourceFile29 = builder0.buildFromCode("BITXOR :/hi!", "DiagnosticGroup<>");
        com.google.javascript.jscomp.SourceFile.Builder builder31 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile35 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int37 = sourceFile35.getLineOfOffset((int) (short) 1);
        java.io.Reader reader38 = sourceFile35.getCodeReader();
        int int39 = reader38.read();
        com.google.javascript.jscomp.SourceFile sourceFile40 = builder31.buildFromReader("*global*", reader38);
        boolean boolean41 = reader38.markSupported();
        reader38.reset();
        com.google.javascript.jscomp.SourceFile sourceFile43 = builder0.buildFromReader("java.io.IOException: OFF", reader38);
        java.io.PrintStream printStream45 = new java.io.PrintStream("goog.abstractMethod");
        java.io.PrintStream printStream47 = printStream45.append((java.lang.CharSequence) "/");
        java.io.PrintStream printStream49 = printStream45.append((java.lang.CharSequence) ":/hi!");
        printStream45.print(' ');
        com.google.javascript.jscomp.SourceFile sourceFile54 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int56 = sourceFile54.getLineOfOffset((int) (short) 1);
        int int58 = sourceFile54.getLineOfOffset(100);
        java.lang.String str59 = sourceFile54.getName();
        java.io.Reader reader60 = sourceFile54.getCodeReader();
        reader60.mark((int) ':');
        char[] charArray67 = new char[] { '#', '#', ' ', ':' };
        int int68 = reader60.read(charArray67);
        printStream45.print(charArray67);
        // The following exception was thrown during execution in test generation
        try {
            int int72 = reader38.read(charArray67, (-33), (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(sourceFile4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(sourceFile9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertEquals(file14.getParent(), ":");
        org.junit.Assert.assertEquals(file14.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 280487309000L + "'", long18 == 280487309000L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(sourceFile20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(charset23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "US-ASCII" + "'", str24, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "US-ASCII" + "'", str25, "US-ASCII");
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(sourceFile29);
        org.junit.Assert.assertNotNull(sourceFile35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(sourceFile40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(sourceFile43);
        org.junit.Assert.assertNotNull(printStream47);
        org.junit.Assert.assertNotNull(printStream49);
        org.junit.Assert.assertNotNull(sourceFile54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(reader60);
        org.junit.Assert.assertNotNull(charArray67);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray67), "## :");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray67), "## :");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray67), "[#, #,  , :]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test10524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10524");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.setSyntheticBlockStartMarker("OFF");
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.setDeadAssignmentElimination(true);
        compilerOptions0.inputDelimiter = "/experiment/:/hi!";
        compilerOptions0.convertToDottedProperties = false;
        compilerOptions0.setGeneratePseudoNames(true);
        boolean boolean15 = compilerOptions0.optimizeReturns;
        compilerOptions0.setProcessObjectPropertyString(false);
        compilerOptions0.setRemoveUnusedPrototypeProperties(false);
        compilerOptions0.aliasStringsBlacklist = ":/hi!/PARAM_LIST\n";
        compilerOptions0.setSummaryDetailLevel((int) (byte) 0);
        compilerOptions0.computeFunctionSideEffects = true;
        compilerOptions0.setReplaceIdGenerators(true);
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test10525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10525");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.syntheticBlockEndMarker = "hi!";
        compilerOptions0.removeUnusedClassProperties = false;
        compilerOptions0.setLineLengthThreshold(4095);
        com.google.javascript.jscomp.ErrorFormat errorFormat9 = compilerOptions0.errorFormat;
        compilerOptions0.setCrossModuleMethodMotion(true);
        compilerOptions0.preferLineBreakAtEndOfFile = true;
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.enableRuntimeTypeCheck("hi!");
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions18.crossModuleMethodMotion = true;
        compilerOptions18.syntheticBlockEndMarker = "hi!";
        compilerOptions18.setCheckControlStructures(true);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy25 = com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED;
        compilerOptions18.variableRenaming = variableRenamingPolicy25;
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel28 = compilerOptions27.checkRequires;
        compilerOptions27.setAmbiguateProperties(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode32 = null;
        compilerOptions31.setTracerMode(tracerMode32);
        boolean boolean34 = compilerOptions31.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel35 = compilerOptions31.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode36 = compilerOptions31.getLanguageOut();
        compilerOptions31.setFoldConstants(true);
        boolean boolean39 = compilerOptions31.generatePseudoNames;
        java.lang.String str40 = compilerOptions31.aliasStringsBlacklist;
        java.lang.String[] strArray47 = new java.lang.String[] { ":/hi!", "DiagnosticGroup<checkProvides>", "// Input %num%", "/experiment/:/hi!", "STRING PARAM_LIST", "InputId: *global*" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        compilerOptions31.setReplaceStringsFunctionDescriptions((java.util.List<java.lang.String>) strList48);
        compilerOptions27.setManageClosureDependencies((java.util.List<java.lang.String>) strList48);
        compilerOptions27.inlineLocalFunctions = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions54 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode55 = null;
        compilerOptions54.setTracerMode(tracerMode55);
        boolean boolean57 = compilerOptions54.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel58 = compilerOptions54.sourceMapDetailLevel;
        compilerOptions54.setColorizeErrorOutput(true);
        compilerOptions54.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions63 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions63.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy66 = compilerOptions63.propertyRenaming;
        compilerOptions54.propertyRenaming = propertyRenamingPolicy66;
        compilerOptions27.propertyRenaming = propertyRenamingPolicy66;
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy25, propertyRenamingPolicy66);
        boolean boolean70 = compilerOptions0.labelRenaming;
        compilerOptions0.generateExports = true;
        compilerOptions0.resetWarningsGuard();
        org.junit.Assert.assertNotNull(errorFormat9);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy25 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED + "'", variableRenamingPolicy25.equals(com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED));
        org.junit.Assert.assertTrue("'" + checkLevel28 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel28.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(detailLevel35);
        org.junit.Assert.assertNull(languageMode36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(detailLevel58);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy66 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy66.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test10526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10526");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("/experiment/:");
        boolean boolean2 = node1.isArrayLit();
        boolean boolean3 = node1.isVar();
        boolean boolean4 = node1.isNot();
        boolean boolean5 = node1.isGetProp();
        java.lang.Object obj7 = node1.getProp(300);
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj7);
    }

    @Test
    public void test10527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10527");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str1 = compilerOptions0.syntheticBlockStartMarker;
        compilerOptions0.labelRenaming = true;
        boolean boolean4 = compilerOptions0.inlineLocalFunctions;
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.crossModuleMethodMotion = true;
        compilerOptions5.skipAllCompilerPasses();
        boolean boolean9 = compilerOptions5.flowSensitiveInlineVariables;
        java.lang.String[] strArray19 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        compilerOptions5.stripTypes = strSet20;
        compilerOptions0.setStripNameSuffixes((java.util.Set<java.lang.String>) strSet20);
        boolean boolean24 = compilerOptions0.ideMode;
        compilerOptions0.setLooseTypes(true);
        compilerOptions0.setAmbiguateProperties(true);
        java.util.Set<java.lang.String> strSet29 = compilerOptions0.aliasableStrings;
        compilerOptions0.optimizeArgumentsArray = false;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet29);
    }

    @Test
    public void test10528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10528");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageOut();
        compilerOptions0.setReplaceStringsPlaceholderToken("PARAM_LIST");
        compilerOptions0.setPropertyAffinity(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.generatePseudoNames;
        java.util.Set<java.lang.String> strSet14 = compilerOptions10.stripTypes;
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions10.reportMissingOverride;
        com.google.javascript.jscomp.SourceMap.Format format16 = compilerOptions10.sourceMapFormat;
        compilerOptions10.inlineGetters = true;
        compilerOptions10.inlineGetters = true;
        compilerOptions10.disableRuntimeTypeCheck();
        com.google.javascript.jscomp.CompilerOptions compilerOptions22 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions22.crossModuleMethodMotion = true;
        compilerOptions22.syntheticBlockEndMarker = "hi!";
        compilerOptions22.removeUnusedClassProperties = false;
        compilerOptions22.setLineLengthThreshold(4095);
        com.google.javascript.jscomp.ErrorFormat errorFormat31 = compilerOptions22.errorFormat;
        compilerOptions22.setCrossModuleMethodMotion(true);
        compilerOptions22.preferLineBreakAtEndOfFile = true;
        compilerOptions22.crossModuleMethodMotion = true;
        compilerOptions22.enableRuntimeTypeCheck("hi!");
        com.google.javascript.jscomp.CompilerOptions compilerOptions40 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode41 = null;
        compilerOptions40.setTracerMode(tracerMode41);
        boolean boolean43 = compilerOptions40.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel44 = compilerOptions40.sourceMapDetailLevel;
        compilerOptions40.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet47 = compilerOptions40.stripNameSuffixes;
        compilerOptions22.setStripNameSuffixes(strSet47);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray49 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList50 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList50, jSTypeArray49);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray52 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList53 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList53, jSTypeArray52);
        boolean boolean55 = jSTypeList50.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList53);
        java.lang.Object[] objArray56 = jSTypeList50.toArray();
        boolean boolean57 = strSet47.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList50);
        compilerOptions10.stripNameSuffixes = strSet47;
        java.util.Set<java.lang.String> strSet59 = compilerOptions10.stripNameSuffixes;
        compilerOptions0.stripNamePrefixes = strSet59;
        compilerOptions0.prettyPrint = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(languageMode5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(format16);
        org.junit.Assert.assertNotNull(errorFormat31);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(detailLevel44);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNotNull(jSTypeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(jSTypeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strSet59);
    }

    @Test
    public void test10529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10529");
        java.io.PrintStream printStream1 = new java.io.PrintStream("*global*.  at *global* line (unknown line) : (unknown column)");
        printStream1.println(true);
        printStream1.print((double) 280489607168L);
        printStream1.print((double) 2);
        com.google.javascript.jscomp.Compiler compiler8 = new com.google.javascript.jscomp.Compiler(printStream1);
    }

    @Test
    public void test10530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10530");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.generatePseudoNames;
        java.util.Set<java.lang.String> strSet4 = compilerOptions0.stripTypes;
        compilerOptions0.setCollapseProperties(true);
        compilerOptions0.crossModuleCodeMotion = true;
        compilerOptions0.setCollapseProperties(false);
        compilerOptions0.exportTestFunctions = false;
        compilerOptions0.setTightenTypes(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test10531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10531");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int4 = sourceFile2.getLineOfOffset((int) (short) 1);
        java.lang.String str5 = sourceFile2.getName();
        java.lang.String str6 = sourceFile2.getName();
        java.lang.String str7 = sourceFile2.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput9 = new com.google.javascript.jscomp.CompilerInput(sourceFile2, true);
        com.google.javascript.jscomp.SourceAst sourceAst10 = compilerInput9.getAst();
        compilerInput9.clearAst();
        com.google.javascript.jscomp.CompilerInput compilerInput13 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput9, true);
        com.google.javascript.rhino.InputId inputId14 = compilerInput9.getInputId();
        com.google.javascript.jscomp.JSModule jSModule16 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler17 = new com.google.javascript.jscomp.Compiler();
        jSModule16.sortInputsByDeps(compiler17);
        java.lang.String str19 = jSModule16.getName();
        com.google.javascript.jscomp.SourceFile sourceFile22 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int24 = sourceFile22.getLineOfOffset((int) (short) 1);
        java.lang.String str25 = sourceFile22.getName();
        java.lang.String str26 = sourceFile22.getName();
        java.lang.String str27 = sourceFile22.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput29 = new com.google.javascript.jscomp.CompilerInput(sourceFile22, true);
        com.google.javascript.jscomp.CompilerInput compilerInput30 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput29);
        com.google.javascript.jscomp.JSModule jSModule31 = compilerInput29.getModule();
        jSModule16.add(compilerInput29);
        com.google.javascript.jscomp.SourceFile sourceFile34 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput36 = new com.google.javascript.jscomp.CompilerInput(sourceFile34, true);
        com.google.javascript.rhino.InputId inputId38 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput40 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput36, inputId38, true);
        com.google.javascript.jscomp.CompilerInput compilerInput42 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput40, false);
        com.google.javascript.jscomp.JSModule jSModule44 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler45 = new com.google.javascript.jscomp.Compiler();
        jSModule44.sortInputsByDeps(compiler45);
        java.lang.String str47 = jSModule44.getName();
        compilerInput40.setModule(jSModule44);
        java.lang.String str49 = compilerInput40.getCode();
        com.google.javascript.jscomp.SourceFile sourceFile50 = compilerInput40.getSourceFile();
        jSModule16.remove(compilerInput40);
        compilerInput9.setModule(jSModule16);
        com.google.javascript.jscomp.JSModule jSModule53 = compilerInput9.getModule();
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(sourceAst10);
        org.junit.Assert.assertNotNull(inputId14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "STRING PARAM_LIST 49" + "'", str19, "STRING PARAM_LIST 49");
        org.junit.Assert.assertNotNull(sourceFile22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNull(jSModule31);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "STRING PARAM_LIST 49" + "'", str47, "STRING PARAM_LIST 49");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(sourceFile50);
        org.junit.Assert.assertNotNull(jSModule53);
    }

    @Test
    public void test10532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10532");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.generatePseudoNames;
        com.google.javascript.jscomp.SourceMap.LocationMapping[] locationMappingArray4 = new com.google.javascript.jscomp.SourceMap.LocationMapping[] {};
        java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping> locationMappingList5 = new java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList5, locationMappingArray4);
        compilerOptions0.sourceMapLocationMappings = locationMappingList5;
        compilerOptions0.setRemoveAbstractMethods(true);
        compilerOptions0.setAssumeStrictThis(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(locationMappingArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test10533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10533");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions21.crossModuleMethodMotion = true;
        compilerOptions21.skipAllCompilerPasses();
        boolean boolean25 = compilerOptions21.flowSensitiveInlineVariables;
        java.lang.String[] strArray35 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet36 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet36, strArray35);
        compilerOptions21.stripTypes = strSet36;
        compilerOptions0.stripNameSuffixes = strSet36;
        compilerOptions0.setExtractPrototypeMemberDeclarations(false);
        java.lang.String str42 = compilerOptions0.instrumentationTemplate;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test10534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10534");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.CompilerOptions compilerOptions4 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions4.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode7 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions4.setTracer(tracerMode7);
        compilerOptions4.setFoldConstants(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode12 = null;
        compilerOptions11.setTracerMode(tracerMode12);
        boolean boolean14 = compilerOptions11.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel15 = compilerOptions11.sourceMapDetailLevel;
        compilerOptions11.setColorizeErrorOutput(true);
        compilerOptions11.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy23 = compilerOptions20.propertyRenaming;
        compilerOptions11.propertyRenaming = propertyRenamingPolicy23;
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions11.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel26 = compilerOptions11.checkRequires;
        compilerOptions4.reportMissingOverride = checkLevel26;
        compilerOptions0.setAggressiveVarCheck(checkLevel26);
        compilerOptions0.setReplaceIdGenerators(true);
        compilerOptions0.setOptimizeParameters(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions33 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode34 = null;
        compilerOptions33.setTracerMode(tracerMode34);
        boolean boolean36 = compilerOptions33.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel37 = compilerOptions33.sourceMapDetailLevel;
        compilerOptions33.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet40 = compilerOptions33.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile42 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput44 = new com.google.javascript.jscomp.CompilerInput(sourceFile42, true);
        com.google.javascript.rhino.InputId inputId46 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput48 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput44, inputId46, true);
        java.lang.String str49 = compilerInput48.toString();
        boolean boolean50 = strSet40.contains((java.lang.Object) compilerInput48);
        java.lang.Object[] objArray51 = strSet40.toArray();
        java.lang.Object obj52 = null;
        boolean boolean53 = strSet40.contains(obj52);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList55 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55, jSTypeArray54);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray57 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList58 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList58, jSTypeArray57);
        boolean boolean60 = jSTypeList55.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray64 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList65 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList65, jSTypeArray64);
        boolean boolean67 = jSTypeList62.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList65);
        boolean boolean68 = jSTypeList55.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList65);
        boolean boolean69 = jSTypeList55.isEmpty();
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream70 = jSTypeList55.stream();
        boolean boolean71 = strSet40.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55);
        compilerOptions0.setStripNameSuffixes(strSet40);
        compilerOptions0.setCrossModuleCodeMotion(false);
        java.util.List<com.google.javascript.jscomp.SourceMap.LocationMapping> locationMappingList75 = compilerOptions0.sourceMapLocationMappings;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + tracerMode7 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode7.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(detailLevel15);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy23 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy23.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel26 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel26.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(detailLevel37);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "*global*" + "'", str49, "*global*");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(jSTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(jSTypeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(jSTypeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(jSTypeStream70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(locationMappingList75);
    }

    @Test
    public void test10535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10535");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("// Input %num%", "hi!");
        java.io.Reader reader3 = sourceFile2.getCodeReader();
        reader3.close();
        reader3.close();
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertNotNull(reader3);
    }

    @Test
    public void test10536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10536");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        boolean boolean4 = node3.isContinue();
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry6 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5);
        jSTypeRegistry6.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSType jSType8 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] { jSType8 };
        com.google.javascript.rhino.Node node10 = jSTypeRegistry6.createParameters(jSTypeArray9);
        int int11 = node3.getIndexOfChild(node10);
        boolean boolean12 = node3.isDelProp();
        com.google.javascript.rhino.Node node16 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean17 = node16.isTry();
        java.lang.String str18 = node16.toString();
        node3.addChildToBack(node16);
        boolean boolean20 = node16.isArrayLit();
        com.google.javascript.rhino.Node node21 = node16.getLastSibling();
        boolean boolean22 = node16.isGetProp();
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        jSTypeRegistry24.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSType jSType26 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray27 = new com.google.javascript.rhino.jstype.JSType[] { jSType26 };
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParameters(jSTypeArray27);
        com.google.javascript.rhino.Node node29 = node16.useSourceInfoIfMissingFromForTree(node28);
        java.lang.String str30 = node28.getQualifiedName();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray33 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList34 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList34, jSTypeArray33);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        boolean boolean39 = jSTypeList34.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        com.google.javascript.rhino.Node node40 = jSTypeRegistry32.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList34);
        java.lang.Object obj41 = null;
        boolean boolean42 = jSTypeList34.remove(obj41);
        java.lang.Object obj43 = null;
        int int44 = jSTypeList34.indexOf(obj43);
        com.google.javascript.jscomp.CompilerOptions compilerOptions45 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions45.crossModuleMethodMotion = true;
        compilerOptions45.skipAllCompilerPasses();
        compilerOptions45.resetWarningsGuard();
        compilerOptions45.setInlineLocalVariables(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions52 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode53 = null;
        compilerOptions52.setTracerMode(tracerMode53);
        boolean boolean55 = compilerOptions52.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel56 = compilerOptions52.sourceMapDetailLevel;
        compilerOptions52.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet59 = compilerOptions52.stripNameSuffixes;
        compilerOptions45.setReplaceStringsReservedStrings(strSet59);
        int int61 = strSet59.size();
        com.google.javascript.rhino.ErrorReporter errorReporter62 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry63 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter62);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray64 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList65 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList65, jSTypeArray64);
        com.google.javascript.rhino.Node node67 = jSTypeRegistry63.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList65);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream68 = jSTypeList65.parallelStream();
        boolean boolean69 = strSet59.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList65);
        boolean boolean70 = jSTypeList34.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList65);
        com.google.javascript.rhino.ErrorReporter errorReporter71 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry72 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter71);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray73 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList74 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList74, jSTypeArray73);
        com.google.javascript.rhino.Node node76 = jSTypeRegistry72.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList74);
        boolean boolean77 = node76.isIn();
        boolean boolean78 = node76.isGetElem();
        java.lang.String str82 = node76.toString(true, false, false);
        com.google.javascript.rhino.Node node84 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node85 = node76.useSourceInfoIfMissingFromForTree(node84);
        boolean boolean86 = node84.isReturn();
        boolean boolean87 = node84.isLocalResultCall();
        boolean boolean88 = node84.isLabelName();
        int int89 = jSTypeList34.lastIndexOf((java.lang.Object) node84);
        com.google.javascript.rhino.Node node90 = null;
        // The following exception was thrown during execution in test generation
        try {
            node28.replaceChild(node84, node90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "STRING PARAM_LIST 49" + "'", str18, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSTypeArray27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(jSTypeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(detailLevel56);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(jSTypeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(jSTypeStream68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(jSTypeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "PARAM_LIST" + "'", str82, "PARAM_LIST");
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test10537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10537");
        java.nio.charset.Charset charset0 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str1 = charset0.name();
        java.util.Locale locale2 = null;
        java.lang.String str3 = charset0.displayName(locale2);
        java.nio.ByteBuffer byteBuffer5 = charset0.encode("/experiment/:/hi!");
        boolean boolean6 = charset0.isRegistered();
        java.lang.String str7 = charset0.displayName();
        java.nio.charset.CharsetEncoder charsetEncoder8 = charset0.newEncoder();
        java.nio.charset.CharsetDecoder charsetDecoder9 = charset0.newDecoder();
        org.junit.Assert.assertNotNull(charset0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "US-ASCII" + "'", str1, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "US-ASCII" + "'", str3, "US-ASCII");
        org.junit.Assert.assertNotNull(byteBuffer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "US-ASCII" + "'", str7, "US-ASCII");
        org.junit.Assert.assertNotNull(charsetEncoder8);
        org.junit.Assert.assertNotNull(charsetDecoder9);
    }

    @Test
    public void test10538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10538");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        java.io.Reader reader3 = sourceFile2.getCodeReader();
        com.google.javascript.jscomp.SourceFile sourceFile6 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int8 = sourceFile6.getLineOfOffset((int) (short) 1);
        java.io.Reader reader9 = sourceFile6.getCodeReader();
        boolean boolean10 = reader9.ready();
        com.google.javascript.jscomp.SourceFile sourceFile13 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int15 = sourceFile13.getLineOfOffset((int) (short) 1);
        int int17 = sourceFile13.getLineOfOffset(100);
        java.lang.String str18 = sourceFile13.getName();
        java.io.Reader reader19 = sourceFile13.getCodeReader();
        reader19.mark((int) ':');
        char[] charArray26 = new char[] { '#', '#', ' ', ':' };
        int int27 = reader19.read(charArray26);
        int int28 = reader9.read(charArray26);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = reader3.read(charArray26, (int) (byte) 100, (-33));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertNotNull(reader3);
        org.junit.Assert.assertNotNull(sourceFile6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(sourceFile13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "## :");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "## :");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, #,  , :]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test10539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10539");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList15 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15, jSTypeArray14);
        com.google.javascript.rhino.Node node17 = jSTypeRegistry13.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList15);
        com.google.javascript.rhino.jstype.JSType jSType22 = jSTypeRegistry13.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        com.google.javascript.rhino.jstype.JSType jSType33 = jSTypeRegistry24.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray34 = new com.google.javascript.rhino.jstype.JSType[] { jSType33 };
        com.google.javascript.rhino.jstype.FunctionType functionType35 = jSTypeRegistry7.createConstructorTypeWithVarArgs(jSType22, jSTypeArray34);
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        com.google.javascript.rhino.jstype.JSType jSType53 = jSTypeRegistry44.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter54 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter54);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.Node node59 = jSTypeRegistry55.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        com.google.javascript.rhino.jstype.JSType jSType64 = jSTypeRegistry55.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] { jSType64 };
        com.google.javascript.rhino.jstype.FunctionType functionType66 = jSTypeRegistry38.createConstructorTypeWithVarArgs(jSType53, jSTypeArray65);
        boolean boolean67 = jSTypeRegistry7.declareType("", jSType53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray71 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList72 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72, jSTypeArray71);
        boolean boolean74 = jSTypeList69.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator75 = jSTypeList69.spliterator();
        com.google.javascript.rhino.jstype.FunctionType functionType76 = jSTypeRegistry1.createFunctionTypeWithVarArgs(jSType53, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray77 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList78 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList78, jSTypeArray77);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray80 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList81 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList81, jSTypeArray80);
        boolean boolean83 = jSTypeList78.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList81);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator84 = jSTypeList78.spliterator();
        com.google.javascript.rhino.Node node85 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList78);
        boolean boolean86 = node85.isNull();
        boolean boolean87 = node85.isAdd();
        boolean boolean88 = node85.isTry();
        boolean boolean89 = node85.isEmpty();
        java.lang.String str90 = node85.getQualifiedName();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(jSType22);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(jSType33);
        org.junit.Assert.assertNotNull(jSTypeArray34);
        org.junit.Assert.assertNotNull(functionType35);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(jSType53);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(jSType64);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertNotNull(functionType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(jSTypeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(jSTypeSpliterator75);
        org.junit.Assert.assertNotNull(functionType76);
        org.junit.Assert.assertNotNull(jSTypeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(jSTypeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(jSTypeSpliterator84);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test10540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10540");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(false, false);
        java.io.File file6 = file2.getParentFile();
        long long7 = file6.getUsableSpace();
        boolean boolean8 = file6.mkdirs();
        java.nio.charset.Charset charset9 = null;
        com.google.javascript.jscomp.JSSourceFile jSSourceFile10 = com.google.javascript.jscomp.JSSourceFile.fromFile(file6, charset9);
        java.io.File file13 = new java.io.File(":", "hi!");
        boolean boolean16 = file13.setExecutable(true, false);
        boolean boolean18 = file13.setWritable(false);
        boolean boolean19 = file13.canWrite();
        java.net.URI uRI20 = file13.toURI();
        boolean boolean21 = file6.renameTo(file13);
        long long22 = file13.getFreeSpace();
        boolean boolean23 = file13.exists();
        boolean boolean26 = file13.setReadable(false, false);
        boolean boolean27 = file13.isDirectory();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), ":");
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 280491331584L + "'", long7 == 280491331584L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(jSSourceFile10);
        org.junit.Assert.assertEquals(file13.getParent(), ":");
        org.junit.Assert.assertEquals(file13.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(uRI20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 299090448384L + "'", long22 == 299090448384L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test10541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10541");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("FINEST");
        stats1.gzSize = 300;
        int int4 = stats1.gzDiff;
        stats1.gzDiff = 4095;
        stats1.diff = 52;
        stats1.diff = 12;
        stats1.runtime = 280487727104L;
        int int13 = stats1.diff;
        int int14 = stats1.runs;
        java.lang.String str15 = stats1.pass;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 12 + "'", int13 == 12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "FINEST" + "'", str15, "FINEST");
    }

    @Test
    public void test10542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10542");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setInlineLocalFunctions(false);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy3 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy3;
        compilerOptions0.setProtectHiddenSideEffects(false);
        compilerOptions0.setCheckMissingGetCssNameBlacklist(":");
        boolean boolean9 = compilerOptions0.convertToDottedProperties;
        compilerOptions0.ideMode = true;
        java.lang.String str12 = compilerOptions0.syntheticBlockEndMarker;
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test10543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10543");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler2 = new com.google.javascript.jscomp.Compiler();
        jSModule1.sortInputsByDeps(compiler2);
        com.google.javascript.jscomp.SourceFile.Builder builder4 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile8 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int10 = sourceFile8.getLineOfOffset((int) (short) 1);
        java.io.Reader reader11 = sourceFile8.getCodeReader();
        int int12 = reader11.read();
        com.google.javascript.jscomp.SourceFile sourceFile13 = builder4.buildFromReader("*global*", reader11);
        jSModule1.add(sourceFile13);
        com.google.javascript.jscomp.JSModule jSModule16 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler17 = new com.google.javascript.jscomp.Compiler();
        jSModule16.sortInputsByDeps(compiler17);
        com.google.javascript.jscomp.SourceFile.Builder builder19 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile23 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int25 = sourceFile23.getLineOfOffset((int) (short) 1);
        java.io.Reader reader26 = sourceFile23.getCodeReader();
        int int27 = reader26.read();
        com.google.javascript.jscomp.SourceFile sourceFile28 = builder19.buildFromReader("*global*", reader26);
        jSModule16.add(sourceFile28);
        boolean boolean31 = jSModule16.removeByName("PARAM_LIST");
        jSModule1.addDependency(jSModule16);
        com.google.javascript.jscomp.SourceFile sourceFile34 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput36 = new com.google.javascript.jscomp.CompilerInput(sourceFile34, true);
        com.google.javascript.rhino.InputId inputId38 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput40 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput36, inputId38, true);
        com.google.javascript.jscomp.CompilerInput compilerInput42 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput40, false);
        jSModule1.addFirst(compilerInput40);
        com.google.javascript.jscomp.CompilerInput compilerInput45 = jSModule1.getByName("");
        com.google.javascript.jscomp.SourceFile sourceFile47 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput49 = new com.google.javascript.jscomp.CompilerInput(sourceFile47, true);
        com.google.javascript.rhino.InputId inputId51 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput53 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput49, inputId51, true);
        com.google.javascript.jscomp.CompilerInput compilerInput55 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput53, false);
        com.google.javascript.jscomp.JSModule jSModule57 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler58 = new com.google.javascript.jscomp.Compiler();
        jSModule57.sortInputsByDeps(compiler58);
        java.lang.String str60 = jSModule57.getName();
        compilerInput53.setModule(jSModule57);
        jSModule57.setDepth((int) (byte) 0);
        jSModule1.addDependency(jSModule57);
        int int65 = jSModule57.getDepth();
        int int66 = jSModule57.getDepth();
        java.util.Set<com.google.javascript.jscomp.JSModule> jSModuleSet67 = jSModule57.getAllDependencies();
        java.lang.String str68 = jSModule57.getName();
        org.junit.Assert.assertNotNull(sourceFile8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(sourceFile13);
        org.junit.Assert.assertNotNull(sourceFile23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(sourceFile28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(compilerInput45);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "STRING PARAM_LIST 49" + "'", str60, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(jSModuleSet67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "STRING PARAM_LIST 49" + "'", str68, "STRING PARAM_LIST 49");
    }

    @Test
    public void test10544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10544");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean3 = file2.createNewFile();
        java.lang.String str4 = file2.getPath();
        boolean boolean5 = file2.isDirectory();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + ":/hi!" + "'", str4, ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test10545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10545");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy8 = compilerOptions5.propertyRenaming;
        java.lang.String[] strArray11 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        compilerOptions5.setStripTypes((java.util.Set<java.lang.String>) strSet12);
        compilerOptions0.stripNamePrefixes = strSet12;
        compilerOptions0.checkTypes = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions18.crossModuleMethodMotion = true;
        compilerOptions18.syntheticBlockEndMarker = "hi!";
        compilerOptions18.removeUnusedClassProperties = false;
        compilerOptions18.setLineLengthThreshold(4095);
        com.google.javascript.jscomp.ErrorFormat errorFormat27 = compilerOptions18.errorFormat;
        compilerOptions18.inlineConstantVars = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions30 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions30.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode33 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions30.setTracer(tracerMode33);
        compilerOptions30.setFoldConstants(true);
        compilerOptions30.flowSensitiveInlineVariables = true;
        compilerOptions30.ambiguateProperties = false;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel41 = compilerOptions30.sourceMapDetailLevel;
        compilerOptions18.sourceMapDetailLevel = detailLevel41;
        compilerOptions0.sourceMapDetailLevel = detailLevel41;
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        node50.addChildrenToBack(node56);
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        boolean boolean71 = node70.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray74 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList75 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList75, jSTypeArray74);
        com.google.javascript.rhino.Node node77 = jSTypeRegistry73.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList75);
        com.google.javascript.rhino.Node node80 = new com.google.javascript.rhino.Node((int) (short) 0, node50, node63, node70, node77, 0, 49);
        boolean boolean81 = node50.isDo();
        boolean boolean82 = node50.isWhile();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable83 = node50.children();
        java.lang.String str84 = node50.getQualifiedName();
        node50.setCharno((int) '/');
        boolean boolean87 = detailLevel41.apply(node50);
        boolean boolean88 = node50.isGetElem();
        node50.setVarArgs(false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy8 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy8.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(errorFormat27);
        org.junit.Assert.assertTrue("'" + tracerMode33 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode33.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertNotNull(detailLevel41);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(jSTypeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(nodeIterable83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test10546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10546");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        com.google.javascript.rhino.jstype.JSType jSType16 = jSTypeRegistry7.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList20 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20, jSTypeArray19);
        com.google.javascript.rhino.Node node22 = jSTypeRegistry18.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList20);
        com.google.javascript.rhino.jstype.JSType jSType27 = jSTypeRegistry18.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] { jSType27 };
        com.google.javascript.rhino.jstype.FunctionType functionType29 = jSTypeRegistry1.createConstructorTypeWithVarArgs(jSType16, jSTypeArray28);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable31 = jSTypeRegistry1.getTypesWithProperty("java.io.IOException: ");
        jSTypeRegistry1.incrementGeneration();
        jSTypeRegistry1.clearTemplateTypeNames();
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative34 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry1.getNativeObjectType(jSTypeNative34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSType16);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(jSType27);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertNotNull(functionType29);
        org.junit.Assert.assertNotNull(jSTypeIterable31);
    }

    @Test
    public void test10547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10547");
        java.io.PrintStream printStream1 = new java.io.PrintStream("*global*.  at *global* line (unknown line) : (unknown column)");
        printStream1.println(false);
        printStream1.println(280490700800L);
        printStream1.println(":/hi!");
    }

    @Test
    public void test10548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10548");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("FINEST");
        stats1.gzSize = 300;
        int int4 = stats1.gzDiff;
        int int5 = stats1.diff;
        stats1.runtime = (short) 1;
        stats1.runtime = 'a';
        int int10 = stats1.diff;
        stats1.gzSize = 700;
        int int13 = stats1.size;
        int int14 = stats1.gzDiff;
        stats1.size = (byte) -1;
        stats1.size = 6;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test10549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10549");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.syntheticBlockEndMarker = "hi!";
        compilerOptions0.removeUnusedClassProperties = false;
        compilerOptions0.setLineLengthThreshold(4095);
        com.google.javascript.jscomp.ErrorFormat errorFormat9 = compilerOptions0.errorFormat;
        compilerOptions0.setCrossModuleMethodMotion(true);
        compilerOptions0.preferLineBreakAtEndOfFile = true;
        compilerOptions0.setSourceMapOutputPath(":");
        compilerOptions0.inlineConstantVars = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions18.crossModuleMethodMotion = true;
        compilerOptions18.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy23 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions24.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy27 = compilerOptions24.propertyRenaming;
        compilerOptions18.setRenamingPolicy(variableRenamingPolicy23, propertyRenamingPolicy27);
        compilerOptions18.setTransformAMDToCJSModules(true);
        boolean boolean31 = compilerOptions18.rewriteFunctionExpressions;
        compilerOptions18.smartNameRemoval = false;
        compilerOptions18.renamePrefixNamespace = "";
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions36.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode39 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions36.setTracer(tracerMode39);
        compilerOptions36.setFoldConstants(true);
        compilerOptions36.flowSensitiveInlineVariables = true;
        compilerOptions36.setReplaceStringsPlaceholderToken("InputId: *global*");
        compilerOptions36.markNoSideEffectCalls = false;
        com.google.javascript.jscomp.CheckLevel checkLevel49 = compilerOptions36.reportMissingOverride;
        compilerOptions18.setBrokenClosureRequiresLevel(checkLevel49);
        compilerOptions0.setCheckProvides(checkLevel49);
        compilerOptions0.enableRuntimeTypeCheck("PARAM_LIST\n    PARAM_LIST\n: InputId: STRING PARAM_LIST 49");
        org.junit.Assert.assertNotNull(errorFormat9);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy27 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy27.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + tracerMode39 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode39.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel49 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel49.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10550");
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray0 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList1 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList1, jSTypeArray0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        boolean boolean6 = jSTypeList1.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode8 = null;
        compilerOptions7.setTracerMode(tracerMode8);
        boolean boolean10 = compilerOptions7.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel11 = compilerOptions7.sourceMapDetailLevel;
        compilerOptions7.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        compilerOptions14.optimizeParameters = true;
        compilerOptions14.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel22 = compilerOptions14.checkGlobalNamesLevel;
        compilerOptions7.setReportMissingOverride(checkLevel22);
        java.util.Set<java.lang.String> strSet24 = compilerOptions7.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions25 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode26 = null;
        compilerOptions25.setTracerMode(tracerMode26);
        boolean boolean28 = compilerOptions25.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel29 = compilerOptions25.sourceMapDetailLevel;
        compilerOptions25.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet32 = compilerOptions25.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile34 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput36 = new com.google.javascript.jscomp.CompilerInput(sourceFile34, true);
        com.google.javascript.rhino.InputId inputId38 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput40 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput36, inputId38, true);
        java.lang.String str41 = compilerInput40.toString();
        boolean boolean42 = strSet32.contains((java.lang.Object) compilerInput40);
        compilerOptions7.stripTypes = strSet32;
        compilerOptions7.setMarkAsCompiled(true);
        java.util.Set<java.lang.String> strSet46 = compilerOptions7.stripTypePrefixes;
        boolean boolean47 = jSTypeList1.remove((java.lang.Object) strSet46);
        com.google.javascript.jscomp.CompilerOptions compilerOptions48 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions48.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode51 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions48.setTracer(tracerMode51);
        com.google.javascript.jscomp.CompilerOptions.Reach reach53 = com.google.javascript.jscomp.CompilerOptions.Reach.NONE;
        compilerOptions48.setInlineVariables(reach53);
        boolean boolean55 = strSet46.remove((java.lang.Object) reach53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray59 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList60 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList60, jSTypeArray59);
        boolean boolean62 = jSTypeList57.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList60);
        java.lang.Object[] objArray63 = jSTypeList57.toArray();
        boolean boolean64 = strSet46.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        java.lang.Object[] objArray65 = jSTypeList57.toArray();
        java.util.ListIterator<com.google.javascript.rhino.jstype.JSType> jSTypeItor66 = jSTypeList57.listIterator();
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream67 = jSTypeList57.parallelStream();
        com.google.javascript.jscomp.CompilerOptions compilerOptions68 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions68.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel71 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions68.setSourceMapDetailLevel(detailLevel71);
        boolean boolean73 = compilerOptions68.ideMode;
        compilerOptions68.renamePrefix = "hi!";
        boolean boolean76 = jSTypeList57.equals((java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(jSTypeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(detailLevel11);
        org.junit.Assert.assertTrue("'" + checkLevel22 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel22.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(detailLevel29);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "*global*" + "'", str41, "*global*");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + tracerMode51 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode51.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + reach53 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.NONE + "'", reach53.equals(com.google.javascript.jscomp.CompilerOptions.Reach.NONE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(jSTypeItor66);
        org.junit.Assert.assertNotNull(jSTypeStream67);
        org.junit.Assert.assertNotNull(detailLevel71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test10551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10551");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        strMap4.clear();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        java.lang.String str12 = node11.getQualifiedName();
        com.google.javascript.rhino.Node node13 = node11.getLastChild();
        com.google.javascript.rhino.Node node14 = strMap4.replace("FINEST", node11);
        java.util.Collection<com.google.javascript.rhino.Node> nodeCollection15 = strMap4.values();
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.Node>> strEntrySet16 = strMap4.entrySet();
        java.util.Set<java.lang.String> strSet17 = strMap4.keySet();
        int int18 = strMap4.size();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(nodeCollection15);
        org.junit.Assert.assertNotNull(strEntrySet16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test10552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10552");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        boolean boolean37 = node6.isDo();
        boolean boolean38 = node6.isWhile();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable39 = node6.children();
        java.lang.String[] strArray46 = new java.lang.String[] { "OFF", "PARAM_LIST", "*global*", ":", "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        node6.setDirectives((java.util.Set<java.lang.String>) strSet47);
        boolean boolean50 = node6.isFromExterns();
        boolean boolean51 = node6.isBlock();
        boolean boolean52 = node6.isUnscopedQualifiedName();
        boolean boolean53 = node6.isBreak();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(nodeIterable39);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test10553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10553");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        node42.addChildrenToBack(node48);
        com.google.javascript.rhino.Node node50 = node6.clonePropsFrom(node48);
        java.util.Set<java.lang.String> strSet51 = node50.getDirectives();
        node50.setLineno((int) '/');
        // The following exception was thrown during execution in test generation
        try {
            double double54 = node50.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: PARAM_LIST 47 is not a number node");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNull(strSet51);
    }

    @Test
    public void test10554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10554");
        com.google.javascript.jscomp.SourceFile sourceFile1 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput3 = new com.google.javascript.jscomp.CompilerInput(sourceFile1, true);
        com.google.javascript.rhino.InputId inputId5 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput7 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput3, inputId5, true);
        com.google.javascript.jscomp.CompilerInput compilerInput9 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput7, false);
        com.google.javascript.jscomp.JSModule jSModule11 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler12 = new com.google.javascript.jscomp.Compiler();
        jSModule11.sortInputsByDeps(compiler12);
        java.lang.String str14 = jSModule11.getName();
        compilerInput7.setModule(jSModule11);
        java.util.List<com.google.javascript.jscomp.JSModule> jSModuleList16 = jSModule11.getDependencies();
        int int17 = jSModule11.getDepth();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "STRING PARAM_LIST 49" + "'", str14, "STRING PARAM_LIST 49");
        org.junit.Assert.assertNotNull(jSModuleList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test10555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10555");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.Node node37 = node6.getNext();
        com.google.javascript.rhino.Node node39 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node40 = node6.clonePropsFrom(node39);
        // The following exception was thrown during execution in test generation
        try {
            double double41 = node39.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: STRING  is not a number node");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(node40);
    }

    @Test
    public void test10556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10556");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy5 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions6.propertyRenaming;
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy5, propertyRenamingPolicy9);
        compilerOptions0.setTransformAMDToCJSModules(true);
        boolean boolean13 = compilerOptions0.exportTestFunctions;
        boolean boolean14 = compilerOptions0.exportTestFunctions;
        boolean boolean15 = compilerOptions0.foldConstants;
        byte[] byteArray16 = new byte[] {};
        compilerOptions0.setInputVariableMapSerialized(byteArray16);
        boolean boolean18 = compilerOptions0.gatherCssNames;
        boolean boolean19 = compilerOptions0.checkSymbols;
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel21 = compilerOptions20.checkRequires;
        compilerOptions20.setAmbiguateProperties(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions24 = new com.google.javascript.jscomp.DependencyOptions();
        com.google.javascript.jscomp.DependencyOptions dependencyOptions26 = dependencyOptions24.setDependencyPruning(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions28 = dependencyOptions24.setMoocherDropping(true);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions30 = dependencyOptions28.setDependencyPruning(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean32 = compilerOptions31.moveFunctionDeclarations;
        compilerOptions31.crossModuleCodeMotion = true;
        compilerOptions31.checkSymbols = true;
        java.util.Set<java.lang.String> strSet37 = compilerOptions31.stripNamePrefixes;
        com.google.javascript.jscomp.DependencyOptions dependencyOptions38 = dependencyOptions28.setEntryPoints((java.util.Collection<java.lang.String>) strSet37);
        compilerOptions20.setStripTypePrefixes(strSet37);
        compilerOptions0.stripTypes = strSet37;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + checkLevel21 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel21.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(dependencyOptions26);
        org.junit.Assert.assertNotNull(dependencyOptions28);
        org.junit.Assert.assertNotNull(dependencyOptions30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(dependencyOptions38);
    }

    @Test
    public void test10557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10557");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        boolean boolean10 = compilerOptions0.inlineGetters;
        compilerOptions0.setFlowSensitiveInlineVariables(true);
        compilerOptions0.setInlineGetters(true);
        compilerOptions0.setNameAnonymousFunctionsOnly(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode18 = null;
        compilerOptions17.setTracerMode(tracerMode18);
        boolean boolean20 = compilerOptions17.generatePseudoNames;
        java.util.Set<java.lang.String> strSet21 = compilerOptions17.stripTypes;
        com.google.javascript.jscomp.CheckLevel checkLevel22 = compilerOptions17.reportMissingOverride;
        com.google.javascript.jscomp.SourceMap.Format format23 = compilerOptions17.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format23);
        compilerOptions0.markNoSideEffectCalls = true;
        compilerOptions0.setLineBreak(false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + checkLevel22 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel22.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(format23);
    }

    @Test
    public void test10558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10558");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setProtectHiddenSideEffects(true);
        compilerOptions0.moveFunctionDeclarations = true;
        boolean boolean7 = compilerOptions0.inlineConstantVars;
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions8.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode14 = null;
        compilerOptions8.setLanguageOut(languageMode14);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy16 = null;
        compilerOptions8.variableRenaming = variableRenamingPolicy16;
        com.google.javascript.jscomp.CheckLevel checkLevel18 = compilerOptions8.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions compilerOptions19 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions19.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy22 = compilerOptions19.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap23 = compilerOptions19.getTweakReplacements();
        boolean boolean24 = strMap23.isEmpty();
        java.lang.Object obj25 = null;
        com.google.javascript.rhino.Node node26 = strMap23.get(obj25);
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions27.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel30 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions27.setSourceMapDetailLevel(detailLevel30);
        boolean boolean32 = compilerOptions27.ideMode;
        compilerOptions27.setUnaliasableGlobals("");
        com.google.javascript.jscomp.CheckLevel checkLevel35 = compilerOptions27.checkUnreachableCode;
        com.google.javascript.rhino.Node node36 = strMap23.remove((java.lang.Object) checkLevel35);
        compilerOptions8.checkMissingGetCssNameLevel = checkLevel35;
        compilerOptions0.setCheckUnreachableCode(checkLevel35);
        compilerOptions0.checkMissingGetCssNameBlacklist = "";
        compilerOptions0.setTweakToStringLiteral("goog.global", "WARNING: hi!");
        compilerOptions0.smartNameRemoval = true;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + checkLevel18 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel18.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy22 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy22.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNotNull(detailLevel30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + checkLevel35 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel35.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(node36);
    }

    @Test
    public void test10559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10559");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str1 = compilerOptions0.syntheticBlockStartMarker;
        compilerOptions0.labelRenaming = true;
        compilerOptions0.setDefineToNumberLiteral("InputId: *global*", 54);
        compilerOptions0.generateExports = false;
        java.lang.String str9 = compilerOptions0.locale;
        compilerOptions0.setInlineProperties(false);
        compilerOptions0.locale = "";
        boolean boolean14 = compilerOptions0.reserveRawExports;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test10560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10560");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.CompilerInput compilerInput3 = jSModule1.getByName("FINEST");
        com.google.javascript.jscomp.SourceFile sourceFile6 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int8 = sourceFile6.getLineOfOffset((int) (short) 1);
        java.lang.String str9 = sourceFile6.getName();
        java.lang.String str10 = sourceFile6.getName();
        java.lang.String str11 = sourceFile6.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput13 = new com.google.javascript.jscomp.CompilerInput(sourceFile6, true);
        com.google.javascript.jscomp.CompilerInput compilerInput14 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput13);
        com.google.javascript.jscomp.JSModule jSModule15 = compilerInput13.getModule();
        com.google.javascript.jscomp.JSModule jSModule17 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler18 = new com.google.javascript.jscomp.Compiler();
        jSModule17.sortInputsByDeps(compiler18);
        java.lang.String str20 = jSModule17.getName();
        compilerInput13.setModule(jSModule17);
        jSModule1.addDependency(jSModule17);
        com.google.javascript.jscomp.SourceFile sourceFile25 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int27 = sourceFile25.getLineOfOffset((int) (short) 1);
        int int29 = sourceFile25.getLineOfOffset(100);
        java.lang.String str30 = sourceFile25.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput31 = new com.google.javascript.jscomp.CompilerInput(sourceFile25);
        com.google.javascript.rhino.InputId inputId32 = compilerInput31.getInputId();
        jSModule1.addFirst(compilerInput31);
        com.google.javascript.jscomp.CompilerInput compilerInput34 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput31);
        com.google.javascript.jscomp.Region region36 = compilerInput34.getRegion(4095);
        com.google.javascript.jscomp.CompilerInput compilerInput38 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput34, false);
        com.google.javascript.jscomp.SourceFile sourceFile39 = compilerInput38.getSourceFile();
        int int40 = compilerInput38.getNumLines();
        org.junit.Assert.assertNull(compilerInput3);
        org.junit.Assert.assertNotNull(sourceFile6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNull(jSModule15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "STRING PARAM_LIST 49" + "'", str20, "STRING PARAM_LIST 49");
        org.junit.Assert.assertNotNull(sourceFile25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(inputId32);
        org.junit.Assert.assertNull(region36);
        org.junit.Assert.assertNotNull(sourceFile39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
    }

    @Test
    public void test10561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10561");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream6 = jSTypeList3.parallelStream();
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream13 = jSTypeList10.parallelStream();
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator14 = jSTypeList10.spliterator();
        boolean boolean15 = jSTypeList3.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList20 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20, jSTypeArray19);
        boolean boolean22 = jSTypeList17.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray26 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList27 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList27, jSTypeArray26);
        boolean boolean29 = jSTypeList24.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList27);
        boolean boolean30 = jSTypeList17.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList27);
        boolean boolean31 = jSTypeList17.isEmpty();
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream32 = jSTypeList17.parallelStream();
        boolean boolean33 = jSTypeList3.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        com.google.javascript.jscomp.CompilerOptions compilerOptions34 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions34.crossModuleMethodMotion = true;
        compilerOptions34.syntheticBlockEndMarker = "hi!";
        compilerOptions34.removeUnusedClassProperties = false;
        compilerOptions34.setLineLengthThreshold(4095);
        com.google.javascript.jscomp.ErrorFormat errorFormat43 = compilerOptions34.errorFormat;
        compilerOptions34.setCrossModuleMethodMotion(true);
        compilerOptions34.preferLineBreakAtEndOfFile = true;
        compilerOptions34.crossModuleMethodMotion = true;
        compilerOptions34.enableRuntimeTypeCheck("hi!");
        com.google.javascript.jscomp.CompilerOptions compilerOptions52 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode53 = null;
        compilerOptions52.setTracerMode(tracerMode53);
        boolean boolean55 = compilerOptions52.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel56 = compilerOptions52.sourceMapDetailLevel;
        compilerOptions52.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet59 = compilerOptions52.stripNameSuffixes;
        compilerOptions34.setStripNameSuffixes(strSet59);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray64 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList65 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList65, jSTypeArray64);
        boolean boolean67 = jSTypeList62.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList65);
        java.lang.Object[] objArray68 = jSTypeList62.toArray();
        boolean boolean69 = strSet59.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions70 = new com.google.javascript.jscomp.DependencyOptions();
        com.google.javascript.jscomp.DependencyOptions dependencyOptions72 = dependencyOptions70.setDependencyPruning(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions74 = dependencyOptions72.setMoocherDropping(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions76 = dependencyOptions74.setDependencySorting(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions77 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean78 = compilerOptions77.moveFunctionDeclarations;
        compilerOptions77.crossModuleCodeMotion = true;
        compilerOptions77.checkSymbols = true;
        java.util.Set<java.lang.String> strSet83 = compilerOptions77.stripNamePrefixes;
        com.google.javascript.jscomp.DependencyOptions dependencyOptions84 = dependencyOptions76.setEntryPoints((java.util.Collection<java.lang.String>) strSet83);
        int int85 = jSTypeList62.lastIndexOf((java.lang.Object) strSet83);
        boolean boolean86 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        java.nio.charset.Charset charset88 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str89 = charset88.name();
        java.lang.String str90 = charset88.name();
        java.nio.charset.Charset charset91 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str92 = charset91.toString();
        boolean boolean93 = charset88.contains(charset91);
        com.google.javascript.jscomp.SourceFile sourceFile94 = com.google.javascript.jscomp.SourceFile.fromFile("/", charset91);
        boolean boolean95 = jSTypeList3.contains((java.lang.Object) "/");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.JSType jSType97 = jSTypeList3.get(192512);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 192512, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeStream6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeStream13);
        org.junit.Assert.assertNotNull(jSTypeSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(jSTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(jSTypeStream32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(errorFormat43);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(detailLevel56);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(jSTypeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(dependencyOptions72);
        org.junit.Assert.assertNotNull(dependencyOptions74);
        org.junit.Assert.assertNotNull(dependencyOptions76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strSet83);
        org.junit.Assert.assertNotNull(dependencyOptions84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(charset88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "US-ASCII" + "'", str89, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "US-ASCII" + "'", str90, "US-ASCII");
        org.junit.Assert.assertNotNull(charset91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "US-ASCII" + "'", str92, "US-ASCII");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(sourceFile94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test10562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10562");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        compilerOptions0.inlineFunctions = true;
        compilerOptions0.setCommonJSModulePathPrefix(":");
        compilerOptions0.setCrossModuleCodeMotion(true);
        compilerOptions0.disableRuntimeTypeCheck();
        boolean boolean12 = compilerOptions0.removeUnusedLocalVars;
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode14 = null;
        compilerOptions13.setTracerMode(tracerMode14);
        boolean boolean16 = compilerOptions13.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel17 = compilerOptions13.sourceMapDetailLevel;
        compilerOptions13.setColorizeErrorOutput(true);
        compilerOptions13.generatePseudoNames = true;
        compilerOptions13.setCheckControlStructures(false);
        com.google.javascript.jscomp.AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy24 = com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF;
        compilerOptions13.anonymousFunctionNaming = anonymousFunctionNamingPolicy24;
        com.google.javascript.jscomp.SourceMap.Format format26 = compilerOptions13.sourceMapFormat;
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions27.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions27.setTweakToDoubleLiteral("", (double) (short) 1);
        compilerOptions27.setCrossModuleCodeMotion(false);
        compilerOptions27.inputDelimiter = "STRING PARAM_LIST 49";
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy37 = compilerOptions27.variableRenaming;
        compilerOptions27.setInlineProperties(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions40 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions40.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy43 = compilerOptions40.propertyRenaming;
        java.lang.String[] strArray46 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        compilerOptions40.setStripTypes((java.util.Set<java.lang.String>) strSet47);
        com.google.javascript.jscomp.CompilerOptions compilerOptions50 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode51 = null;
        compilerOptions50.setTracerMode(tracerMode51);
        boolean boolean53 = compilerOptions50.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel54 = compilerOptions50.sourceMapDetailLevel;
        compilerOptions50.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions57 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions57.crossModuleMethodMotion = true;
        compilerOptions57.optimizeParameters = true;
        compilerOptions57.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel65 = compilerOptions57.checkGlobalNamesLevel;
        compilerOptions50.setReportMissingOverride(checkLevel65);
        compilerOptions40.setCheckUnreachableCode(checkLevel65);
        compilerOptions40.syntheticBlockStartMarker = "*global*";
        com.google.javascript.jscomp.CheckLevel checkLevel70 = compilerOptions40.checkMissingReturn;
        compilerOptions27.setBrokenClosureRequiresLevel(checkLevel70);
        com.google.javascript.jscomp.CompilerOptions.AliasTransformationHandler aliasTransformationHandler72 = compilerOptions27.getAliasTransformationHandler();
        compilerOptions13.setAliasTransformationHandler(aliasTransformationHandler72);
        compilerOptions0.setAliasTransformationHandler(aliasTransformationHandler72);
        com.google.javascript.rhino.SourcePosition<com.google.javascript.jscomp.CompilerOptions.AliasTransformation> aliasTransformationSourcePosition76 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.jscomp.CompilerOptions.AliasTransformation aliasTransformation77 = aliasTransformationHandler72.logAliasTransformation("sun.util.logging.resources.logging", aliasTransformationSourcePosition76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(detailLevel17);
        org.junit.Assert.assertTrue("'" + anonymousFunctionNamingPolicy24 + "' != '" + com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF + "'", anonymousFunctionNamingPolicy24.equals(com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format26);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy37 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.OFF + "'", variableRenamingPolicy37.equals(com.google.javascript.jscomp.VariableRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy43 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy43.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(detailLevel54);
        org.junit.Assert.assertTrue("'" + checkLevel65 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel65.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel70 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel70.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(aliasTransformationHandler72);
    }

    @Test
    public void test10563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10563");
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType0 = com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN;
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean5 = node4.isTry();
        java.lang.String str6 = node4.toString();
        boolean boolean7 = node4.isIn();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship12 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType0, node4, node11);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        com.google.javascript.rhino.ErrorReporter errorReporter20 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter20);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray22 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList23 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList23, jSTypeArray22);
        com.google.javascript.rhino.Node node25 = jSTypeRegistry21.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList23);
        node19.addChildrenToBack(node25);
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry28 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.Node node32 = jSTypeRegistry28.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = node32.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter34 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry35 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter34);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        com.google.javascript.rhino.Node node39 = jSTypeRegistry35.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        boolean boolean40 = node39.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter41 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry42 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter41);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray43 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList44 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList44, jSTypeArray43);
        com.google.javascript.rhino.Node node46 = jSTypeRegistry42.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList44);
        com.google.javascript.rhino.Node node49 = new com.google.javascript.rhino.Node((int) (short) 0, node19, node32, node39, node46, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        com.google.javascript.rhino.ErrorReporter errorReporter57 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry58 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter57);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray59 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList60 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList60, jSTypeArray59);
        com.google.javascript.rhino.Node node62 = jSTypeRegistry58.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList60);
        node56.addChildrenToBack(node62);
        com.google.javascript.rhino.ErrorReporter errorReporter64 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry65 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter64);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        com.google.javascript.rhino.Node node69 = jSTypeRegistry65.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        boolean boolean70 = node69.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter71 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry72 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter71);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray73 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList74 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList74, jSTypeArray73);
        com.google.javascript.rhino.Node node76 = jSTypeRegistry72.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList74);
        boolean boolean77 = node76.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter78 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry79 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter78);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray80 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList81 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList81, jSTypeArray80);
        com.google.javascript.rhino.Node node83 = jSTypeRegistry79.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList81);
        com.google.javascript.rhino.Node node86 = new com.google.javascript.rhino.Node((int) (short) 0, node56, node69, node76, node83, 0, 49);
        com.google.javascript.rhino.Node node87 = node49.useSourceInfoFrom(node69);
        node49.setSourceEncodedPosition(16);
        boolean boolean90 = node49.hasOneChild();
        int int92 = node49.getIntProp(12);
        com.google.javascript.rhino.Node node94 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node95 = node94.cloneTree();
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship96 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType0, node49, node94);
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable97 = node94.getAncestors();
        org.junit.Assert.assertTrue("'" + subclassType0 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN + "'", subclassType0.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN));
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "STRING PARAM_LIST 49" + "'", str6, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(jSTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(jSTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(jSTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(jSTypeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(jSTypeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(node94);
        org.junit.Assert.assertNotNull(node95);
        org.junit.Assert.assertNotNull(ancestorIterable97);
    }

    @Test
    public void test10564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10564");
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType0 = com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN;
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean5 = node4.isTry();
        java.lang.String str6 = node4.toString();
        boolean boolean7 = node4.isIn();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship12 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType0, node4, node11);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder13 = node11.new FileLevelJsDocBuilder();
        boolean boolean14 = node11.isSetterDef();
        node11.removeProp(11);
        java.lang.String str20 = node11.toString(true, true, false);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        com.google.javascript.rhino.Node node34 = jSTypeRegistry30.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        node28.addChildrenToBack(node34);
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray38 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList39 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList39, jSTypeArray38);
        com.google.javascript.rhino.Node node41 = jSTypeRegistry37.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList39);
        boolean boolean42 = node41.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        boolean boolean49 = node48.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter50 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry51 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter50);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray52 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList53 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList53, jSTypeArray52);
        com.google.javascript.rhino.Node node55 = jSTypeRegistry51.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList53);
        com.google.javascript.rhino.Node node58 = new com.google.javascript.rhino.Node((int) (short) 0, node28, node41, node48, node55, 0, 49);
        com.google.javascript.rhino.JSDocInfo jSDocInfo59 = null;
        node41.setJSDocInfo(jSDocInfo59);
        com.google.javascript.rhino.Node node61 = node41.cloneNode();
        com.google.javascript.rhino.JSDocInfo jSDocInfo62 = node61.getJSDocInfo();
        java.lang.String str63 = node61.getSourceFileName();
        int int64 = node61.getLength();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        boolean boolean71 = node70.isIn();
        boolean boolean72 = node70.isGetElem();
        java.lang.String str76 = node70.toString(true, false, false);
        com.google.javascript.rhino.Node node78 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node79 = node70.useSourceInfoIfMissingFromForTree(node78);
        com.google.javascript.rhino.Node node80 = node61.clonePropsFrom(node70);
        boolean boolean81 = node70.isWhile();
        int int82 = node70.getSideEffectFlags();
        com.google.javascript.rhino.Node node83 = new com.google.javascript.rhino.Node(54, node70);
        com.google.javascript.rhino.Node node84 = node11.copyInformationFromForTree(node70);
        int int85 = node11.getSourceOffset();
        org.junit.Assert.assertTrue("'" + subclassType0 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN + "'", subclassType0.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN));
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "STRING PARAM_LIST 49" + "'", str6, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "NUMBER -1.0" + "'", str20, "NUMBER -1.0");
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(jSTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(jSTypeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNull(jSDocInfo62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "PARAM_LIST" + "'", str76, "PARAM_LIST");
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test10565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10565");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) 280489984000L, 4, 8);
        org.junit.Assert.assertNotNull(node3);
    }

    @Test
    public void test10566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10566");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        boolean boolean10 = compilerOptions0.coalesceVariableNames;
        compilerOptions0.setOptimizeArgumentsArray(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions13.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy16 = compilerOptions13.propertyRenaming;
        boolean boolean17 = compilerOptions13.disambiguateProperties;
        compilerOptions13.setFoldConstants(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode21 = null;
        compilerOptions20.setTracerMode(tracerMode21);
        boolean boolean23 = compilerOptions20.generatePseudoNames;
        com.google.javascript.jscomp.SourceMap.LocationMapping[] locationMappingArray24 = new com.google.javascript.jscomp.SourceMap.LocationMapping[] {};
        java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping> locationMappingList25 = new java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList25, locationMappingArray24);
        compilerOptions20.sourceMapLocationMappings = locationMappingList25;
        compilerOptions13.sourceMapLocationMappings = locationMappingList25;
        com.google.javascript.jscomp.CompilerOptions compilerOptions29 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode30 = null;
        compilerOptions29.setTracerMode(tracerMode30);
        boolean boolean32 = compilerOptions29.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel33 = compilerOptions29.sourceMapDetailLevel;
        compilerOptions29.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet36 = compilerOptions29.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile38 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput40 = new com.google.javascript.jscomp.CompilerInput(sourceFile38, true);
        com.google.javascript.rhino.InputId inputId42 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput44 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput40, inputId42, true);
        java.lang.String str45 = compilerInput44.toString();
        boolean boolean46 = strSet36.contains((java.lang.Object) compilerInput44);
        compilerOptions13.setStripNamePrefixes(strSet36);
        compilerOptions0.setStripNamePrefixes(strSet36);
        com.google.javascript.jscomp.CompilerOptions compilerOptions49 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode50 = null;
        compilerOptions49.setTracerMode(tracerMode50);
        boolean boolean52 = compilerOptions49.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel53 = compilerOptions49.sourceMapDetailLevel;
        compilerOptions49.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions56 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions56.crossModuleMethodMotion = true;
        compilerOptions56.optimizeParameters = true;
        compilerOptions56.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel64 = compilerOptions56.checkGlobalNamesLevel;
        compilerOptions49.setReportMissingOverride(checkLevel64);
        java.util.Set<java.lang.String> strSet66 = compilerOptions49.stripTypes;
        compilerOptions49.setTweakToStringLiteral("java.io.IOException: ", "hi!");
        com.google.javascript.jscomp.CompilerOptions compilerOptions70 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions70.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode73 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions70.setTracer(tracerMode73);
        com.google.javascript.jscomp.CompilerOptions.Reach reach75 = com.google.javascript.jscomp.CompilerOptions.Reach.NONE;
        compilerOptions70.setInlineVariables(reach75);
        compilerOptions49.setInlineFunctions(reach75);
        compilerOptions0.setRemoveUnusedVariable(reach75);
        compilerOptions0.gatherCssNames = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions81 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode82 = null;
        compilerOptions81.setTracerMode(tracerMode82);
        compilerOptions81.setGeneratePseudoNames(false);
        compilerOptions81.setDefineToNumberLiteral("PARAM_LIST\n", (int) '/');
        java.lang.String str89 = compilerOptions81.syntheticBlockStartMarker;
        compilerOptions81.setRemoveAbstractMethods(false);
        com.google.javascript.jscomp.CheckLevel checkLevel92 = compilerOptions81.checkMissingGetCssNameLevel;
        compilerOptions0.setCheckGlobalNamesLevel(checkLevel92);
        compilerOptions0.setRuntimeTypeCheckLogFunction("InputId: JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of code motion iterations: {0}");
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy96 = compilerOptions0.variableRenaming;
        compilerOptions0.recordFunctionInformation = false;
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy16 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy16.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(locationMappingArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(detailLevel33);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "*global*" + "'", str45, "*global*");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(detailLevel53);
        org.junit.Assert.assertTrue("'" + checkLevel64 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel64.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertTrue("'" + tracerMode73 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode73.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + reach75 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.NONE + "'", reach75.equals(com.google.javascript.jscomp.CompilerOptions.Reach.NONE));
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + checkLevel92 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel92.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(variableRenamingPolicy96);
    }

    @Test
    public void test10567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10567");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        boolean boolean21 = compilerOptions0.shouldColorizeErrorOutput();
        java.util.Set<java.lang.String> strSet22 = compilerOptions0.stripNameSuffixes;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test10568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10568");
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray0 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList1 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList1, jSTypeArray0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        boolean boolean6 = jSTypeList1.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        java.lang.Object[] objArray7 = jSTypeList1.toArray();
        com.google.javascript.jscomp.CustomPassExecutionTime customPassExecutionTime8 = com.google.javascript.jscomp.CustomPassExecutionTime.AFTER_OPTIMIZATION_LOOP;
        com.google.javascript.jscomp.CustomPassExecutionTime customPassExecutionTime9 = com.google.javascript.jscomp.CustomPassExecutionTime.BEFORE_CHECKS;
        com.google.javascript.jscomp.CustomPassExecutionTime[] customPassExecutionTimeArray10 = new com.google.javascript.jscomp.CustomPassExecutionTime[] { customPassExecutionTime8, customPassExecutionTime9 };
        com.google.javascript.jscomp.CustomPassExecutionTime[] customPassExecutionTimeArray11 = jSTypeList1.toArray(customPassExecutionTimeArray10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions12 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions12.crossModuleMethodMotion = true;
        compilerOptions12.syntheticBlockEndMarker = "hi!";
        compilerOptions12.removeUnusedClassProperties = false;
        compilerOptions12.setLineLengthThreshold(4095);
        compilerOptions12.setInputDelimiter("goog.exportSymbol");
        compilerOptions12.inputDelimiter = "WARNING: hi!";
        boolean boolean25 = jSTypeList1.contains((java.lang.Object) compilerOptions12);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray26 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList27 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList27, jSTypeArray26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        boolean boolean32 = jSTypeList27.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray33 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList34 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList34, jSTypeArray33);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        boolean boolean39 = jSTypeList34.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        boolean boolean40 = jSTypeList27.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        boolean boolean41 = jSTypeList27.isEmpty();
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry43 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray44 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList45 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList45, jSTypeArray44);
        com.google.javascript.rhino.Node node47 = jSTypeRegistry43.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList45);
        com.google.javascript.rhino.ErrorReporter errorReporter48 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry49 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray50 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList51 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList51, jSTypeArray50);
        com.google.javascript.rhino.Node node53 = jSTypeRegistry49.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList51);
        com.google.javascript.rhino.jstype.JSType jSType58 = jSTypeRegistry49.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry60 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        com.google.javascript.rhino.Node node64 = jSTypeRegistry60.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        com.google.javascript.rhino.jstype.JSType jSType69 = jSTypeRegistry60.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray70 = new com.google.javascript.rhino.jstype.JSType[] { jSType69 };
        com.google.javascript.rhino.jstype.FunctionType functionType71 = jSTypeRegistry43.createConstructorTypeWithVarArgs(jSType58, jSTypeArray70);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable73 = jSTypeRegistry43.getTypesWithProperty("java.io.IOException: ");
        jSTypeRegistry43.incrementGeneration();
        com.google.javascript.rhino.jstype.JSType jSType79 = jSTypeRegistry43.createNamedType("PARAM_LIST 0", "/experiment/:/hi!", 40, 4095);
        boolean boolean80 = jSTypeList27.add(jSType79);
        boolean boolean81 = jSTypeList1.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList27);
        org.junit.Assert.assertNotNull(jSTypeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertTrue("'" + customPassExecutionTime8 + "' != '" + com.google.javascript.jscomp.CustomPassExecutionTime.AFTER_OPTIMIZATION_LOOP + "'", customPassExecutionTime8.equals(com.google.javascript.jscomp.CustomPassExecutionTime.AFTER_OPTIMIZATION_LOOP));
        org.junit.Assert.assertTrue("'" + customPassExecutionTime9 + "' != '" + com.google.javascript.jscomp.CustomPassExecutionTime.BEFORE_CHECKS + "'", customPassExecutionTime9.equals(com.google.javascript.jscomp.CustomPassExecutionTime.BEFORE_CHECKS));
        org.junit.Assert.assertNotNull(customPassExecutionTimeArray10);
        org.junit.Assert.assertNotNull(customPassExecutionTimeArray11);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(jSTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(jSTypeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(jSTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(jSTypeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(jSType58);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNotNull(jSType69);
        org.junit.Assert.assertNotNull(jSTypeArray70);
        org.junit.Assert.assertNotNull(functionType71);
        org.junit.Assert.assertNotNull(jSTypeIterable73);
        org.junit.Assert.assertNotNull(jSType79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test10569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10569");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(false, false);
        java.io.File file6 = file2.getParentFile();
        long long7 = file6.getUsableSpace();
        boolean boolean8 = file6.mkdirs();
        java.io.File file9 = file6.getAbsoluteFile();
        java.lang.String str10 = file9.getAbsolutePath();
        com.google.javascript.jscomp.SourceFile sourceFile11 = com.google.javascript.jscomp.SourceFile.fromFile(file9);
        java.io.File file14 = new java.io.File(":", "hi!");
        boolean boolean17 = file14.setExecutable(true, false);
        java.io.File file19 = new java.io.File(file14, "PARAM_LIST\n");
        java.io.File file20 = file19.getParentFile();
        boolean boolean21 = file20.createNewFile();
        java.io.File file22 = file20.getAbsoluteFile();
        long long23 = file20.lastModified();
        long long24 = file20.length();
        boolean boolean25 = file20.mkdir();
        boolean boolean26 = file9.renameTo(file20);
        boolean boolean27 = file9.canRead();
        java.net.URL uRL28 = file9.toURL();
        boolean boolean30 = file9.setReadable(true);
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), ":");
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 280488706048L + "'", long7 == 280488706048L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(file9);
// flaky:         org.junit.Assert.assertEquals(file9.getParent(), "/experiment");
// flaky:         org.junit.Assert.assertEquals(file9.toString(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/experiment/:" + "'", str10, "/experiment/:");
        org.junit.Assert.assertNotNull(sourceFile11);
        org.junit.Assert.assertEquals(file14.getParent(), ":");
        org.junit.Assert.assertEquals(file14.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals(file19.getParent(), ":/hi!");
        org.junit.Assert.assertEquals(file19.toString(), ":/hi!/PARAM_LIST\n");
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), ":");
        org.junit.Assert.assertEquals(file20.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(file22);
// flaky:         org.junit.Assert.assertEquals(file22.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file22.toString(), "/experiment/:/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 280487309000L + "'", long23 == 280487309000L);
// flaky:         org.junit.Assert.assertTrue("'" + long24 + "' != '" + 4096L + "'", long24 == 4096L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(uRL28);
// flaky:         org.junit.Assert.assertEquals(uRL28.toString(), "file:/experiment/:/");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test10570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10570");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        java.lang.String str75 = node74.getSourceFileName();
        boolean boolean76 = node74.isObjectLit();
        com.google.javascript.rhino.Node node77 = node74.getLastChild();
        java.lang.String str78 = node74.getQualifiedName();
        boolean boolean79 = node74.isAdd();
        boolean boolean80 = node74.isUnscopedQualifiedName();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test10571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10571");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.lang.Object[] objArray6 = jSTypeList3.toArray();
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions7.checkRequires;
        compilerOptions7.setRewriteNewDateGoogNow(true);
        compilerOptions7.setSyntheticBlockStartMarker("OFF");
        compilerOptions7.skipAllCompilerPasses();
        compilerOptions7.setUnaliasableGlobals("FINEST");
        compilerOptions7.setAliasKeywords(true);
        compilerOptions7.setOptimizeCalls(true);
        boolean boolean20 = jSTypeList3.contains((java.lang.Object) compilerOptions7);
        java.lang.Object[] objArray21 = jSTypeList3.toArray();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
    }

    @Test
    public void test10572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10572");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        compilerOptions0.setFoldConstants(true);
        boolean boolean7 = compilerOptions0.removeUnusedPrototypePropertiesInExterns;
        java.lang.Object obj8 = compilerOptions0.clone();
        boolean boolean9 = compilerOptions0.assumeClosuresOnlyCaptureReferences();
        compilerOptions0.setGatherCssNames(false);
        compilerOptions0.inlineGetters = false;
        com.google.javascript.jscomp.MessageBundle messageBundle14 = null;
        compilerOptions0.messageBundle = messageBundle14;
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test10573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10573");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        jSTypeRegistry1.forwardDeclareType("PARAM_LIST");
        jSTypeRegistry1.setLastGeneration(true);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        jSTypeRegistry15.clearNamedTypes();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList20 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20, jSTypeArray19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray22 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList23 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList23, jSTypeArray22);
        boolean boolean25 = jSTypeList20.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry18.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList20);
        jSTypeRegistry18.setLastGeneration(false);
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.ObjectType objectType31 = jSTypeRegistry30.createAnonymousObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry33 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray34 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList35 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList35, jSTypeArray34);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        boolean boolean40 = jSTypeList35.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        com.google.javascript.rhino.Node node41 = jSTypeRegistry33.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList35);
        jSTypeRegistry33.setLastGeneration(false);
        com.google.javascript.rhino.jstype.JSType jSType48 = jSTypeRegistry33.createNamedType("java.io.IOException: java.io.IOException: ", "", 47, (int) (short) 1);
        jSTypeRegistry33.resetForTypeCheck();
        com.google.javascript.rhino.jstype.JSType jSType50 = null;
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList55 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55, jSTypeArray54);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray57 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList58 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList58, jSTypeArray57);
        boolean boolean60 = jSTypeList55.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList58);
        com.google.javascript.rhino.Node node61 = jSTypeRegistry53.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList55);
        jSTypeRegistry53.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable65 = jSTypeRegistry53.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType70 = jSTypeRegistry53.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter71 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry72 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter71);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray73 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList74 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList74, jSTypeArray73);
        com.google.javascript.rhino.Node node76 = jSTypeRegistry72.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList74);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream77 = jSTypeList74.parallelStream();
        com.google.javascript.rhino.Node node78 = jSTypeRegistry53.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList74);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray79 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.JSType jSType80 = jSTypeRegistry53.createUnionType(jSTypeArray79);
        com.google.javascript.rhino.jstype.FunctionType functionType81 = jSTypeRegistry33.createFunctionType(jSType50, false, jSTypeArray79);
        com.google.javascript.rhino.jstype.FunctionType functionType82 = jSTypeRegistry18.createConstructorTypeWithVarArgs((com.google.javascript.rhino.jstype.JSType) objectType31, jSTypeArray79);
        com.google.javascript.rhino.Node node83 = jSTypeRegistry15.createOptionalParameters(jSTypeArray79);
        com.google.javascript.rhino.Node node84 = jSTypeRegistry1.createOptionalParameters(jSTypeArray79);
        boolean boolean85 = node84.isInc();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(objectType31);
        org.junit.Assert.assertNotNull(jSTypeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(jSType48);
        org.junit.Assert.assertNotNull(jSTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(jSTypeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(jSTypeIterable65);
        org.junit.Assert.assertNotNull(jSType70);
        org.junit.Assert.assertNotNull(jSTypeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNotNull(jSTypeStream77);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertNotNull(jSTypeArray79);
        org.junit.Assert.assertNotNull(jSType80);
        org.junit.Assert.assertNotNull(functionType81);
        org.junit.Assert.assertNotNull(functionType82);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test10574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10574");
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags1 = new com.google.javascript.rhino.Node.SideEffectFlags(2147483647);
        sideEffectFlags1.clearSideEffectFlags();
        sideEffectFlags1.setMutatesThis();
    }

    @Test
    public void test10575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10575");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        boolean boolean10 = compilerOptions0.inlineGetters;
        compilerOptions0.setFlowSensitiveInlineVariables(true);
        compilerOptions0.setInlineGetters(true);
        compilerOptions0.setNameAnonymousFunctionsOnly(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode18 = null;
        compilerOptions17.setTracerMode(tracerMode18);
        boolean boolean20 = compilerOptions17.generatePseudoNames;
        java.util.Set<java.lang.String> strSet21 = compilerOptions17.stripTypes;
        com.google.javascript.jscomp.CheckLevel checkLevel22 = compilerOptions17.reportMissingOverride;
        com.google.javascript.jscomp.SourceMap.Format format23 = compilerOptions17.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format23);
        compilerOptions0.setConvertToDottedProperties(true);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode27 = compilerOptions0.getTracerMode();
        com.google.javascript.jscomp.CompilerOptions compilerOptions28 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions28.crossModuleMethodMotion = true;
        compilerOptions28.skipAllCompilerPasses();
        compilerOptions28.resetWarningsGuard();
        compilerOptions28.setInlineLocalVariables(false);
        compilerOptions28.coalesceVariableNames = true;
        java.lang.String str37 = compilerOptions28.aliasStringsBlacklist;
        compilerOptions28.devirtualizePrototypeMethods = false;
        compilerOptions28.optimizeParameters = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy42 = com.google.javascript.jscomp.PropertyRenamingPolicy.HEURISTIC;
        compilerOptions28.setPropertyRenaming(propertyRenamingPolicy42);
        compilerOptions0.setPropertyRenaming(propertyRenamingPolicy42);
        com.google.javascript.jscomp.CompilerOptions compilerOptions45 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel46 = compilerOptions45.checkRequires;
        compilerOptions45.setRewriteNewDateGoogNow(true);
        compilerOptions45.setSyntheticBlockStartMarker("OFF");
        compilerOptions45.skipAllCompilerPasses();
        com.google.javascript.jscomp.CompilerOptions compilerOptions52 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions52.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy55 = compilerOptions52.propertyRenaming;
        java.lang.String[] strArray58 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet59 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet59, strArray58);
        compilerOptions52.setStripTypes((java.util.Set<java.lang.String>) strSet59);
        com.google.javascript.jscomp.CompilerOptions compilerOptions62 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode63 = null;
        compilerOptions62.setTracerMode(tracerMode63);
        boolean boolean65 = compilerOptions62.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel66 = compilerOptions62.sourceMapDetailLevel;
        compilerOptions62.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions69 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions69.crossModuleMethodMotion = true;
        compilerOptions69.optimizeParameters = true;
        compilerOptions69.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel77 = compilerOptions69.checkGlobalNamesLevel;
        compilerOptions62.setReportMissingOverride(checkLevel77);
        compilerOptions52.setCheckUnreachableCode(checkLevel77);
        compilerOptions45.setCheckMissingReturn(checkLevel77);
        com.google.javascript.jscomp.CompilerOptions.Reach reach81 = com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY;
        compilerOptions45.setInlineVariables(reach81);
        com.google.javascript.jscomp.ErrorFormat errorFormat83 = compilerOptions45.errorFormat;
        compilerOptions0.setErrorFormat(errorFormat83);
        java.util.Set<java.lang.String> strSet85 = compilerOptions0.stripNameSuffixes;
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + checkLevel22 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel22.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(format23);
        org.junit.Assert.assertTrue("'" + tracerMode27 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode27.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy42 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.HEURISTIC + "'", propertyRenamingPolicy42.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.HEURISTIC));
        org.junit.Assert.assertTrue("'" + checkLevel46 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel46.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy55 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy55.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(detailLevel66);
        org.junit.Assert.assertTrue("'" + checkLevel77 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel77.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + reach81 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY + "'", reach81.equals(com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY));
        org.junit.Assert.assertNotNull(errorFormat83);
        org.junit.Assert.assertNotNull(strSet85);
    }

    @Test
    public void test10576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10576");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int4 = sourceFile2.getLineOfOffset((int) (short) 1);
        java.io.Reader reader5 = sourceFile2.getCodeReader();
        int int6 = reader5.read();
        long long8 = reader5.skip(0L);
        boolean boolean9 = reader5.markSupported();
        reader5.mark(0);
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(reader5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test10577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10577");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.crossModuleCodeMotion = true;
        compilerOptions0.setExportTestFunctions(false);
        compilerOptions0.setAcceptConstKeyword(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions8.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode14 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions8.setTracer(tracerMode14);
        compilerOptions8.setSyntheticBlockStartMarker("");
        boolean boolean18 = compilerOptions8.computeFunctionSideEffects;
        com.google.javascript.jscomp.CompilerOptions compilerOptions19 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel20 = compilerOptions19.checkRequires;
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode22 = null;
        compilerOptions21.setTracerMode(tracerMode22);
        boolean boolean24 = compilerOptions21.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel25 = compilerOptions21.sourceMapDetailLevel;
        compilerOptions21.setColorizeErrorOutput(true);
        compilerOptions21.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions30 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions30.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy33 = compilerOptions30.propertyRenaming;
        compilerOptions21.propertyRenaming = propertyRenamingPolicy33;
        com.google.javascript.jscomp.CheckLevel checkLevel35 = compilerOptions21.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel36 = compilerOptions21.checkRequires;
        compilerOptions19.setCheckRequires(checkLevel36);
        compilerOptions8.setCheckGlobalThisLevel(checkLevel36);
        compilerOptions0.setCheckGlobalNamesLevel(checkLevel36);
        java.util.Set<java.lang.String> strSet40 = null;
        compilerOptions0.setStripNameSuffixes(strSet40);
        compilerOptions0.resetWarningsGuard();
        boolean boolean43 = compilerOptions0.aliasAllStrings;
        compilerOptions0.setAliasableGlobals("Node tree inequality:\nTree1:\nPARAM_LIST\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: PARAM_LIST\n\n\nSubtree2: NUMBER 0.0\n");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + tracerMode14 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode14.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + checkLevel20 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel20.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(detailLevel25);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy33 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy33.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel35 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel35.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel36 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel36.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test10578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10578");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        boolean boolean10 = node9.isVarArgs();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable11 = node9.siblings();
        com.google.javascript.rhino.Node node12 = node9.cloneTree();
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        com.google.javascript.rhino.ErrorReporter errorReporter20 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter20);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray22 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList23 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList23, jSTypeArray22);
        com.google.javascript.rhino.Node node25 = jSTypeRegistry21.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList23);
        node19.addChildrenToBack(node25);
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry28 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.Node node32 = jSTypeRegistry28.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = node32.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter34 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry35 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter34);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        com.google.javascript.rhino.Node node39 = jSTypeRegistry35.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        boolean boolean40 = node39.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter41 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry42 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter41);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray43 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList44 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList44, jSTypeArray43);
        com.google.javascript.rhino.Node node46 = jSTypeRegistry42.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList44);
        com.google.javascript.rhino.Node node49 = new com.google.javascript.rhino.Node((int) (short) 0, node19, node32, node39, node46, 0, 49);
        boolean boolean50 = node19.isDo();
        boolean boolean51 = node19.isWhile();
        boolean boolean52 = node19.hasOneChild();
        java.lang.String str53 = node9.checkTreeEquals(node19);
        int int54 = node9.getSourceOffset();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(nodeIterable11);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(jSTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(jSTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Node tree inequality:\nTree1:\nPARAM_LIST\n\n\nTree2:\nPARAM_LIST\n    PARAM_LIST\n\n\nSubtree1: PARAM_LIST\n\n\nSubtree2: PARAM_LIST\n    PARAM_LIST\n" + "'", str53, "Node tree inequality:\nTree1:\nPARAM_LIST\n\n\nTree2:\nPARAM_LIST\n    PARAM_LIST\n\n\nSubtree1: PARAM_LIST\n\n\nSubtree2: PARAM_LIST\n    PARAM_LIST\n");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test10579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10579");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        compilerOptions9.optimizeParameters = true;
        compilerOptions9.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel17 = compilerOptions9.checkGlobalNamesLevel;
        compilerOptions0.setCheckUnreachableCode(checkLevel17);
        compilerOptions0.setProcessObjectPropertyString(false);
        boolean boolean21 = compilerOptions0.aliasKeywords;
        com.google.javascript.jscomp.CompilerOptions compilerOptions22 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions22.crossModuleMethodMotion = true;
        compilerOptions22.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions27.crossModuleMethodMotion = true;
        compilerOptions27.skipAllCompilerPasses();
        compilerOptions27.resetWarningsGuard();
        java.lang.String str32 = compilerOptions27.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy33 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy34 = null;
        compilerOptions27.setRenamingPolicy(variableRenamingPolicy33, propertyRenamingPolicy34);
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions36.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy39 = compilerOptions36.propertyRenaming;
        compilerOptions22.setRenamingPolicy(variableRenamingPolicy33, propertyRenamingPolicy39);
        com.google.javascript.jscomp.CompilerOptions compilerOptions41 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions41.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions41.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode47 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions41.setTracer(tracerMode47);
        compilerOptions41.setSyntheticBlockStartMarker("");
        java.util.Set<java.lang.String> strSet51 = compilerOptions41.stripNameSuffixes;
        compilerOptions22.stripNamePrefixes = strSet51;
        compilerOptions0.setStripNamePrefixes(strSet51);
        compilerOptions0.setLocale("/experiment/:/hi!/goog.exportSymbol6344102151034639300();");
        org.junit.Assert.assertTrue("'" + checkLevel17 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel17.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy33 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy33.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy39 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy39.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + tracerMode47 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode47.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertNotNull(strSet51);
    }

    @Test
    public void test10580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10580");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int4 = sourceFile2.getLineOfOffset((int) (short) 1);
        java.lang.String str5 = sourceFile2.getName();
        com.google.javascript.jscomp.JsAst jsAst6 = new com.google.javascript.jscomp.JsAst(sourceFile2);
        jsAst6.clearAst();
        com.google.javascript.jscomp.CompilerInput compilerInput10 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) jsAst6, "*global*", false);
        boolean boolean11 = compilerInput10.isExtern();
        java.lang.String str12 = compilerInput10.getName();
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "*global*" + "'", str12, "*global*");
    }

    @Test
    public void test10581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10581");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.AMBIGUOUS_FUNCTION_DECL;
        com.google.javascript.jscomp.DiagnosticGroups.DUPLICATE_MESSAGE = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.CHECK_TYPES = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.FILEOVERVIEW_JSDOC = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.GLOBAL_THIS = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.NON_STANDARD_JSDOC = diagnosticGroup0;
// flaky:         org.junit.Assert.assertNull(diagnosticGroup0);
    }

    @Test
    public void test10582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10582");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("");
        stats1.changes = 47;
        int int4 = stats1.size;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test10583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10583");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setPreferLineBreakAtEndOfFile(true);
        boolean boolean7 = compilerOptions0.crossModuleCodeMotion;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test10584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10584");
        com.google.javascript.jscomp.SourceFile sourceFile3 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int5 = sourceFile3.getLineOfOffset((int) (short) 1);
        java.io.Reader reader6 = sourceFile3.getCodeReader();
        int int7 = reader6.read();
        int int8 = reader6.read();
        boolean boolean9 = reader6.ready();
        boolean boolean10 = reader6.markSupported();
        com.google.javascript.jscomp.SourceFile sourceFile11 = com.google.javascript.jscomp.SourceFile.fromReader("Node tree inequality:\nTree1:\nTHIS\n    STRING java.io.IOException:  43\n    PARAM_LIST [var_args_name: 1] [opt_arg: 1]\n\n\nTree2:\nSTRING \n\n\nSubtree1: THIS\n    STRING java.io.IOException:  43\n    PARAM_LIST [var_args_name: 1] [opt_arg: 1]\n\n\nSubtree2: STRING \n", reader6);
        org.junit.Assert.assertNotNull(sourceFile3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(sourceFile11);
    }

    @Test
    public void test10585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10585");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString(0, "PARAM_LIST", 49, 300);
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString(32, ":", 44, 300);
        com.google.javascript.rhino.Node node11 = node9.getAncestor(53);
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable12 = node9.getAncestors();
        boolean boolean13 = node9.isUnscopedQualifiedName();
        com.google.javascript.rhino.Node node14 = node4.useSourceInfoFrom(node9);
        boolean boolean15 = node9.hasOneChild();
        boolean boolean16 = node9.isAssignAdd();
        boolean boolean17 = node9.isStringKey();
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNotNull(ancestorIterable12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test10586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10586");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        compilerOptions0.setFoldConstants(true);
        compilerOptions0.flowSensitiveInlineVariables = true;
        compilerOptions0.setTweakToStringLiteral("InputId: *global*", "hi!");
        compilerOptions0.collapseAnonymousFunctions = false;
        compilerOptions0.setOutputCharset("");
        java.util.Set<java.lang.String> strSet16 = compilerOptions0.stripTypes;
        boolean boolean17 = compilerOptions0.ambiguateProperties;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions18.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel21 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions18.setSourceMapDetailLevel(detailLevel21);
        compilerOptions18.inlineFunctions = true;
        compilerOptions18.setCommonJSModulePathPrefix(":");
        compilerOptions18.setCrossModuleCodeMotion(true);
        compilerOptions18.disableRuntimeTypeCheck();
        boolean boolean30 = compilerOptions18.removeUnusedLocalVars;
        com.google.javascript.jscomp.SourceMap.Format format31 = compilerOptions18.sourceMapFormat;
        compilerOptions0.sourceMapFormat = format31;
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(detailLevel21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(format31);
    }

    @Test
    public void test10587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10587");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy5 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions6.propertyRenaming;
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy5, propertyRenamingPolicy9);
        compilerOptions0.setTransformAMDToCJSModules(true);
        compilerOptions0.ambiguateProperties = true;
        compilerOptions0.inlineLocalFunctions = true;
        boolean boolean17 = compilerOptions0.inlineFunctions;
        byte[] byteArray18 = compilerOptions0.inputVariableMapSerialized;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(byteArray18);
    }

    @Test
    public void test10588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10588");
        com.google.javascript.jscomp.SourceFile sourceFile1 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput3 = new com.google.javascript.jscomp.CompilerInput(sourceFile1, true);
        com.google.javascript.rhino.InputId inputId5 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput7 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput3, inputId5, true);
        com.google.javascript.jscomp.CompilerInput compilerInput9 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput7, false);
        com.google.javascript.jscomp.JSModule jSModule11 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler12 = new com.google.javascript.jscomp.Compiler();
        jSModule11.sortInputsByDeps(compiler12);
        java.lang.String str14 = jSModule11.getName();
        compilerInput7.setModule(jSModule11);
        java.lang.String str16 = compilerInput7.getCode();
        com.google.javascript.jscomp.CompilerInput compilerInput19 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput7, "*global*", true);
        compilerInput19.clearAst();
        com.google.javascript.jscomp.CompilerInput compilerInput21 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput19);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "STRING PARAM_LIST 49" + "'", str14, "STRING PARAM_LIST 49");
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test10589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10589");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str1 = compilerOptions0.syntheticBlockStartMarker;
        compilerOptions0.labelRenaming = true;
        boolean boolean4 = compilerOptions0.inlineLocalFunctions;
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.crossModuleMethodMotion = true;
        compilerOptions5.skipAllCompilerPasses();
        boolean boolean9 = compilerOptions5.flowSensitiveInlineVariables;
        java.lang.String[] strArray19 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        compilerOptions5.stripTypes = strSet20;
        compilerOptions0.setStripNameSuffixes((java.util.Set<java.lang.String>) strSet20);
        boolean boolean24 = compilerOptions0.ideMode;
        compilerOptions0.locale = "PARAM_LIST\n    PARAM_LIST\n";
        compilerOptions0.setAliasableGlobals("goog.exportSymbol");
        compilerOptions0.setTweakToStringLiteral("InputId: FINEST", "NUMBER -1.0");
        compilerOptions0.setTightenTypes(true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test10590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10590");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy8 = compilerOptions5.propertyRenaming;
        java.lang.String[] strArray11 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        compilerOptions5.setStripTypes((java.util.Set<java.lang.String>) strSet12);
        compilerOptions0.stripNamePrefixes = strSet12;
        compilerOptions0.checkTypes = false;
        compilerOptions0.flowSensitiveInlineVariables = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.skipAllCompilerPasses();
        compilerOptions20.resetWarningsGuard();
        compilerOptions20.setInlineLocalVariables(false);
        compilerOptions20.coalesceVariableNames = true;
        com.google.javascript.jscomp.CheckLevel checkLevel29 = compilerOptions20.aggressiveVarCheck;
        compilerOptions0.checkMissingReturn = checkLevel29;
        compilerOptions0.setAssumeStrictThis(false);
        compilerOptions0.inlineGetters = true;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy8 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy8.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + checkLevel29 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel29.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10591");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy12 = compilerOptions9.propertyRenaming;
        compilerOptions0.propertyRenaming = propertyRenamingPolicy12;
        com.google.javascript.jscomp.CheckLevel checkLevel14 = compilerOptions0.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions0.checkRequires;
        compilerOptions0.setReportPath("OFF");
        compilerOptions0.renamePrefix = "STRING PARAM_LIST 49";
        compilerOptions0.setSyntheticBlockEndMarker("JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of optimization iterations: {0}");
        com.google.javascript.jscomp.CodingConvention codingConvention22 = compilerOptions0.getCodingConvention();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy12 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy12.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel14 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel14.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(codingConvention22);
    }

    @Test
    public void test10592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10592");
        java.nio.charset.Charset charset0 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str1 = charset0.name();
        java.lang.String str2 = charset0.name();
        java.lang.String str3 = charset0.name();
        java.nio.ByteBuffer byteBuffer5 = charset0.encode("PARAM_LIST 0");
        java.nio.charset.Charset charset6 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str7 = charset6.name();
        java.util.Locale locale8 = null;
        java.lang.String str9 = charset6.displayName(locale8);
        java.nio.ByteBuffer byteBuffer11 = charset6.encode("/experiment/:/hi!");
        boolean boolean12 = charset6.isRegistered();
        int int13 = charset0.compareTo(charset6);
        java.nio.charset.Charset charset14 = java.nio.charset.Charset.defaultCharset();
        boolean boolean15 = charset14.isRegistered();
        java.util.Set<java.lang.String> strSet16 = charset14.aliases();
        int int17 = charset6.compareTo(charset14);
        java.nio.charset.Charset charset19 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str20 = charset19.name();
        com.google.javascript.jscomp.SourceFile sourceFile21 = com.google.javascript.jscomp.SourceFile.fromFile("OFF", charset19);
        boolean boolean22 = charset19.isRegistered();
        boolean boolean23 = charset6.contains(charset19);
        boolean boolean24 = charset6.isRegistered();
        org.junit.Assert.assertNotNull(charset0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "US-ASCII" + "'", str1, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "US-ASCII" + "'", str2, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "US-ASCII" + "'", str3, "US-ASCII");
        org.junit.Assert.assertNotNull(byteBuffer5);
        org.junit.Assert.assertNotNull(charset6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "US-ASCII" + "'", str7, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "US-ASCII" + "'", str9, "US-ASCII");
        org.junit.Assert.assertNotNull(byteBuffer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(charset14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(charset19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "US-ASCII" + "'", str20, "US-ASCII");
        org.junit.Assert.assertNotNull(sourceFile21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test10593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10593");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("*global*.  at *global* line (unknown line) : (unknown column)", jSTypeNative1);
    }

    @Test
    public void test10594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10594");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        boolean boolean6 = node5.isIn();
        boolean boolean7 = node5.isGetElem();
        node5.setSourceEncodedPositionForTree(38);
        boolean boolean10 = node5.isFromExterns();
        boolean boolean11 = node5.isReturn();
        boolean boolean12 = node5.hasOneChild();
        boolean boolean13 = node5.isString();
        com.google.javascript.rhino.Node node14 = node5.getLastChild();
        // The following exception was thrown during execution in test generation
        try {
            node14.removeProp((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(node14);
    }

    @Test
    public void test10595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10595");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.CompilerInput compilerInput3 = jSModule1.getByName("FINEST");
        com.google.javascript.jscomp.SourceFile sourceFile6 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int8 = sourceFile6.getLineOfOffset((int) (short) 1);
        java.lang.String str9 = sourceFile6.getName();
        java.lang.String str10 = sourceFile6.getName();
        java.lang.String str11 = sourceFile6.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput13 = new com.google.javascript.jscomp.CompilerInput(sourceFile6, true);
        com.google.javascript.jscomp.CompilerInput compilerInput14 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput13);
        com.google.javascript.jscomp.JSModule jSModule15 = compilerInput13.getModule();
        com.google.javascript.jscomp.JSModule jSModule17 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler18 = new com.google.javascript.jscomp.Compiler();
        jSModule17.sortInputsByDeps(compiler18);
        java.lang.String str20 = jSModule17.getName();
        compilerInput13.setModule(jSModule17);
        jSModule1.addDependency(jSModule17);
        com.google.javascript.jscomp.SourceFile sourceFile25 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int27 = sourceFile25.getLineOfOffset((int) (short) 1);
        int int29 = sourceFile25.getLineOfOffset(100);
        java.lang.String str30 = sourceFile25.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput31 = new com.google.javascript.jscomp.CompilerInput(sourceFile25);
        com.google.javascript.rhino.InputId inputId32 = compilerInput31.getInputId();
        jSModule1.addFirst(compilerInput31);
        java.util.List<com.google.javascript.jscomp.JSModule> jSModuleList34 = jSModule1.getDependencies();
        java.util.List<com.google.javascript.jscomp.CompilerInput> compilerInputList35 = jSModule1.getInputs();
        jSModule1.removeAll();
        org.junit.Assert.assertNull(compilerInput3);
        org.junit.Assert.assertNotNull(sourceFile6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNull(jSModule15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "STRING PARAM_LIST 49" + "'", str20, "STRING PARAM_LIST 49");
        org.junit.Assert.assertNotNull(sourceFile25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(inputId32);
        org.junit.Assert.assertNotNull(jSModuleList34);
        org.junit.Assert.assertNotNull(compilerInputList35);
    }

    @Test
    public void test10596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10596");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        jSModule1.removeAll();
        com.google.javascript.jscomp.SourceFile sourceFile6 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int8 = sourceFile6.getLineOfOffset((int) (short) 1);
        int int10 = sourceFile6.getLineOfOffset(100);
        java.lang.String str11 = sourceFile6.getName();
        java.io.Reader reader12 = sourceFile6.getCodeReader();
        reader12.reset();
        com.google.javascript.jscomp.SourceFile sourceFile14 = com.google.javascript.jscomp.SourceFile.fromReader("PARAM_LIST", reader12);
        java.lang.String str15 = sourceFile14.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput16 = new com.google.javascript.jscomp.CompilerInput(sourceFile14);
        jSModule1.add(compilerInput16);
        compilerInput16.clearAst();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = compilerInput16.getLineOffset(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Expected line number between 1 and 1?Actual: 2147483647");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(sourceFile6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(sourceFile14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PARAM_LIST" + "'", str15, "PARAM_LIST");
    }

    @Test
    public void test10597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10597");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        compilerOptions0.setSkipAllPasses(false);
        compilerOptions0.setPropertyAffinity(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode14 = null;
        compilerOptions13.setTracerMode(tracerMode14);
        boolean boolean16 = compilerOptions13.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel17 = compilerOptions13.sourceMapDetailLevel;
        compilerOptions13.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.optimizeParameters = true;
        compilerOptions20.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel28 = compilerOptions20.checkGlobalNamesLevel;
        compilerOptions13.setReportMissingOverride(checkLevel28);
        compilerOptions0.setCheckGlobalNamesLevel(checkLevel28);
        boolean boolean31 = compilerOptions0.ambiguateProperties;
        compilerOptions0.setDeadAssignmentElimination(true);
        boolean boolean34 = compilerOptions0.devirtualizePrototypeMethods;
        compilerOptions0.setTweakToStringLiteral("*global*", "PARAM_LIST\n    PARAM_LIST\n");
        compilerOptions0.setShadowVariables(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(detailLevel17);
        org.junit.Assert.assertTrue("'" + checkLevel28 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel28.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test10598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10598");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setLooseTypes(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions3 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str4 = compilerOptions3.syntheticBlockStartMarker;
        compilerOptions3.labelRenaming = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions12 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions12.crossModuleMethodMotion = true;
        compilerOptions12.skipAllCompilerPasses();
        compilerOptions12.resetWarningsGuard();
        java.lang.String str17 = compilerOptions12.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy18 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy19 = null;
        compilerOptions12.setRenamingPolicy(variableRenamingPolicy18, propertyRenamingPolicy19);
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions21.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy24 = compilerOptions21.propertyRenaming;
        compilerOptions7.setRenamingPolicy(variableRenamingPolicy18, propertyRenamingPolicy24);
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy26 = com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC;
        compilerOptions3.setRenamingPolicy(variableRenamingPolicy18, propertyRenamingPolicy26);
        com.google.javascript.jscomp.CompilerOptions compilerOptions28 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str29 = compilerOptions28.syntheticBlockStartMarker;
        compilerOptions28.labelRenaming = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.crossModuleMethodMotion = true;
        compilerOptions32.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions37 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions37.crossModuleMethodMotion = true;
        compilerOptions37.skipAllCompilerPasses();
        compilerOptions37.resetWarningsGuard();
        java.lang.String str42 = compilerOptions37.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy43 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy44 = null;
        compilerOptions37.setRenamingPolicy(variableRenamingPolicy43, propertyRenamingPolicy44);
        com.google.javascript.jscomp.CompilerOptions compilerOptions46 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions46.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy49 = compilerOptions46.propertyRenaming;
        compilerOptions32.setRenamingPolicy(variableRenamingPolicy43, propertyRenamingPolicy49);
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy51 = com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC;
        compilerOptions28.setRenamingPolicy(variableRenamingPolicy43, propertyRenamingPolicy51);
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy18, propertyRenamingPolicy51);
        java.lang.String str54 = compilerOptions0.aliasStringsBlacklist;
        compilerOptions0.setExportTestFunctions(true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy18 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy18.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy24 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy24.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy26 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC + "'", propertyRenamingPolicy26.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy43 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy43.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy49 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy49.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy51 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC + "'", propertyRenamingPolicy51.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    public void test10599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10599");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        node5.addChildrenToBack(node11);
        boolean boolean13 = node11.isAnd();
        com.google.javascript.rhino.Node node14 = node11.getParent();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder15 = node11.new FileLevelJsDocBuilder();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node14);
    }

    @Test
    public void test10600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10600");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.syntheticBlockEndMarker = "hi!";
        compilerOptions0.removeUnusedClassProperties = false;
        compilerOptions0.setLineLengthThreshold(4095);
        com.google.javascript.jscomp.ErrorFormat errorFormat9 = compilerOptions0.errorFormat;
        compilerOptions0.setCrossModuleMethodMotion(true);
        compilerOptions0.setComputeFunctionSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.setLooseTypes(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel18 = compilerOptions17.checkRequires;
        compilerOptions14.setCheckProvides(checkLevel18);
        compilerOptions0.checkProvides = checkLevel18;
        compilerOptions0.setCollapseAnonymousFunctions(false);
        org.junit.Assert.assertNotNull(errorFormat9);
        org.junit.Assert.assertTrue("'" + checkLevel18 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel18.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10601");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        compilerOptions0.setReserveRawExports(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        compilerOptions0.setTweakReplacements(strMap12);
        com.google.javascript.jscomp.CompilerOptions.Reach reach14 = com.google.javascript.jscomp.CompilerOptions.Reach.NONE;
        compilerOptions0.setInlineVariables(reach14);
        boolean boolean16 = compilerOptions0.foldConstants;
        compilerOptions0.syntheticBlockEndMarker = "TYPEOF : 44\n";
        org.junit.Assert.assertTrue("'" + reach14 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.NONE + "'", reach14.equals(com.google.javascript.jscomp.CompilerOptions.Reach.NONE));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test10602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10602");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(false, false);
        java.io.File file6 = file2.getParentFile();
        long long7 = file6.getUsableSpace();
        boolean boolean8 = file6.mkdirs();
        java.nio.charset.Charset charset9 = null;
        com.google.javascript.jscomp.JSSourceFile jSSourceFile10 = com.google.javascript.jscomp.JSSourceFile.fromFile(file6, charset9);
        java.io.File file13 = new java.io.File(":", "hi!");
        boolean boolean16 = file13.setExecutable(true, false);
        boolean boolean18 = file13.setWritable(false);
        boolean boolean19 = file13.canWrite();
        java.net.URI uRI20 = file13.toURI();
        boolean boolean21 = file6.renameTo(file13);
        boolean boolean22 = file13.setReadOnly();
        boolean boolean23 = file13.canWrite();
        java.net.URI uRI24 = file13.toURI();
        java.net.URI uRI25 = file13.toURI();
        java.io.File file28 = new java.io.File(":", "hi!");
        boolean boolean31 = file28.setExecutable(false, false);
        boolean boolean33 = file28.setReadable(false);
        boolean boolean36 = file28.setReadable(true, false);
        boolean boolean37 = file13.renameTo(file28);
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), ":");
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 280489717760L + "'", long7 == 280489717760L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(jSSourceFile10);
        org.junit.Assert.assertEquals(file13.getParent(), ":");
        org.junit.Assert.assertEquals(file13.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(uRI20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(uRI24);
        org.junit.Assert.assertNotNull(uRI25);
        org.junit.Assert.assertEquals(file28.getParent(), ":");
        org.junit.Assert.assertEquals(file28.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test10603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10603");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        jSTypeRegistry1.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable13 = jSTypeRegistry1.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType18 = jSTypeRegistry1.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream25 = jSTypeList22.parallelStream();
        com.google.javascript.rhino.Node node26 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry28 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        boolean boolean35 = jSTypeList30.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        com.google.javascript.rhino.Node node36 = jSTypeRegistry28.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        java.lang.Object obj37 = null;
        boolean boolean38 = jSTypeList30.remove(obj37);
        java.lang.Object obj39 = null;
        int int40 = jSTypeList30.indexOf(obj39);
        com.google.javascript.jscomp.SourceFile sourceFile43 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int45 = sourceFile43.getLineOfOffset((int) (short) 1);
        int int46 = jSTypeList30.indexOf((java.lang.Object) sourceFile43);
        node26.setStaticSourceFile((com.google.javascript.rhino.jstype.StaticSourceFile) sourceFile43);
        int int48 = node26.getLength();
        java.lang.String str49 = node26.getQualifiedName();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeIterable13);
        org.junit.Assert.assertNotNull(jSType18);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(jSTypeStream25);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(sourceFile43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test10604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10604");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.setInlineLocalFunctions(false);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions5.variableRenaming = variableRenamingPolicy8;
        compilerOptions5.setProtectHiddenSideEffects(false);
        compilerOptions5.syntheticBlockEndMarker = "OFF";
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions14.checkRequires;
        compilerOptions5.setCheckUnreachableCode(checkLevel15);
        compilerOptions0.setCheckRequires(checkLevel15);
        boolean boolean18 = compilerOptions0.deadAssignmentElimination;
        compilerOptions0.setRemoveDeadCode(false);
        compilerOptions0.disableRuntimeTypeCheck();
        compilerOptions0.checkControlStructures = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test10605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10605");
        java.io.PrintStream printStream1 = new java.io.PrintStream("PARAM_LIST: PARAM_LIST\n");
        printStream1.println("");
        java.io.PrintStream printStream4 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.crossModuleMethodMotion = true;
        compilerOptions5.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions10.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy13 = compilerOptions10.propertyRenaming;
        java.lang.String[] strArray16 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        compilerOptions10.setStripTypes((java.util.Set<java.lang.String>) strSet17);
        compilerOptions5.stripNamePrefixes = strSet17;
        compilerOptions5.lineBreak = true;
        compilerOptions5.setCheckTypes(false);
        compilerOptions5.setRemoveAbstractMethods(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode28 = null;
        compilerOptions27.setTracerMode(tracerMode28);
        boolean boolean30 = compilerOptions27.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel31 = compilerOptions27.sourceMapDetailLevel;
        compilerOptions27.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions34 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions34.crossModuleMethodMotion = true;
        compilerOptions34.optimizeParameters = true;
        compilerOptions34.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel42 = compilerOptions34.checkGlobalNamesLevel;
        compilerOptions27.setReportMissingOverride(checkLevel42);
        java.util.Set<java.lang.String> strSet44 = compilerOptions27.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions45 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel46 = compilerOptions45.checkRequires;
        compilerOptions27.setReportMissingOverride(checkLevel46);
        java.util.Set<java.lang.String> strSet48 = compilerOptions27.stripNameSuffixes;
        compilerOptions27.setOptimizeReturns(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions51 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions51.crossModuleMethodMotion = true;
        compilerOptions51.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy56 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions57 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions57.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy60 = compilerOptions57.propertyRenaming;
        compilerOptions51.setRenamingPolicy(variableRenamingPolicy56, propertyRenamingPolicy60);
        compilerOptions51.setTransformAMDToCJSModules(true);
        boolean boolean64 = compilerOptions51.exportTestFunctions;
        boolean boolean65 = compilerOptions51.exportTestFunctions;
        boolean boolean66 = compilerOptions51.foldConstants;
        byte[] byteArray67 = new byte[] {};
        compilerOptions51.setInputVariableMapSerialized(byteArray67);
        compilerOptions27.inputPropertyMapSerialized = byteArray67;
        compilerOptions5.setInputPropertyMapSerialized(byteArray67);
        printStream1.write(byteArray67);
        java.io.PrintStream printStream73 = new java.io.PrintStream((java.io.OutputStream) printStream1, false);
        printStream1.print('a');
        printStream1.write(29);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy13 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy13.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(detailLevel31);
        org.junit.Assert.assertTrue("'" + checkLevel42 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel42.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + checkLevel46 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel46.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy60 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy60.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
    }

    @Test
    public void test10606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10606");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("");
        stats1.changes = 900;
        stats1.runs = 25;
        int int6 = stats1.runs;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 25 + "'", int6 == 25);
    }

    @Test
    public void test10607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10607");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.syntheticBlockEndMarker = "hi!";
        com.google.javascript.jscomp.CheckLevel checkLevel5 = compilerOptions0.aggressiveVarCheck;
        boolean boolean6 = compilerOptions0.jqueryPass;
        compilerOptions0.collapseVariableDeclarations = true;
        compilerOptions0.removeUnusedPrototypeProperties = false;
        compilerOptions0.enableRuntimeTypeCheck("*global*");
        boolean boolean13 = compilerOptions0.removeUnusedClassProperties;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        compilerOptions14.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy19 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy23 = compilerOptions20.propertyRenaming;
        compilerOptions14.setRenamingPolicy(variableRenamingPolicy19, propertyRenamingPolicy23);
        boolean boolean25 = compilerOptions14.checkControlStructures;
        compilerOptions14.exportTestFunctions = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions28 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode29 = null;
        compilerOptions28.setTracerMode(tracerMode29);
        boolean boolean31 = compilerOptions28.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel32 = compilerOptions28.sourceMapDetailLevel;
        compilerOptions28.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions35 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions35.crossModuleMethodMotion = true;
        compilerOptions35.optimizeParameters = true;
        compilerOptions35.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel43 = compilerOptions35.checkGlobalNamesLevel;
        compilerOptions28.setReportMissingOverride(checkLevel43);
        java.util.Set<java.lang.String> strSet45 = compilerOptions28.stripTypes;
        compilerOptions14.stripNamePrefixes = strSet45;
        compilerOptions0.stripNameSuffixes = strSet45;
        org.junit.Assert.assertTrue("'" + checkLevel5 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel5.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy23 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy23.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(detailLevel32);
        org.junit.Assert.assertTrue("'" + checkLevel43 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel43.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet45);
    }

    @Test
    public void test10608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10608");
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file2 = java.io.File.createTempFile("PARAM_LIST 0", "// Input %num%: JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of optimization iterations: {0}");
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Unable to create temporary file, /tmp/PARAM_LIST 06119018896717583292/ Input %num%: JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of optimization iterations: {0}");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10609");
        com.google.javascript.jscomp.DependencyOptions dependencyOptions0 = new com.google.javascript.jscomp.DependencyOptions();
        com.google.javascript.jscomp.DependencyOptions dependencyOptions2 = dependencyOptions0.setDependencyPruning(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions4 = dependencyOptions2.setMoocherDropping(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions6 = dependencyOptions4.setDependencySorting(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean8 = compilerOptions7.moveFunctionDeclarations;
        compilerOptions7.crossModuleCodeMotion = true;
        compilerOptions7.checkSymbols = true;
        java.util.Set<java.lang.String> strSet13 = compilerOptions7.stripNamePrefixes;
        com.google.javascript.jscomp.DependencyOptions dependencyOptions14 = dependencyOptions6.setEntryPoints((java.util.Collection<java.lang.String>) strSet13);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions16 = dependencyOptions6.setDependencySorting(true);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions18 = dependencyOptions16.setMoocherDropping(true);
        org.junit.Assert.assertNotNull(dependencyOptions2);
        org.junit.Assert.assertNotNull(dependencyOptions4);
        org.junit.Assert.assertNotNull(dependencyOptions6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(dependencyOptions14);
        org.junit.Assert.assertNotNull(dependencyOptions16);
        org.junit.Assert.assertNotNull(dependencyOptions18);
    }

    @Test
    public void test10610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10610");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        com.google.javascript.jscomp.CompilerOptions compilerOptions2 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = null;
        compilerOptions2.setTracerMode(tracerMode3);
        boolean boolean5 = compilerOptions2.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel6 = compilerOptions2.sourceMapDetailLevel;
        compilerOptions2.setColorizeErrorOutput(true);
        compilerOptions2.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions11.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy14 = compilerOptions11.propertyRenaming;
        compilerOptions2.propertyRenaming = propertyRenamingPolicy14;
        com.google.javascript.jscomp.CheckLevel checkLevel16 = compilerOptions2.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel17 = compilerOptions2.checkRequires;
        compilerOptions0.setCheckRequires(checkLevel17);
        compilerOptions0.reserveRawExports = false;
        compilerOptions0.optimizeArgumentsArray = false;
        compilerOptions0.setReserveRawExports(true);
        boolean boolean25 = compilerOptions0.checkSymbols;
        compilerOptions0.exportTestFunctions = false;
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(detailLevel6);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy14 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy14.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel16 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel16.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel17 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel17.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test10611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10611");
        com.google.javascript.jscomp.CheckLevel checkLevel1 = null;
        com.google.javascript.jscomp.DiagnosticType diagnosticType3 = com.google.javascript.jscomp.DiagnosticType.make("*global*", checkLevel1, "");
        java.lang.String[] strArray8 = new java.lang.String[] { ":", "STRING PARAM_LIST 49", "hi!", "OFF" };
        com.google.javascript.jscomp.JSError jSError9 = com.google.javascript.jscomp.JSError.make(diagnosticType3, strArray8);
        int int10 = jSError9.getCharno();
        int int11 = jSError9.getNodeLength();
        int int12 = jSError9.lineNumber;
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions13.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel16 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions13.setSourceMapDetailLevel(detailLevel16);
        boolean boolean18 = compilerOptions13.ideMode;
        compilerOptions13.setUnaliasableGlobals("");
        com.google.javascript.jscomp.CheckLevel checkLevel21 = compilerOptions13.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions compilerOptions22 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions22.crossModuleMethodMotion = true;
        compilerOptions22.optimizeParameters = true;
        compilerOptions22.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel30 = compilerOptions22.checkGlobalNamesLevel;
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode32 = null;
        compilerOptions31.setTracerMode(tracerMode32);
        boolean boolean34 = compilerOptions31.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel35 = compilerOptions31.sourceMapDetailLevel;
        compilerOptions31.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet38 = compilerOptions31.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile40 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput42 = new com.google.javascript.jscomp.CompilerInput(sourceFile40, true);
        com.google.javascript.rhino.InputId inputId44 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput46 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput42, inputId44, true);
        java.lang.String str47 = compilerInput46.toString();
        boolean boolean48 = strSet38.contains((java.lang.Object) compilerInput46);
        java.lang.Object[] objArray49 = strSet38.toArray();
        compilerOptions22.setStripTypes(strSet38);
        compilerOptions22.labelRenaming = false;
        java.util.Set<java.lang.String> strSet53 = compilerOptions22.stripTypePrefixes;
        compilerOptions22.setOptimizeCalls(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions56 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions56.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions56.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode62 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions56.setTracer(tracerMode62);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy64 = compilerOptions56.variableRenaming;
        compilerOptions56.foldConstants = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions67 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions67.setInlineLocalFunctions(false);
        compilerOptions67.moveFunctionDeclarations = true;
        compilerOptions67.setInlineLocalFunctions(false);
        boolean boolean74 = compilerOptions67.exportTestFunctions;
        com.google.javascript.jscomp.CheckLevel checkLevel75 = compilerOptions67.checkGlobalThisLevel;
        compilerOptions67.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.ErrorFormat errorFormat78 = compilerOptions67.errorFormat;
        compilerOptions56.errorFormat = errorFormat78;
        compilerOptions22.errorFormat = errorFormat78;
        com.google.javascript.jscomp.Compiler compiler81 = new com.google.javascript.jscomp.Compiler();
        compiler81.disableThreads();
        compiler81.disableThreads();
        com.google.javascript.jscomp.MessageFormatter messageFormatter85 = errorFormat78.toFormatter((com.google.javascript.jscomp.SourceExcerptProvider) compiler81, true);
        java.lang.String str86 = jSError9.format(checkLevel21, messageFormatter85);
        org.junit.Assert.assertNotNull(diagnosticType3);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(jSError9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(detailLevel16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + checkLevel21 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel21.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel30 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel30.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(detailLevel35);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "*global*" + "'", str47, "*global*");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + tracerMode62 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode62.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy64 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.OFF + "'", variableRenamingPolicy64.equals(com.google.javascript.jscomp.VariableRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + checkLevel75 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel75.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(errorFormat78);
        org.junit.Assert.assertNotNull(messageFormatter85);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test10612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10612");
        com.google.javascript.jscomp.SourceFile sourceFile3 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", ":", "goog.abstractMethod");
        java.lang.String str4 = sourceFile3.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput6 = new com.google.javascript.jscomp.CompilerInput(sourceFile3, false);
        com.google.javascript.jscomp.CompilerInput compilerInput7 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput6);
        com.google.javascript.jscomp.CompilerInput compilerInput9 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput7, false);
        org.junit.Assert.assertNotNull(sourceFile3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    }

    @Test
    public void test10613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10613");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        compilerOptions0.setFoldConstants(true);
        com.google.javascript.jscomp.CheckLevel checkLevel7 = compilerOptions0.checkRequires;
        compilerOptions0.setTweakToBooleanLiteral("// Input %num%", false);
        compilerOptions0.setShadowVariables(false);
        compilerOptions0.setAliasKeywords(true);
        compilerOptions0.setGenerateExports(false);
        boolean boolean17 = compilerOptions0.removeUnusedLocalVars;
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel7 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel7.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test10614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10614");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.gatherCssNames = true;
        boolean boolean9 = compilerOptions0.removeUnusedPrototypePropertiesInExterns;
        compilerOptions0.removeUnusedLocalVars = false;
        boolean boolean12 = compilerOptions0.assumeStrictThis();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test10615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10615");
        com.google.javascript.rhino.Node node1 = new com.google.javascript.rhino.Node((-9));
        com.google.javascript.rhino.JSDocInfo jSDocInfo2 = node1.getJSDocInfo();
        boolean boolean3 = node1.isString();
        boolean boolean4 = node1.isNot();
        org.junit.Assert.assertNull(jSDocInfo2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test10616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10616");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.UNKNOWN_DEFINES;
        com.google.javascript.jscomp.DiagnosticGroups.CHECK_USELESS_CODE = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.INVALID_CASTS = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.UNDEFINED_VARIABLES = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.VISIBILITY = diagnosticGroup0;
// flaky:         org.junit.Assert.assertNull(diagnosticGroup0);
    }

    @Test
    public void test10617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10617");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setRuntimeTypeCheckLogFunction("FINEST");
        compilerOptions0.setRemoveDeadCode(true);
        compilerOptions0.collapseVariableDeclarations = true;
        boolean boolean9 = compilerOptions0.inlineGetters;
        boolean boolean10 = compilerOptions0.crossModuleMethodMotion;
        compilerOptions0.setPreferLineBreakAtEndOfFile(true);
        boolean boolean13 = compilerOptions0.ambiguateProperties;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        compilerOptions14.skipAllCompilerPasses();
        compilerOptions14.resetWarningsGuard();
        compilerOptions14.setLabelRenaming(true);
        compilerOptions14.setTweakToDoubleLiteral("/", (double) 43);
        boolean boolean24 = compilerOptions14.removeTryCatchFinally;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode25 = com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY;
        compilerOptions14.setTracer(tracerMode25);
        com.google.javascript.jscomp.CheckLevel checkLevel27 = null;
        compilerOptions14.setCheckMissingReturn(checkLevel27);
        compilerOptions14.setSyntheticBlockStartMarker("/experiment/:/hi!");
        boolean boolean31 = compilerOptions14.removeDeadCode;
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode33 = null;
        compilerOptions32.setTracerMode(tracerMode33);
        boolean boolean35 = compilerOptions32.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel36 = compilerOptions32.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode37 = compilerOptions32.getLanguageOut();
        compilerOptions32.setFoldConstants(true);
        boolean boolean40 = compilerOptions32.generatePseudoNames;
        compilerOptions32.checkSymbols = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions43 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode44 = null;
        compilerOptions43.setTracerMode(tracerMode44);
        boolean boolean46 = compilerOptions43.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel47 = compilerOptions43.sourceMapDetailLevel;
        compilerOptions32.setSourceMapDetailLevel(detailLevel47);
        compilerOptions14.setSourceMapDetailLevel(detailLevel47);
        com.google.javascript.rhino.Node node50 = null;
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        com.google.javascript.rhino.ErrorReporter errorReporter56 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry57 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter56);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray58 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList59 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList59, jSTypeArray58);
        com.google.javascript.rhino.Node node61 = jSTypeRegistry57.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList59);
        com.google.javascript.rhino.ErrorReporter errorReporter62 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry63 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter62);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray64 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList65 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList65, jSTypeArray64);
        com.google.javascript.rhino.Node node67 = jSTypeRegistry63.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList65);
        node61.addChildrenToBack(node67);
        com.google.javascript.rhino.ErrorReporter errorReporter69 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry70 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter69);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray71 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList72 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72, jSTypeArray71);
        com.google.javascript.rhino.Node node74 = jSTypeRegistry70.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        boolean boolean75 = node74.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter76 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry77 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter76);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray78 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList79 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList79, jSTypeArray78);
        com.google.javascript.rhino.Node node81 = jSTypeRegistry77.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList79);
        boolean boolean82 = node81.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter83 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry84 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter83);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray85 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList86 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList86, jSTypeArray85);
        com.google.javascript.rhino.Node node88 = jSTypeRegistry84.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList86);
        com.google.javascript.rhino.Node node91 = new com.google.javascript.rhino.Node((int) (short) 0, node61, node74, node81, node88, 0, 49);
        com.google.javascript.jscomp.CodingConvention.Bind bind92 = new com.google.javascript.jscomp.CodingConvention.Bind(node50, node54, node88);
        boolean boolean93 = node88.isIn();
        boolean boolean94 = node88.isVar();
        boolean boolean95 = node88.isLabel();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable96 = node88.children();
        boolean boolean97 = detailLevel47.apply(node88);
        compilerOptions0.sourceMapDetailLevel = detailLevel47;
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + tracerMode25 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY + "'", tracerMode25.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(detailLevel36);
        org.junit.Assert.assertNull(languageMode37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(detailLevel47);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(jSTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(jSTypeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(jSTypeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(jSTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(jSTypeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(nodeIterable96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test10618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10618");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setLabelRenaming(true);
        compilerOptions0.setTweakToDoubleLiteral("/", (double) 43);
        boolean boolean10 = compilerOptions0.removeTryCatchFinally;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY;
        compilerOptions0.setTracer(tracerMode11);
        boolean boolean13 = compilerOptions0.flowSensitiveInlineVariables;
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        boolean boolean21 = node19.isVoid();
        node19.setOptionalArg(true);
        node19.setVarArgs(true);
        boolean boolean26 = node19.isScript();
        boolean boolean27 = node19.isDefaultCase();
        com.google.javascript.jscomp.CompilerOptions compilerOptions29 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions29.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions29.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode35 = null;
        compilerOptions29.setLanguageOut(languageMode35);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy37 = null;
        compilerOptions29.variableRenaming = variableRenamingPolicy37;
        boolean boolean39 = compilerOptions29.coalesceVariableNames;
        compilerOptions29.setOptimizeArgumentsArray(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions42 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions42.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy45 = compilerOptions42.propertyRenaming;
        boolean boolean46 = compilerOptions42.disambiguateProperties;
        compilerOptions42.setFoldConstants(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions49 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode50 = null;
        compilerOptions49.setTracerMode(tracerMode50);
        boolean boolean52 = compilerOptions49.generatePseudoNames;
        com.google.javascript.jscomp.SourceMap.LocationMapping[] locationMappingArray53 = new com.google.javascript.jscomp.SourceMap.LocationMapping[] {};
        java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping> locationMappingList54 = new java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList54, locationMappingArray53);
        compilerOptions49.sourceMapLocationMappings = locationMappingList54;
        compilerOptions42.sourceMapLocationMappings = locationMappingList54;
        com.google.javascript.jscomp.CompilerOptions compilerOptions58 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode59 = null;
        compilerOptions58.setTracerMode(tracerMode59);
        boolean boolean61 = compilerOptions58.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel62 = compilerOptions58.sourceMapDetailLevel;
        compilerOptions58.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet65 = compilerOptions58.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile67 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput69 = new com.google.javascript.jscomp.CompilerInput(sourceFile67, true);
        com.google.javascript.rhino.InputId inputId71 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput73 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput69, inputId71, true);
        java.lang.String str74 = compilerInput73.toString();
        boolean boolean75 = strSet65.contains((java.lang.Object) compilerInput73);
        compilerOptions42.setStripNamePrefixes(strSet65);
        compilerOptions29.setStripNamePrefixes(strSet65);
        node19.putProp(12, (java.lang.Object) strSet65);
        compilerOptions0.stripNamePrefixes = strSet65;
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + tracerMode11 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY + "'", tracerMode11.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy45 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy45.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(locationMappingArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(detailLevel62);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "*global*" + "'", str74, "*global*");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test10619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10619");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.lang.Object obj10 = null;
        boolean boolean11 = jSTypeList3.remove(obj10);
        java.lang.Object obj12 = null;
        int int13 = jSTypeList3.indexOf(obj12);
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        compilerOptions14.skipAllCompilerPasses();
        compilerOptions14.resetWarningsGuard();
        compilerOptions14.setInlineLocalVariables(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode22 = null;
        compilerOptions21.setTracerMode(tracerMode22);
        boolean boolean24 = compilerOptions21.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel25 = compilerOptions21.sourceMapDetailLevel;
        compilerOptions21.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet28 = compilerOptions21.stripNameSuffixes;
        compilerOptions14.setReplaceStringsReservedStrings(strSet28);
        int int30 = strSet28.size();
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray33 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList34 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList34, jSTypeArray33);
        com.google.javascript.rhino.Node node36 = jSTypeRegistry32.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList34);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream37 = jSTypeList34.parallelStream();
        boolean boolean38 = strSet28.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList34);
        boolean boolean39 = jSTypeList3.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList34);
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        boolean boolean46 = node45.isIn();
        boolean boolean47 = node45.isGetElem();
        java.lang.String str51 = node45.toString(true, false, false);
        com.google.javascript.rhino.Node node53 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node54 = node45.useSourceInfoIfMissingFromForTree(node53);
        boolean boolean55 = node53.isReturn();
        boolean boolean56 = node53.isLocalResultCall();
        boolean boolean57 = node53.isLabelName();
        int int58 = jSTypeList3.lastIndexOf((java.lang.Object) node53);
        com.google.javascript.jscomp.PerformanceTracker.Stats stats60 = new com.google.javascript.jscomp.PerformanceTracker.Stats("PARAM_LIST 0");
        int int61 = stats60.gzSize;
        boolean boolean62 = jSTypeList3.remove((java.lang.Object) stats60);
        int int63 = jSTypeList3.size();
        com.google.javascript.jscomp.SourceFile.Builder[] builderArray64 = new com.google.javascript.jscomp.SourceFile.Builder[] {};
        com.google.javascript.jscomp.SourceFile.Builder[] builderArray65 = jSTypeList3.toArray(builderArray64);
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(detailLevel25);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(jSTypeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(jSTypeStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PARAM_LIST" + "'", str51, "PARAM_LIST");
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(builderArray64);
        org.junit.Assert.assertNotNull(builderArray65);
    }

    @Test
    public void test10620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10620");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        compilerOptions0.inlineFunctions = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy10 = compilerOptions7.propertyRenaming;
        java.lang.String[] strArray13 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        compilerOptions7.setStripTypes((java.util.Set<java.lang.String>) strSet14);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode18 = null;
        compilerOptions17.setTracerMode(tracerMode18);
        boolean boolean20 = compilerOptions17.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel21 = compilerOptions17.sourceMapDetailLevel;
        compilerOptions17.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions24.crossModuleMethodMotion = true;
        compilerOptions24.optimizeParameters = true;
        compilerOptions24.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel32 = compilerOptions24.checkGlobalNamesLevel;
        compilerOptions17.setReportMissingOverride(checkLevel32);
        compilerOptions7.setCheckUnreachableCode(checkLevel32);
        byte[] byteArray39 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 1 };
        compilerOptions7.inputVariableMapSerialized = byteArray39;
        compilerOptions0.inputVariableMapSerialized = byteArray39;
        compilerOptions0.removeUnusedPrototypeProperties = true;
        compilerOptions0.setTweakToStringLiteral("Exceeded max number of code motion iterations: Unversioned directory", "/experiment/:/hi!");
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy10 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy10.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(detailLevel21);
        org.junit.Assert.assertTrue("'" + checkLevel32 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel32.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 1, 10, 1]");
    }

    @Test
    public void test10621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10621");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("STRING PARAM_LIST", jSTypeNative1);
        java.lang.String str3 = assertionFunctionSpec2.getFunctionName();
        java.lang.String str4 = assertionFunctionSpec2.getFunctionName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "STRING PARAM_LIST" + "'", str3, "STRING PARAM_LIST");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "STRING PARAM_LIST" + "'", str4, "STRING PARAM_LIST");
    }

    @Test
    public void test10622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10622");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        boolean boolean5 = compilerOptions0.ideMode;
        compilerOptions0.removeUnusedLocalVars = true;
        compilerOptions0.setRemoveDeadCode(false);
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap10 = compilerOptions0.cssRenamingMap;
        boolean boolean11 = compilerOptions0.aliasExternals;
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(cssRenamingMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test10623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10623");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setLooseTypes(false);
        boolean boolean4 = compilerOptions0.optimizeReturns;
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel8 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions5.setSourceMapDetailLevel(detailLevel8);
        compilerOptions5.inlineFunctions = true;
        compilerOptions5.setCommonJSModulePathPrefix(":");
        compilerOptions5.setCrossModuleCodeMotion(true);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode16 = compilerOptions5.getLanguageIn();
        compilerOptions5.setExtractPrototypeMemberDeclarations(true);
        boolean boolean19 = compilerOptions5.aliasAllStrings;
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.setInlineLocalFunctions(false);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy23 = null;
        compilerOptions20.variableRenaming = variableRenamingPolicy23;
        com.google.javascript.jscomp.CompilerOptions.TweakProcessing tweakProcessing25 = compilerOptions20.getTweakProcessing();
        compilerOptions20.syntheticBlockStartMarker = "DiagnosticGroup<checkProvides>";
        boolean boolean28 = compilerOptions20.closurePass;
        com.google.javascript.jscomp.CompilerOptions compilerOptions29 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions29.crossModuleMethodMotion = true;
        compilerOptions29.setProtectHiddenSideEffects(true);
        compilerOptions29.moveFunctionDeclarations = true;
        boolean boolean36 = compilerOptions29.inlineConstantVars;
        com.google.javascript.jscomp.CompilerOptions compilerOptions37 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions37.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions37.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode43 = null;
        compilerOptions37.setLanguageOut(languageMode43);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy45 = null;
        compilerOptions37.variableRenaming = variableRenamingPolicy45;
        com.google.javascript.jscomp.CheckLevel checkLevel47 = compilerOptions37.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions compilerOptions48 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions48.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy51 = compilerOptions48.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap52 = compilerOptions48.getTweakReplacements();
        boolean boolean53 = strMap52.isEmpty();
        java.lang.Object obj54 = null;
        com.google.javascript.rhino.Node node55 = strMap52.get(obj54);
        com.google.javascript.jscomp.CompilerOptions compilerOptions56 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions56.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel59 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions56.setSourceMapDetailLevel(detailLevel59);
        boolean boolean61 = compilerOptions56.ideMode;
        compilerOptions56.setUnaliasableGlobals("");
        com.google.javascript.jscomp.CheckLevel checkLevel64 = compilerOptions56.checkUnreachableCode;
        com.google.javascript.rhino.Node node65 = strMap52.remove((java.lang.Object) checkLevel64);
        compilerOptions37.checkMissingGetCssNameLevel = checkLevel64;
        compilerOptions29.setCheckUnreachableCode(checkLevel64);
        compilerOptions20.checkUnreachableCode = checkLevel64;
        compilerOptions5.checkGlobalNamesLevel = checkLevel64;
        compilerOptions0.checkMissingReturn = checkLevel64;
        compilerOptions0.setSummaryDetailLevel(11);
        compilerOptions0.setSummaryDetailLevel(192512);
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(detailLevel8);
        org.junit.Assert.assertTrue("'" + languageMode16 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode16.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + tweakProcessing25 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF + "'", tweakProcessing25.equals(com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + checkLevel47 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel47.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy51 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy51.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNotNull(detailLevel59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + checkLevel64 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel64.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(node65);
    }

    @Test
    public void test10624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10624");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(true, false);
        boolean boolean6 = file2.mkdir();
        boolean boolean7 = file2.setReadOnly();
        com.google.javascript.jscomp.SourceFile sourceFile8 = com.google.javascript.jscomp.SourceFile.fromFile(file2);
        boolean boolean9 = file2.mkdir();
        java.io.File file10 = file2.getAbsoluteFile();
        boolean boolean12 = file2.setReadable(false);
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(sourceFile8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(file10);
// flaky:         org.junit.Assert.assertEquals(file10.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file10.toString(), "/experiment/:/hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test10625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10625");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setRuntimeTypeCheckLogFunction("FINEST");
        compilerOptions0.setRemoveDeadCode(true);
        compilerOptions0.setSpecializeInitialModule(false);
        compilerOptions0.preferLineBreakAtEndOfFile = false;
        compilerOptions0.inlineLocalFunctions = false;
    }

    @Test
    public void test10626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10626");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setProtectHiddenSideEffects(true);
        boolean boolean5 = compilerOptions0.isExternExportsEnabled();
        boolean boolean6 = compilerOptions0.aliasAllStrings;
        compilerOptions0.setFoldConstants(false);
        boolean boolean9 = compilerOptions0.removeUnusedClassProperties;
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test10627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10627");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        compilerOptions7.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions7.checkGlobalNamesLevel;
        compilerOptions0.setReportMissingOverride(checkLevel15);
        java.util.Set<java.lang.String> strSet17 = compilerOptions0.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel19 = compilerOptions18.checkRequires;
        compilerOptions0.setReportMissingOverride(checkLevel19);
        compilerOptions0.setGatherCssNames(true);
        compilerOptions0.setLineBreak(false);
        compilerOptions0.setMarkNoSideEffectCalls(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions27.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions27.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode33 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions27.setTracer(tracerMode33);
        compilerOptions27.setSyntheticBlockStartMarker("");
        boolean boolean37 = compilerOptions27.computeFunctionSideEffects;
        com.google.javascript.jscomp.CompilerOptions compilerOptions38 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel39 = compilerOptions38.checkRequires;
        com.google.javascript.jscomp.CompilerOptions compilerOptions40 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode41 = null;
        compilerOptions40.setTracerMode(tracerMode41);
        boolean boolean43 = compilerOptions40.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel44 = compilerOptions40.sourceMapDetailLevel;
        compilerOptions40.setColorizeErrorOutput(true);
        compilerOptions40.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions49 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions49.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy52 = compilerOptions49.propertyRenaming;
        compilerOptions40.propertyRenaming = propertyRenamingPolicy52;
        com.google.javascript.jscomp.CheckLevel checkLevel54 = compilerOptions40.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel55 = compilerOptions40.checkRequires;
        compilerOptions38.setCheckRequires(checkLevel55);
        compilerOptions27.setCheckGlobalThisLevel(checkLevel55);
        compilerOptions0.setCheckUnreachableCode(checkLevel55);
        boolean boolean59 = compilerOptions0.removeUnusedClassProperties;
        boolean boolean60 = compilerOptions0.optimizeArgumentsArray;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + checkLevel19 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel19.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + tracerMode33 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode33.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + checkLevel39 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel39.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(detailLevel44);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy52 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy52.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel54 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel54.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel55 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel55.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test10628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10628");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler2 = new com.google.javascript.jscomp.Compiler();
        jSModule1.sortInputsByDeps(compiler2);
        java.lang.String str4 = jSModule1.getName();
        jSModule1.removeAll();
        com.google.javascript.jscomp.CompilerInput compilerInput7 = jSModule1.getByName("Unversioned directory");
        java.util.List<java.lang.String> strList8 = jSModule1.getProvides();
        java.lang.String str9 = jSModule1.getName();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "STRING PARAM_LIST 49" + "'", str4, "STRING PARAM_LIST 49");
        org.junit.Assert.assertNull(compilerInput7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "STRING PARAM_LIST 49" + "'", str9, "STRING PARAM_LIST 49");
    }

    @Test
    public void test10629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10629");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions0.checkGlobalNamesLevel;
        compilerOptions0.setCheckMissingGetCssNameBlacklist("");
        boolean boolean11 = compilerOptions0.removeTryCatchFinally;
        compilerOptions0.setMarkAsCompiled(true);
        compilerOptions0.inlineGetters = false;
        compilerOptions0.setMoveFunctionDeclarations(false);
        boolean boolean18 = compilerOptions0.checkControlStructures;
        compilerOptions0.setIdeMode(false);
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test10630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10630");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTransformAMDToCJSModules(false);
        boolean boolean7 = compilerOptions0.crossModuleMethodMotion;
        boolean boolean8 = compilerOptions0.crossModuleMethodMotion;
        compilerOptions0.setDefineToStringLiteral("*global*", "STRING PARAM_LIST");
        compilerOptions0.aliasAllStrings = false;
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.crossModuleMethodMotion = false;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test10631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10631");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        com.google.javascript.jscomp.CheckLevel checkLevel30 = compilerOptions0.checkMissingReturn;
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions31.crossModuleMethodMotion = true;
        compilerOptions31.skipAllCompilerPasses();
        boolean boolean35 = compilerOptions31.flowSensitiveInlineVariables;
        java.lang.String[] strArray45 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        compilerOptions31.stripTypes = strSet46;
        compilerOptions31.optimizeParameters = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions51 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions51.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions51.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode57 = null;
        compilerOptions51.setLanguageOut(languageMode57);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy59 = null;
        compilerOptions51.variableRenaming = variableRenamingPolicy59;
        com.google.javascript.jscomp.CheckLevel checkLevel61 = compilerOptions51.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions compilerOptions62 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions62.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy65 = compilerOptions62.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap66 = compilerOptions62.getTweakReplacements();
        boolean boolean67 = strMap66.isEmpty();
        java.lang.Object obj68 = null;
        com.google.javascript.rhino.Node node69 = strMap66.get(obj68);
        com.google.javascript.jscomp.CompilerOptions compilerOptions70 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions70.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel73 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions70.setSourceMapDetailLevel(detailLevel73);
        boolean boolean75 = compilerOptions70.ideMode;
        compilerOptions70.setUnaliasableGlobals("");
        com.google.javascript.jscomp.CheckLevel checkLevel78 = compilerOptions70.checkUnreachableCode;
        com.google.javascript.rhino.Node node79 = strMap66.remove((java.lang.Object) checkLevel78);
        compilerOptions51.checkMissingGetCssNameLevel = checkLevel78;
        compilerOptions31.checkProvides = checkLevel78;
        compilerOptions0.setCheckGlobalThisLevel(checkLevel78);
        compilerOptions0.setReserveRawExports(true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel30 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel30.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + checkLevel61 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel61.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy65 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy65.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNotNull(detailLevel73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + checkLevel78 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel78.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(node79);
    }

    @Test
    public void test10632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10632");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageOut();
        compilerOptions0.setReplaceStringsPlaceholderToken("PARAM_LIST");
        boolean boolean8 = compilerOptions0.markNoSideEffectCalls;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions0.propertyRenaming;
        compilerOptions0.setReportPath("InputId: JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of code motion iterations: {0}");
        compilerOptions0.aliasKeywords = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions14.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode20 = null;
        compilerOptions14.setLanguageOut(languageMode20);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy22 = null;
        compilerOptions14.variableRenaming = variableRenamingPolicy22;
        boolean boolean24 = compilerOptions14.inlineGetters;
        compilerOptions14.setFlowSensitiveInlineVariables(true);
        compilerOptions14.setInlineGetters(true);
        compilerOptions14.setNameAnonymousFunctionsOnly(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode32 = null;
        compilerOptions31.setTracerMode(tracerMode32);
        boolean boolean34 = compilerOptions31.generatePseudoNames;
        java.util.Set<java.lang.String> strSet35 = compilerOptions31.stripTypes;
        com.google.javascript.jscomp.CheckLevel checkLevel36 = compilerOptions31.reportMissingOverride;
        com.google.javascript.jscomp.SourceMap.Format format37 = compilerOptions31.sourceMapFormat;
        compilerOptions14.setSourceMapFormat(format37);
        compilerOptions14.setConvertToDottedProperties(true);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode41 = compilerOptions14.getTracerMode();
        compilerOptions0.setTracerMode(tracerMode41);
        compilerOptions0.labelRenaming = true;
        compilerOptions0.setManageClosureDependencies(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(languageMode5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + checkLevel36 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel36.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(format37);
        org.junit.Assert.assertTrue("'" + tracerMode41 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode41.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
    }

    @Test
    public void test10633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10633");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(false, false);
        boolean boolean8 = file2.setExecutable(false, true);
        long long9 = file2.length();
        boolean boolean11 = file2.setWritable(true);
        java.io.File file12 = file2.getParentFile();
        com.google.javascript.jscomp.JSSourceFile jSSourceFile13 = com.google.javascript.jscomp.JSSourceFile.fromFile(file12);
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 4096L + "'", long9 == 4096L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertNull("file12.getParent() == null", file12.getParent());
        org.junit.Assert.assertEquals(file12.toString(), ":");
        org.junit.Assert.assertNotNull(jSSourceFile13);
    }

    @Test
    public void test10634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10634");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerOptions0.inlineLocalFunctions;
        compilerOptions0.removeDeadCode = true;
        compilerOptions0.jqueryPass = true;
        compilerOptions0.setRewriteFunctionExpressions(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions17 = new com.google.javascript.jscomp.DependencyOptions();
        com.google.javascript.jscomp.DependencyOptions dependencyOptions19 = dependencyOptions17.setDependencyPruning(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions21 = dependencyOptions19.setMoocherDropping(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions23 = dependencyOptions21.setDependencySorting(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean25 = compilerOptions24.moveFunctionDeclarations;
        compilerOptions24.crossModuleCodeMotion = true;
        compilerOptions24.checkSymbols = true;
        java.util.Set<java.lang.String> strSet30 = compilerOptions24.stripNamePrefixes;
        com.google.javascript.jscomp.DependencyOptions dependencyOptions31 = dependencyOptions23.setEntryPoints((java.util.Collection<java.lang.String>) strSet30);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions33 = dependencyOptions23.setDependencySorting(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions34 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions34.crossModuleMethodMotion = true;
        compilerOptions34.optimizeParameters = true;
        compilerOptions34.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions42 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions42.crossModuleMethodMotion = true;
        compilerOptions42.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy47 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions48 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions48.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy51 = compilerOptions48.propertyRenaming;
        compilerOptions42.setRenamingPolicy(variableRenamingPolicy47, propertyRenamingPolicy51);
        com.google.javascript.jscomp.SourceMap.Format format53 = compilerOptions42.sourceMapFormat;
        compilerOptions34.setSourceMapFormat(format53);
        com.google.javascript.jscomp.CompilerOptions compilerOptions55 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions55.crossModuleMethodMotion = true;
        compilerOptions55.skipAllCompilerPasses();
        boolean boolean59 = compilerOptions55.flowSensitiveInlineVariables;
        java.lang.String[] strArray69 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet70 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet70, strArray69);
        compilerOptions55.stripTypes = strSet70;
        compilerOptions34.stripNameSuffixes = strSet70;
        com.google.javascript.jscomp.DependencyOptions dependencyOptions74 = dependencyOptions23.setEntryPoints((java.util.Collection<java.lang.String>) strSet70);
        compilerOptions0.setDependencyOptions(dependencyOptions74);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(dependencyOptions19);
        org.junit.Assert.assertNotNull(dependencyOptions21);
        org.junit.Assert.assertNotNull(dependencyOptions23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(dependencyOptions31);
        org.junit.Assert.assertNotNull(dependencyOptions33);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy51 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy51.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format53);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(dependencyOptions74);
    }

    @Test
    public void test10635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10635");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setInlineLocalFunctions(false);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy3 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy3;
        compilerOptions0.setProtectHiddenSideEffects(false);
        compilerOptions0.syntheticBlockEndMarker = "OFF";
        compilerOptions0.preferLineBreakAtEndOfFile = true;
        com.google.javascript.jscomp.AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy11 = com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.UNMAPPED;
        char[] charArray12 = anonymousFunctionNamingPolicy11.getReservedCharacters();
        compilerOptions0.anonymousFunctionNaming = anonymousFunctionNamingPolicy11;
        compilerOptions0.setDebugFunctionSideEffectsPath("Exceeded max number of code motion iterations: {0}");
        org.junit.Assert.assertTrue("'" + anonymousFunctionNamingPolicy11 + "' != '" + com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.UNMAPPED + "'", anonymousFunctionNamingPolicy11.equals(com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.UNMAPPED));
        org.junit.Assert.assertNotNull(charArray12);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "$");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "$");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[$]");
    }

    @Test
    public void test10636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10636");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setInlineLocalFunctions(false);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy3 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy3;
        compilerOptions0.setProtectHiddenSideEffects(false);
        compilerOptions0.skipAllCompilerPasses();
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions13.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy16 = compilerOptions13.propertyRenaming;
        java.lang.String[] strArray19 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        compilerOptions13.setStripTypes((java.util.Set<java.lang.String>) strSet20);
        compilerOptions8.stripNamePrefixes = strSet20;
        compilerOptions8.checkTypes = false;
        boolean boolean26 = compilerOptions8.assumeStrictThis();
        compilerOptions8.convertToDottedProperties = true;
        com.google.javascript.jscomp.CheckLevel checkLevel29 = com.google.javascript.jscomp.CheckLevel.WARNING;
        compilerOptions8.setCheckGlobalThisLevel(checkLevel29);
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions31.crossModuleMethodMotion = true;
        compilerOptions31.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions36.crossModuleMethodMotion = true;
        compilerOptions36.skipAllCompilerPasses();
        compilerOptions36.resetWarningsGuard();
        java.lang.String str41 = compilerOptions36.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy42 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy43 = null;
        compilerOptions36.setRenamingPolicy(variableRenamingPolicy42, propertyRenamingPolicy43);
        com.google.javascript.jscomp.CompilerOptions compilerOptions45 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions45.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy48 = compilerOptions45.propertyRenaming;
        compilerOptions31.setRenamingPolicy(variableRenamingPolicy42, propertyRenamingPolicy48);
        com.google.javascript.jscomp.CompilerOptions compilerOptions50 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions50.crossModuleMethodMotion = true;
        compilerOptions50.optimizeParameters = true;
        compilerOptions50.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel58 = compilerOptions50.checkGlobalNamesLevel;
        com.google.javascript.jscomp.CompilerOptions compilerOptions59 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode60 = null;
        compilerOptions59.setTracerMode(tracerMode60);
        boolean boolean62 = compilerOptions59.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel63 = compilerOptions59.sourceMapDetailLevel;
        compilerOptions59.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet66 = compilerOptions59.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile68 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput70 = new com.google.javascript.jscomp.CompilerInput(sourceFile68, true);
        com.google.javascript.rhino.InputId inputId72 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput74 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput70, inputId72, true);
        java.lang.String str75 = compilerInput74.toString();
        boolean boolean76 = strSet66.contains((java.lang.Object) compilerInput74);
        java.lang.Object[] objArray77 = strSet66.toArray();
        compilerOptions50.setStripTypes(strSet66);
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy79 = compilerOptions50.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy42, propertyRenamingPolicy79);
        compilerOptions0.propertyRenaming = propertyRenamingPolicy79;
        boolean boolean82 = compilerOptions0.inlineFunctions;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy16 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy16.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + checkLevel29 + "' != '" + com.google.javascript.jscomp.CheckLevel.WARNING + "'", checkLevel29.equals(com.google.javascript.jscomp.CheckLevel.WARNING));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy42 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy42.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy48 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy48.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel58 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel58.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(detailLevel63);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "*global*" + "'", str75, "*global*");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy79 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy79.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test10637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10637");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setProtectHiddenSideEffects(true);
        compilerOptions0.setInputDelimiter("PARAM_LIST\n");
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap7 = null;
        compilerOptions0.cssRenamingMap = cssRenamingMap7;
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode10 = null;
        compilerOptions9.setTracerMode(tracerMode10);
        boolean boolean12 = compilerOptions9.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel13 = compilerOptions9.sourceMapDetailLevel;
        compilerOptions9.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet16 = compilerOptions9.stripNameSuffixes;
        strSet16.clear();
        com.google.javascript.jscomp.SourceFile sourceFile20 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int22 = sourceFile20.getLineOfOffset((int) (short) 1);
        java.lang.String str23 = sourceFile20.getName();
        java.lang.String str24 = sourceFile20.getName();
        java.lang.String str25 = sourceFile20.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput27 = new com.google.javascript.jscomp.CompilerInput(sourceFile20, true);
        com.google.javascript.jscomp.SourceAst sourceAst28 = compilerInput27.getAst();
        boolean boolean29 = strSet16.remove((java.lang.Object) sourceAst28);
        compilerOptions0.setExtraAnnotationNames(strSet16);
        compilerOptions0.setCheckControlStructures(true);
        java.util.Set<java.lang.String> strSet33 = compilerOptions0.stripTypePrefixes;
        compilerOptions0.renamePrefix = ":/hi!/PARAM_LIST\n";
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(detailLevel13);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(sourceFile20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(sourceAst28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet33);
    }

    @Test
    public void test10638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10638");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        com.google.javascript.rhino.jstype.JSType jSType16 = jSTypeRegistry7.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList20 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20, jSTypeArray19);
        com.google.javascript.rhino.Node node22 = jSTypeRegistry18.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList20);
        com.google.javascript.rhino.jstype.JSType jSType27 = jSTypeRegistry18.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] { jSType27 };
        com.google.javascript.rhino.jstype.FunctionType functionType29 = jSTypeRegistry1.createConstructorTypeWithVarArgs(jSType16, jSTypeArray28);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable31 = jSTypeRegistry1.getTypesWithProperty("java.io.IOException: ");
        jSTypeRegistry1.incrementGeneration();
        jSTypeRegistry1.clearTemplateTypeNames();
        boolean boolean35 = jSTypeRegistry1.isForwardDeclaredType("CONFIG");
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSType16);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(jSType27);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertNotNull(functionType29);
        org.junit.Assert.assertNotNull(jSTypeIterable31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test10639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10639");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        jSTypeRegistry1.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable13 = jSTypeRegistry1.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType18 = jSTypeRegistry1.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        boolean boolean27 = jSTypeList22.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry20.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        jSTypeRegistry20.forwardDeclareType("PARAM_LIST");
        jSTypeRegistry20.clearTemplateTypeNames();
        com.google.javascript.rhino.jstype.ObjectType objectType32 = jSTypeRegistry20.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.JSType jSType33 = jSTypeRegistry1.createOptionalNullableType((com.google.javascript.rhino.jstype.JSType) objectType32);
        jSTypeRegistry1.setLastGeneration(true);
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray38 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList39 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList39, jSTypeArray38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        boolean boolean44 = jSTypeList39.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry37.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList39);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable47 = jSTypeRegistry37.getTypesWithProperty(":");
        com.google.javascript.rhino.ErrorReporter errorReporter48 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry49 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter48);
        jSTypeRegistry49.clearNamedTypes();
        jSTypeRegistry49.forwardDeclareType("STRING PARAM_LIST 49");
        com.google.javascript.rhino.jstype.ObjectType objectType53 = jSTypeRegistry49.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.JSType jSType54 = jSTypeRegistry37.createNullableType((com.google.javascript.rhino.jstype.JSType) objectType53);
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newString("/experiment/:");
        boolean boolean57 = node56.isLocalResultCall();
        boolean boolean58 = node56.isRegExp();
        com.google.javascript.rhino.jstype.FunctionType functionType59 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType53, node56);
        jSTypeRegistry1.identifyNonNullableName("java.io.IOException: java.io.IOException");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative62 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.JSType jSType63 = jSTypeRegistry1.getNativeType(jSTypeNative62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeIterable13);
        org.junit.Assert.assertNotNull(jSType18);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(objectType32);
        org.junit.Assert.assertNotNull(jSType33);
        org.junit.Assert.assertNotNull(jSTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(jSTypeIterable47);
        org.junit.Assert.assertNotNull(objectType53);
        org.junit.Assert.assertNotNull(jSType54);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(functionType59);
    }

    @Test
    public void test10640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10640");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) 280487366656L, 50, 45);
        boolean boolean4 = node3.isUnscopedQualifiedName();
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList15 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15, jSTypeArray14);
        com.google.javascript.rhino.Node node17 = jSTypeRegistry13.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList15);
        node11.addChildrenToBack(node17);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        boolean boolean25 = node24.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry27.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        boolean boolean32 = node31.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        com.google.javascript.rhino.Node node38 = jSTypeRegistry34.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        com.google.javascript.rhino.Node node41 = new com.google.javascript.rhino.Node((int) (short) 0, node11, node24, node31, node38, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        com.google.javascript.rhino.ErrorReporter errorReporter49 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry50 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter49);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray51 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList52 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList52, jSTypeArray51);
        com.google.javascript.rhino.Node node54 = jSTypeRegistry50.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList52);
        node48.addChildrenToBack(node54);
        com.google.javascript.rhino.ErrorReporter errorReporter56 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry57 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter56);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray58 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList59 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList59, jSTypeArray58);
        com.google.javascript.rhino.Node node61 = jSTypeRegistry57.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList59);
        boolean boolean62 = node61.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList66 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList66, jSTypeArray65);
        com.google.javascript.rhino.Node node68 = jSTypeRegistry64.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList66);
        boolean boolean69 = node68.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray72 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList73 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList73, jSTypeArray72);
        com.google.javascript.rhino.Node node75 = jSTypeRegistry71.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList73);
        com.google.javascript.rhino.Node node78 = new com.google.javascript.rhino.Node((int) (short) 0, node48, node61, node68, node75, 0, 49);
        com.google.javascript.rhino.Node node79 = node41.useSourceInfoFrom(node61);
        boolean boolean80 = node79.hasChildren();
        boolean boolean81 = node79.isArrayLit();
        com.google.javascript.rhino.InputId inputId83 = new com.google.javascript.rhino.InputId("*global*");
        java.lang.String str84 = inputId83.toString();
        node79.setInputId(inputId83);
        node79.putBooleanProp(12, false);
        boolean boolean89 = node3.isEquivalentToTyped(node79);
        node3.setIsSyntheticBlock(false);
        java.lang.Object obj93 = node3.getProp(54);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(jSTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(jSTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(jSTypeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "InputId: *global*" + "'", str84, "InputId: *global*");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(obj93);
    }

    @Test
    public void test10641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10641");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        compilerOptions0.setSummaryDetailLevel(49);
        compilerOptions0.setRemoveTryCatchFinally(true);
        compilerOptions0.setComputeFunctionSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel12 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions9.setSourceMapDetailLevel(detailLevel12);
        compilerOptions0.sourceMapDetailLevel = detailLevel12;
        com.google.javascript.jscomp.CompilerOptions compilerOptions15 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions15.crossModuleMethodMotion = true;
        compilerOptions15.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy20 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions21.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy24 = compilerOptions21.propertyRenaming;
        compilerOptions15.setRenamingPolicy(variableRenamingPolicy20, propertyRenamingPolicy24);
        boolean boolean26 = compilerOptions15.checkControlStructures;
        boolean boolean27 = compilerOptions15.crossModuleCodeMotion;
        compilerOptions15.extractPrototypeMemberDeclarations = true;
        com.google.javascript.jscomp.AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy30 = compilerOptions15.anonymousFunctionNaming;
        compilerOptions0.anonymousFunctionNaming = anonymousFunctionNamingPolicy30;
        compilerOptions0.setCheckMissingGetCssNameBlacklist("Unversioned directory");
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray34 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList35 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList35, jSTypeArray34);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        boolean boolean40 = jSTypeList35.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        com.google.javascript.jscomp.CompilerOptions compilerOptions41 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode42 = null;
        compilerOptions41.setTracerMode(tracerMode42);
        boolean boolean44 = compilerOptions41.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel45 = compilerOptions41.sourceMapDetailLevel;
        compilerOptions41.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions48 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions48.crossModuleMethodMotion = true;
        compilerOptions48.optimizeParameters = true;
        compilerOptions48.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel56 = compilerOptions48.checkGlobalNamesLevel;
        compilerOptions41.setReportMissingOverride(checkLevel56);
        java.util.Set<java.lang.String> strSet58 = compilerOptions41.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions59 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode60 = null;
        compilerOptions59.setTracerMode(tracerMode60);
        boolean boolean62 = compilerOptions59.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel63 = compilerOptions59.sourceMapDetailLevel;
        compilerOptions59.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet66 = compilerOptions59.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile68 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput70 = new com.google.javascript.jscomp.CompilerInput(sourceFile68, true);
        com.google.javascript.rhino.InputId inputId72 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput74 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput70, inputId72, true);
        java.lang.String str75 = compilerInput74.toString();
        boolean boolean76 = strSet66.contains((java.lang.Object) compilerInput74);
        compilerOptions41.stripTypes = strSet66;
        compilerOptions41.setMarkAsCompiled(true);
        java.util.Set<java.lang.String> strSet80 = compilerOptions41.stripTypePrefixes;
        boolean boolean81 = jSTypeList35.remove((java.lang.Object) strSet80);
        com.google.javascript.jscomp.CompilerOptions compilerOptions82 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions82.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode85 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions82.setTracer(tracerMode85);
        com.google.javascript.jscomp.CompilerOptions.Reach reach87 = com.google.javascript.jscomp.CompilerOptions.Reach.NONE;
        compilerOptions82.setInlineVariables(reach87);
        boolean boolean89 = strSet80.remove((java.lang.Object) reach87);
        compilerOptions0.aliasableStrings = strSet80;
        compilerOptions0.setCheckSuspiciousCode(false);
        compilerOptions0.setReplaceIdGenerators(false);
        boolean boolean95 = compilerOptions0.removeUnusedClassProperties;
        org.junit.Assert.assertNotNull(detailLevel12);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy24 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy24.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + anonymousFunctionNamingPolicy30 + "' != '" + com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF + "'", anonymousFunctionNamingPolicy30.equals(com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF));
        org.junit.Assert.assertNotNull(jSTypeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(detailLevel45);
        org.junit.Assert.assertTrue("'" + checkLevel56 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel56.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(detailLevel63);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "*global*" + "'", str75, "*global*");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + tracerMode85 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode85.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + reach87 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.NONE + "'", reach87.equals(com.google.javascript.jscomp.CompilerOptions.Reach.NONE));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test10642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10642");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setProtectHiddenSideEffects(true);
        boolean boolean5 = compilerOptions0.isExternExportsEnabled();
        boolean boolean6 = compilerOptions0.isRemoveUnusedClassProperties();
        byte[] byteArray7 = compilerOptions0.inputPropertyMapSerialized;
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(byteArray7);
    }

    @Test
    public void test10643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10643");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.INVALID_CASTS;
        com.google.javascript.jscomp.DiagnosticGroups.STRICT_MODULE_DEP_CHECK = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.UNDEFINED_NAMES = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.CHECK_USELESS_CODE = diagnosticGroup0;
// flaky:         org.junit.Assert.assertNull(diagnosticGroup0);
    }

    @Test
    public void test10644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10644");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        boolean boolean44 = node43.isIn();
        boolean boolean45 = node43.isVoid();
        node43.setOptionalArg(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions48 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode49 = null;
        compilerOptions48.setTracerMode(tracerMode49);
        boolean boolean51 = compilerOptions48.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel52 = compilerOptions48.sourceMapDetailLevel;
        compilerOptions48.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions55 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions55.crossModuleMethodMotion = true;
        compilerOptions55.optimizeParameters = true;
        compilerOptions55.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel63 = compilerOptions55.checkGlobalNamesLevel;
        compilerOptions48.setReportMissingOverride(checkLevel63);
        com.google.javascript.jscomp.DiagnosticType diagnosticType65 = com.google.javascript.jscomp.Compiler.MOTION_ITERATIONS_ERROR;
        java.lang.String[] strArray66 = null;
        com.google.javascript.jscomp.JSError jSError67 = com.google.javascript.jscomp.JSError.make("", node43, checkLevel63, diagnosticType65, strArray66);
        com.google.javascript.rhino.Node node68 = node33.srcref(node43);
        boolean boolean69 = node68.isDefaultCase();
        node68.setVarArgs(true);
        boolean boolean72 = node68.isScript();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(detailLevel52);
        org.junit.Assert.assertTrue("'" + checkLevel63 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel63.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(diagnosticType65);
        org.junit.Assert.assertNotNull(jSError67);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test10645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10645");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException("OFF", (java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException("PARAM_LIST\n    PARAM_LIST\n", (java.lang.Throwable) iOException2);
        java.io.IOException iOException7 = new java.io.IOException("");
        java.io.IOException iOException8 = new java.io.IOException((java.lang.Throwable) iOException7);
        java.io.IOException iOException9 = new java.io.IOException((java.lang.Throwable) iOException8);
        java.io.IOException iOException10 = new java.io.IOException();
        iOException9.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException(":", (java.lang.Throwable) iOException9);
        java.io.IOException iOException13 = new java.io.IOException((java.lang.Throwable) iOException9);
        iOException4.addSuppressed((java.lang.Throwable) iOException9);
    }

    @Test
    public void test10646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10646");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        compilerOptions0.setGeneratePseudoNames(false);
        compilerOptions0.setOptimizeArgumentsArray(true);
        boolean boolean7 = compilerOptions0.getInferTypes();
        compilerOptions0.setFoldConstants(true);
        compilerOptions0.inputDelimiter = "InputId: PARAM_LIST";
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test10647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10647");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream6 = jSTypeList3.parallelStream();
        java.io.IOException iOException8 = new java.io.IOException();
        java.io.IOException iOException9 = new java.io.IOException("OFF", (java.lang.Throwable) iOException8);
        java.io.IOException[] iOExceptionArray10 = new java.io.IOException[] { iOException9 };
        java.io.IOException[] iOExceptionArray11 = jSTypeList3.toArray(iOExceptionArray10);
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry14.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        node18.addChildrenToBack(node24);
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry27.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        boolean boolean32 = node31.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        com.google.javascript.rhino.Node node38 = jSTypeRegistry34.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        boolean boolean39 = node38.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        com.google.javascript.rhino.Node node48 = new com.google.javascript.rhino.Node((int) (short) 0, node18, node31, node38, node45, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter49 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry50 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter49);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray51 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList52 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList52, jSTypeArray51);
        com.google.javascript.rhino.Node node54 = jSTypeRegistry50.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList52);
        com.google.javascript.rhino.ErrorReporter errorReporter55 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry56 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter55);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray57 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList58 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList58, jSTypeArray57);
        com.google.javascript.rhino.Node node60 = jSTypeRegistry56.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList58);
        node54.addChildrenToBack(node60);
        com.google.javascript.rhino.Node node62 = node18.clonePropsFrom(node60);
        java.util.Set<java.lang.String> strSet63 = node62.getDirectives();
        node62.setLineno((int) '/');
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder66 = node62.getJsDocBuilderForNode();
        boolean boolean67 = node62.isNoSideEffectsCall();
        boolean boolean68 = node62.isVarArgs();
        boolean boolean69 = jSTypeList3.equals((java.lang.Object) node62);
        int int70 = jSTypeList3.size();
        java.io.File file73 = new java.io.File(":", "hi!");
        boolean boolean76 = file73.setExecutable(false, false);
        java.io.File file77 = file73.getParentFile();
        long long78 = file77.getUsableSpace();
        boolean boolean79 = file77.mkdirs();
        java.io.File file80 = file77.getAbsoluteFile();
        java.io.File file83 = new java.io.File(":", "hi!");
        boolean boolean86 = file83.setExecutable(true, false);
        boolean boolean88 = file83.setWritable(false);
        boolean boolean89 = file83.canWrite();
        java.net.URI uRI90 = file83.toURI();
        boolean boolean91 = file80.renameTo(file83);
        boolean boolean92 = jSTypeList3.remove((java.lang.Object) file80);
        boolean boolean93 = file80.exists();
        boolean boolean94 = file80.isDirectory();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeStream6);
        org.junit.Assert.assertNotNull(iOExceptionArray10);
        org.junit.Assert.assertNotNull(iOExceptionArray11);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(jSTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(jSTypeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNull(strSet63);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals(file73.getParent(), ":");
        org.junit.Assert.assertEquals(file73.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertNull("file77.getParent() == null", file77.getParent());
        org.junit.Assert.assertEquals(file77.toString(), ":");
// flaky:         org.junit.Assert.assertTrue("'" + long78 + "' != '" + 280489377792L + "'", long78 == 280489377792L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(file80);
// flaky:         org.junit.Assert.assertEquals(file80.getParent(), "/experiment");
// flaky:         org.junit.Assert.assertEquals(file80.toString(), "/experiment/:");
        org.junit.Assert.assertEquals(file83.getParent(), ":");
        org.junit.Assert.assertEquals(file83.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(uRI90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test10648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10648");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setRemoveUnusedVars(false);
        com.google.javascript.jscomp.CompilerOptions.AliasTransformationHandler aliasTransformationHandler34 = null;
        compilerOptions0.setAliasTransformationHandler(aliasTransformationHandler34);
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode37 = null;
        compilerOptions36.setTracerMode(tracerMode37);
        boolean boolean39 = compilerOptions36.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel40 = compilerOptions36.sourceMapDetailLevel;
        compilerOptions36.setColorizeErrorOutput(true);
        compilerOptions36.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions45 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions45.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy48 = compilerOptions45.propertyRenaming;
        compilerOptions36.propertyRenaming = propertyRenamingPolicy48;
        com.google.javascript.jscomp.CompilerOptions compilerOptions50 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel51 = compilerOptions50.checkRequires;
        com.google.javascript.jscomp.CompilerOptions compilerOptions52 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode53 = null;
        compilerOptions52.setTracerMode(tracerMode53);
        boolean boolean55 = compilerOptions52.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel56 = compilerOptions52.sourceMapDetailLevel;
        compilerOptions52.setColorizeErrorOutput(true);
        compilerOptions52.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions61 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions61.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy64 = compilerOptions61.propertyRenaming;
        compilerOptions52.propertyRenaming = propertyRenamingPolicy64;
        com.google.javascript.jscomp.CheckLevel checkLevel66 = compilerOptions52.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel67 = compilerOptions52.checkRequires;
        compilerOptions50.setCheckRequires(checkLevel67);
        compilerOptions36.setCheckProvides(checkLevel67);
        compilerOptions0.reportMissingOverride = checkLevel67;
        boolean boolean71 = compilerOptions0.preferLineBreakAtEndOfFile;
        boolean boolean72 = compilerOptions0.inlineGetters;
        boolean boolean73 = compilerOptions0.assumeStrictThis();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(detailLevel40);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy48 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy48.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel51 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel51.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(detailLevel56);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy64 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy64.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel66 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel66.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel67 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel67.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test10649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10649");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.setReportPath("java.io.IOException: ");
        boolean boolean4 = compilerOptions0.inlineConstantVars;
        compilerOptions0.inlineVariables = false;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test10650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10650");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        boolean boolean10 = compilerOptions0.coalesceVariableNames;
        compilerOptions0.setOptimizeArgumentsArray(true);
        compilerOptions0.devirtualizePrototypeMethods = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions15 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str16 = compilerOptions15.syntheticBlockStartMarker;
        compilerOptions15.setMarkNoSideEffectCalls(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions19 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions19.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions19.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode25 = null;
        compilerOptions19.setLanguageOut(languageMode25);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy27 = null;
        compilerOptions19.variableRenaming = variableRenamingPolicy27;
        boolean boolean29 = compilerOptions19.coalesceVariableNames;
        compilerOptions19.setOptimizeArgumentsArray(true);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode32 = com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT5_STRICT;
        compilerOptions19.setLanguageOut(languageMode32);
        compilerOptions19.setInlineConstantVars(false);
        compilerOptions19.setProtectHiddenSideEffects(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions38 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode39 = null;
        compilerOptions38.setTracerMode(tracerMode39);
        boolean boolean41 = compilerOptions38.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel42 = compilerOptions38.sourceMapDetailLevel;
        compilerOptions38.setColorizeErrorOutput(true);
        compilerOptions38.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions47 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions47.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy50 = compilerOptions47.propertyRenaming;
        compilerOptions38.propertyRenaming = propertyRenamingPolicy50;
        compilerOptions38.convertToDottedProperties = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions54 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str55 = compilerOptions54.syntheticBlockStartMarker;
        compilerOptions54.setMarkNoSideEffectCalls(false);
        com.google.javascript.jscomp.CheckLevel checkLevel58 = compilerOptions54.checkGlobalThisLevel;
        compilerOptions38.setReportUnknownTypes(checkLevel58);
        compilerOptions19.setCheckGlobalThisLevel(checkLevel58);
        compilerOptions15.checkGlobalNamesLevel = checkLevel58;
        compilerOptions0.checkProvides = checkLevel58;
        com.google.javascript.jscomp.CompilerOptions compilerOptions63 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode64 = null;
        compilerOptions63.setTracerMode(tracerMode64);
        boolean boolean66 = compilerOptions63.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel67 = compilerOptions63.sourceMapDetailLevel;
        compilerOptions63.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions70 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions70.crossModuleMethodMotion = true;
        compilerOptions70.optimizeParameters = true;
        compilerOptions70.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel78 = compilerOptions70.checkGlobalNamesLevel;
        compilerOptions63.setReportMissingOverride(checkLevel78);
        java.util.Set<java.lang.String> strSet80 = compilerOptions63.stripTypes;
        compilerOptions0.setStripTypePrefixes(strSet80);
        strSet80.clear();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + languageMode32 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT5_STRICT + "'", languageMode32.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT5_STRICT));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(detailLevel42);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy50 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy50.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + checkLevel58 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel58.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(detailLevel67);
        org.junit.Assert.assertTrue("'" + checkLevel78 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel78.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet80);
    }

    @Test
    public void test10651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10651");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageOut();
        compilerOptions0.setFoldConstants(true);
        compilerOptions0.optimizeArgumentsArray = true;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel10 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel11 = compilerOptions0.checkGlobalNamesLevel;
        boolean boolean12 = compilerOptions0.inlineFunctions;
        compilerOptions0.syntheticBlockStartMarker = "JSC_OPTIMIZE_LOOP_ERROR. Exceeded max number of code motion iterations: {0} at (unknown source) line (unknown line) : (unknown column)";
        compilerOptions0.reserveRawExports = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(languageMode5);
        org.junit.Assert.assertNotNull(detailLevel10);
        org.junit.Assert.assertTrue("'" + checkLevel11 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel11.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test10652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10652");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int4 = sourceFile2.getLineOfOffset((int) (short) 1);
        java.lang.String str5 = sourceFile2.getName();
        java.lang.String str6 = sourceFile2.getName();
        java.lang.String str7 = sourceFile2.getName();
        com.google.javascript.jscomp.JsAst jsAst8 = new com.google.javascript.jscomp.JsAst(sourceFile2);
        com.google.javascript.rhino.InputId inputId9 = jsAst8.getInputId();
        jsAst8.clearAst();
        java.io.File file14 = new java.io.File(":");
        java.io.File file16 = new java.io.File(file14, "FINEST");
        java.io.File file17 = java.io.File.createTempFile("OFF", "", file14);
        java.lang.String str18 = file14.getPath();
        com.google.javascript.jscomp.SourceFile sourceFile19 = com.google.javascript.jscomp.SourceFile.fromFile(file14);
        // The following exception was thrown during execution in test generation
        try {
            jsAst8.setSourceFile(sourceFile19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(inputId9);
        org.junit.Assert.assertNull("file14.getParent() == null", file14.getParent());
        org.junit.Assert.assertEquals(file14.toString(), ":");
        org.junit.Assert.assertEquals(file16.getParent(), ":");
        org.junit.Assert.assertEquals(file16.toString(), ":/FINEST");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), ":");
// flaky:         org.junit.Assert.assertEquals(file17.toString(), ":/OFF2005168642913192938");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + ":" + "'", str18, ":");
        org.junit.Assert.assertNotNull(sourceFile19);
    }

    @Test
    public void test10653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10653");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler2 = new com.google.javascript.jscomp.Compiler();
        jSModule1.sortInputsByDeps(compiler2);
        com.google.javascript.jscomp.SourceFile.Builder builder4 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile8 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int10 = sourceFile8.getLineOfOffset((int) (short) 1);
        java.io.Reader reader11 = sourceFile8.getCodeReader();
        int int12 = reader11.read();
        com.google.javascript.jscomp.SourceFile sourceFile13 = builder4.buildFromReader("*global*", reader11);
        jSModule1.add(sourceFile13);
        com.google.javascript.jscomp.JSModule jSModule16 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler17 = new com.google.javascript.jscomp.Compiler();
        jSModule16.sortInputsByDeps(compiler17);
        com.google.javascript.jscomp.SourceFile.Builder builder19 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile23 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int25 = sourceFile23.getLineOfOffset((int) (short) 1);
        java.io.Reader reader26 = sourceFile23.getCodeReader();
        int int27 = reader26.read();
        com.google.javascript.jscomp.SourceFile sourceFile28 = builder19.buildFromReader("*global*", reader26);
        jSModule16.add(sourceFile28);
        boolean boolean31 = jSModule16.removeByName("PARAM_LIST");
        jSModule1.addDependency(jSModule16);
        java.util.List<java.lang.String> strList33 = jSModule1.getProvides();
        java.util.Set<com.google.javascript.jscomp.JSModule> jSModuleSet34 = jSModule1.getThisAndAllDependencies();
        com.google.javascript.jscomp.SourceFile sourceFile38 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int40 = sourceFile38.getLineOfOffset((int) (short) 1);
        int int42 = sourceFile38.getLineOfOffset(100);
        java.lang.String str43 = sourceFile38.getName();
        java.io.Reader reader44 = sourceFile38.getCodeReader();
        reader44.reset();
        com.google.javascript.jscomp.SourceFile sourceFile46 = com.google.javascript.jscomp.SourceFile.fromReader("PARAM_LIST", reader44);
        sourceFile46.clearCachedSource();
        sourceFile46.setOriginalPath(":");
        jSModule1.addFirst(sourceFile46);
        org.junit.Assert.assertNotNull(sourceFile8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(sourceFile13);
        org.junit.Assert.assertNotNull(sourceFile23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(sourceFile28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(jSModuleSet34);
        org.junit.Assert.assertNotNull(sourceFile38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(reader44);
        org.junit.Assert.assertNotNull(sourceFile46);
    }

    @Test
    public void test10654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10654");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        jSTypeRegistry1.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable13 = jSTypeRegistry1.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType18 = jSTypeRegistry1.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        boolean boolean27 = jSTypeList22.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry20.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        jSTypeRegistry20.forwardDeclareType("PARAM_LIST");
        jSTypeRegistry20.clearTemplateTypeNames();
        com.google.javascript.rhino.jstype.ObjectType objectType32 = jSTypeRegistry20.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.JSType jSType33 = jSTypeRegistry1.createOptionalNullableType((com.google.javascript.rhino.jstype.JSType) objectType32);
        com.google.javascript.rhino.ErrorReporter errorReporter34 = jSTypeRegistry1.getErrorReporter();
        jSTypeRegistry1.forwardDeclareType("goog.exportProperty");
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.ObjectType objectType39 = jSTypeRegistry38.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType40 = jSTypeRegistry1.createObjectType(objectType39);
        com.google.javascript.rhino.ErrorReporter errorReporter41 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry42 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter41);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray43 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList44 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList44, jSTypeArray43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        boolean boolean49 = jSTypeList44.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry42.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList44);
        java.lang.Object obj51 = null;
        boolean boolean52 = jSTypeList44.remove(obj51);
        java.lang.Object obj53 = null;
        int int54 = jSTypeList44.indexOf(obj53);
        int int55 = jSTypeList44.size();
        java.util.ListIterator<com.google.javascript.rhino.jstype.JSType> jSTypeItor56 = jSTypeList44.listIterator();
        com.google.javascript.rhino.Node node57 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList44);
        int int58 = jSTypeList44.size();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeIterable13);
        org.junit.Assert.assertNotNull(jSType18);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(objectType32);
        org.junit.Assert.assertNotNull(jSType33);
        org.junit.Assert.assertNull(errorReporter34);
        org.junit.Assert.assertNotNull(objectType39);
        org.junit.Assert.assertNotNull(objectType40);
        org.junit.Assert.assertNotNull(jSTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(jSTypeItor56);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test10655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10655");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.syntheticBlockEndMarker = "hi!";
        compilerOptions0.removeUnusedClassProperties = false;
        compilerOptions0.setLineLengthThreshold(4095);
        compilerOptions0.setInputDelimiter("goog.exportSymbol");
        compilerOptions0.inlineConstantVars = false;
        compilerOptions0.setLineBreak(false);
    }

    @Test
    public void test10656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10656");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        compilerOptions0.setSkipAllPasses(false);
        compilerOptions0.setRewriteNewDateGoogNow(false);
        com.google.javascript.jscomp.MessageBundle messageBundle13 = compilerOptions0.messageBundle;
        com.google.javascript.jscomp.CheckLevel checkLevel14 = com.google.javascript.jscomp.CheckLevel.OFF;
        compilerOptions0.setReportMissingOverride(checkLevel14);
        boolean boolean16 = compilerOptions0.checkTypes;
        compilerOptions0.reserveRawExports = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(messageBundle13);
        org.junit.Assert.assertTrue("'" + checkLevel14 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel14.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test10657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10657");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions0.checkGlobalNamesLevel;
        compilerOptions0.setCheckMissingGetCssNameBlacklist("");
        compilerOptions0.deadAssignmentElimination = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions13.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions13.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode19 = null;
        compilerOptions13.setLanguageOut(languageMode19);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy21 = null;
        compilerOptions13.variableRenaming = variableRenamingPolicy21;
        com.google.javascript.jscomp.CheckLevel checkLevel23 = compilerOptions13.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode24 = compilerOptions13.getLanguageOut();
        boolean boolean25 = compilerOptions13.moveFunctionDeclarations;
        byte[] byteArray26 = null;
        compilerOptions13.inputPropertyMapSerialized = byteArray26;
        com.google.javascript.jscomp.DependencyOptions dependencyOptions28 = new com.google.javascript.jscomp.DependencyOptions();
        com.google.javascript.jscomp.DependencyOptions dependencyOptions30 = dependencyOptions28.setDependencyPruning(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions32 = dependencyOptions30.setMoocherDropping(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions34 = dependencyOptions32.setDependencySorting(false);
        compilerOptions13.setDependencyOptions(dependencyOptions34);
        compilerOptions0.setDependencyOptions(dependencyOptions34);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions38 = dependencyOptions34.setDependencySorting(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions40 = dependencyOptions38.setMoocherDropping(false);
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel23 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel23.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(languageMode24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(dependencyOptions30);
        org.junit.Assert.assertNotNull(dependencyOptions32);
        org.junit.Assert.assertNotNull(dependencyOptions34);
        org.junit.Assert.assertNotNull(dependencyOptions38);
        org.junit.Assert.assertNotNull(dependencyOptions40);
    }

    @Test
    public void test10658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10658");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.CompilerInput compilerInput3 = jSModule1.getByName("FINEST");
        com.google.javascript.jscomp.SourceFile sourceFile6 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int8 = sourceFile6.getLineOfOffset((int) (short) 1);
        java.lang.String str9 = sourceFile6.getName();
        java.lang.String str10 = sourceFile6.getName();
        java.lang.String str11 = sourceFile6.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput13 = new com.google.javascript.jscomp.CompilerInput(sourceFile6, true);
        com.google.javascript.jscomp.CompilerInput compilerInput14 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput13);
        com.google.javascript.jscomp.JSModule jSModule15 = compilerInput13.getModule();
        com.google.javascript.jscomp.JSModule jSModule17 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler18 = new com.google.javascript.jscomp.Compiler();
        jSModule17.sortInputsByDeps(compiler18);
        java.lang.String str20 = jSModule17.getName();
        compilerInput13.setModule(jSModule17);
        jSModule1.addDependency(jSModule17);
        com.google.javascript.jscomp.SourceFile sourceFile25 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int27 = sourceFile25.getLineOfOffset((int) (short) 1);
        int int29 = sourceFile25.getLineOfOffset(100);
        java.lang.String str30 = sourceFile25.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput31 = new com.google.javascript.jscomp.CompilerInput(sourceFile25);
        com.google.javascript.rhino.InputId inputId32 = compilerInput31.getInputId();
        jSModule1.addFirst(compilerInput31);
        com.google.javascript.jscomp.CompilerInput compilerInput34 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput31);
        com.google.javascript.jscomp.Region region36 = compilerInput34.getRegion(4095);
        com.google.javascript.jscomp.CompilerInput compilerInput38 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput34, false);
        int int39 = compilerInput34.getNumLines();
        org.junit.Assert.assertNull(compilerInput3);
        org.junit.Assert.assertNotNull(sourceFile6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNull(jSModule15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "STRING PARAM_LIST 49" + "'", str20, "STRING PARAM_LIST 49");
        org.junit.Assert.assertNotNull(sourceFile25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(inputId32);
        org.junit.Assert.assertNull(region36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }

    @Test
    public void test10659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10659");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString(35, "goog.abstractMethod");
        int int3 = node2.getLineno();
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry6 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray7 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList8 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList8, jSTypeArray7);
        com.google.javascript.rhino.Node node10 = jSTypeRegistry6.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList8);
        com.google.javascript.rhino.ErrorReporter errorReporter11 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry12 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray13 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList14 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14, jSTypeArray13);
        com.google.javascript.rhino.Node node16 = jSTypeRegistry12.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList14);
        node10.addChildrenToBack(node16);
        com.google.javascript.rhino.ErrorReporter errorReporter18 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter18);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray20 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList21 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList21, jSTypeArray20);
        com.google.javascript.rhino.Node node23 = jSTypeRegistry19.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList21);
        boolean boolean24 = node23.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter25 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry26 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter25);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray27 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList28 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList28, jSTypeArray27);
        com.google.javascript.rhino.Node node30 = jSTypeRegistry26.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList28);
        boolean boolean31 = node30.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry33 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray34 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList35 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList35, jSTypeArray34);
        com.google.javascript.rhino.Node node37 = jSTypeRegistry33.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList35);
        com.google.javascript.rhino.Node node40 = new com.google.javascript.rhino.Node((int) (short) 0, node10, node23, node30, node37, 0, 49);
        boolean boolean41 = node10.isDo();
        boolean boolean42 = node10.isWhile();
        boolean boolean43 = node10.hasOneChild();
        boolean boolean44 = node10.isWhile();
        java.util.Set<java.lang.String> strSet45 = node10.getDirectives();
        com.google.javascript.rhino.Node node46 = node2.clonePropsFrom(node10);
        boolean boolean47 = node2.isGetterDef();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(jSTypeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(jSTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(jSTypeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(jSTypeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(jSTypeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(strSet45);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test10660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10660");
        java.io.PrintStream printStream1 = new java.io.PrintStream("goog.abstractMethod");
        printStream1.print(39L);
        printStream1.println((double) 280491266048L);
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        compilerOptions6.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy11 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions12 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions12.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy15 = compilerOptions12.propertyRenaming;
        compilerOptions6.setRenamingPolicy(variableRenamingPolicy11, propertyRenamingPolicy15);
        compilerOptions6.setTransformAMDToCJSModules(true);
        boolean boolean19 = compilerOptions6.exportTestFunctions;
        boolean boolean20 = compilerOptions6.exportTestFunctions;
        boolean boolean21 = compilerOptions6.foldConstants;
        byte[] byteArray22 = new byte[] {};
        compilerOptions6.setInputVariableMapSerialized(byteArray22);
        printStream1.write(byteArray22);
        printStream1.println(1645456230000L);
        printStream1.print(true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy15 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy15.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
    }

    @Test
    public void test10661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10661");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions0.checkGlobalNamesLevel;
        compilerOptions0.setCheckMissingGetCssNameBlacklist("");
        boolean boolean11 = compilerOptions0.removeTryCatchFinally;
        java.lang.String str12 = compilerOptions0.renamePrefixNamespace;
        compilerOptions0.setLabelRenaming(true);
        boolean boolean15 = compilerOptions0.inlineConstantVars;
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test10662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10662");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        java.lang.Object obj6 = null;
        com.google.javascript.rhino.Node node7 = strMap4.get(obj6);
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString(100, "2019/07/12 07:12", 0, 2);
        com.google.javascript.rhino.Node node14 = strMap4.put("// Input %num%", node13);
        com.google.javascript.jscomp.CompilerOptions compilerOptions15 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions15.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode18 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions15.setTracer(tracerMode18);
        compilerOptions15.setFoldConstants(true);
        compilerOptions15.flowSensitiveInlineVariables = true;
        compilerOptions15.setTweakToStringLiteral("InputId: *global*", "hi!");
        compilerOptions15.collapseAnonymousFunctions = false;
        compilerOptions15.setOutputCharset("");
        java.util.Set<java.lang.String> strSet31 = compilerOptions15.stripTypes;
        boolean boolean32 = compilerOptions15.ambiguateProperties;
        boolean boolean33 = strMap4.equals((java.lang.Object) boolean32);
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags35 = new com.google.javascript.rhino.Node.SideEffectFlags((int) (byte) 100);
        sideEffectFlags35.clearSideEffectFlags();
        sideEffectFlags35.setAllFlags();
        sideEffectFlags35.setThrows();
        com.google.javascript.jscomp.CompilerOptions compilerOptions39 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions39.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy42 = compilerOptions39.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap43 = compilerOptions39.getTweakReplacements();
        boolean boolean44 = strMap43.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.Node>> strEntrySet45 = strMap43.entrySet();
        com.google.javascript.jscomp.CompilerOptions.TweakProcessing tweakProcessing46 = com.google.javascript.jscomp.CompilerOptions.TweakProcessing.STRIP;
        com.google.javascript.jscomp.CompilerOptions compilerOptions47 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions47.setInlineLocalFunctions(false);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy50 = null;
        compilerOptions47.variableRenaming = variableRenamingPolicy50;
        compilerOptions47.setProtectHiddenSideEffects(false);
        boolean boolean54 = strMap43.remove((java.lang.Object) tweakProcessing46, (java.lang.Object) false);
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec56 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("*global*");
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newString((int) ' ', "OFF");
        com.google.javascript.rhino.Node node60 = assertionFunctionSpec56.getAssertedParam(node59);
        boolean boolean61 = node60.isOr();
        com.google.javascript.rhino.Node node66 = com.google.javascript.rhino.Node.newString(46, "", 2, 51);
        com.google.javascript.rhino.Node node67 = strMap43.getOrDefault((java.lang.Object) node60, node66);
        com.google.javascript.rhino.Node node68 = strMap4.getOrDefault((java.lang.Object) sideEffectFlags35, node60);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile69 = node68.getStaticSourceFile();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + tracerMode18 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode18.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy42 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy42.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strEntrySet45);
        org.junit.Assert.assertTrue("'" + tweakProcessing46 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TweakProcessing.STRIP + "'", tweakProcessing46.equals(com.google.javascript.jscomp.CompilerOptions.TweakProcessing.STRIP));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNull(staticSourceFile69);
    }

    @Test
    public void test10663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10663");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.setAcceptConstKeyword(false);
        compilerOptions0.foldConstants = false;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel6 = compilerOptions0.sourceMapDetailLevel;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(detailLevel6);
    }

    @Test
    public void test10664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10664");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy12 = compilerOptions9.propertyRenaming;
        compilerOptions0.propertyRenaming = propertyRenamingPolicy12;
        com.google.javascript.jscomp.CheckLevel checkLevel14 = compilerOptions0.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions0.checkRequires;
        compilerOptions0.setRemoveUnusedVars(false);
        boolean boolean18 = compilerOptions0.jqueryPass;
        compilerOptions0.recordFunctionInformation = true;
        compilerOptions0.locale = "JSC_OPTIMIZE_LOOP_ERROR. Exceeded max number of code motion iterations: Unversioned directory at / line (unknown line) : 48";
        compilerOptions0.setInlineFunctions(false);
        compilerOptions0.setRemoveAbstractMethods(true);
        com.google.javascript.jscomp.MessageBundle messageBundle27 = null;
        compilerOptions0.messageBundle = messageBundle27;
        compilerOptions0.setInlineGetters(true);
        boolean boolean31 = compilerOptions0.crossModuleCodeMotion;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy12 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy12.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel14 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel14.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test10665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10665");
        com.google.javascript.jscomp.JSSourceFile jSSourceFile1 = com.google.javascript.jscomp.JSSourceFile.fromFile("ALL");
        org.junit.Assert.assertNotNull(jSSourceFile1);
    }

    @Test
    public void test10666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10666");
        java.util.logging.Level level0 = java.util.logging.Level.OFF;
        java.lang.String str1 = level0.toString();
        com.google.javascript.jscomp.CompilerOptions compilerOptions2 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = null;
        compilerOptions2.setTracerMode(tracerMode3);
        boolean boolean5 = compilerOptions2.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel6 = compilerOptions2.sourceMapDetailLevel;
        compilerOptions2.setColorizeErrorOutput(true);
        compilerOptions2.collapseProperties = false;
        compilerOptions2.setSkipAllPasses(false);
        compilerOptions2.setRewriteNewDateGoogNow(false);
        com.google.javascript.jscomp.MessageBundle messageBundle15 = compilerOptions2.messageBundle;
        com.google.javascript.jscomp.MessageBundle messageBundle16 = null;
        compilerOptions2.messageBundle = messageBundle16;
        compilerOptions2.collapseVariableDeclarations = false;
        boolean boolean20 = level0.equals((java.lang.Object) false);
        java.lang.String str21 = level0.getName();
        com.google.javascript.jscomp.Compiler.setLoggingLevel(level0);
        int int23 = level0.intValue();
        java.nio.charset.Charset charset25 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str26 = charset25.name();
        java.lang.String str27 = charset25.name();
        java.nio.charset.Charset charset28 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str29 = charset28.toString();
        boolean boolean30 = charset25.contains(charset28);
        com.google.javascript.jscomp.SourceFile sourceFile31 = com.google.javascript.jscomp.SourceFile.fromFile("/", charset28);
        boolean boolean32 = level0.equals((java.lang.Object) sourceFile31);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Reader reader33 = sourceFile31.getCodeReader();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: / (Is a directory)");
        } catch (java.io.FileNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(level0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "OFF" + "'", str1, "OFF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(detailLevel6);
        org.junit.Assert.assertNull(messageBundle15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "OFF" + "'", str21, "OFF");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2147483647 + "'", int23 == 2147483647);
        org.junit.Assert.assertNotNull(charset25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "US-ASCII" + "'", str26, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "US-ASCII" + "'", str27, "US-ASCII");
        org.junit.Assert.assertNotNull(charset28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "US-ASCII" + "'", str29, "US-ASCII");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(sourceFile31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test10667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10667");
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec1 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("");
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        com.google.javascript.rhino.Node node8 = jSTypeRegistry4.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray11 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList12 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList12, jSTypeArray11);
        com.google.javascript.rhino.Node node14 = jSTypeRegistry10.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList12);
        node8.addChildrenToBack(node14);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray18 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList19 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList19, jSTypeArray18);
        com.google.javascript.rhino.Node node21 = jSTypeRegistry17.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList19);
        boolean boolean22 = node21.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        boolean boolean29 = node28.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.Node node35 = jSTypeRegistry31.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        com.google.javascript.rhino.Node node38 = new com.google.javascript.rhino.Node((int) (short) 0, node8, node21, node28, node35, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.Node node44 = jSTypeRegistry40.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        node44.addChildrenToBack(node50);
        com.google.javascript.rhino.Node node52 = node8.clonePropsFrom(node50);
        java.util.Set<java.lang.String> strSet53 = node52.getDirectives();
        com.google.javascript.rhino.Node node54 = assertionFunctionSpec1.getAssertedParam(node52);
        boolean boolean55 = node52.isIn();
        com.google.javascript.rhino.Node node56 = null;
        boolean boolean57 = node52.hasChild(node56);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(jSTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(jSTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNull(strSet53);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test10668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10668");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        compilerOptions0.inlineFunctions = true;
        compilerOptions0.gatherCssNames = true;
        boolean boolean9 = compilerOptions0.convertToDottedProperties;
        java.lang.String str10 = compilerOptions0.inputDelimiter;
        compilerOptions0.locale = "// Input %num%";
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "// Input %num%" + "'", str10, "// Input %num%");
    }

    @Test
    public void test10669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10669");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        compilerOptions0.exportTestFunctions = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions23 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions23.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel26 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions23.setSourceMapDetailLevel(detailLevel26);
        compilerOptions23.inlineFunctions = true;
        compilerOptions23.setCommonJSModulePathPrefix(":");
        compilerOptions23.setCrossModuleCodeMotion(true);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode34 = compilerOptions23.getLanguageIn();
        compilerOptions0.setLanguageIn(languageMode34);
        com.google.javascript.jscomp.CompilerOptions.TweakProcessing tweakProcessing36 = compilerOptions0.getTweakProcessing();
        compilerOptions0.removeUnusedPrototypePropertiesInExterns = true;
        compilerOptions0.smartNameRemoval = false;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertNotNull(detailLevel26);
        org.junit.Assert.assertTrue("'" + languageMode34 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode34.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertTrue("'" + tweakProcessing36 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF + "'", tweakProcessing36.equals(com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF));
    }

    @Test
    public void test10670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10670");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray12 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList13 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13, jSTypeArray12);
        com.google.javascript.rhino.Node node15 = jSTypeRegistry11.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        boolean boolean16 = node15.isIn();
        boolean boolean17 = node15.isVoid();
        boolean boolean18 = node9.isEquivalentToTyped(node15);
        boolean boolean19 = node15.isWhile();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node21 = node15.getChildAtIndex(16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test10671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10671");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.generatePseudoNames;
        java.util.Set<java.lang.String> strSet4 = compilerOptions0.stripTypes;
        com.google.javascript.jscomp.CheckLevel checkLevel5 = compilerOptions0.reportMissingOverride;
        com.google.javascript.jscomp.SourceMap.Format format6 = compilerOptions0.sourceMapFormat;
        boolean boolean7 = compilerOptions0.deadAssignmentElimination;
        compilerOptions0.generatePseudoNames = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + checkLevel5 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel5.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(format6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test10672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10672");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        int int76 = node56.getIntProp((int) ':');
        boolean boolean77 = node56.isLabel();
        boolean boolean78 = node56.isAssignAdd();
        boolean boolean79 = node56.isExprResult();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test10673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10673");
        com.google.javascript.jscomp.SourceFile.Builder builder0 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile4 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int6 = sourceFile4.getLineOfOffset((int) (short) 1);
        java.io.Reader reader7 = sourceFile4.getCodeReader();
        int int8 = reader7.read();
        com.google.javascript.jscomp.SourceFile sourceFile9 = builder0.buildFromReader("*global*", reader7);
        java.nio.charset.Charset charset10 = null;
        com.google.javascript.jscomp.SourceFile.Builder builder11 = builder0.withCharset(charset10);
        java.io.File file14 = new java.io.File(":", "hi!");
        boolean boolean17 = file14.setExecutable(true, false);
        long long18 = file14.lastModified();
        boolean boolean19 = file14.mkdir();
        com.google.javascript.jscomp.SourceFile sourceFile20 = builder0.buildFromFile(file14);
        com.google.javascript.jscomp.SourceFile.Builder builder22 = builder0.withOriginalPath("java.io.IOException: OFF");
        java.nio.charset.Charset charset23 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str24 = charset23.name();
        java.lang.String str25 = charset23.name();
        com.google.javascript.jscomp.SourceFile.Builder builder26 = builder0.withCharset(charset23);
        com.google.javascript.jscomp.SourceFile sourceFile28 = builder0.buildFromFile("*global*");
        sourceFile28.setOriginalPath("Node tree inequality:\nTree1:\nPARAM_LIST\n    NAME \n\n\nTree2:\nBITXOR  43 [opt_arg: 1]\n\n\nSubtree1: PARAM_LIST\n    NAME \n\n\nSubtree2: BITXOR  43 [opt_arg: 1]\n");
        org.junit.Assert.assertNotNull(sourceFile4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(sourceFile9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertEquals(file14.getParent(), ":");
        org.junit.Assert.assertEquals(file14.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 280487309000L + "'", long18 == 280487309000L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(sourceFile20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(charset23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "US-ASCII" + "'", str24, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "US-ASCII" + "'", str25, "US-ASCII");
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(sourceFile28);
    }

    @Test
    public void test10674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10674");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString((int) ' ', "OFF");
        boolean boolean3 = node2.isGetProp();
        java.io.PrintStream printStream5 = new java.io.PrintStream("goog.abstractMethod");
        java.io.PrintStream printStream7 = printStream5.append((java.lang.CharSequence) "/");
        java.io.PrintStream printStream9 = printStream5.append((java.lang.CharSequence) ":/hi!");
        printStream5.print(' ');
        com.google.javascript.jscomp.SourceFile sourceFile14 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int16 = sourceFile14.getLineOfOffset((int) (short) 1);
        int int18 = sourceFile14.getLineOfOffset(100);
        java.lang.String str19 = sourceFile14.getName();
        java.io.Reader reader20 = sourceFile14.getCodeReader();
        reader20.mark((int) ':');
        char[] charArray27 = new char[] { '#', '#', ' ', ':' };
        int int28 = reader20.read(charArray27);
        printStream5.print(charArray27);
        node2.appendStringTree((java.lang.Appendable) printStream5);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(printStream7);
        org.junit.Assert.assertNotNull(printStream9);
        org.junit.Assert.assertNotNull(sourceFile14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "## :");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "## :");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, #,  , :]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test10675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10675");
        com.google.javascript.jscomp.SourceFile sourceFile3 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int5 = sourceFile3.getLineOfOffset((int) (short) 1);
        java.io.Reader reader6 = sourceFile3.getCodeReader();
        int int7 = reader6.read();
        com.google.javascript.jscomp.SourceFile sourceFile8 = com.google.javascript.jscomp.SourceFile.fromReader("NUMBER -1.0", reader6);
        int int9 = reader6.read();
        long long11 = reader6.skip(280488652800L);
        org.junit.Assert.assertNotNull(sourceFile3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(reader6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(sourceFile8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test10676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10676");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        boolean boolean10 = compilerOptions0.coalesceVariableNames;
        compilerOptions0.setOptimizeArgumentsArray(true);
        compilerOptions0.devirtualizePrototypeMethods = false;
        boolean boolean15 = compilerOptions0.recordFunctionInformation;
        boolean boolean16 = compilerOptions0.removeUnusedVars;
        boolean boolean17 = compilerOptions0.aliasExternals;
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test10677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10677");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setOutputJsStringUsage(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = null;
        compilerOptions0.setTweakReplacements(strMap4);
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions6.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap10 = compilerOptions6.getTweakReplacements();
        boolean boolean11 = strMap10.isEmpty();
        java.lang.Object obj12 = null;
        com.google.javascript.rhino.Node node13 = strMap10.get(obj12);
        java.util.Set<java.lang.String> strSet14 = strMap10.keySet();
        compilerOptions0.setStripNamePrefixes(strSet14);
        boolean boolean16 = compilerOptions0.convertToDottedProperties;
        compilerOptions0.setOptimizeReturns(true);
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test10678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10678");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        jSTypeRegistry1.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSType jSType3 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray4 = new com.google.javascript.rhino.jstype.JSType[] { jSType3 };
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParameters(jSTypeArray4);
        boolean boolean6 = node5.isVar();
        boolean boolean7 = node5.isQualifiedName();
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec9 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("*global*");
        com.google.javascript.rhino.Node node12 = com.google.javascript.rhino.Node.newString((int) ' ', "OFF");
        com.google.javascript.rhino.Node node13 = assertionFunctionSpec9.getAssertedParam(node12);
        node12.setVarArgs(false);
        com.google.javascript.rhino.Node node16 = node5.copyInformationFromForTree(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter18 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter18);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray20 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList21 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList21, jSTypeArray20);
        com.google.javascript.rhino.Node node23 = jSTypeRegistry19.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList21);
        com.google.javascript.rhino.ErrorReporter errorReporter24 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry25 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter24);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray26 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList27 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList27, jSTypeArray26);
        com.google.javascript.rhino.Node node29 = jSTypeRegistry25.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList27);
        node23.addChildrenToBack(node29);
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray33 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList34 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList34, jSTypeArray33);
        com.google.javascript.rhino.Node node36 = jSTypeRegistry32.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList34);
        boolean boolean37 = node36.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        boolean boolean44 = node43.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        com.google.javascript.rhino.Node node53 = new com.google.javascript.rhino.Node((int) (short) 0, node23, node36, node43, node50, 0, 49);
        boolean boolean54 = node23.isDelProp();
        boolean boolean55 = node23.isSetterDef();
        boolean boolean56 = node23.isScript();
        // The following exception was thrown during execution in test generation
        try {
            node12.removeChild(node23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(jSTypeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(jSTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(jSTypeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test10679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10679");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.Node>> strEntrySet6 = strMap4.entrySet();
        com.google.javascript.jscomp.CompilerOptions.TweakProcessing tweakProcessing7 = com.google.javascript.jscomp.CompilerOptions.TweakProcessing.STRIP;
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.setInlineLocalFunctions(false);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy11 = null;
        compilerOptions8.variableRenaming = variableRenamingPolicy11;
        compilerOptions8.setProtectHiddenSideEffects(false);
        boolean boolean15 = strMap4.remove((java.lang.Object) tweakProcessing7, (java.lang.Object) false);
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec17 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("*global*");
        com.google.javascript.rhino.Node node20 = com.google.javascript.rhino.Node.newString((int) ' ', "OFF");
        com.google.javascript.rhino.Node node21 = assertionFunctionSpec17.getAssertedParam(node20);
        boolean boolean22 = node21.isOr();
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString(46, "", 2, 51);
        com.google.javascript.rhino.Node node28 = strMap4.getOrDefault((java.lang.Object) node21, node27);
        boolean boolean29 = node28.isFromExterns();
        boolean boolean30 = node28.isAssignAdd();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strEntrySet6);
        org.junit.Assert.assertTrue("'" + tweakProcessing7 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TweakProcessing.STRIP + "'", tweakProcessing7.equals(com.google.javascript.jscomp.CompilerOptions.TweakProcessing.STRIP));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test10680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10680");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        boolean boolean21 = compilerOptions0.shouldColorizeErrorOutput();
        boolean boolean22 = compilerOptions0.removeTryCatchFinally;
        com.google.javascript.jscomp.SourceMap.Format format23 = compilerOptions0.sourceMapFormat;
        compilerOptions0.setDevirtualizePrototypeMethods(true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(format23);
    }

    @Test
    public void test10681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10681");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        boolean boolean10 = node9.isVarArgs();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable11 = node9.siblings();
        com.google.javascript.rhino.Node node12 = node9.cloneTree();
        int int13 = node12.getSourcePosition();
        com.google.javascript.rhino.Node node14 = node12.getLastSibling();
        node12.putBooleanProp(800, true);
        boolean boolean18 = node12.isInstanceOf();
        com.google.javascript.rhino.Node node23 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean28 = node27.isTry();
        java.lang.String str29 = node27.toString();
        boolean boolean30 = node23.hasChild(node27);
        boolean boolean31 = node23.isFromExterns();
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry33 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray34 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList35 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList35, jSTypeArray34);
        com.google.javascript.rhino.Node node37 = jSTypeRegistry33.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList35);
        boolean boolean38 = node37.isIn();
        boolean boolean39 = node37.isVoid();
        node37.setOptionalArg(true);
        node37.setVarArgs(true);
        com.google.javascript.rhino.JSDocInfo jSDocInfo44 = node37.getJSDocInfo();
        com.google.javascript.rhino.Node node45 = new com.google.javascript.rhino.Node(42, node23, node37);
        java.lang.String str46 = node37.toString();
        com.google.javascript.rhino.ErrorReporter errorReporter48 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry49 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray50 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList51 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList51, jSTypeArray50);
        com.google.javascript.rhino.Node node53 = jSTypeRegistry49.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList51);
        com.google.javascript.rhino.ErrorReporter errorReporter54 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter54);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.Node node59 = jSTypeRegistry55.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        node53.addChildrenToBack(node59);
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray63 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList64 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList64, jSTypeArray63);
        com.google.javascript.rhino.Node node66 = jSTypeRegistry62.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList64);
        boolean boolean67 = node66.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter68 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry69 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter68);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray70 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList71 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList71, jSTypeArray70);
        com.google.javascript.rhino.Node node73 = jSTypeRegistry69.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList71);
        boolean boolean74 = node73.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter75 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry76 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter75);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray77 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList78 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList78, jSTypeArray77);
        com.google.javascript.rhino.Node node80 = jSTypeRegistry76.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList78);
        com.google.javascript.rhino.Node node83 = new com.google.javascript.rhino.Node((int) (short) 0, node53, node66, node73, node80, 0, 49);
        boolean boolean84 = node73.isTrue();
        boolean boolean85 = node73.isNE();
        com.google.javascript.rhino.Node node86 = node73.cloneNode();
        boolean boolean87 = node86.isIn();
        com.google.javascript.jscomp.CodingConvention.Bind bind88 = new com.google.javascript.jscomp.CodingConvention.Bind(node12, node37, node86);
        com.google.javascript.rhino.Node node90 = new com.google.javascript.rhino.Node(38);
        com.google.javascript.rhino.Node node91 = node86.clonePropsFrom(node90);
        java.lang.String str92 = node86.getQualifiedName();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(nodeIterable11);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "STRING PARAM_LIST 49" + "'", str29, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(jSTypeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(jSDocInfo44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PARAM_LIST [var_args_name: 1] [opt_arg: 1]" + "'", str46, "PARAM_LIST [var_args_name: 1] [opt_arg: 1]");
        org.junit.Assert.assertNotNull(jSTypeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(jSTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(jSTypeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(jSTypeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(node86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(node91);
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test10682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10682");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setLabelRenaming(true);
        compilerOptions0.setTweakToDoubleLiteral("/", (double) 43);
        compilerOptions0.aliasKeywords = false;
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap12 = compilerOptions0.cssRenamingMap;
        compilerOptions0.setInlineVariables(true);
        org.junit.Assert.assertNull(cssRenamingMap12);
    }

    @Test
    public void test10683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10683");
        java.util.logging.Level level0 = java.util.logging.Level.OFF;
        java.lang.String str1 = level0.getName();
        java.lang.String str2 = level0.getName();
        int int3 = level0.intValue();
        org.junit.Assert.assertNotNull(level0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "OFF" + "'", str1, "OFF");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "OFF" + "'", str2, "OFF");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
    }

    @Test
    public void test10684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10684");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean8 = node7.isTry();
        java.lang.String str9 = node7.toString();
        boolean boolean10 = node3.hasChild(node7);
        com.google.javascript.rhino.Node node11 = node3.getLastSibling();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry14.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        node18.addChildrenToBack(node24);
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry27.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        boolean boolean32 = node31.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        com.google.javascript.rhino.Node node38 = jSTypeRegistry34.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        boolean boolean39 = node38.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        com.google.javascript.rhino.Node node48 = new com.google.javascript.rhino.Node((int) (short) 0, node18, node31, node38, node45, 0, 49);
        boolean boolean49 = node38.isTrue();
        boolean boolean50 = node38.isNE();
        com.google.javascript.rhino.Node node51 = node38.cloneNode();
        boolean boolean52 = node51.isIn();
        com.google.javascript.rhino.Node node53 = node51.getFirstChild();
        boolean boolean54 = node51.isReturn();
        com.google.javascript.rhino.Node node55 = node11.clonePropsFrom(node51);
        boolean boolean56 = node11.isDec();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "STRING PARAM_LIST 49" + "'", str9, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test10685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10685");
        com.google.javascript.jscomp.SourceAst sourceAst0 = null;
        com.google.javascript.jscomp.CompilerInput compilerInput3 = new com.google.javascript.jscomp.CompilerInput(sourceAst0, "DiagnosticGroup<>", true);
        com.google.javascript.jscomp.JSModule jSModule5 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.CompilerInput compilerInput7 = jSModule5.getByName("FINEST");
        com.google.javascript.jscomp.SourceFile sourceFile10 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int12 = sourceFile10.getLineOfOffset((int) (short) 1);
        java.lang.String str13 = sourceFile10.getName();
        java.lang.String str14 = sourceFile10.getName();
        java.lang.String str15 = sourceFile10.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput17 = new com.google.javascript.jscomp.CompilerInput(sourceFile10, true);
        com.google.javascript.jscomp.CompilerInput compilerInput18 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput17);
        com.google.javascript.jscomp.JSModule jSModule19 = compilerInput17.getModule();
        com.google.javascript.jscomp.JSModule jSModule21 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler22 = new com.google.javascript.jscomp.Compiler();
        jSModule21.sortInputsByDeps(compiler22);
        java.lang.String str24 = jSModule21.getName();
        compilerInput17.setModule(jSModule21);
        jSModule5.addDependency(jSModule21);
        jSModule5.clearAsts();
        compilerInput3.setModule(jSModule5);
        org.junit.Assert.assertNull(compilerInput7);
        org.junit.Assert.assertNotNull(sourceFile10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(jSModule19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "STRING PARAM_LIST 49" + "'", str24, "STRING PARAM_LIST 49");
    }

    @Test
    public void test10686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10686");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setInlineLocalFunctions(false);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy3 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy3;
        compilerOptions0.setProtectHiddenSideEffects(false);
        compilerOptions0.syntheticBlockEndMarker = "OFF";
        compilerOptions0.setAssumeClosuresOnlyCaptureReferences(true);
        compilerOptions0.setPrintInputDelimiter(true);
        boolean boolean13 = compilerOptions0.removeDeadCode;
        compilerOptions0.setMarkNoSideEffectCalls(false);
        compilerOptions0.setProtectHiddenSideEffects(false);
        compilerOptions0.setInferTypes(false);
        compilerOptions0.setRemoveUnusedVars(false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test10687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10687");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        boolean boolean37 = node26.isTrue();
        boolean boolean38 = node26.isNE();
        com.google.javascript.rhino.Node node39 = node26.cloneNode();
        node26.setWasEmptyNode(true);
        boolean boolean42 = node26.isLabelName();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test10688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10688");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        compilerOptions0.setFoldConstants(true);
        java.lang.String str7 = compilerOptions0.renamePrefix;
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode9 = null;
        compilerOptions8.setTracerMode(tracerMode9);
        boolean boolean11 = compilerOptions8.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel12 = compilerOptions8.sourceMapDetailLevel;
        compilerOptions8.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet15 = compilerOptions8.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile17 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput19 = new com.google.javascript.jscomp.CompilerInput(sourceFile17, true);
        com.google.javascript.rhino.InputId inputId21 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput23 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput19, inputId21, true);
        java.lang.String str24 = compilerInput23.toString();
        boolean boolean25 = strSet15.contains((java.lang.Object) compilerInput23);
        java.lang.Object[] objArray26 = strSet15.toArray();
        java.lang.Object obj27 = null;
        boolean boolean28 = strSet15.contains(obj27);
        compilerOptions0.stripTypes = strSet15;
        com.google.javascript.jscomp.CompilerOptions compilerOptions30 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions30.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel33 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions30.setSourceMapDetailLevel(detailLevel33);
        compilerOptions30.inlineFunctions = true;
        compilerOptions30.setCommonJSModulePathPrefix(":");
        compilerOptions30.setCrossModuleCodeMotion(true);
        compilerOptions30.disableRuntimeTypeCheck();
        boolean boolean42 = compilerOptions30.removeUnusedLocalVars;
        boolean boolean43 = compilerOptions30.generateExports;
        compilerOptions30.foldConstants = true;
        compilerOptions30.setProcessObjectPropertyString(true);
        boolean boolean48 = strSet15.equals((java.lang.Object) compilerOptions30);
        boolean boolean49 = compilerOptions30.inlineConstantVars;
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(detailLevel12);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "*global*" + "'", str24, "*global*");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(detailLevel33);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test10689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10689");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setInlineLocalFunctions(false);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy3 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy3;
        com.google.javascript.jscomp.CompilerOptions.TweakProcessing tweakProcessing5 = compilerOptions0.getTweakProcessing();
        boolean boolean6 = tweakProcessing5.isOn();
        boolean boolean7 = tweakProcessing5.isOn();
        org.junit.Assert.assertTrue("'" + tweakProcessing5 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF + "'", tweakProcessing5.equals(com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test10690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10690");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.coalesceVariableNames = true;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap9 = compilerOptions0.getTweakReplacements();
        compilerOptions0.setGeneratePseudoNames(true);
        boolean boolean12 = compilerOptions0.optimizeReturns;
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions13.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy16 = compilerOptions13.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap17 = compilerOptions13.getTweakReplacements();
        boolean boolean18 = strMap17.isEmpty();
        com.google.javascript.jscomp.CompilerOptions compilerOptions19 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions19.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy22 = compilerOptions19.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap23 = compilerOptions19.getTweakReplacements();
        boolean boolean24 = strMap23.isEmpty();
        strMap23.clear();
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry27.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        boolean boolean32 = node31.isIn();
        boolean boolean33 = strMap23.containsValue((java.lang.Object) node31);
        boolean boolean34 = strMap17.containsKey((java.lang.Object) strMap23);
        com.google.javascript.jscomp.CompilerOptions compilerOptions35 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions35.crossModuleMethodMotion = true;
        compilerOptions35.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy40 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions41 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions41.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy44 = compilerOptions41.propertyRenaming;
        compilerOptions35.setRenamingPolicy(variableRenamingPolicy40, propertyRenamingPolicy44);
        com.google.javascript.jscomp.CompilerOptions compilerOptions46 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions46.crossModuleMethodMotion = true;
        compilerOptions46.skipAllCompilerPasses();
        boolean boolean50 = compilerOptions46.flowSensitiveInlineVariables;
        java.lang.String[] strArray60 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet61, strArray60);
        compilerOptions46.stripTypes = strSet61;
        compilerOptions35.setStripNamePrefixes((java.util.Set<java.lang.String>) strSet61);
        com.google.javascript.rhino.Node node65 = strMap17.get((java.lang.Object) compilerOptions35);
        int int66 = strMap17.size();
        com.google.javascript.jscomp.CompilerOptions compilerOptions67 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions67.crossModuleMethodMotion = true;
        compilerOptions67.setUnaliasableGlobals("sun.util.logging.resources.logging");
        compilerOptions67.setRenamePrefixNamespace("OFF");
        com.google.javascript.jscomp.CompilerOptions compilerOptions74 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions74.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel77 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions74.setSourceMapDetailLevel(detailLevel77);
        com.google.javascript.jscomp.CompilerOptions compilerOptions79 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode80 = null;
        compilerOptions79.setTracerMode(tracerMode80);
        boolean boolean82 = compilerOptions79.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel83 = compilerOptions79.sourceMapDetailLevel;
        compilerOptions79.setColorizeErrorOutput(true);
        compilerOptions79.collapseProperties = false;
        compilerOptions79.setSkipAllPasses(false);
        com.google.javascript.jscomp.CompilerOptions.Reach reach90 = com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY;
        compilerOptions79.setInlineFunctions(reach90);
        compilerOptions74.setInlineVariables(reach90);
        compilerOptions67.setRemoveUnusedVariables(reach90);
        compilerOptions67.setClosurePass(true);
        java.util.Set<java.lang.String> strSet96 = compilerOptions67.aliasableStrings;
        com.google.javascript.rhino.Node node97 = strMap17.remove((java.lang.Object) strSet96);
        compilerOptions0.aliasableStrings = strSet96;
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy16 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy16.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy22 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy22.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy44 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy44.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(detailLevel77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(detailLevel83);
        org.junit.Assert.assertTrue("'" + reach90 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY + "'", reach90.equals(com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY));
        org.junit.Assert.assertNotNull(strSet96);
        org.junit.Assert.assertNull(node97);
    }

    @Test
    public void test10691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10691");
        com.google.javascript.jscomp.SourceFile.Builder builder1 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile5 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int7 = sourceFile5.getLineOfOffset((int) (short) 1);
        java.io.Reader reader8 = sourceFile5.getCodeReader();
        int int9 = reader8.read();
        com.google.javascript.jscomp.SourceFile sourceFile10 = builder1.buildFromReader("*global*", reader8);
        reader8.reset();
        boolean boolean12 = reader8.markSupported();
        long long14 = reader8.skip(1645456104000L);
        com.google.javascript.jscomp.SourceFile sourceFile15 = com.google.javascript.jscomp.SourceFile.fromReader("java.io.IOException: OFF", reader8);
        boolean boolean16 = reader8.markSupported();
        org.junit.Assert.assertNotNull(sourceFile5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(sourceFile10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(sourceFile15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test10692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10692");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(false, false);
        java.io.File file6 = file2.getParentFile();
        boolean boolean8 = file2.setLastModified(13L);
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), ":");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test10693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10693");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setRemoveUnusedVars(false);
        com.google.javascript.jscomp.CompilerOptions.AliasTransformationHandler aliasTransformationHandler34 = null;
        compilerOptions0.setAliasTransformationHandler(aliasTransformationHandler34);
        compilerOptions0.setUnaliasableGlobals("OFF");
        com.google.javascript.jscomp.SourceMap.LocationMapping locationMapping40 = new com.google.javascript.jscomp.SourceMap.LocationMapping("STRING PARAM_LIST 49: hi!", "2019/07/12 07:12");
        com.google.javascript.jscomp.SourceMap.LocationMapping locationMapping43 = new com.google.javascript.jscomp.SourceMap.LocationMapping("/experiment/:", "JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of code motion iterations: {0}");
        com.google.javascript.jscomp.SourceMap.LocationMapping locationMapping46 = new com.google.javascript.jscomp.SourceMap.LocationMapping("STRING PARAM_LIST 49: hi!", "2019/07/12 07:12");
        com.google.javascript.jscomp.SourceMap.LocationMapping locationMapping49 = new com.google.javascript.jscomp.SourceMap.LocationMapping("PARAM_LIST", "STRING PARAM_LIST 49");
        com.google.javascript.jscomp.SourceMap.LocationMapping locationMapping52 = new com.google.javascript.jscomp.SourceMap.LocationMapping("PARAM_LIST", "STRING PARAM_LIST 49");
        com.google.javascript.jscomp.SourceMap.LocationMapping locationMapping55 = new com.google.javascript.jscomp.SourceMap.LocationMapping("/experiment/:", "JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of code motion iterations: {0}");
        com.google.javascript.jscomp.SourceMap.LocationMapping locationMapping58 = new com.google.javascript.jscomp.SourceMap.LocationMapping("/experiment/:", "JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of code motion iterations: {0}");
        com.google.javascript.jscomp.SourceMap.LocationMapping[] locationMappingArray59 = new com.google.javascript.jscomp.SourceMap.LocationMapping[] { locationMapping40, locationMapping43, locationMapping46, locationMapping49, locationMapping52, locationMapping55, locationMapping58 };
        java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping> locationMappingList60 = new java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList60, locationMappingArray59);
        compilerOptions0.setSourceMapLocationMappings((java.util.List<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList60);
        compilerOptions0.setReplaceIdGenerators(true);
        compilerOptions0.rewriteFunctionExpressions = false;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(locationMappingArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test10694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10694");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageOut();
        compilerOptions0.setFoldConstants(true);
        boolean boolean8 = compilerOptions0.generatePseudoNames;
        boolean boolean9 = compilerOptions0.inlineGetters;
        compilerOptions0.removeUnusedPrototypePropertiesInExterns = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(languageMode5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test10695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10695");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy5 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions6.propertyRenaming;
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy5, propertyRenamingPolicy9);
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions11.crossModuleMethodMotion = true;
        compilerOptions11.skipAllCompilerPasses();
        boolean boolean15 = compilerOptions11.flowSensitiveInlineVariables;
        java.lang.String[] strArray25 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        compilerOptions11.stripTypes = strSet26;
        compilerOptions0.setStripNamePrefixes((java.util.Set<java.lang.String>) strSet26);
        compilerOptions0.setRenamePrefixNamespace("Exceeded max number of code motion iterations: Unversioned directory");
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean33 = compilerOptions32.moveFunctionDeclarations;
        compilerOptions32.setReportPath("java.io.IOException: ");
        boolean boolean36 = compilerOptions32.inlineConstantVars;
        boolean boolean37 = compilerOptions32.deadAssignmentElimination;
        com.google.javascript.jscomp.CompilerOptions compilerOptions38 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode39 = null;
        compilerOptions38.setTracerMode(tracerMode39);
        boolean boolean41 = compilerOptions38.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel42 = compilerOptions38.sourceMapDetailLevel;
        compilerOptions38.setColorizeErrorOutput(true);
        compilerOptions38.generatePseudoNames = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy47 = com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED;
        compilerOptions38.setVariableRenaming(variableRenamingPolicy47);
        com.google.javascript.jscomp.ErrorFormat errorFormat49 = compilerOptions38.errorFormat;
        compilerOptions32.setErrorFormat(errorFormat49);
        compilerOptions0.setErrorFormat(errorFormat49);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(detailLevel42);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy47 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED + "'", variableRenamingPolicy47.equals(com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED));
        org.junit.Assert.assertNotNull(errorFormat49);
    }

    @Test
    public void test10696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10696");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        compilerOptions7.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions7.checkGlobalNamesLevel;
        compilerOptions0.setReportMissingOverride(checkLevel15);
        java.util.Set<java.lang.String> strSet17 = compilerOptions0.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel19 = compilerOptions18.checkRequires;
        compilerOptions0.setReportMissingOverride(checkLevel19);
        compilerOptions0.setRemoveUnusedVars(false);
        com.google.javascript.jscomp.CompilerOptions.TweakProcessing tweakProcessing23 = compilerOptions0.getTweakProcessing();
        compilerOptions0.setGeneratePseudoNames(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + checkLevel19 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel19.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + tweakProcessing23 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF + "'", tweakProcessing23.equals(com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF));
    }

    @Test
    public void test10697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10697");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        com.google.javascript.jscomp.CheckLevel checkLevel9 = compilerOptions0.reportMissingOverride;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel9 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel9.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10698");
        java.nio.charset.Charset charset0 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str1 = charset0.name();
        java.lang.String str2 = charset0.name();
        java.nio.charset.Charset charset3 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str4 = charset3.toString();
        boolean boolean5 = charset0.contains(charset3);
        java.lang.String str6 = charset0.displayName();
        boolean boolean7 = charset0.canEncode();
        boolean boolean8 = charset0.canEncode();
        org.junit.Assert.assertNotNull(charset0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "US-ASCII" + "'", str1, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "US-ASCII" + "'", str2, "US-ASCII");
        org.junit.Assert.assertNotNull(charset3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "US-ASCII" + "'", str4, "US-ASCII");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "US-ASCII" + "'", str6, "US-ASCII");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test10699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10699");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode6 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions0.setTracer(tracerMode6);
        compilerOptions0.setSyntheticBlockStartMarker("");
        boolean boolean10 = compilerOptions0.aliasKeywords;
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions11.crossModuleMethodMotion = true;
        compilerOptions11.skipAllCompilerPasses();
        compilerOptions11.resetWarningsGuard();
        compilerOptions11.setInlineLocalVariables(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode19 = null;
        compilerOptions18.setTracerMode(tracerMode19);
        boolean boolean21 = compilerOptions18.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel22 = compilerOptions18.sourceMapDetailLevel;
        compilerOptions18.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet25 = compilerOptions18.stripNameSuffixes;
        compilerOptions11.setReplaceStringsReservedStrings(strSet25);
        int int27 = strSet25.size();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream34 = jSTypeList31.parallelStream();
        boolean boolean35 = strSet25.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        java.util.Iterator<java.lang.String> strItor36 = strSet25.iterator();
        compilerOptions0.setStripTypePrefixes(strSet25);
        compilerOptions0.crossModuleMethodMotion = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions40 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode41 = null;
        compilerOptions40.setTracerMode(tracerMode41);
        boolean boolean43 = compilerOptions40.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel44 = compilerOptions40.sourceMapDetailLevel;
        compilerOptions40.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions47 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions47.crossModuleMethodMotion = true;
        compilerOptions47.optimizeParameters = true;
        compilerOptions47.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel55 = compilerOptions47.checkGlobalNamesLevel;
        compilerOptions40.setReportMissingOverride(checkLevel55);
        java.util.Set<java.lang.String> strSet57 = compilerOptions40.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions58 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel59 = compilerOptions58.checkRequires;
        compilerOptions40.setReportMissingOverride(checkLevel59);
        compilerOptions40.setInlineProperties(false);
        compilerOptions40.setDefineToBooleanLiteral("/", false);
        compilerOptions40.removeUnusedPrototypeProperties = true;
        boolean boolean68 = compilerOptions40.prettyPrint;
        com.google.javascript.jscomp.CompilerOptions compilerOptions69 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode70 = null;
        compilerOptions69.setTracerMode(tracerMode70);
        compilerOptions69.setGeneratePseudoNames(false);
        compilerOptions69.setDefineToNumberLiteral("PARAM_LIST\n", (int) '/');
        java.lang.String str77 = compilerOptions69.syntheticBlockStartMarker;
        compilerOptions69.setRemoveAbstractMethods(false);
        com.google.javascript.jscomp.CheckLevel checkLevel80 = compilerOptions69.checkMissingGetCssNameLevel;
        compilerOptions40.aggressiveVarCheck = checkLevel80;
        compilerOptions0.brokenClosureRequiresLevel = checkLevel80;
        org.junit.Assert.assertTrue("'" + tracerMode6 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode6.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(detailLevel22);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeStream34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strItor36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(detailLevel44);
        org.junit.Assert.assertTrue("'" + checkLevel55 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel55.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + checkLevel59 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel59.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + checkLevel80 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel80.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10700");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.FILEOVERVIEW_JSDOC;
        com.google.javascript.jscomp.DiagnosticGroups.DUPLICATE_MESSAGE = diagnosticGroup0;
// flaky:         org.junit.Assert.assertNull(diagnosticGroup0);
    }

    @Test
    public void test10701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10701");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray6 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList7 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList7, jSTypeArray6);
        boolean boolean9 = jSTypeList4.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList7);
        com.google.javascript.rhino.Node node10 = jSTypeRegistry2.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        jSTypeRegistry2.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable14 = jSTypeRegistry2.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType19 = jSTypeRegistry2.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter20 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter20);
        jSTypeRegistry21.clearNamedTypes();
        com.google.javascript.rhino.jstype.ObjectType objectType23 = jSTypeRegistry21.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.JSType jSType24 = jSTypeRegistry2.createDefaultObjectUnion((com.google.javascript.rhino.jstype.JSType) objectType23);
        com.google.javascript.rhino.ErrorReporter errorReporter25 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry26 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter25);
        jSTypeRegistry26.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSType jSType28 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] { jSType28 };
        com.google.javascript.rhino.Node node30 = jSTypeRegistry26.createParameters(jSTypeArray29);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry2.createParameters(jSTypeArray29);
        boolean boolean32 = node31.isNumber();
        node31.setVarArgs(true);
        com.google.javascript.rhino.Node node35 = new com.google.javascript.rhino.Node(39, node31);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(jSTypeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(jSTypeIterable14);
        org.junit.Assert.assertNotNull(jSType19);
        org.junit.Assert.assertNotNull(objectType23);
        org.junit.Assert.assertNotNull(jSType24);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test10702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10702");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy5 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions6.propertyRenaming;
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy5, propertyRenamingPolicy9);
        boolean boolean11 = compilerOptions0.checkControlStructures;
        boolean boolean12 = compilerOptions0.crossModuleCodeMotion;
        compilerOptions0.extractPrototypeMemberDeclarations = true;
        compilerOptions0.inlineConstantVars = false;
        compilerOptions0.inlineGetters = true;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test10703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10703");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int4 = sourceFile2.getLineOfOffset((int) (short) 1);
        java.lang.String str5 = sourceFile2.getName();
        java.lang.String str6 = sourceFile2.getName();
        java.lang.String str7 = sourceFile2.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput9 = new com.google.javascript.jscomp.CompilerInput(sourceFile2, true);
        com.google.javascript.jscomp.CompilerInput compilerInput10 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput9);
        com.google.javascript.jscomp.SourceFile sourceFile13 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int15 = sourceFile13.getLineOfOffset((int) (short) 1);
        int int17 = sourceFile13.getColumnOfOffset(8);
        compilerInput10.setSourceFile(sourceFile13);
        com.google.javascript.jscomp.SourceAst sourceAst19 = compilerInput10.getSourceAst();
        com.google.javascript.jscomp.CompilerInput compilerInput21 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput10, false);
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(sourceFile13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(sourceAst19);
    }

    @Test
    public void test10704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10704");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions0.checkGlobalNamesLevel;
        boolean boolean9 = compilerOptions0.removeUnusedPrototypeProperties;
        java.util.Set<java.lang.String> strSet10 = compilerOptions0.stripTypes;
        compilerOptions0.setSyntheticBlockStartMarker("DiagnosticGroup<java.io.IOException: OFF>");
        compilerOptions0.syntheticBlockStartMarker = "TYPEOF : 44\n";
        compilerOptions0.setNameReferenceReportPath("JSC_OPTIMIZE_LOOP_ERROR. Exceeded max number of code motion iterations: {0} at (unknown source) line (unknown line) : (unknown column)");
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test10705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10705");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode6 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions0.setTracer(tracerMode6);
        compilerOptions0.setSyntheticBlockStartMarker("");
        java.util.Set<java.lang.String> strSet10 = compilerOptions0.stripTypePrefixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions11.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode14 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions11.setTracer(tracerMode14);
        compilerOptions11.setFoldConstants(true);
        compilerOptions11.flowSensitiveInlineVariables = true;
        compilerOptions11.setTweakToStringLiteral("InputId: *global*", "hi!");
        com.google.javascript.jscomp.CompilerOptions compilerOptions23 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode24 = null;
        compilerOptions23.setTracerMode(tracerMode24);
        boolean boolean26 = compilerOptions23.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel27 = compilerOptions23.sourceMapDetailLevel;
        compilerOptions23.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet30 = compilerOptions23.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile32 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput34 = new com.google.javascript.jscomp.CompilerInput(sourceFile32, true);
        com.google.javascript.rhino.InputId inputId36 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput38 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput34, inputId36, true);
        java.lang.String str39 = compilerInput38.toString();
        boolean boolean40 = strSet30.contains((java.lang.Object) compilerInput38);
        java.lang.Object[] objArray41 = strSet30.toArray();
        compilerOptions11.setReplaceStringsReservedStrings(strSet30);
        boolean boolean44 = strSet30.equals((java.lang.Object) 280489635840L);
        compilerOptions0.setExtraAnnotationNames(strSet30);
        compilerOptions0.inlineFunctions = false;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray48 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList49 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList49, jSTypeArray48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray51 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList52 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList52, jSTypeArray51);
        boolean boolean54 = jSTypeList49.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList52);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator55 = jSTypeList49.spliterator();
        com.google.javascript.jscomp.CompilerOptions compilerOptions56 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions56.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions56.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode62 = null;
        compilerOptions56.setLanguageOut(languageMode62);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy64 = null;
        compilerOptions56.variableRenaming = variableRenamingPolicy64;
        boolean boolean66 = compilerOptions56.inlineGetters;
        compilerOptions56.setFlowSensitiveInlineVariables(true);
        compilerOptions56.setInlineGetters(true);
        compilerOptions56.setRemoveAbstractMethods(false);
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap73 = compilerOptions56.cssRenamingMap;
        int int74 = jSTypeList49.indexOf((java.lang.Object) compilerOptions56);
        com.google.javascript.jscomp.CompilerOptions compilerOptions75 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions75.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy78 = compilerOptions75.propertyRenaming;
        com.google.javascript.jscomp.AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy79 = com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF;
        compilerOptions75.anonymousFunctionNaming = anonymousFunctionNamingPolicy79;
        compilerOptions75.checkSymbols = true;
        compilerOptions75.inlineGetters = false;
        com.google.javascript.jscomp.CheckLevel checkLevel85 = com.google.javascript.jscomp.CheckLevel.ERROR;
        compilerOptions75.setCheckRequires(checkLevel85);
        compilerOptions56.setCheckMissingGetCssNameLevel(checkLevel85);
        compilerOptions0.setAggressiveVarCheck(checkLevel85);
        org.junit.Assert.assertTrue("'" + tracerMode6 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode6.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + tracerMode14 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode14.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(detailLevel27);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "*global*" + "'", str39, "*global*");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(jSTypeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(jSTypeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(jSTypeSpliterator55);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(cssRenamingMap73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy78 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy78.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + anonymousFunctionNamingPolicy79 + "' != '" + com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF + "'", anonymousFunctionNamingPolicy79.equals(com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel85 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel85.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
    }

    @Test
    public void test10706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10706");
        com.google.javascript.jscomp.DiagnosticType diagnosticType2 = com.google.javascript.jscomp.DiagnosticType.error("DiagnosticGroup<checkProvides>", "true");
        org.junit.Assert.assertNotNull(diagnosticType2);
    }

    @Test
    public void test10707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10707");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        compilerOptions0.disambiguateProperties = true;
        com.google.javascript.jscomp.CheckLevel checkLevel7 = compilerOptions0.reportMissingOverride;
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.syntheticBlockEndMarker = "hi!";
        compilerOptions8.removeUnusedClassProperties = false;
        compilerOptions8.setLineLengthThreshold(4095);
        com.google.javascript.jscomp.ErrorFormat errorFormat17 = compilerOptions8.errorFormat;
        compilerOptions0.errorFormat = errorFormat17;
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertTrue("'" + checkLevel7 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel7.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(errorFormat17);
    }

    @Test
    public void test10708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10708");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        com.google.javascript.rhino.jstype.JSType jSType16 = jSTypeRegistry7.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList20 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20, jSTypeArray19);
        com.google.javascript.rhino.Node node22 = jSTypeRegistry18.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList20);
        com.google.javascript.rhino.jstype.JSType jSType27 = jSTypeRegistry18.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] { jSType27 };
        com.google.javascript.rhino.jstype.FunctionType functionType29 = jSTypeRegistry1.createConstructorTypeWithVarArgs(jSType16, jSTypeArray28);
        com.google.javascript.jscomp.CompilerOptions compilerOptions30 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel31 = compilerOptions30.checkRequires;
        compilerOptions30.setAmbiguateProperties(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions34 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode35 = null;
        compilerOptions34.setTracerMode(tracerMode35);
        boolean boolean37 = compilerOptions34.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel38 = compilerOptions34.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode39 = compilerOptions34.getLanguageOut();
        compilerOptions34.setFoldConstants(true);
        boolean boolean42 = compilerOptions34.generatePseudoNames;
        java.lang.String str43 = compilerOptions34.aliasStringsBlacklist;
        java.lang.String[] strArray50 = new java.lang.String[] { ":/hi!", "DiagnosticGroup<checkProvides>", "// Input %num%", "/experiment/:/hi!", "STRING PARAM_LIST", "InputId: *global*" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        compilerOptions34.setReplaceStringsFunctionDescriptions((java.util.List<java.lang.String>) strList51);
        compilerOptions30.setManageClosureDependencies((java.util.List<java.lang.String>) strList51);
        jSTypeRegistry1.setTemplateTypeNames((java.util.List<java.lang.String>) strList51);
        java.util.List<com.google.javascript.rhino.jstype.JSType> jSTypeList56 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node57 = jSTypeRegistry1.createParameters(jSTypeList56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSType16);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(jSType27);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertNotNull(functionType29);
        org.junit.Assert.assertTrue("'" + checkLevel31 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel31.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(detailLevel38);
        org.junit.Assert.assertNull(languageMode39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test10709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10709");
        com.google.javascript.rhino.Node node1 = new com.google.javascript.rhino.Node((int) (short) 10);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile2 = node1.getStaticSourceFile();
        org.junit.Assert.assertNull(staticSourceFile2);
    }

    @Test
    public void test10710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10710");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.ObjectType objectType2 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter3 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry4 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter3);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        com.google.javascript.rhino.Node node8 = jSTypeRegistry4.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray11 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList12 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList12, jSTypeArray11);
        com.google.javascript.rhino.Node node14 = jSTypeRegistry10.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList12);
        com.google.javascript.rhino.jstype.JSType jSType19 = jSTypeRegistry10.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter20 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter20);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray22 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList23 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList23, jSTypeArray22);
        com.google.javascript.rhino.Node node25 = jSTypeRegistry21.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList23);
        com.google.javascript.rhino.jstype.JSType jSType30 = jSTypeRegistry21.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] { jSType30 };
        com.google.javascript.rhino.jstype.FunctionType functionType32 = jSTypeRegistry4.createConstructorTypeWithVarArgs(jSType19, jSTypeArray31);
        com.google.javascript.rhino.ErrorReporter errorReporter34 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry35 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter34);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        com.google.javascript.rhino.Node node39 = jSTypeRegistry35.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        com.google.javascript.rhino.jstype.JSType jSType50 = jSTypeRegistry41.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        com.google.javascript.rhino.jstype.JSType jSType61 = jSTypeRegistry52.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray62 = new com.google.javascript.rhino.jstype.JSType[] { jSType61 };
        com.google.javascript.rhino.jstype.FunctionType functionType63 = jSTypeRegistry35.createConstructorTypeWithVarArgs(jSType50, jSTypeArray62);
        boolean boolean64 = jSTypeRegistry4.declareType("", jSType50);
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        jSTypeRegistry66.clearNamedTypes();
        com.google.javascript.rhino.jstype.ObjectType objectType68 = jSTypeRegistry66.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.JSType jSType69 = jSTypeRegistry4.createDefaultObjectUnion((com.google.javascript.rhino.jstype.JSType) objectType68);
        com.google.javascript.rhino.jstype.JSType jSType74 = jSTypeRegistry4.createNamedType("goog.exportProperty", "Node tree inequality:\nTree1:\nPARAM_LIST\n\n\nTree2:\nPARAM_LIST\n    PARAM_LIST\n\n\nSubtree1: PARAM_LIST\n\n\nSubtree2: PARAM_LIST\n    PARAM_LIST\n", 51, (-10));
        boolean boolean76 = jSTypeRegistry1.canPropertyBeDefined(jSType74, "java.io.IOException: java.io.IOException: java.io.IOException: java.io.IOException: ");
        boolean boolean78 = jSTypeRegistry1.isForwardDeclaredType("Exceeded max number of code motion iterations: {0}");
        org.junit.Assert.assertNotNull(objectType2);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(jSTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(jSType19);
        org.junit.Assert.assertNotNull(jSTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(jSType30);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertNotNull(functionType32);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(jSType50);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(jSType61);
        org.junit.Assert.assertNotNull(jSTypeArray62);
        org.junit.Assert.assertNotNull(functionType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objectType68);
        org.junit.Assert.assertNotNull(jSType69);
        org.junit.Assert.assertNotNull(jSType74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test10711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10711");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream6 = jSTypeList3.parallelStream();
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator7 = jSTypeList3.spliterator();
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream8 = jSTypeList3.stream();
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator9 = jSTypeList3.spliterator();
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions10.crossModuleMethodMotion = true;
        compilerOptions10.skipAllCompilerPasses();
        compilerOptions10.resetWarningsGuard();
        compilerOptions10.setInlineLocalVariables(false);
        compilerOptions10.setIdeMode(false);
        compilerOptions10.setAliasKeywords(true);
        compilerOptions10.setSyntheticBlockStartMarker("java.io.IOException: ");
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream29 = jSTypeList26.parallelStream();
        java.lang.Object obj30 = null;
        int int31 = jSTypeList26.lastIndexOf(obj30);
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.setInlineLocalFunctions(false);
        compilerOptions32.moveFunctionDeclarations = true;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode37 = compilerOptions32.getLanguageIn();
        com.google.javascript.jscomp.CompilerOptions compilerOptions38 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions38.setInlineLocalFunctions(false);
        compilerOptions38.moveFunctionDeclarations = true;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode43 = compilerOptions38.getLanguageIn();
        compilerOptions32.setLanguageIn(languageMode43);
        compilerOptions32.setPropertyAffinity(true);
        compilerOptions32.crossModuleCodeMotion = false;
        com.google.javascript.jscomp.CheckLevel checkLevel49 = compilerOptions32.reportMissingOverride;
        int int50 = jSTypeList26.indexOf((java.lang.Object) checkLevel49);
        compilerOptions10.setCheckMissingGetCssNameLevel(checkLevel49);
        boolean boolean52 = jSTypeList3.remove((java.lang.Object) compilerOptions10);
        compilerOptions10.setCheckMissingGetCssNameBlacklist("PARAM_LIST\n    PARAM_LIST\n");
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeStream6);
        org.junit.Assert.assertNotNull(jSTypeSpliterator7);
        org.junit.Assert.assertNotNull(jSTypeStream8);
        org.junit.Assert.assertNotNull(jSTypeSpliterator9);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(jSTypeStream29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + languageMode37 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode37.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertTrue("'" + languageMode43 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode43.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertTrue("'" + checkLevel49 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel49.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test10712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10712");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        compilerOptions0.setSkipAllPasses(false);
        compilerOptions0.setRewriteNewDateGoogNow(false);
        com.google.javascript.jscomp.MessageBundle messageBundle13 = compilerOptions0.messageBundle;
        compilerOptions0.removeUnusedPrototypeProperties = true;
        com.google.javascript.jscomp.MessageBundle messageBundle16 = compilerOptions0.messageBundle;
        boolean boolean17 = compilerOptions0.closurePass;
        compilerOptions0.setSummaryDetailLevel(500);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(messageBundle13);
        org.junit.Assert.assertNull(messageBundle16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test10713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10713");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        compilerOptions0.inlineFunctions = true;
        compilerOptions0.setCommonJSModulePathPrefix(":");
        compilerOptions0.setCrossModuleCodeMotion(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions11.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy14 = compilerOptions11.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap15 = compilerOptions11.getTweakReplacements();
        boolean boolean16 = strMap15.isEmpty();
        java.lang.Object obj17 = null;
        com.google.javascript.rhino.Node node18 = strMap15.get(obj17);
        java.util.Set<java.lang.String> strSet19 = strMap15.keySet();
        compilerOptions0.setIdGenerators(strSet19);
        com.google.javascript.jscomp.CompilerOptions.Reach reach21 = com.google.javascript.jscomp.CompilerOptions.Reach.ALL;
        compilerOptions0.setRemoveUnusedVariable(reach21);
        java.lang.String[] strArray33 = new java.lang.String[] { "InputId: *global*", "OFF", "*global*.  at *global* line (unknown line) : (unknown column)", "PARAM_LIST\n", "/", "*global*.  at *global* line (unknown line) : (unknown column)", "hi!", "/experiment/:/hi!", "PARAM_LIST" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        compilerOptions0.setReplaceStringsConfiguration("FINEST", (java.util.List<java.lang.String>) strList34);
        boolean boolean37 = compilerOptions0.inlineConstantVars;
        boolean boolean38 = compilerOptions0.crossModuleCodeMotion;
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy14 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy14.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + reach21 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.ALL + "'", reach21.equals(com.google.javascript.jscomp.CompilerOptions.Reach.ALL));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test10714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10714");
        com.google.javascript.jscomp.Compiler compiler0 = new com.google.javascript.jscomp.Compiler();
        compiler0.disableThreads();
        com.google.javascript.rhino.Node node2 = compiler0.getRoot();
        org.junit.Assert.assertNull(node2);
    }

    @Test
    public void test10715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10715");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.Node node13 = jSTypeRegistry9.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList11);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        node13.addChildrenToBack(node19);
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        boolean boolean34 = node33.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter35 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter35);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.Node node40 = jSTypeRegistry36.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        com.google.javascript.rhino.Node node43 = new com.google.javascript.rhino.Node((int) (short) 0, node13, node26, node33, node40, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        node50.addChildrenToBack(node56);
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        boolean boolean71 = node70.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray74 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList75 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList75, jSTypeArray74);
        com.google.javascript.rhino.Node node77 = jSTypeRegistry73.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList75);
        com.google.javascript.rhino.Node node80 = new com.google.javascript.rhino.Node((int) (short) 0, node50, node63, node70, node77, 0, 49);
        com.google.javascript.rhino.Node node81 = node43.useSourceInfoFrom(node63);
        boolean boolean82 = node81.hasChildren();
        com.google.javascript.rhino.Node node83 = strMap4.putIfAbsent("STRING PARAM_LIST 49", node81);
        boolean boolean84 = node81.isInc();
        node81.setLength(1);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(jSTypeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(node83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test10716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10716");
        java.io.PrintStream printStream1 = new java.io.PrintStream("JSC_OPTIMIZE_LOOP_ERROR");
        printStream1.println(800);
        printStream1.println(0.0d);
        printStream1.print(280489742336L);
        printStream1.println(' ');
    }

    @Test
    public void test10717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10717");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        boolean boolean10 = compilerOptions0.inlineGetters;
        compilerOptions0.setFlowSensitiveInlineVariables(true);
        compilerOptions0.setInlineGetters(true);
        compilerOptions0.setRemoveAbstractMethods(false);
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap17 = compilerOptions0.cssRenamingMap;
        boolean boolean18 = compilerOptions0.checkControlStructures;
        java.lang.String str19 = compilerOptions0.inputDelimiter;
        boolean boolean20 = compilerOptions0.flowSensitiveInlineVariables;
        compilerOptions0.setAliasAllStrings(true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(cssRenamingMap17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "// Input %num%" + "'", str19, "// Input %num%");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test10718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10718");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.Node node37 = node6.removeFirstChild();
        int int39 = node6.getIntProp(1);
        node6.setCharno((-1));
        // The following exception was thrown during execution in test generation
        try {
            int int43 = node6.getExistingIntProp(44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: missing prop: 44");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test10719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10719");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions0.checkGlobalNamesLevel;
        boolean boolean9 = compilerOptions0.removeUnusedPrototypeProperties;
        java.util.Set<java.lang.String> strSet10 = compilerOptions0.stripTypes;
        compilerOptions0.setSyntheticBlockStartMarker("DiagnosticGroup<java.io.IOException: OFF>");
        compilerOptions0.closurePass = false;
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test10720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10720");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.syntheticBlockEndMarker = "hi!";
        compilerOptions0.removeUnusedClassProperties = false;
        compilerOptions0.setLineLengthThreshold(4095);
        com.google.javascript.jscomp.ErrorFormat errorFormat9 = compilerOptions0.errorFormat;
        compilerOptions0.setCrossModuleMethodMotion(true);
        compilerOptions0.preferLineBreakAtEndOfFile = true;
        compilerOptions0.setSourceMapOutputPath(":");
        compilerOptions0.inlineConstantVars = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions18.crossModuleMethodMotion = true;
        compilerOptions18.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy23 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions24.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy27 = compilerOptions24.propertyRenaming;
        compilerOptions18.setRenamingPolicy(variableRenamingPolicy23, propertyRenamingPolicy27);
        compilerOptions18.setTransformAMDToCJSModules(true);
        boolean boolean31 = compilerOptions18.rewriteFunctionExpressions;
        compilerOptions18.smartNameRemoval = false;
        compilerOptions18.renamePrefixNamespace = "";
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions36.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode39 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions36.setTracer(tracerMode39);
        compilerOptions36.setFoldConstants(true);
        compilerOptions36.flowSensitiveInlineVariables = true;
        compilerOptions36.setReplaceStringsPlaceholderToken("InputId: *global*");
        compilerOptions36.markNoSideEffectCalls = false;
        com.google.javascript.jscomp.CheckLevel checkLevel49 = compilerOptions36.reportMissingOverride;
        compilerOptions18.setBrokenClosureRequiresLevel(checkLevel49);
        compilerOptions0.setCheckProvides(checkLevel49);
        compilerOptions0.preferLineBreakAtEndOfFile = false;
        org.junit.Assert.assertNotNull(errorFormat9);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy27 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy27.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + tracerMode39 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode39.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel49 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel49.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10721");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        compilerOptions0.preferLineBreakAtEndOfFile = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions10.crossModuleMethodMotion = true;
        compilerOptions10.skipAllCompilerPasses();
        compilerOptions10.resetWarningsGuard();
        compilerOptions10.setInlineLocalVariables(false);
        compilerOptions10.setIdeMode(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions19 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions19.crossModuleMethodMotion = true;
        compilerOptions19.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy24 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions25 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions25.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy28 = compilerOptions25.propertyRenaming;
        compilerOptions19.setRenamingPolicy(variableRenamingPolicy24, propertyRenamingPolicy28);
        com.google.javascript.jscomp.CompilerOptions compilerOptions30 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions30.crossModuleMethodMotion = true;
        compilerOptions30.skipAllCompilerPasses();
        boolean boolean34 = compilerOptions30.flowSensitiveInlineVariables;
        java.lang.String[] strArray44 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        compilerOptions30.stripTypes = strSet45;
        compilerOptions19.setStripNamePrefixes((java.util.Set<java.lang.String>) strSet45);
        compilerOptions10.setReplaceStringsReservedStrings((java.util.Set<java.lang.String>) strSet45);
        boolean boolean51 = strSet45.add("STRING PARAM_LIST 49");
        compilerOptions0.setIdGenerators((java.util.Set<java.lang.String>) strSet45);
        compilerOptions0.setShadowVariables(true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy28 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy28.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test10722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10722");
        java.io.File file1 = new java.io.File(":/hi!/PARAM_LIST\n");
        java.net.URI uRI2 = file1.toURI();
        org.junit.Assert.assertEquals(file1.getParent(), ":/hi!");
        org.junit.Assert.assertEquals(file1.toString(), ":/hi!/PARAM_LIST\n");
        org.junit.Assert.assertNotNull(uRI2);
    }

    @Test
    public void test10723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10723");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        byte[] byteArray32 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 1 };
        compilerOptions0.inputVariableMapSerialized = byteArray32;
        compilerOptions0.setAssumeStrictThis(true);
        byte[] byteArray36 = null;
        compilerOptions0.setInputPropertyMapSerialized(byteArray36);
        compilerOptions0.extractPrototypeMemberDeclarations = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions40 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode41 = null;
        compilerOptions40.setTracerMode(tracerMode41);
        boolean boolean43 = compilerOptions40.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel44 = compilerOptions40.sourceMapDetailLevel;
        compilerOptions40.setColorizeErrorOutput(true);
        compilerOptions40.collapseProperties = false;
        compilerOptions40.setSkipAllPasses(false);
        com.google.javascript.jscomp.CompilerOptions.Reach reach51 = com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY;
        compilerOptions40.setInlineFunctions(reach51);
        compilerOptions0.setRemoveUnusedVariables(reach51);
        compilerOptions0.setNameReferenceReportPath("Node tree inequality:\nTree1:\nPARAM_LIST\n    NAME \n\n\nTree2:\nNUMBER -1.0\n\n\nSubtree1: PARAM_LIST\n    NAME \n\n\nSubtree2: NUMBER -1.0\n");
        compilerOptions0.removeUnusedLocalVars = false;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 1, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(detailLevel44);
        org.junit.Assert.assertTrue("'" + reach51 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY + "'", reach51.equals(com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY));
    }

    @Test
    public void test10724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10724");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str1 = compilerOptions0.syntheticBlockStartMarker;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel2 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.TweakProcessing tweakProcessing3 = compilerOptions0.getTweakProcessing();
        compilerOptions0.computeFunctionSideEffects = true;
        compilerOptions0.setDefineToDoubleLiteral("InputId: hi!", (double) 280489795584L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(detailLevel2);
        org.junit.Assert.assertTrue("'" + tweakProcessing3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF + "'", tweakProcessing3.equals(com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF));
    }

    @Test
    public void test10725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10725");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        byte[] byteArray32 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 1 };
        compilerOptions0.inputVariableMapSerialized = byteArray32;
        compilerOptions0.setAssumeStrictThis(true);
        byte[] byteArray36 = null;
        compilerOptions0.setInputPropertyMapSerialized(byteArray36);
        compilerOptions0.extractPrototypeMemberDeclarations = true;
        compilerOptions0.setCheckControlStructures(true);
        java.lang.String str42 = compilerOptions0.locale;
        compilerOptions0.setInlineProperties(false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 1, 10, 1]");
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test10726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10726");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setOutputJsStringUsage(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = null;
        compilerOptions0.setTweakReplacements(strMap4);
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions6.propertyRenaming;
        java.lang.String[] strArray12 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerOptions6.setStripTypes((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerOptions6.inlineLocalFunctions;
        compilerOptions6.removeDeadCode = true;
        compilerOptions6.jqueryPass = true;
        compilerOptions6.setReportPath("PARAM_LIST\n");
        com.google.javascript.jscomp.CompilerOptions compilerOptions23 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str24 = compilerOptions23.syntheticBlockStartMarker;
        compilerOptions23.setMarkNoSideEffectCalls(false);
        com.google.javascript.jscomp.CheckLevel checkLevel27 = compilerOptions23.checkGlobalThisLevel;
        compilerOptions6.setCheckRequires(checkLevel27);
        compilerOptions0.brokenClosureRequiresLevel = checkLevel27;
        compilerOptions0.ideMode = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.crossModuleMethodMotion = true;
        compilerOptions32.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions37 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions37.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy40 = compilerOptions37.propertyRenaming;
        java.lang.String[] strArray43 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet44 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet44, strArray43);
        compilerOptions37.setStripTypes((java.util.Set<java.lang.String>) strSet44);
        compilerOptions32.stripNamePrefixes = strSet44;
        compilerOptions32.checkTypes = false;
        boolean boolean50 = compilerOptions32.assumeStrictThis();
        compilerOptions32.convertToDottedProperties = true;
        com.google.javascript.jscomp.MessageBundle messageBundle53 = null;
        compilerOptions32.messageBundle = messageBundle53;
        compilerOptions32.ambiguateProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions57 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode58 = null;
        compilerOptions57.setTracerMode(tracerMode58);
        boolean boolean60 = compilerOptions57.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel61 = compilerOptions57.sourceMapDetailLevel;
        compilerOptions57.setColorizeErrorOutput(true);
        compilerOptions57.collapseProperties = false;
        com.google.javascript.jscomp.AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy66 = com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.UNMAPPED;
        compilerOptions57.setAnonymousFunctionNaming(anonymousFunctionNamingPolicy66);
        compilerOptions32.anonymousFunctionNaming = anonymousFunctionNamingPolicy66;
        compilerOptions0.setAnonymousFunctionNaming(anonymousFunctionNamingPolicy66);
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + checkLevel27 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel27.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy40 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy40.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(detailLevel61);
        org.junit.Assert.assertTrue("'" + anonymousFunctionNamingPolicy66 + "' != '" + com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.UNMAPPED + "'", anonymousFunctionNamingPolicy66.equals(com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.UNMAPPED));
    }

    @Test
    public void test10727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10727");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str1 = compilerOptions0.syntheticBlockStartMarker;
        compilerOptions0.labelRenaming = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions4 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions4.crossModuleMethodMotion = true;
        compilerOptions4.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        compilerOptions9.skipAllCompilerPasses();
        compilerOptions9.resetWarningsGuard();
        java.lang.String str14 = compilerOptions9.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy15 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy16 = null;
        compilerOptions9.setRenamingPolicy(variableRenamingPolicy15, propertyRenamingPolicy16);
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions18.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy21 = compilerOptions18.propertyRenaming;
        compilerOptions4.setRenamingPolicy(variableRenamingPolicy15, propertyRenamingPolicy21);
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy23 = com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC;
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy15, propertyRenamingPolicy23);
        compilerOptions0.extractPrototypeMemberDeclarations = false;
        boolean boolean27 = compilerOptions0.aliasKeywords;
        java.util.List<com.google.javascript.jscomp.SourceMap.LocationMapping> locationMappingList28 = compilerOptions0.sourceMapLocationMappings;
        compilerOptions0.skipAllCompilerPasses();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy15 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy15.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy21 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy21.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy23 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC + "'", propertyRenamingPolicy23.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(locationMappingList28);
    }

    @Test
    public void test10728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10728");
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative1 = null;
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec2 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("Exceeded max number of code motion iterations: {0}", jSTypeNative1);
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean12 = node11.isTry();
        java.lang.String str13 = node11.toString();
        boolean boolean14 = node7.hasChild(node11);
        boolean boolean15 = node7.isFromExterns();
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray18 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList19 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList19, jSTypeArray18);
        com.google.javascript.rhino.Node node21 = jSTypeRegistry17.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList19);
        boolean boolean22 = node21.isIn();
        boolean boolean23 = node21.isVoid();
        node21.setOptionalArg(true);
        node21.setVarArgs(true);
        com.google.javascript.rhino.JSDocInfo jSDocInfo28 = node21.getJSDocInfo();
        com.google.javascript.rhino.Node node29 = new com.google.javascript.rhino.Node(42, node7, node21);
        com.google.javascript.rhino.Node node30 = assertionFunctionSpec2.getAssertedParam(node29);
        com.google.javascript.rhino.Node node31 = node30.getFirstChild();
        com.google.javascript.rhino.Node node36 = com.google.javascript.rhino.Node.newString((int) (short) 0, "TYPEOF : 44\n", 37, (int) '4');
        com.google.javascript.rhino.Node node37 = node31.clonePropsFrom(node36);
        com.google.javascript.jscomp.CompilerOptions compilerOptions39 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions39.crossModuleMethodMotion = true;
        compilerOptions39.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy44 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions45 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions45.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy48 = compilerOptions45.propertyRenaming;
        compilerOptions39.setRenamingPolicy(variableRenamingPolicy44, propertyRenamingPolicy48);
        boolean boolean50 = compilerOptions39.checkControlStructures;
        compilerOptions39.syntheticBlockEndMarker = "FINEST";
        compilerOptions39.setOptimizeParameters(true);
        com.google.javascript.jscomp.CompilerOptions.AliasTransformationHandler aliasTransformationHandler55 = compilerOptions39.getAliasTransformationHandler();
        node36.putProp(50, (java.lang.Object) compilerOptions39);
        com.google.javascript.rhino.ErrorReporter errorReporter57 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry58 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter57);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray59 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList60 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList60, jSTypeArray59);
        com.google.javascript.rhino.Node node62 = jSTypeRegistry58.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList60);
        boolean boolean63 = node62.isIn();
        boolean boolean64 = node62.isGetElem();
        java.lang.String str68 = node62.toString(true, false, false);
        com.google.javascript.rhino.Node node70 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node71 = node62.useSourceInfoIfMissingFromForTree(node70);
        boolean boolean72 = node62.isTrue();
        node36.addChildToBack(node62);
        boolean boolean74 = node36.isEmpty();
        boolean boolean75 = node36.isFunction();
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "STRING PARAM_LIST 49" + "'", str13, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(jSTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(jSDocInfo28);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy48 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy48.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(aliasTransformationHandler55);
        org.junit.Assert.assertNotNull(jSTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "PARAM_LIST" + "'", str68, "PARAM_LIST");
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test10729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10729");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        boolean boolean7 = node6.isIn();
        boolean boolean8 = node6.isVoid();
        node6.setOptionalArg(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode12 = null;
        compilerOptions11.setTracerMode(tracerMode12);
        boolean boolean14 = compilerOptions11.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel15 = compilerOptions11.sourceMapDetailLevel;
        compilerOptions11.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions18.crossModuleMethodMotion = true;
        compilerOptions18.optimizeParameters = true;
        compilerOptions18.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel26 = compilerOptions18.checkGlobalNamesLevel;
        compilerOptions11.setReportMissingOverride(checkLevel26);
        com.google.javascript.jscomp.DiagnosticType diagnosticType28 = com.google.javascript.jscomp.Compiler.MOTION_ITERATIONS_ERROR;
        java.lang.String[] strArray29 = null;
        com.google.javascript.jscomp.JSError jSError30 = com.google.javascript.jscomp.JSError.make("", node6, checkLevel26, diagnosticType28, strArray29);
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions31.crossModuleMethodMotion = true;
        compilerOptions31.skipAllCompilerPasses();
        compilerOptions31.resetWarningsGuard();
        compilerOptions31.setInlineLocalVariables(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions38 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode39 = null;
        compilerOptions38.setTracerMode(tracerMode39);
        boolean boolean41 = compilerOptions38.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel42 = compilerOptions38.sourceMapDetailLevel;
        compilerOptions38.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet45 = compilerOptions38.stripNameSuffixes;
        compilerOptions31.setReplaceStringsReservedStrings(strSet45);
        boolean boolean47 = strSet45.isEmpty();
        node6.setDirectives(strSet45);
        node6.setIsSyntheticBlock(false);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(detailLevel15);
        org.junit.Assert.assertTrue("'" + checkLevel26 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel26.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(diagnosticType28);
        org.junit.Assert.assertNotNull(jSError30);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(detailLevel42);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test10730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10730");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        java.lang.Object obj6 = null;
        com.google.javascript.rhino.Node node7 = strMap4.get(obj6);
        java.util.Set<java.lang.String> strSet8 = strMap4.keySet();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.Node node10 = strMap4.remove(obj9);
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions11.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions11.setSourceMapDetailLevel(detailLevel14);
        compilerOptions11.disambiguateProperties = true;
        boolean boolean18 = compilerOptions11.reserveRawExports;
        compilerOptions11.setFlowSensitiveInlineVariables(false);
        boolean boolean21 = compilerOptions11.collapseAnonymousFunctions;
        com.google.javascript.rhino.Node node22 = strMap4.get((java.lang.Object) compilerOptions11);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.Node>> strEntrySet23 = strMap4.entrySet();
        com.google.javascript.rhino.Node node26 = new com.google.javascript.rhino.Node(48);
        com.google.javascript.rhino.Node node27 = strMap4.put("PARAM_LIST\n    PARAM_LIST\n", node26);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = node27.isContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(strEntrySet23);
        org.junit.Assert.assertNull(node27);
    }

    @Test
    public void test10731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10731");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setUnaliasableGlobals("sun.util.logging.resources.logging");
        compilerOptions0.setRenamePrefixNamespace("OFF");
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions7.checkRequires;
        compilerOptions7.setRewriteNewDateGoogNow(true);
        compilerOptions7.setSyntheticBlockStartMarker("OFF");
        compilerOptions7.skipAllCompilerPasses();
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        java.lang.String[] strArray20 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        compilerOptions14.setStripTypes((java.util.Set<java.lang.String>) strSet21);
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode25 = null;
        compilerOptions24.setTracerMode(tracerMode25);
        boolean boolean27 = compilerOptions24.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel28 = compilerOptions24.sourceMapDetailLevel;
        compilerOptions24.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions31.crossModuleMethodMotion = true;
        compilerOptions31.optimizeParameters = true;
        compilerOptions31.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel39 = compilerOptions31.checkGlobalNamesLevel;
        compilerOptions24.setReportMissingOverride(checkLevel39);
        compilerOptions14.setCheckUnreachableCode(checkLevel39);
        compilerOptions7.setCheckMissingReturn(checkLevel39);
        com.google.javascript.jscomp.CompilerOptions.Reach reach43 = com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY;
        compilerOptions7.setInlineVariables(reach43);
        com.google.javascript.jscomp.CompilerOptions compilerOptions46 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel47 = compilerOptions46.checkRequires;
        compilerOptions46.setAmbiguateProperties(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions50 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode51 = null;
        compilerOptions50.setTracerMode(tracerMode51);
        boolean boolean53 = compilerOptions50.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel54 = compilerOptions50.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode55 = compilerOptions50.getLanguageOut();
        compilerOptions50.setFoldConstants(true);
        boolean boolean58 = compilerOptions50.generatePseudoNames;
        java.lang.String str59 = compilerOptions50.aliasStringsBlacklist;
        java.lang.String[] strArray66 = new java.lang.String[] { ":/hi!", "DiagnosticGroup<checkProvides>", "// Input %num%", "/experiment/:/hi!", "STRING PARAM_LIST", "InputId: *global*" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        compilerOptions50.setReplaceStringsFunctionDescriptions((java.util.List<java.lang.String>) strList67);
        compilerOptions46.setManageClosureDependencies((java.util.List<java.lang.String>) strList67);
        compilerOptions7.setReplaceStringsConfiguration("PARAM_LIST\n", (java.util.List<java.lang.String>) strList67);
        compilerOptions0.setReplaceStringsFunctionDescriptions((java.util.List<java.lang.String>) strList67);
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(detailLevel28);
        org.junit.Assert.assertTrue("'" + checkLevel39 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel39.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + reach43 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY + "'", reach43.equals(com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY));
        org.junit.Assert.assertTrue("'" + checkLevel47 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel47.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(detailLevel54);
        org.junit.Assert.assertNull(languageMode55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test10732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10732");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream6 = jSTypeList3.parallelStream();
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator7 = jSTypeList3.spliterator();
        boolean boolean8 = jSTypeList3.isEmpty();
        com.google.javascript.jscomp.JSModule jSModule10 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.CompilerInput compilerInput12 = jSModule10.getByName("FINEST");
        com.google.javascript.jscomp.SourceFile sourceFile15 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int17 = sourceFile15.getLineOfOffset((int) (short) 1);
        java.lang.String str18 = sourceFile15.getName();
        java.lang.String str19 = sourceFile15.getName();
        java.lang.String str20 = sourceFile15.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput22 = new com.google.javascript.jscomp.CompilerInput(sourceFile15, true);
        com.google.javascript.jscomp.CompilerInput compilerInput23 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput22);
        com.google.javascript.jscomp.JSModule jSModule24 = compilerInput22.getModule();
        com.google.javascript.jscomp.JSModule jSModule26 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler27 = new com.google.javascript.jscomp.Compiler();
        jSModule26.sortInputsByDeps(compiler27);
        java.lang.String str29 = jSModule26.getName();
        compilerInput22.setModule(jSModule26);
        jSModule10.addDependency(jSModule26);
        jSModule10.clearAsts();
        com.google.javascript.jscomp.SourceFile sourceFile35 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int37 = sourceFile35.getLineOfOffset((int) (short) 1);
        int int39 = sourceFile35.getLineOfOffset(100);
        java.lang.String str40 = sourceFile35.getName();
        jSModule10.add(sourceFile35);
        boolean boolean42 = jSTypeList3.contains((java.lang.Object) sourceFile35);
        java.util.Iterator<com.google.javascript.rhino.jstype.JSType> jSTypeItor43 = jSTypeList3.iterator();
        com.google.javascript.jscomp.CompilerOptions compilerOptions44 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions44.crossModuleMethodMotion = true;
        compilerOptions44.skipAllCompilerPasses();
        boolean boolean48 = compilerOptions44.flowSensitiveInlineVariables;
        java.lang.String[] strArray58 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet59 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet59, strArray58);
        compilerOptions44.stripTypes = strSet59;
        compilerOptions44.optimizeParameters = false;
        compilerOptions44.printInputDelimiter = true;
        compilerOptions44.moveFunctionDeclarations = false;
        compilerOptions44.inlineGetters = false;
        boolean boolean70 = compilerOptions44.smartNameRemoval;
        int int71 = jSTypeList3.lastIndexOf((java.lang.Object) boolean70);
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeStream6);
        org.junit.Assert.assertNotNull(jSTypeSpliterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(compilerInput12);
        org.junit.Assert.assertNotNull(sourceFile15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNull(jSModule24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "STRING PARAM_LIST 49" + "'", str29, "STRING PARAM_LIST 49");
        org.junit.Assert.assertNotNull(sourceFile35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(jSTypeItor43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
    }

    @Test
    public void test10733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10733");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.lang.Object obj10 = null;
        boolean boolean11 = jSTypeList3.remove(obj10);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream12 = jSTypeList3.stream();
        java.util.Iterator<com.google.javascript.rhino.jstype.JSType> jSTypeItor13 = jSTypeList3.iterator();
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode15 = null;
        compilerOptions14.setTracerMode(tracerMode15);
        boolean boolean17 = compilerOptions14.coalesceVariableNames;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions18.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode21 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions18.setTracer(tracerMode21);
        compilerOptions18.setFoldConstants(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions25 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode26 = null;
        compilerOptions25.setTracerMode(tracerMode26);
        boolean boolean28 = compilerOptions25.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel29 = compilerOptions25.sourceMapDetailLevel;
        compilerOptions25.setColorizeErrorOutput(true);
        compilerOptions25.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions34 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions34.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy37 = compilerOptions34.propertyRenaming;
        compilerOptions25.propertyRenaming = propertyRenamingPolicy37;
        com.google.javascript.jscomp.CheckLevel checkLevel39 = compilerOptions25.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel40 = compilerOptions25.checkRequires;
        compilerOptions18.reportMissingOverride = checkLevel40;
        compilerOptions14.setAggressiveVarCheck(checkLevel40);
        compilerOptions14.setReplaceIdGenerators(true);
        compilerOptions14.setOptimizeParameters(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions47 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode48 = null;
        compilerOptions47.setTracerMode(tracerMode48);
        boolean boolean50 = compilerOptions47.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel51 = compilerOptions47.sourceMapDetailLevel;
        compilerOptions47.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet54 = compilerOptions47.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile56 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput58 = new com.google.javascript.jscomp.CompilerInput(sourceFile56, true);
        com.google.javascript.rhino.InputId inputId60 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput62 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput58, inputId60, true);
        java.lang.String str63 = compilerInput62.toString();
        boolean boolean64 = strSet54.contains((java.lang.Object) compilerInput62);
        java.lang.Object[] objArray65 = strSet54.toArray();
        java.lang.Object obj66 = null;
        boolean boolean67 = strSet54.contains(obj66);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray71 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList72 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72, jSTypeArray71);
        boolean boolean74 = jSTypeList69.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray75 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList76 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList76, jSTypeArray75);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray78 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList79 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList79, jSTypeArray78);
        boolean boolean81 = jSTypeList76.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList79);
        boolean boolean82 = jSTypeList69.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList79);
        boolean boolean83 = jSTypeList69.isEmpty();
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream84 = jSTypeList69.stream();
        boolean boolean85 = strSet54.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        compilerOptions14.setStripNameSuffixes(strSet54);
        boolean boolean87 = jSTypeList3.remove((java.lang.Object) compilerOptions14);
        compilerOptions14.setOutputCharset("sun.util.logging.resources.logging");
        boolean boolean90 = compilerOptions14.shouldColorizeErrorOutput();
        compilerOptions14.setAliasStringsBlacklist("PARAM_LIST8468507651125183373Unversioned directory");
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(jSTypeStream12);
        org.junit.Assert.assertNotNull(jSTypeItor13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + tracerMode21 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode21.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(detailLevel29);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy37 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy37.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel39 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel39.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel40 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel40.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(detailLevel51);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "*global*" + "'", str63, "*global*");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(jSTypeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(jSTypeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(jSTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(jSTypeStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test10734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10734");
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString((-10), "STRING java.io.IOException:  [length: 8]", (-23), 31);
        org.junit.Assert.assertNotNull(node4);
    }

    @Test
    public void test10735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10735");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setLabelRenaming(true);
        boolean boolean7 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.setInlineVariables(false);
        compilerOptions0.setCheckSymbols(false);
        compilerOptions0.aliasExternals = false;
        compilerOptions0.setAssumeClosuresOnlyCaptureReferences(true);
        compilerOptions0.setCoalesceVariableNames(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test10736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10736");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.setSyntheticBlockStartMarker("OFF");
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.setDeadAssignmentElimination(true);
        compilerOptions0.setInferTypes(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions11.crossModuleMethodMotion = true;
        compilerOptions11.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions16 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions16.crossModuleMethodMotion = true;
        compilerOptions16.skipAllCompilerPasses();
        compilerOptions16.resetWarningsGuard();
        java.lang.String str21 = compilerOptions16.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy22 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy23 = null;
        compilerOptions16.setRenamingPolicy(variableRenamingPolicy22, propertyRenamingPolicy23);
        com.google.javascript.jscomp.CompilerOptions compilerOptions25 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions25.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy28 = compilerOptions25.propertyRenaming;
        compilerOptions11.setRenamingPolicy(variableRenamingPolicy22, propertyRenamingPolicy28);
        com.google.javascript.jscomp.CompilerOptions compilerOptions30 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions30.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions30.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode36 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions30.setTracer(tracerMode36);
        compilerOptions30.setSyntheticBlockStartMarker("");
        java.util.Set<java.lang.String> strSet40 = compilerOptions30.stripNameSuffixes;
        compilerOptions11.stripNamePrefixes = strSet40;
        compilerOptions0.setIdGenerators(strSet40);
        byte[] byteArray43 = compilerOptions0.inputPropertyMapSerialized;
        com.google.javascript.jscomp.DependencyOptions dependencyOptions44 = new com.google.javascript.jscomp.DependencyOptions();
        com.google.javascript.jscomp.DependencyOptions dependencyOptions46 = dependencyOptions44.setDependencyPruning(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions48 = dependencyOptions46.setMoocherDropping(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions50 = dependencyOptions48.setDependencySorting(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions52 = dependencyOptions48.setDependencyPruning(true);
        compilerOptions0.setDependencyOptions(dependencyOptions52);
        boolean boolean54 = compilerOptions0.checkSymbols;
        com.google.javascript.jscomp.CompilerOptions.AliasTransformationHandler aliasTransformationHandler55 = compilerOptions0.getAliasTransformationHandler();
        compilerOptions0.reserveRawExports = true;
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy22 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy22.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy28 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy28.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + tracerMode36 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode36.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertNotNull(dependencyOptions46);
        org.junit.Assert.assertNotNull(dependencyOptions48);
        org.junit.Assert.assertNotNull(dependencyOptions50);
        org.junit.Assert.assertNotNull(dependencyOptions52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(aliasTransformationHandler55);
    }

    @Test
    public void test10737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10737");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        com.google.javascript.jscomp.CompilerOptions compilerOptions2 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = null;
        compilerOptions2.setTracerMode(tracerMode3);
        boolean boolean5 = compilerOptions2.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel6 = compilerOptions2.sourceMapDetailLevel;
        compilerOptions2.setColorizeErrorOutput(true);
        compilerOptions2.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions11.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy14 = compilerOptions11.propertyRenaming;
        compilerOptions2.propertyRenaming = propertyRenamingPolicy14;
        com.google.javascript.jscomp.CheckLevel checkLevel16 = compilerOptions2.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel17 = compilerOptions2.checkRequires;
        compilerOptions0.setCheckRequires(checkLevel17);
        compilerOptions0.reserveRawExports = false;
        com.google.javascript.jscomp.CodingConvention codingConvention21 = compilerOptions0.getCodingConvention();
        compilerOptions0.setAmbiguateProperties(true);
        compilerOptions0.flowSensitiveInlineVariables = true;
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(detailLevel6);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy14 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy14.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel16 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel16.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel17 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel17.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(codingConvention21);
    }

    @Test
    public void test10738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10738");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        com.google.javascript.jscomp.CheckLevel checkLevel30 = compilerOptions0.checkMissingReturn;
        boolean boolean31 = compilerOptions0.optimizeArgumentsArray;
        compilerOptions0.convertToDottedProperties = true;
        com.google.javascript.jscomp.SourceMap.Format format34 = compilerOptions0.sourceMapFormat;
        java.util.Set<java.lang.String> strSet35 = compilerOptions0.stripTypes;
        compilerOptions0.setPreferLineBreakAtEndOfFile(true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel30 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel30.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(format34);
        org.junit.Assert.assertNotNull(strSet35);
    }

    @Test
    public void test10739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10739");
        com.google.javascript.jscomp.DiagnosticType[] diagnosticTypeArray0 = new com.google.javascript.jscomp.DiagnosticType[] {};
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup1 = new com.google.javascript.jscomp.DiagnosticGroup(diagnosticTypeArray0);
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup2 = new com.google.javascript.jscomp.DiagnosticGroup(diagnosticTypeArray0);
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup3 = new com.google.javascript.jscomp.DiagnosticGroup(diagnosticTypeArray0);
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = new com.google.javascript.jscomp.DiagnosticGroup(diagnosticTypeArray0);
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup5 = new com.google.javascript.jscomp.DiagnosticGroup(diagnosticTypeArray0);
        com.google.javascript.jscomp.DiagnosticGroups.DEBUGGER_STATEMENT_PRESENT = diagnosticGroup5;
        org.junit.Assert.assertNotNull(diagnosticTypeArray0);
    }

    @Test
    public void test10740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10740");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setProtectHiddenSideEffects(true);
        boolean boolean5 = compilerOptions0.isExternExportsEnabled();
        boolean boolean6 = compilerOptions0.aliasAllStrings;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.inlineLocalFunctions = false;
        compilerOptions0.setNameAnonymousFunctionsOnly(false);
        compilerOptions0.setLooseTypes(true);
        compilerOptions0.setRewriteFunctionExpressions(false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test10741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10741");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        compilerOptions0.setCollapseVariableDeclarations(false);
        com.google.javascript.jscomp.CodingConvention codingConvention23 = compilerOptions0.getCodingConvention();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertNull(codingConvention23);
    }

    @Test
    public void test10742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10742");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        boolean boolean75 = node56.hasOneChild();
        com.google.javascript.rhino.ErrorReporter errorReporter76 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry77 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter76);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray78 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList79 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList79, jSTypeArray78);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray81 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList82 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList82, jSTypeArray81);
        boolean boolean84 = jSTypeList79.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList82);
        com.google.javascript.rhino.Node node85 = jSTypeRegistry77.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList79);
        boolean boolean86 = node85.isVarArgs();
        com.google.javascript.rhino.Node node87 = node56.clonePropsFrom(node85);
        int int88 = node85.getChildCount();
        boolean boolean89 = node85.isCall();
        boolean boolean90 = node85.isThrow();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(jSTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(jSTypeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test10743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10743");
        java.nio.charset.Charset charset0 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str1 = charset0.name();
        java.lang.String str2 = charset0.name();
        java.nio.charset.CharsetEncoder charsetEncoder3 = charset0.newEncoder();
        boolean boolean4 = charset0.isRegistered();
        java.lang.String str5 = charset0.toString();
        org.junit.Assert.assertNotNull(charset0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "US-ASCII" + "'", str1, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "US-ASCII" + "'", str2, "US-ASCII");
        org.junit.Assert.assertNotNull(charsetEncoder3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "US-ASCII" + "'", str5, "US-ASCII");
    }

    @Test
    public void test10744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10744");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageOut();
        compilerOptions0.setFoldConstants(true);
        java.lang.String str8 = compilerOptions0.inputDelimiter;
        boolean boolean9 = compilerOptions0.inlineVariables;
        boolean boolean10 = compilerOptions0.removeUnusedVars;
        compilerOptions0.setSpecializeInitialModule(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(languageMode5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "// Input %num%" + "'", str8, "// Input %num%");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test10745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10745");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(true, false);
        boolean boolean7 = file2.setWritable(false);
        boolean boolean8 = file2.canWrite();
        java.net.URI uRI9 = file2.toURI();
        java.lang.String str10 = file2.getCanonicalPath();
        java.io.File file11 = file2.getAbsoluteFile();
        boolean boolean13 = file11.setExecutable(false);
        boolean boolean14 = file11.delete();
        long long15 = file11.getUsableSpace();
        long long16 = file11.lastModified();
        boolean boolean18 = file11.setWritable(false);
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(uRI9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/experiment/:/hi!" + "'", str10, "/experiment/:/hi!");
        org.junit.Assert.assertNotNull(file11);
// flaky:         org.junit.Assert.assertEquals(file11.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file11.toString(), "/experiment/:/hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long15 + "' != '" + 280490188800L + "'", long15 == 280490188800L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test10746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10746");
        java.nio.charset.Charset charset0 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str1 = charset0.name();
        java.lang.String str2 = charset0.name();
        java.lang.String str3 = charset0.name();
        java.nio.ByteBuffer byteBuffer5 = charset0.encode("PARAM_LIST 0");
        java.nio.charset.Charset charset6 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str7 = charset6.name();
        java.util.Locale locale8 = null;
        java.lang.String str9 = charset6.displayName(locale8);
        java.nio.ByteBuffer byteBuffer11 = charset6.encode("/experiment/:/hi!");
        boolean boolean12 = charset6.isRegistered();
        int int13 = charset0.compareTo(charset6);
        java.lang.String str14 = charset6.toString();
        boolean boolean15 = charset6.isRegistered();
        org.junit.Assert.assertNotNull(charset0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "US-ASCII" + "'", str1, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "US-ASCII" + "'", str2, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "US-ASCII" + "'", str3, "US-ASCII");
        org.junit.Assert.assertNotNull(byteBuffer5);
        org.junit.Assert.assertNotNull(charset6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "US-ASCII" + "'", str7, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "US-ASCII" + "'", str9, "US-ASCII");
        org.junit.Assert.assertNotNull(byteBuffer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "US-ASCII" + "'", str14, "US-ASCII");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test10747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10747");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy8 = compilerOptions5.propertyRenaming;
        java.lang.String[] strArray11 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        compilerOptions5.setStripTypes((java.util.Set<java.lang.String>) strSet12);
        compilerOptions0.stripNamePrefixes = strSet12;
        compilerOptions0.checkTypes = false;
        compilerOptions0.setRemoveUnusedPrototypeProperties(true);
        compilerOptions0.preferLineBreakAtEndOfFile = true;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy8 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy8.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test10748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10748");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.generatePseudoNames;
        com.google.javascript.jscomp.SourceMap.LocationMapping[] locationMappingArray4 = new com.google.javascript.jscomp.SourceMap.LocationMapping[] {};
        java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping> locationMappingList5 = new java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList5, locationMappingArray4);
        compilerOptions0.sourceMapLocationMappings = locationMappingList5;
        compilerOptions0.removeUnusedPrototypePropertiesInExterns = true;
        compilerOptions0.lineBreak = true;
        compilerOptions0.ambiguateProperties = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(locationMappingArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test10749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10749");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        compilerOptions0.setCrossModuleCodeMotion(false);
        compilerOptions0.inputDelimiter = "STRING PARAM_LIST 49";
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy10 = compilerOptions0.variableRenaming;
        com.google.javascript.rhino.InputId inputId12 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode14 = null;
        compilerOptions13.setTracerMode(tracerMode14);
        boolean boolean16 = compilerOptions13.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel17 = compilerOptions13.sourceMapDetailLevel;
        compilerOptions13.setColorizeErrorOutput(true);
        compilerOptions13.generatePseudoNames = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy22 = com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED;
        compilerOptions13.setVariableRenaming(variableRenamingPolicy22);
        boolean boolean24 = inputId12.equals((java.lang.Object) variableRenamingPolicy22);
        compilerOptions0.variableRenaming = variableRenamingPolicy22;
        compilerOptions0.collapseAnonymousFunctions = true;
        com.google.javascript.jscomp.JSModule jSModule29 = new com.google.javascript.jscomp.JSModule("*global*.  at *global* line (unknown line) : (unknown column)");
        java.util.List<java.lang.String> strList30 = jSModule29.getRequires();
        compilerOptions0.setManageClosureDependencies(strList30);
        compilerOptions0.optimizeCalls = true;
        compilerOptions0.lineBreak = true;
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy10 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.OFF + "'", variableRenamingPolicy10.equals(com.google.javascript.jscomp.VariableRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(detailLevel17);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy22 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED + "'", variableRenamingPolicy22.equals(com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strList30);
    }

    @Test
    public void test10750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10750");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.setSyntheticBlockStartMarker("OFF");
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.setDeadAssignmentElimination(true);
        compilerOptions0.setInferTypes(true);
        compilerOptions0.inputDelimiter = "";
        compilerOptions0.inlineLocalFunctions = true;
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10751");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        jSTypeRegistry1.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSType jSType3 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray4 = new com.google.javascript.rhino.jstype.JSType[] { jSType3 };
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParameters(jSTypeArray4);
        com.google.javascript.rhino.jstype.JSType jSType7 = jSTypeRegistry1.getType(":");
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray13 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList14 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14, jSTypeArray13);
        boolean boolean16 = jSTypeList11.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14);
        com.google.javascript.rhino.Node node17 = jSTypeRegistry9.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList11);
        jSTypeRegistry9.forwardDeclareType("PARAM_LIST");
        jSTypeRegistry9.clearTemplateTypeNames();
        com.google.javascript.rhino.jstype.ObjectType objectType21 = jSTypeRegistry9.createAnonymousObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        boolean boolean31 = jSTypeList26.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        com.google.javascript.rhino.Node node32 = jSTypeRegistry24.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        jSTypeRegistry24.setLastGeneration(false);
        com.google.javascript.rhino.ErrorReporter errorReporter35 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter35);
        com.google.javascript.rhino.jstype.ObjectType objectType37 = jSTypeRegistry36.createAnonymousObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray43 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList44 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList44, jSTypeArray43);
        boolean boolean46 = jSTypeList41.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList44);
        com.google.javascript.rhino.Node node47 = jSTypeRegistry39.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        jSTypeRegistry39.setLastGeneration(false);
        com.google.javascript.rhino.jstype.JSType jSType54 = jSTypeRegistry39.createNamedType("java.io.IOException: java.io.IOException: ", "", 47, (int) (short) 1);
        jSTypeRegistry39.resetForTypeCheck();
        com.google.javascript.rhino.jstype.JSType jSType56 = null;
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray63 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList64 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList64, jSTypeArray63);
        boolean boolean66 = jSTypeList61.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList64);
        com.google.javascript.rhino.Node node67 = jSTypeRegistry59.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        jSTypeRegistry59.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable71 = jSTypeRegistry59.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType76 = jSTypeRegistry59.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter77 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry78 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter77);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray79 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList80 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList80, jSTypeArray79);
        com.google.javascript.rhino.Node node82 = jSTypeRegistry78.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList80);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream83 = jSTypeList80.parallelStream();
        com.google.javascript.rhino.Node node84 = jSTypeRegistry59.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList80);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray85 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.JSType jSType86 = jSTypeRegistry59.createUnionType(jSTypeArray85);
        com.google.javascript.rhino.jstype.FunctionType functionType87 = jSTypeRegistry39.createFunctionType(jSType56, false, jSTypeArray85);
        com.google.javascript.rhino.jstype.FunctionType functionType88 = jSTypeRegistry24.createConstructorTypeWithVarArgs((com.google.javascript.rhino.jstype.JSType) objectType37, jSTypeArray85);
        com.google.javascript.rhino.jstype.FunctionType functionType89 = jSTypeRegistry1.createFunctionType((com.google.javascript.rhino.jstype.JSType) objectType21, false, jSTypeArray85);
        boolean boolean91 = jSTypeRegistry1.isForwardDeclaredType("/experiment/:/hi!");
        com.google.javascript.rhino.jstype.JSType jSType96 = jSTypeRegistry1.createNamedType("STRING PARAM_LIST 49: hi!", "/experiment/:/hi!/goog.exportSymbol6344102151034639300();", 9, 4095);
        jSTypeRegistry1.forwardDeclareType("hi!");
        org.junit.Assert.assertNotNull(jSTypeArray4);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNull(jSType7);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(jSTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(objectType21);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(objectType37);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(jSTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(jSType54);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(jSTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(jSTypeIterable71);
        org.junit.Assert.assertNotNull(jSType76);
        org.junit.Assert.assertNotNull(jSTypeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNotNull(jSTypeStream83);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertNotNull(jSTypeArray85);
        org.junit.Assert.assertNotNull(jSType86);
        org.junit.Assert.assertNotNull(functionType87);
        org.junit.Assert.assertNotNull(functionType88);
        org.junit.Assert.assertNotNull(functionType89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(jSType96);
    }

    @Test
    public void test10752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10752");
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray0 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList1 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList1, jSTypeArray0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        boolean boolean6 = jSTypeList1.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode8 = null;
        compilerOptions7.setTracerMode(tracerMode8);
        boolean boolean10 = compilerOptions7.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel11 = compilerOptions7.sourceMapDetailLevel;
        compilerOptions7.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        compilerOptions14.optimizeParameters = true;
        compilerOptions14.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel22 = compilerOptions14.checkGlobalNamesLevel;
        compilerOptions7.setReportMissingOverride(checkLevel22);
        java.util.Set<java.lang.String> strSet24 = compilerOptions7.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions25 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode26 = null;
        compilerOptions25.setTracerMode(tracerMode26);
        boolean boolean28 = compilerOptions25.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel29 = compilerOptions25.sourceMapDetailLevel;
        compilerOptions25.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet32 = compilerOptions25.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile34 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput36 = new com.google.javascript.jscomp.CompilerInput(sourceFile34, true);
        com.google.javascript.rhino.InputId inputId38 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput40 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput36, inputId38, true);
        java.lang.String str41 = compilerInput40.toString();
        boolean boolean42 = strSet32.contains((java.lang.Object) compilerInput40);
        compilerOptions7.stripTypes = strSet32;
        compilerOptions7.setMarkAsCompiled(true);
        java.util.Set<java.lang.String> strSet46 = compilerOptions7.stripTypePrefixes;
        boolean boolean47 = jSTypeList1.remove((java.lang.Object) strSet46);
        java.util.Iterator<java.lang.String> strItor48 = strSet46.iterator();
        org.junit.Assert.assertNotNull(jSTypeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(detailLevel11);
        org.junit.Assert.assertTrue("'" + checkLevel22 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel22.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(detailLevel29);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "*global*" + "'", str41, "*global*");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strItor48);
    }

    @Test
    public void test10753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10753");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("");
        int int2 = stats1.gzSize;
        int int3 = stats1.gzSize;
        int int4 = stats1.changes;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test10754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10754");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        node42.addChildrenToBack(node48);
        com.google.javascript.rhino.Node node50 = node6.clonePropsFrom(node48);
        com.google.javascript.rhino.Node node51 = node48.cloneTree();
        boolean boolean52 = node48.isInstanceOf();
        java.io.PrintStream printStream55 = new java.io.PrintStream("goog.abstractMethod");
        printStream55.print(39L);
        printStream55.println();
        com.google.javascript.jscomp.Compiler compiler59 = new com.google.javascript.jscomp.Compiler(printStream55);
        node48.putProp(4095, (java.lang.Object) printStream55);
        printStream55.println((float) 280489312256L);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test10755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10755");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str1 = compilerOptions0.syntheticBlockStartMarker;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel2 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.TweakProcessing tweakProcessing3 = compilerOptions0.getTweakProcessing();
        compilerOptions0.setOptimizeArgumentsArray(true);
        compilerOptions0.setRemoveUnusedPrototypePropertiesInExterns(true);
        compilerOptions0.setAssumeClosuresOnlyCaptureReferences(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap10 = compilerOptions0.getTweakReplacements();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry14.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        node18.addChildrenToBack(node24);
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry27.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        boolean boolean32 = node31.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        com.google.javascript.rhino.Node node38 = jSTypeRegistry34.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        boolean boolean39 = node38.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        com.google.javascript.rhino.Node node48 = new com.google.javascript.rhino.Node((int) (short) 0, node18, node31, node38, node45, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter50 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry51 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter50);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray52 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList53 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList53, jSTypeArray52);
        com.google.javascript.rhino.Node node55 = jSTypeRegistry51.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList53);
        com.google.javascript.rhino.ErrorReporter errorReporter56 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry57 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter56);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray58 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList59 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList59, jSTypeArray58);
        com.google.javascript.rhino.Node node61 = jSTypeRegistry57.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList59);
        node55.addChildrenToBack(node61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList66 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList66, jSTypeArray65);
        com.google.javascript.rhino.Node node68 = jSTypeRegistry64.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList66);
        boolean boolean69 = node68.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray72 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList73 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList73, jSTypeArray72);
        com.google.javascript.rhino.Node node75 = jSTypeRegistry71.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList73);
        boolean boolean76 = node75.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter77 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry78 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter77);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray79 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList80 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList80, jSTypeArray79);
        com.google.javascript.rhino.Node node82 = jSTypeRegistry78.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList80);
        com.google.javascript.rhino.Node node85 = new com.google.javascript.rhino.Node((int) (short) 0, node55, node68, node75, node82, 0, 49);
        com.google.javascript.rhino.Node node86 = node48.useSourceInfoFrom(node68);
        boolean boolean87 = node86.hasChildren();
        boolean boolean88 = node86.isDefaultCase();
        com.google.javascript.rhino.Node node89 = strMap10.replace("InputId: STRING PARAM_LIST 49", node86);
        com.google.javascript.rhino.jstype.JSType jSType90 = node86.getJSType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(detailLevel2);
        org.junit.Assert.assertTrue("'" + tweakProcessing3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF + "'", tweakProcessing3.equals(com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF));
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(jSTypeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(jSTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(jSTypeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(jSTypeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNotNull(node86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(node89);
        org.junit.Assert.assertNull(jSType90);
    }

    @Test
    public void test10756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10756");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        node33.putIntProp((int) '/', 0);
        node33.setOptionalArg(false);
        boolean boolean42 = node33.isDec();
        node33.addSuppression("Node tree inequality:\nTree1:\nPARAM_LIST\n    NAME \n\n\nTree2:\nNUMBER -1.0\n\n\nSubtree1: PARAM_LIST\n    NAME \n\n\nSubtree2: NUMBER -1.0\n");
        node33.setWasEmptyNode(true);
        boolean boolean47 = node33.isCatch();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test10757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10757");
        java.io.IOException iOException2 = new java.io.IOException();
        java.io.IOException iOException3 = new java.io.IOException("OFF", (java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException("PARAM_LIST\n    PARAM_LIST\n", (java.lang.Throwable) iOException2);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.lang.Throwable[] throwableArray6 = iOException5.getSuppressed();
        java.lang.Throwable[] throwableArray7 = iOException5.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test10758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10758");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.syntheticBlockEndMarker = "hi!";
        compilerOptions0.removeUnusedClassProperties = false;
        compilerOptions0.setLineLengthThreshold(4095);
        com.google.javascript.jscomp.ErrorFormat errorFormat9 = compilerOptions0.errorFormat;
        compilerOptions0.inlineConstantVars = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions12 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions12.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode15 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions12.setTracer(tracerMode15);
        compilerOptions12.setFoldConstants(true);
        compilerOptions12.flowSensitiveInlineVariables = true;
        compilerOptions12.ambiguateProperties = false;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel23 = compilerOptions12.sourceMapDetailLevel;
        compilerOptions0.sourceMapDetailLevel = detailLevel23;
        boolean boolean25 = compilerOptions0.aliasKeywords;
        compilerOptions0.smartNameRemoval = true;
        org.junit.Assert.assertNotNull(errorFormat9);
        org.junit.Assert.assertTrue("'" + tracerMode15 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode15.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertNotNull(detailLevel23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test10759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10759");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("java.io.IOException: ");
        java.util.List<java.lang.String> strList2 = jSModule1.getProvides();
        com.google.javascript.jscomp.CompilerInput compilerInput4 = jSModule1.getByName("sun.util.logging.resources.logging");
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(compilerInput4);
    }

    @Test
    public void test10760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10760");
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray4 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList5 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList5, jSTypeArray4);
        com.google.javascript.rhino.Node node7 = jSTypeRegistry3.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList5);
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.Node node13 = jSTypeRegistry9.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList11);
        node7.addChildrenToBack(node13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray17 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList18 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList18, jSTypeArray17);
        com.google.javascript.rhino.Node node20 = jSTypeRegistry16.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList18);
        boolean boolean21 = node20.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.Node node27 = jSTypeRegistry23.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = node27.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        com.google.javascript.rhino.Node node34 = jSTypeRegistry30.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        com.google.javascript.rhino.Node node37 = new com.google.javascript.rhino.Node((int) (short) 0, node7, node20, node27, node34, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.Node node44 = jSTypeRegistry40.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        node44.addChildrenToBack(node50);
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList55 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55, jSTypeArray54);
        com.google.javascript.rhino.Node node57 = jSTypeRegistry53.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList55);
        boolean boolean58 = node57.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry60 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        com.google.javascript.rhino.Node node64 = jSTypeRegistry60.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        boolean boolean65 = node64.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter66 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry67 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter66);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.Node node71 = jSTypeRegistry67.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        com.google.javascript.rhino.Node node74 = new com.google.javascript.rhino.Node((int) (short) 0, node44, node57, node64, node71, 0, 49);
        com.google.javascript.rhino.Node node75 = node37.useSourceInfoFrom(node57);
        com.google.javascript.jscomp.CheckLevel checkLevel77 = null;
        com.google.javascript.jscomp.DiagnosticType diagnosticType79 = com.google.javascript.jscomp.DiagnosticType.make("*global*", checkLevel77, "");
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", ":" };
        com.google.javascript.jscomp.JSError jSError87 = com.google.javascript.jscomp.JSError.make("*global*", node75, diagnosticType79, strArray86);
        int int88 = jSError87.getNodeLength();
        int int89 = jSError87.getNodeLength();
        int int90 = jSError87.getLineNumber();
        org.junit.Assert.assertNotNull(jSTypeArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(jSTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(diagnosticType79);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(jSError87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test10761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10761");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        compilerOptions0.setSkipAllPasses(false);
        compilerOptions0.setPropertyAffinity(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode14 = null;
        compilerOptions13.setTracerMode(tracerMode14);
        boolean boolean16 = compilerOptions13.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel17 = compilerOptions13.sourceMapDetailLevel;
        compilerOptions13.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.optimizeParameters = true;
        compilerOptions20.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel28 = compilerOptions20.checkGlobalNamesLevel;
        compilerOptions13.setReportMissingOverride(checkLevel28);
        compilerOptions0.setCheckGlobalNamesLevel(checkLevel28);
        boolean boolean31 = compilerOptions0.ambiguateProperties;
        compilerOptions0.setRecordFunctionInformation(false);
        compilerOptions0.setAliasStringsBlacklist("hi!");
        compilerOptions0.setCollapsePropertiesOnExternTypes(true);
        compilerOptions0.smartNameRemoval = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(detailLevel17);
        org.junit.Assert.assertTrue("'" + checkLevel28 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel28.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test10762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10762");
        java.io.IOException iOException1 = new java.io.IOException("PARAM_LIST [var_args_name: 1] [opt_arg: 1]");
    }

    @Test
    public void test10763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10763");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        strMap4.clear();
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray12 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList13 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13, jSTypeArray12);
        boolean boolean15 = jSTypeList10.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        com.google.javascript.rhino.Node node16 = jSTypeRegistry8.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        boolean boolean17 = node16.isVarArgs();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable18 = node16.siblings();
        boolean boolean19 = strMap4.equals((java.lang.Object) node16);
        java.util.Collection<com.google.javascript.rhino.Node> nodeCollection20 = strMap4.values();
        java.util.Spliterator<com.google.javascript.rhino.Node> nodeSpliterator21 = nodeCollection20.spliterator();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(jSTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(nodeIterable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(nodeCollection20);
        org.junit.Assert.assertNotNull(nodeSpliterator21);
    }

    @Test
    public void test10764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10764");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.setSyntheticBlockStartMarker("OFF");
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.jqueryPass = false;
        compilerOptions0.setDevirtualizePrototypeMethods(false);
        compilerOptions0.removeUnusedPrototypeProperties = true;
        compilerOptions0.inlineFunctions = false;
        compilerOptions0.markAsCompiled = false;
        com.google.javascript.jscomp.CodingConvention codingConvention17 = compilerOptions0.getCodingConvention();
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(codingConvention17);
    }

    @Test
    public void test10765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10765");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setInlineLocalFunctions(false);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy3 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy3;
        com.google.javascript.jscomp.CompilerOptions.TweakProcessing tweakProcessing5 = compilerOptions0.getTweakProcessing();
        compilerOptions0.syntheticBlockStartMarker = "DiagnosticGroup<checkProvides>";
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel9 = compilerOptions8.checkRequires;
        compilerOptions8.setLooseTypes(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions12 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions12.crossModuleMethodMotion = true;
        compilerOptions12.skipAllCompilerPasses();
        compilerOptions12.resetWarningsGuard();
        compilerOptions12.setInlineLocalVariables(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions19 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode20 = null;
        compilerOptions19.setTracerMode(tracerMode20);
        boolean boolean22 = compilerOptions19.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel23 = compilerOptions19.sourceMapDetailLevel;
        compilerOptions19.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet26 = compilerOptions19.stripNameSuffixes;
        compilerOptions12.setReplaceStringsReservedStrings(strSet26);
        boolean boolean28 = strSet26.isEmpty();
        compilerOptions8.aliasableStrings = strSet26;
        compilerOptions0.setAliasableStrings(strSet26);
        boolean boolean31 = compilerOptions0.moveFunctionDeclarations;
        boolean boolean32 = compilerOptions0.rewriteFunctionExpressions;
        org.junit.Assert.assertTrue("'" + tweakProcessing5 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF + "'", tweakProcessing5.equals(com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel9 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel9.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(detailLevel23);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test10766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10766");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.setReportPath("java.io.IOException: ");
        com.google.javascript.jscomp.CompilerOptions compilerOptions4 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean5 = compilerOptions4.moveFunctionDeclarations;
        compilerOptions4.setReportPath("java.io.IOException: ");
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode8 = compilerOptions4.getTracerMode();
        compilerOptions0.setTracer(tracerMode8);
        boolean boolean10 = compilerOptions0.shouldColorizeErrorOutput();
        com.google.javascript.jscomp.MessageBundle messageBundle11 = compilerOptions0.messageBundle;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + tracerMode8 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode8.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(messageBundle11);
    }

    @Test
    public void test10767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10767");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setProtectHiddenSideEffects(true);
        compilerOptions0.moveFunctionDeclarations = true;
        boolean boolean7 = compilerOptions0.inlineConstantVars;
        boolean boolean8 = compilerOptions0.disambiguateProperties;
        com.google.javascript.jscomp.CheckLevel checkLevel9 = compilerOptions0.aggressiveVarCheck;
        boolean boolean10 = compilerOptions0.exportTestFunctions;
        compilerOptions0.setMarkAsCompiled(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + checkLevel9 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel9.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test10768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10768");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream6 = jSTypeList3.parallelStream();
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator7 = jSTypeList3.spliterator();
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream8 = jSTypeList3.stream();
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray11 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList12 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList12, jSTypeArray11);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList15 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15, jSTypeArray14);
        boolean boolean17 = jSTypeList12.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry10.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList12);
        java.lang.Object obj19 = null;
        boolean boolean20 = jSTypeList12.remove(obj19);
        java.lang.Object obj21 = null;
        int int22 = jSTypeList12.indexOf(obj21);
        com.google.javascript.jscomp.CompilerOptions compilerOptions23 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions23.crossModuleMethodMotion = true;
        compilerOptions23.skipAllCompilerPasses();
        compilerOptions23.resetWarningsGuard();
        compilerOptions23.setInlineLocalVariables(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions30 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode31 = null;
        compilerOptions30.setTracerMode(tracerMode31);
        boolean boolean33 = compilerOptions30.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel34 = compilerOptions30.sourceMapDetailLevel;
        compilerOptions30.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet37 = compilerOptions30.stripNameSuffixes;
        compilerOptions23.setReplaceStringsReservedStrings(strSet37);
        int int39 = strSet37.size();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream46 = jSTypeList43.parallelStream();
        boolean boolean47 = strSet37.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        boolean boolean48 = jSTypeList12.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec50 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("*global*");
        com.google.javascript.rhino.Node node53 = com.google.javascript.rhino.Node.newString((int) ' ', "OFF");
        com.google.javascript.rhino.Node node54 = assertionFunctionSpec50.getAssertedParam(node53);
        boolean boolean55 = jSTypeList43.contains((java.lang.Object) node53);
        boolean boolean56 = jSTypeList3.removeAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.google.javascript.rhino.jstype.JSType> jSTypeList59 = jSTypeList43.subList(30, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeStream6);
        org.junit.Assert.assertNotNull(jSTypeSpliterator7);
        org.junit.Assert.assertNotNull(jSTypeStream8);
        org.junit.Assert.assertNotNull(jSTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(detailLevel34);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(jSTypeStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test10769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10769");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(false, false);
        boolean boolean7 = file2.setReadable(false);
        java.io.File file8 = file2.getCanonicalFile();
        java.io.File file10 = new java.io.File(":");
        java.io.File file12 = new java.io.File(file10, "FINEST");
        boolean boolean13 = file2.renameTo(file10);
        boolean boolean16 = file2.setReadable(false, false);
        boolean boolean17 = file2.setReadOnly();
        java.io.File file18 = file2.getCanonicalFile();
        java.lang.String str19 = file18.getName();
        java.lang.String str20 = file18.getCanonicalPath();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(file8);
// flaky:         org.junit.Assert.assertEquals(file8.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file8.toString(), "/experiment/:/hi!");
        org.junit.Assert.assertNull("file10.getParent() == null", file10.getParent());
        org.junit.Assert.assertEquals(file10.toString(), ":");
        org.junit.Assert.assertEquals(file12.getParent(), ":");
        org.junit.Assert.assertEquals(file12.toString(), ":/FINEST");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(file18);
// flaky:         org.junit.Assert.assertEquals(file18.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file18.toString(), "/experiment/:/hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/experiment/:/hi!" + "'", str20, "/experiment/:/hi!");
    }

    @Test
    public void test10770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10770");
        java.io.File file3 = new java.io.File(":");
        java.io.File file5 = new java.io.File(file3, "FINEST");
        java.io.File file6 = java.io.File.createTempFile("OFF", "", file3);
        java.io.File file7 = file6.getAbsoluteFile();
        boolean boolean8 = file6.canRead();
        boolean boolean11 = file6.setExecutable(true, false);
        boolean boolean14 = file6.setExecutable(false, false);
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), ":");
        org.junit.Assert.assertEquals(file5.getParent(), ":");
        org.junit.Assert.assertEquals(file5.toString(), ":/FINEST");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), ":");
// flaky:         org.junit.Assert.assertEquals(file6.toString(), ":/OFF5182233066533119798");
        org.junit.Assert.assertNotNull(file7);
// flaky:         org.junit.Assert.assertEquals(file7.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file7.toString(), "/experiment/:/OFF5182233066533119798");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test10771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10771");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy5 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions6.propertyRenaming;
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy5, propertyRenamingPolicy9);
        boolean boolean11 = compilerOptions0.checkControlStructures;
        boolean boolean12 = compilerOptions0.crossModuleCodeMotion;
        compilerOptions0.extractPrototypeMemberDeclarations = true;
        compilerOptions0.prettyPrint = true;
        compilerOptions0.enableExternExports(false);
        compilerOptions0.setRecordFunctionInformation(true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test10772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10772");
        com.google.javascript.jscomp.SourceFile.Builder builder0 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile4 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int6 = sourceFile4.getLineOfOffset((int) (short) 1);
        java.io.Reader reader7 = sourceFile4.getCodeReader();
        int int8 = reader7.read();
        com.google.javascript.jscomp.SourceFile sourceFile9 = builder0.buildFromReader("*global*", reader7);
        java.nio.charset.Charset charset10 = null;
        com.google.javascript.jscomp.SourceFile.Builder builder11 = builder0.withCharset(charset10);
        java.io.File file14 = new java.io.File(":", "hi!");
        boolean boolean17 = file14.setExecutable(true, false);
        long long18 = file14.lastModified();
        boolean boolean19 = file14.mkdir();
        com.google.javascript.jscomp.SourceFile sourceFile20 = builder0.buildFromFile(file14);
        com.google.javascript.jscomp.SourceFile.Builder builder22 = builder0.withOriginalPath("java.io.IOException: OFF");
        java.nio.charset.Charset charset23 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str24 = charset23.name();
        java.lang.String str25 = charset23.name();
        com.google.javascript.jscomp.SourceFile.Builder builder26 = builder0.withCharset(charset23);
        java.nio.charset.Charset charset28 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str29 = charset28.name();
        java.util.Locale locale30 = null;
        java.lang.String str31 = charset28.displayName(locale30);
        com.google.javascript.jscomp.JSSourceFile jSSourceFile32 = com.google.javascript.jscomp.JSSourceFile.fromFile("Node tree inequality:\nTree1:\nPARAM_LIST\n    NAME \n\n\nTree2:\nNUMBER -1.0\n\n\nSubtree1: PARAM_LIST\n    NAME \n\n\nSubtree2: NUMBER -1.0\n", charset28);
        java.nio.charset.CharsetEncoder charsetEncoder33 = charset28.newEncoder();
        com.google.javascript.jscomp.SourceFile.Builder builder34 = builder0.withCharset(charset28);
        java.util.Set<java.lang.String> strSet35 = charset28.aliases();
        java.nio.charset.CharsetEncoder charsetEncoder36 = charset28.newEncoder();
        java.io.File file39 = new java.io.File(":", "hi!");
        boolean boolean42 = file39.setExecutable(false, false);
        java.io.File file43 = file39.getParentFile();
        long long44 = file43.getUsableSpace();
        boolean boolean45 = file43.mkdirs();
        java.nio.charset.Charset charset46 = null;
        com.google.javascript.jscomp.JSSourceFile jSSourceFile47 = com.google.javascript.jscomp.JSSourceFile.fromFile(file43, charset46);
        java.io.File file50 = new java.io.File(":", "hi!");
        boolean boolean53 = file50.setExecutable(true, false);
        boolean boolean55 = file50.setWritable(false);
        boolean boolean56 = file50.canWrite();
        java.net.URI uRI57 = file50.toURI();
        boolean boolean58 = file43.renameTo(file50);
        java.nio.charset.Charset charset59 = java.nio.charset.Charset.defaultCharset();
        com.google.javascript.jscomp.SourceFile sourceFile60 = com.google.javascript.jscomp.SourceFile.fromFile(file43, charset59);
        java.lang.String str61 = charset59.displayName();
        java.nio.ByteBuffer byteBuffer63 = charset59.encode("Node tree inequality:\nTree1:\nPARAM_LIST\n\n\nTree2:\nNUMBER 0.0\n\n\nSubtree1: PARAM_LIST\n\n\nSubtree2: NUMBER 0.0\n");
        java.nio.CharBuffer charBuffer64 = charset28.decode(byteBuffer63);
        org.junit.Assert.assertNotNull(sourceFile4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(sourceFile9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertEquals(file14.getParent(), ":");
        org.junit.Assert.assertEquals(file14.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(sourceFile20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(charset23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "US-ASCII" + "'", str24, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "US-ASCII" + "'", str25, "US-ASCII");
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(charset28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "US-ASCII" + "'", str29, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "US-ASCII" + "'", str31, "US-ASCII");
        org.junit.Assert.assertNotNull(jSSourceFile32);
        org.junit.Assert.assertNotNull(charsetEncoder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(charsetEncoder36);
        org.junit.Assert.assertEquals(file39.getParent(), ":");
        org.junit.Assert.assertEquals(file39.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertNull("file43.getParent() == null", file43.getParent());
        org.junit.Assert.assertEquals(file43.toString(), ":");
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 280489496576L + "'", long44 == 280489496576L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jSSourceFile47);
        org.junit.Assert.assertEquals(file50.getParent(), ":");
        org.junit.Assert.assertEquals(file50.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(uRI57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charset59);
        org.junit.Assert.assertNotNull(sourceFile60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "US-ASCII" + "'", str61, "US-ASCII");
        org.junit.Assert.assertNotNull(byteBuffer63);
        org.junit.Assert.assertNotNull(charBuffer64);
    }

    @Test
    public void test10773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10773");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        boolean boolean10 = node9.isVarArgs();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable11 = node9.siblings();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder12 = node9.getJsDocBuilderForNode();
        boolean boolean13 = node9.isCatch();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(nodeIterable11);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test10774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10774");
        java.nio.charset.Charset charset0 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str1 = charset0.name();
        java.util.Locale locale2 = null;
        java.lang.String str3 = charset0.displayName(locale2);
        java.nio.ByteBuffer byteBuffer5 = charset0.encode("/experiment/:/hi!");
        java.nio.charset.Charset charset6 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str7 = charset6.name();
        java.util.Set<java.lang.String> strSet8 = charset6.aliases();
        java.util.Set<java.lang.String> strSet9 = charset6.aliases();
        int int10 = charset0.compareTo(charset6);
        java.nio.ByteBuffer byteBuffer12 = charset0.encode("PARAM_LIST\n    PARAM_LIST\n");
        java.util.Set<java.lang.String> strSet13 = charset0.aliases();
        org.junit.Assert.assertNotNull(charset0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "US-ASCII" + "'", str1, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "US-ASCII" + "'", str3, "US-ASCII");
        org.junit.Assert.assertNotNull(byteBuffer5);
        org.junit.Assert.assertNotNull(charset6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "US-ASCII" + "'", str7, "US-ASCII");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(byteBuffer12);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test10775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10775");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions0.checkGlobalNamesLevel;
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode10 = null;
        compilerOptions9.setTracerMode(tracerMode10);
        boolean boolean12 = compilerOptions9.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel13 = compilerOptions9.sourceMapDetailLevel;
        compilerOptions9.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet16 = compilerOptions9.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile18 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput20 = new com.google.javascript.jscomp.CompilerInput(sourceFile18, true);
        com.google.javascript.rhino.InputId inputId22 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput24 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput20, inputId22, true);
        java.lang.String str25 = compilerInput24.toString();
        boolean boolean26 = strSet16.contains((java.lang.Object) compilerInput24);
        java.lang.Object[] objArray27 = strSet16.toArray();
        compilerOptions0.setStripTypes(strSet16);
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy29 = compilerOptions0.propertyRenaming;
        compilerOptions0.setAliasExternals(true);
        compilerOptions0.setConvertToDottedProperties(false);
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(detailLevel13);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "*global*" + "'", str25, "*global*");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy29 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy29.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
    }

    @Test
    public void test10776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10776");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        boolean boolean75 = node74.hasChildren();
        node74.setOptionalArg(false);
        boolean boolean78 = node74.isNot();
        boolean boolean79 = node74.isDec();
        node74.setWasEmptyNode(false);
        boolean boolean82 = node74.isNull();
        boolean boolean83 = node74.isDo();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test10777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10777");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setInlineLocalFunctions(false);
        compilerOptions0.moveFunctionDeclarations = true;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageIn();
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.setInlineLocalFunctions(false);
        compilerOptions6.moveFunctionDeclarations = true;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode11 = compilerOptions6.getLanguageIn();
        compilerOptions0.setLanguageIn(languageMode11);
        compilerOptions0.coalesceVariableNames = false;
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap15 = null;
        compilerOptions0.cssRenamingMap = cssRenamingMap15;
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        compilerOptions17.setLineBreak(false);
        compilerOptions17.setRemoveDeadCode(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions29 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions29.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions29.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode35 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions29.setTracer(tracerMode35);
        compilerOptions29.setSyntheticBlockStartMarker("");
        java.util.Set<java.lang.String> strSet39 = compilerOptions29.stripNamePrefixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions40 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions40.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions40.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode46 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions40.setTracer(tracerMode46);
        compilerOptions40.setSyntheticBlockStartMarker("");
        com.google.javascript.jscomp.CompilerOptions compilerOptions50 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode51 = null;
        compilerOptions50.setTracerMode(tracerMode51);
        boolean boolean53 = compilerOptions50.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel54 = compilerOptions50.sourceMapDetailLevel;
        compilerOptions50.setColorizeErrorOutput(true);
        compilerOptions50.collapseProperties = true;
        com.google.common.collect.Multimap<com.google.javascript.jscomp.CustomPassExecutionTime, com.google.javascript.jscomp.CompilerPass> customPassExecutionTimeMultimap59 = null;
        compilerOptions50.setCustomPasses(customPassExecutionTimeMultimap59);
        com.google.javascript.jscomp.CompilerOptions compilerOptions61 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str62 = compilerOptions61.syntheticBlockStartMarker;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel63 = compilerOptions61.sourceMapDetailLevel;
        compilerOptions50.setSourceMapDetailLevel(detailLevel63);
        compilerOptions40.setSourceMapDetailLevel(detailLevel63);
        compilerOptions29.sourceMapDetailLevel = detailLevel63;
        compilerOptions17.sourceMapDetailLevel = detailLevel63;
        compilerOptions0.sourceMapDetailLevel = detailLevel63;
        org.junit.Assert.assertTrue("'" + languageMode5 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode5.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertTrue("'" + languageMode11 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode11.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertTrue("'" + tracerMode35 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode35.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + tracerMode46 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode46.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(detailLevel54);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(detailLevel63);
    }

    @Test
    public void test10778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10778");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        boolean boolean37 = node26.isTrue();
        boolean boolean38 = node26.isNE();
        com.google.javascript.rhino.Node node39 = node26.cloneNode();
        boolean boolean40 = node39.isDec();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test10779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10779");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.CompilerOptions compilerOptions4 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions4.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode7 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions4.setTracer(tracerMode7);
        compilerOptions4.setFoldConstants(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode12 = null;
        compilerOptions11.setTracerMode(tracerMode12);
        boolean boolean14 = compilerOptions11.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel15 = compilerOptions11.sourceMapDetailLevel;
        compilerOptions11.setColorizeErrorOutput(true);
        compilerOptions11.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy23 = compilerOptions20.propertyRenaming;
        compilerOptions11.propertyRenaming = propertyRenamingPolicy23;
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions11.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel26 = compilerOptions11.checkRequires;
        compilerOptions4.reportMissingOverride = checkLevel26;
        compilerOptions0.setAggressiveVarCheck(checkLevel26);
        compilerOptions0.setReplaceIdGenerators(true);
        compilerOptions0.setOptimizeParameters(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions33 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions33.setLooseTypes(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str37 = compilerOptions36.syntheticBlockStartMarker;
        compilerOptions36.labelRenaming = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions40 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions40.crossModuleMethodMotion = true;
        compilerOptions40.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions45 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions45.crossModuleMethodMotion = true;
        compilerOptions45.skipAllCompilerPasses();
        compilerOptions45.resetWarningsGuard();
        java.lang.String str50 = compilerOptions45.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy51 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy52 = null;
        compilerOptions45.setRenamingPolicy(variableRenamingPolicy51, propertyRenamingPolicy52);
        com.google.javascript.jscomp.CompilerOptions compilerOptions54 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions54.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy57 = compilerOptions54.propertyRenaming;
        compilerOptions40.setRenamingPolicy(variableRenamingPolicy51, propertyRenamingPolicy57);
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy59 = com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC;
        compilerOptions36.setRenamingPolicy(variableRenamingPolicy51, propertyRenamingPolicy59);
        com.google.javascript.jscomp.CompilerOptions compilerOptions61 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str62 = compilerOptions61.syntheticBlockStartMarker;
        compilerOptions61.labelRenaming = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions65 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions65.crossModuleMethodMotion = true;
        compilerOptions65.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions70 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions70.crossModuleMethodMotion = true;
        compilerOptions70.skipAllCompilerPasses();
        compilerOptions70.resetWarningsGuard();
        java.lang.String str75 = compilerOptions70.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy76 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy77 = null;
        compilerOptions70.setRenamingPolicy(variableRenamingPolicy76, propertyRenamingPolicy77);
        com.google.javascript.jscomp.CompilerOptions compilerOptions79 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions79.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy82 = compilerOptions79.propertyRenaming;
        compilerOptions65.setRenamingPolicy(variableRenamingPolicy76, propertyRenamingPolicy82);
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy84 = com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC;
        compilerOptions61.setRenamingPolicy(variableRenamingPolicy76, propertyRenamingPolicy84);
        compilerOptions33.setRenamingPolicy(variableRenamingPolicy51, propertyRenamingPolicy84);
        compilerOptions0.propertyRenaming = propertyRenamingPolicy84;
        compilerOptions0.setCheckTypes(false);
        compilerOptions0.setRuntimeTypeCheck(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + tracerMode7 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode7.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(detailLevel15);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy23 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy23.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel26 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel26.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy51 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy51.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy57 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy57.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy59 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC + "'", propertyRenamingPolicy59.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC));
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy76 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy76.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy82 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy82.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy84 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC + "'", propertyRenamingPolicy84.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC));
    }

    @Test
    public void test10780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10780");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler2 = new com.google.javascript.jscomp.Compiler();
        jSModule1.sortInputsByDeps(compiler2);
        com.google.javascript.jscomp.SourceFile.Builder builder4 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile8 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int10 = sourceFile8.getLineOfOffset((int) (short) 1);
        java.io.Reader reader11 = sourceFile8.getCodeReader();
        int int12 = reader11.read();
        com.google.javascript.jscomp.SourceFile sourceFile13 = builder4.buildFromReader("*global*", reader11);
        jSModule1.add(sourceFile13);
        com.google.javascript.jscomp.JSModule jSModule16 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler17 = new com.google.javascript.jscomp.Compiler();
        jSModule16.sortInputsByDeps(compiler17);
        com.google.javascript.jscomp.SourceFile.Builder builder19 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile23 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int25 = sourceFile23.getLineOfOffset((int) (short) 1);
        java.io.Reader reader26 = sourceFile23.getCodeReader();
        int int27 = reader26.read();
        com.google.javascript.jscomp.SourceFile sourceFile28 = builder19.buildFromReader("*global*", reader26);
        jSModule16.add(sourceFile28);
        boolean boolean31 = jSModule16.removeByName("PARAM_LIST");
        jSModule1.addDependency(jSModule16);
        java.util.Set<com.google.javascript.jscomp.JSModule> jSModuleSet33 = jSModule1.getAllDependencies();
        com.google.javascript.jscomp.SourceFile sourceFile36 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int38 = sourceFile36.getLineOfOffset((int) (short) 1);
        int int40 = sourceFile36.getColumnOfOffset(8);
        jSModule1.addFirst(sourceFile36);
        com.google.javascript.jscomp.SourceFile.Generator generator43 = null;
        com.google.javascript.jscomp.JSSourceFile jSSourceFile44 = com.google.javascript.jscomp.JSSourceFile.fromGenerator("*global*", generator43);
        jSSourceFile44.clearCachedSource();
        java.lang.String str46 = jSSourceFile44.getName();
        jSModule1.add((com.google.javascript.jscomp.SourceFile) jSSourceFile44);
        boolean boolean49 = jSModule1.removeByName("Node tree inequality:\nTree1:\nBITXOR 300\n    PARAM_LIST [var_args_name: 1] [opt_arg: 1]\n\n\nTree2:\nPARAM_LIST\n\n\nSubtree1: BITXOR 300\n    PARAM_LIST [var_args_name: 1] [opt_arg: 1]\n\n\nSubtree2: PARAM_LIST\n");
        org.junit.Assert.assertNotNull(sourceFile8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(reader11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(sourceFile13);
        org.junit.Assert.assertNotNull(sourceFile23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(reader26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(sourceFile28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(jSModuleSet33);
        org.junit.Assert.assertNotNull(sourceFile36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8 + "'", int40 == 8);
        org.junit.Assert.assertNotNull(jSSourceFile44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "*global*" + "'", str46, "*global*");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test10781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10781");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        java.lang.Object obj6 = null;
        com.google.javascript.rhino.Node node7 = strMap4.get(obj6);
        java.util.Set<java.lang.String> strSet8 = strMap4.keySet();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.Node node10 = strMap4.remove(obj9);
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags12 = new com.google.javascript.rhino.Node.SideEffectFlags((int) (byte) 100);
        com.google.javascript.rhino.Node node13 = strMap4.get((java.lang.Object) (byte) 100);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.Node>> strEntrySet14 = strMap4.entrySet();
        java.io.PrintStream printStream16 = new java.io.PrintStream("PARAM_LIST: PARAM_LIST\n");
        printStream16.println("");
        java.io.PrintStream printStream19 = new java.io.PrintStream((java.io.OutputStream) printStream16);
        java.io.PrintStream printStream20 = new java.io.PrintStream((java.io.OutputStream) printStream16);
        java.io.PrintStream printStream21 = new java.io.PrintStream((java.io.OutputStream) printStream16);
        boolean boolean22 = strMap4.containsKey((java.lang.Object) printStream16);
        com.google.javascript.jscomp.CompilerOptions compilerOptions23 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str24 = compilerOptions23.syntheticBlockStartMarker;
        compilerOptions23.labelRenaming = true;
        boolean boolean27 = compilerOptions23.inlineLocalFunctions;
        com.google.javascript.jscomp.CompilerOptions compilerOptions28 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions28.crossModuleMethodMotion = true;
        compilerOptions28.skipAllCompilerPasses();
        boolean boolean32 = compilerOptions28.flowSensitiveInlineVariables;
        java.lang.String[] strArray42 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        compilerOptions28.stripTypes = strSet43;
        compilerOptions23.setStripNameSuffixes((java.util.Set<java.lang.String>) strSet43);
        boolean boolean47 = compilerOptions23.ideMode;
        compilerOptions23.locale = "PARAM_LIST\n    PARAM_LIST\n";
        compilerOptions23.setAliasableGlobals("goog.exportSymbol");
        compilerOptions23.setTweakToStringLiteral("InputId: FINEST", "NUMBER -1.0");
        com.google.javascript.rhino.Node node55 = strMap4.remove((java.lang.Object) compilerOptions23);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(strEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(node55);
    }

    @Test
    public void test10782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10782");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        boolean boolean21 = compilerOptions0.shouldColorizeErrorOutput();
        boolean boolean22 = compilerOptions0.removeTryCatchFinally;
        compilerOptions0.setLineBreak(false);
        compilerOptions0.lineBreak = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel28 = compilerOptions27.checkRequires;
        compilerOptions27.setRewriteNewDateGoogNow(true);
        compilerOptions27.setSyntheticBlockStartMarker("OFF");
        compilerOptions27.skipAllCompilerPasses();
        compilerOptions27.setDeadAssignmentElimination(true);
        compilerOptions27.setInferTypes(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions38 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions38.crossModuleMethodMotion = true;
        compilerOptions38.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions43 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions43.crossModuleMethodMotion = true;
        compilerOptions43.skipAllCompilerPasses();
        compilerOptions43.resetWarningsGuard();
        java.lang.String str48 = compilerOptions43.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy49 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy50 = null;
        compilerOptions43.setRenamingPolicy(variableRenamingPolicy49, propertyRenamingPolicy50);
        com.google.javascript.jscomp.CompilerOptions compilerOptions52 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions52.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy55 = compilerOptions52.propertyRenaming;
        compilerOptions38.setRenamingPolicy(variableRenamingPolicy49, propertyRenamingPolicy55);
        com.google.javascript.jscomp.CompilerOptions compilerOptions57 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions57.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions57.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode63 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions57.setTracer(tracerMode63);
        compilerOptions57.setSyntheticBlockStartMarker("");
        java.util.Set<java.lang.String> strSet67 = compilerOptions57.stripNameSuffixes;
        compilerOptions38.stripNamePrefixes = strSet67;
        compilerOptions27.setIdGenerators(strSet67);
        compilerOptions0.stripTypePrefixes = strSet67;
        compilerOptions0.setCollapseProperties(true);
        compilerOptions0.markNoSideEffectCalls = false;
        com.google.javascript.jscomp.CheckLevel checkLevel75 = compilerOptions0.checkRequires;
        boolean boolean76 = compilerOptions0.getInferTypes();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + checkLevel28 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel28.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy49 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy49.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy55 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy55.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + tracerMode63 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode63.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertTrue("'" + checkLevel75 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel75.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test10783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10783");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        boolean boolean75 = node56.hasOneChild();
        com.google.javascript.rhino.ErrorReporter errorReporter76 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry77 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter76);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray78 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList79 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList79, jSTypeArray78);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray81 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList82 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList82, jSTypeArray81);
        boolean boolean84 = jSTypeList79.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList82);
        com.google.javascript.rhino.Node node85 = jSTypeRegistry77.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList79);
        boolean boolean86 = node85.isVarArgs();
        com.google.javascript.rhino.Node node87 = node56.clonePropsFrom(node85);
        int int88 = node85.getChildCount();
        com.google.javascript.rhino.Node node89 = node85.removeChildren();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = node89.isExprResult();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(jSTypeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(jSTypeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNull(node89);
    }

    @Test
    public void test10784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10784");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode6 = null;
        compilerOptions5.setTracerMode(tracerMode6);
        boolean boolean8 = compilerOptions5.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel9 = compilerOptions5.sourceMapDetailLevel;
        compilerOptions5.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet12 = compilerOptions5.stripNameSuffixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode14 = null;
        compilerOptions13.setTracerMode(tracerMode14);
        boolean boolean16 = compilerOptions13.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel17 = compilerOptions13.sourceMapDetailLevel;
        compilerOptions13.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.optimizeParameters = true;
        compilerOptions20.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel28 = compilerOptions20.checkGlobalNamesLevel;
        compilerOptions13.setReportMissingOverride(checkLevel28);
        compilerOptions5.setAggressiveVarCheck(checkLevel28);
        compilerOptions0.setCheckUnreachableCode(checkLevel28);
        com.google.javascript.jscomp.SourceMap.Format format32 = compilerOptions0.sourceMapFormat;
        boolean boolean33 = compilerOptions0.recordFunctionInformation;
        compilerOptions0.setComputeFunctionSideEffects(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions36.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions36.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode42 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions36.setTracer(tracerMode42);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy44 = compilerOptions36.variableRenaming;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy45 = com.google.javascript.jscomp.PropertyRenamingPolicy.HEURISTIC;
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy44, propertyRenamingPolicy45);
        com.google.javascript.jscomp.CompilerOptions.AliasTransformationHandler aliasTransformationHandler47 = null;
        compilerOptions0.setAliasTransformationHandler(aliasTransformationHandler47);
        boolean boolean49 = compilerOptions0.checkControlStructures;
        boolean boolean50 = compilerOptions0.optimizeParameters;
        com.google.javascript.jscomp.CompilerOptions.TweakProcessing tweakProcessing51 = compilerOptions0.getTweakProcessing();
        boolean boolean52 = tweakProcessing51.shouldStrip();
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(detailLevel9);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(detailLevel17);
        org.junit.Assert.assertTrue("'" + checkLevel28 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel28.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(format32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + tracerMode42 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode42.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy44 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.OFF + "'", variableRenamingPolicy44.equals(com.google.javascript.jscomp.VariableRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy45 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.HEURISTIC + "'", propertyRenamingPolicy45.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.HEURISTIC));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + tweakProcessing51 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF + "'", tweakProcessing51.equals(com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test10785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10785");
        com.google.javascript.rhino.Node[] nodeArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.Node node4 = new com.google.javascript.rhino.Node(31, nodeArray1, (int) (short) 10, 43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10786");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageOut();
        compilerOptions0.setReplaceStringsPlaceholderToken("PARAM_LIST");
        compilerOptions0.setPropertyAffinity(true);
        compilerOptions0.setCommonJSModulePathPrefix("Exceeded max number of code motion iterations: {0}");
        compilerOptions0.setReplaceIdGenerators(false);
        compilerOptions0.optimizeArgumentsArray = true;
        boolean boolean16 = compilerOptions0.assumeStrictThis();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(languageMode5);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test10787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10787");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.coalesceVariableNames = true;
        java.lang.String str9 = compilerOptions0.aliasStringsBlacklist;
        compilerOptions0.setGatherCssNames(true);
        boolean boolean12 = compilerOptions0.inlineLocalFunctions;
        compilerOptions0.setDefineToDoubleLiteral("java.io.IOException: OFF", (double) 32);
        boolean boolean16 = compilerOptions0.inlineGetters;
        compilerOptions0.setNameReferenceGraphPath("Exceeded max number of code motion iterations: {0}");
        compilerOptions0.setCollapsePropertiesOnExternTypes(false);
        compilerOptions0.setSyntheticBlockEndMarker("DiagnosticGroup<checkProvides>");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test10788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10788");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        compilerOptions0.prettyPrint = false;
        compilerOptions0.setDevirtualizePrototypeMethods(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions34 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions34.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode37 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions34.setTracer(tracerMode37);
        compilerOptions34.setFoldConstants(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions41 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode42 = null;
        compilerOptions41.setTracerMode(tracerMode42);
        boolean boolean44 = compilerOptions41.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel45 = compilerOptions41.sourceMapDetailLevel;
        compilerOptions41.setColorizeErrorOutput(true);
        compilerOptions41.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions50 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions50.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy53 = compilerOptions50.propertyRenaming;
        compilerOptions41.propertyRenaming = propertyRenamingPolicy53;
        com.google.javascript.jscomp.CheckLevel checkLevel55 = compilerOptions41.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel56 = compilerOptions41.checkRequires;
        compilerOptions34.reportMissingOverride = checkLevel56;
        compilerOptions0.checkMissingGetCssNameLevel = checkLevel56;
        compilerOptions0.renamePrefix = "PARAM_LIST 0";
        compilerOptions0.setCheckSymbols(true);
        byte[] byteArray63 = compilerOptions0.inputPropertyMapSerialized;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + tracerMode37 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode37.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(detailLevel45);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy53 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy53.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel55 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel55.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel56 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel56.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(byteArray63);
    }

    @Test
    public void test10789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10789");
        com.google.javascript.jscomp.SourceFile sourceFile1 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput3 = new com.google.javascript.jscomp.CompilerInput(sourceFile1, true);
        com.google.javascript.rhino.InputId inputId5 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput7 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput3, inputId5, true);
        com.google.javascript.jscomp.CompilerInput compilerInput9 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput7, false);
        com.google.javascript.jscomp.Compiler compiler10 = new com.google.javascript.jscomp.Compiler();
        compiler10.disableThreads();
        compiler10.reportCodeChange();
        compilerInput7.setCompiler((com.google.javascript.jscomp.AbstractCompiler) compiler10);
        compilerInput7.clearAst();
        com.google.javascript.jscomp.SourceAst sourceAst15 = compilerInput7.getSourceAst();
        org.junit.Assert.assertNotNull(sourceAst15);
    }

    @Test
    public void test10790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10790");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        compilerOptions0.setFoldConstants(true);
        java.lang.String str7 = compilerOptions0.renamePrefix;
        compilerOptions0.setDisambiguateProperties(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions10.crossModuleMethodMotion = true;
        compilerOptions10.skipAllCompilerPasses();
        compilerOptions10.resetWarningsGuard();
        java.lang.String str15 = compilerOptions10.aliasStringsBlacklist;
        compilerOptions10.setOptimizeCalls(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode19 = null;
        compilerOptions18.setTracerMode(tracerMode19);
        boolean boolean21 = compilerOptions18.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel22 = compilerOptions18.sourceMapDetailLevel;
        compilerOptions18.setColorizeErrorOutput(true);
        compilerOptions18.collapseProperties = false;
        compilerOptions18.setSkipAllPasses(false);
        compilerOptions18.setPropertyAffinity(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode32 = null;
        compilerOptions31.setTracerMode(tracerMode32);
        boolean boolean34 = compilerOptions31.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel35 = compilerOptions31.sourceMapDetailLevel;
        compilerOptions31.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions38 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions38.crossModuleMethodMotion = true;
        compilerOptions38.optimizeParameters = true;
        compilerOptions38.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel46 = compilerOptions38.checkGlobalNamesLevel;
        compilerOptions31.setReportMissingOverride(checkLevel46);
        compilerOptions18.setCheckGlobalNamesLevel(checkLevel46);
        compilerOptions10.setAggressiveVarCheck(checkLevel46);
        compilerOptions0.checkRequires = checkLevel46;
        boolean boolean51 = compilerOptions0.generatePseudoNames;
        java.lang.String str52 = compilerOptions0.syntheticBlockStartMarker;
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(detailLevel22);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(detailLevel35);
        org.junit.Assert.assertTrue("'" + checkLevel46 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel46.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test10791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10791");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.generatePseudoNames = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy9 = com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED;
        compilerOptions0.setVariableRenaming(variableRenamingPolicy9);
        compilerOptions0.setAcceptConstKeyword(false);
        compilerOptions0.setRuntimeTypeCheckLogFunction("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.CompilerOptions compilerOptions15 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions15.crossModuleMethodMotion = true;
        compilerOptions15.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.skipAllCompilerPasses();
        compilerOptions20.resetWarningsGuard();
        java.lang.String str25 = compilerOptions20.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy26 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy27 = null;
        compilerOptions20.setRenamingPolicy(variableRenamingPolicy26, propertyRenamingPolicy27);
        com.google.javascript.jscomp.CompilerOptions compilerOptions29 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions29.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy32 = compilerOptions29.propertyRenaming;
        compilerOptions15.setRenamingPolicy(variableRenamingPolicy26, propertyRenamingPolicy32);
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel34 = compilerOptions15.sourceMapDetailLevel;
        compilerOptions0.sourceMapDetailLevel = detailLevel34;
        compilerOptions0.setNameReferenceGraphPath("JSC_OPTIMIZE_LOOP_ERROR. Exceeded max number of code motion iterations: {0} at (unknown source) line (unknown line) : (unknown column)");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED + "'", variableRenamingPolicy9.equals(com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy26 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy26.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy32 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy32.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(detailLevel34);
    }

    @Test
    public void test10792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10792");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        compilerOptions7.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions7.checkGlobalNamesLevel;
        compilerOptions0.setReportMissingOverride(checkLevel15);
        java.util.Set<java.lang.String> strSet17 = compilerOptions0.stripTypes;
        compilerOptions0.setTweakToStringLiteral("java.io.IOException: ", "hi!");
        compilerOptions0.setGroupVariableDeclarations(true);
        compilerOptions0.skipAllCompilerPasses();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet17);
    }

    @Test
    public void test10793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10793");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        compilerOptions7.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions7.checkGlobalNamesLevel;
        compilerOptions0.setReportMissingOverride(checkLevel15);
        java.util.Set<java.lang.String> strSet17 = compilerOptions0.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel19 = compilerOptions18.checkRequires;
        compilerOptions0.setReportMissingOverride(checkLevel19);
        com.google.javascript.jscomp.CheckLevel checkLevel21 = compilerOptions0.checkGlobalThisLevel;
        java.lang.String str22 = compilerOptions0.locale;
        compilerOptions0.collapseAnonymousFunctions = false;
        compilerOptions0.gatherCssNames = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + checkLevel19 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel19.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel21 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel21.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test10794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10794");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.crossModuleCodeMotion = true;
        compilerOptions0.setManageClosureDependencies(false);
        boolean boolean6 = compilerOptions0.inlineLocalFunctions;
        com.google.javascript.jscomp.CodingConvention codingConvention7 = compilerOptions0.getCodingConvention();
        compilerOptions0.setIgnoreCajaProperties(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(codingConvention7);
    }

    @Test
    public void test10795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10795");
        com.google.javascript.rhino.Node[] nodeArray3 = new com.google.javascript.rhino.Node[] {};
        com.google.javascript.rhino.Node node4 = new com.google.javascript.rhino.Node((-9), nodeArray3);
        com.google.javascript.rhino.Node node7 = new com.google.javascript.rhino.Node(300, nodeArray3, (int) '#', (int) (byte) -1);
        com.google.javascript.rhino.Node node8 = new com.google.javascript.rhino.Node((int) (byte) 0, nodeArray3);
        org.junit.Assert.assertNotNull(nodeArray3);
    }

    @Test
    public void test10796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10796");
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags1 = new com.google.javascript.rhino.Node.SideEffectFlags(2);
        sideEffectFlags1.clearAllFlags();
    }

    @Test
    public void test10797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10797");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        boolean boolean6 = node5.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.Node node13 = jSTypeRegistry9.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList11);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        node13.addChildrenToBack(node19);
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        boolean boolean34 = node33.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter35 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter35);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.Node node40 = jSTypeRegistry36.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        com.google.javascript.rhino.Node node43 = new com.google.javascript.rhino.Node((int) (short) 0, node13, node26, node33, node40, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        node50.addChildrenToBack(node56);
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        boolean boolean71 = node70.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray74 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList75 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList75, jSTypeArray74);
        com.google.javascript.rhino.Node node77 = jSTypeRegistry73.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList75);
        com.google.javascript.rhino.Node node80 = new com.google.javascript.rhino.Node((int) (short) 0, node50, node63, node70, node77, 0, 49);
        com.google.javascript.rhino.Node node81 = node43.useSourceInfoFrom(node63);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder82 = node63.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node83 = node5.copyInformationFrom(node63);
        boolean boolean84 = node83.isSetterDef();
        java.lang.String str85 = node83.toStringTree();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(jSTypeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder82);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "PARAM_LIST\n" + "'", str85, "PARAM_LIST\n");
    }

    @Test
    public void test10798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10798");
        java.io.PrintStream printStream1 = new java.io.PrintStream("*global*.  at *global* line (unknown line) : (unknown column)");
        printStream1.println(true);
        printStream1.print((double) 280489607168L);
        printStream1.println(false);
        printStream1.print(false);
        printStream1.println();
        printStream1.print(400);
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions13.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy16 = compilerOptions13.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap17 = compilerOptions13.getTweakReplacements();
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions18.crossModuleMethodMotion = true;
        compilerOptions18.optimizeParameters = true;
        compilerOptions18.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions26 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions26.crossModuleMethodMotion = true;
        compilerOptions26.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy31 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy35 = compilerOptions32.propertyRenaming;
        compilerOptions26.setRenamingPolicy(variableRenamingPolicy31, propertyRenamingPolicy35);
        com.google.javascript.jscomp.SourceMap.Format format37 = compilerOptions26.sourceMapFormat;
        compilerOptions18.setSourceMapFormat(format37);
        com.google.javascript.jscomp.CompilerOptions compilerOptions39 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions39.crossModuleMethodMotion = true;
        compilerOptions39.skipAllCompilerPasses();
        boolean boolean43 = compilerOptions39.flowSensitiveInlineVariables;
        java.lang.String[] strArray53 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet54 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet54, strArray53);
        compilerOptions39.stripTypes = strSet54;
        compilerOptions18.stripNameSuffixes = strSet54;
        compilerOptions18.setExtractPrototypeMemberDeclarations(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions60 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions60.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy63 = compilerOptions60.propertyRenaming;
        java.lang.String[] strArray66 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet67 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet67, strArray66);
        compilerOptions60.setStripTypes((java.util.Set<java.lang.String>) strSet67);
        com.google.javascript.jscomp.CompilerOptions compilerOptions70 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode71 = null;
        compilerOptions70.setTracerMode(tracerMode71);
        boolean boolean73 = compilerOptions70.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel74 = compilerOptions70.sourceMapDetailLevel;
        compilerOptions70.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions77 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions77.crossModuleMethodMotion = true;
        compilerOptions77.optimizeParameters = true;
        compilerOptions77.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel85 = compilerOptions77.checkGlobalNamesLevel;
        compilerOptions70.setReportMissingOverride(checkLevel85);
        compilerOptions60.setCheckUnreachableCode(checkLevel85);
        byte[] byteArray92 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 1 };
        compilerOptions60.inputVariableMapSerialized = byteArray92;
        compilerOptions18.inputPropertyMapSerialized = byteArray92;
        compilerOptions13.setInputVariableMapSerialized(byteArray92);
        // The following exception was thrown during execution in test generation
        try {
            printStream1.write(byteArray92, 0, 41);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy16 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy16.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy35 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy35.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format37);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy63 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy63.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(detailLevel74);
        org.junit.Assert.assertTrue("'" + checkLevel85 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel85.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[0, 1, 10, 1]");
    }

    @Test
    public void test10799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10799");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        compilerOptions0.setSummaryDetailLevel(49);
        compilerOptions0.setRemoveTryCatchFinally(true);
        compilerOptions0.setComputeFunctionSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel12 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions9.setSourceMapDetailLevel(detailLevel12);
        compilerOptions0.sourceMapDetailLevel = detailLevel12;
        boolean boolean15 = compilerOptions0.isRemoveUnusedClassProperties();
        boolean boolean16 = compilerOptions0.inlineLocalFunctions;
        compilerOptions0.setRemoveTryCatchFinally(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap19 = compilerOptions0.getTweakReplacements();
        int int20 = strMap19.size();
        org.junit.Assert.assertNotNull(detailLevel12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test10800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10800");
        com.google.javascript.jscomp.SourceFile sourceFile3 = com.google.javascript.jscomp.SourceFile.fromCode("java.io.IOException: ", "PARAM_LIST 0", "/experiment/:");
        com.google.javascript.jscomp.CompilerInput compilerInput4 = new com.google.javascript.jscomp.CompilerInput(sourceFile3);
        boolean boolean5 = sourceFile3.isExtern();
        java.io.Reader reader6 = sourceFile3.getCodeReader();
        org.junit.Assert.assertNotNull(sourceFile3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(reader6);
    }

    @Test
    public void test10801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10801");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        com.google.javascript.rhino.jstype.JSType jSType16 = jSTypeRegistry7.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList20 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20, jSTypeArray19);
        com.google.javascript.rhino.Node node22 = jSTypeRegistry18.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList20);
        com.google.javascript.rhino.jstype.JSType jSType27 = jSTypeRegistry18.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] { jSType27 };
        com.google.javascript.rhino.jstype.FunctionType functionType29 = jSTypeRegistry1.createConstructorTypeWithVarArgs(jSType16, jSTypeArray28);
        com.google.javascript.rhino.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry32 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter31);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray33 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList34 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList34, jSTypeArray33);
        com.google.javascript.rhino.Node node36 = jSTypeRegistry32.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList34);
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        com.google.javascript.rhino.jstype.JSType jSType47 = jSTypeRegistry38.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter48 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry49 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray50 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList51 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList51, jSTypeArray50);
        com.google.javascript.rhino.Node node53 = jSTypeRegistry49.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList51);
        com.google.javascript.rhino.jstype.JSType jSType58 = jSTypeRegistry49.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray59 = new com.google.javascript.rhino.jstype.JSType[] { jSType58 };
        com.google.javascript.rhino.jstype.FunctionType functionType60 = jSTypeRegistry32.createConstructorTypeWithVarArgs(jSType47, jSTypeArray59);
        boolean boolean61 = jSTypeRegistry1.declareType("", jSType47);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        jSTypeRegistry64.clearNamedTypes();
        com.google.javascript.rhino.jstype.ObjectType objectType66 = jSTypeRegistry64.createAnonymousObjectType();
        jSTypeRegistry1.registerPropertyOnType("goog.abstractMethod", (com.google.javascript.rhino.jstype.JSType) objectType66);
        boolean boolean69 = jSTypeRegistry1.isForwardDeclaredType("Node tree inequality:\nTree1:\nPARAM_LIST\n\n\nTree2:\nPARAM_LIST\n    PARAM_LIST\n\n\nSubtree1: PARAM_LIST\n\n\nSubtree2: PARAM_LIST\n    PARAM_LIST\n");
        boolean boolean71 = jSTypeRegistry1.hasNamespace("InputId: STRING PARAM_LIST 49");
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSType16);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(jSType27);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertNotNull(functionType29);
        org.junit.Assert.assertNotNull(jSTypeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(jSType47);
        org.junit.Assert.assertNotNull(jSTypeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(jSType58);
        org.junit.Assert.assertNotNull(jSTypeArray59);
        org.junit.Assert.assertNotNull(functionType60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objectType66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test10802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10802");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.JSDocInfo jSDocInfo37 = null;
        node19.setJSDocInfo(jSDocInfo37);
        com.google.javascript.rhino.Node node39 = node19.cloneNode();
        boolean boolean40 = node19.isReturn();
        boolean boolean41 = node19.isName();
        int int42 = node19.getLength();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test10803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10803");
        com.google.javascript.jscomp.Compiler compiler0 = new com.google.javascript.jscomp.Compiler();
        compiler0.disableThreads();
        compiler0.reportCodeChange();
        double double3 = compiler0.getProgress();
        com.google.javascript.jscomp.PassConfig passConfig4 = null;
        // The following exception was thrown during execution in test generation
        try {
            compiler0.setPassConfig(passConfig4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    }

    @Test
    public void test10804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10804");
        com.google.javascript.jscomp.SourceFile sourceFile1 = com.google.javascript.jscomp.SourceFile.fromFile("STRING PARAM_LIST");
        java.lang.String str2 = sourceFile1.getOriginalPath();
        org.junit.Assert.assertNotNull(sourceFile1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "STRING PARAM_LIST" + "'", str2, "STRING PARAM_LIST");
    }

    @Test
    public void test10805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10805");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(true, false);
        boolean boolean7 = file2.setWritable(false);
        boolean boolean8 = file2.canWrite();
        java.net.URI uRI9 = file2.toURI();
        java.lang.String str10 = file2.getCanonicalPath();
        java.io.File file11 = file2.getAbsoluteFile();
        boolean boolean13 = file11.setExecutable(false);
        boolean boolean14 = file11.delete();
        long long15 = file11.getUsableSpace();
        long long16 = file11.lastModified();
        file11.deleteOnExit();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(uRI9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/experiment/:/hi!" + "'", str10, "/experiment/:/hi!");
        org.junit.Assert.assertNotNull(file11);
// flaky:         org.junit.Assert.assertEquals(file11.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file11.toString(), "/experiment/:/hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long15 + "' != '" + 280489099264L + "'", long15 == 280489099264L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test10806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10806");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.setReportPath("java.io.IOException: ");
        boolean boolean4 = compilerOptions0.inlineConstantVars;
        boolean boolean5 = compilerOptions0.deadAssignmentElimination;
        java.util.Set<java.lang.String> strSet6 = compilerOptions0.stripNameSuffixes;
        com.google.javascript.jscomp.SourceMap.Format format7 = compilerOptions0.sourceMapFormat;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(format7);
    }

    @Test
    public void test10807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10807");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        compilerOptions7.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions7.checkGlobalNamesLevel;
        compilerOptions0.setReportMissingOverride(checkLevel15);
        java.util.Set<java.lang.String> strSet17 = compilerOptions0.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel19 = compilerOptions18.checkRequires;
        compilerOptions0.setReportMissingOverride(checkLevel19);
        compilerOptions0.setInlineProperties(false);
        compilerOptions0.setDefineToBooleanLiteral("/", false);
        compilerOptions0.setCheckTypes(false);
        java.lang.String str28 = compilerOptions0.renamePrefixNamespace;
        boolean boolean29 = compilerOptions0.aliasAllStrings;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + checkLevel19 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel19.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test10808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10808");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        jSModule1.removeAll();
        com.google.javascript.jscomp.SourceFile sourceFile4 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput6 = new com.google.javascript.jscomp.CompilerInput(sourceFile4, true);
        com.google.javascript.rhino.InputId inputId8 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput10 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput6, inputId8, true);
        java.lang.String str11 = compilerInput10.toString();
        com.google.javascript.jscomp.SourceFile sourceFile12 = compilerInput10.getSourceFile();
        jSModule1.remove(compilerInput10);
        com.google.javascript.jscomp.CompilerInput compilerInput15 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput10, true);
        com.google.javascript.jscomp.SourceAst sourceAst16 = compilerInput10.getAst();
        compilerInput10.clearAst();
        com.google.javascript.rhino.InputId inputId18 = compilerInput10.getInputId();
        java.lang.String str19 = inputId18.getIdName();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "*global*" + "'", str11, "*global*");
        org.junit.Assert.assertNotNull(sourceFile12);
        org.junit.Assert.assertNotNull(sourceAst16);
        org.junit.Assert.assertNotNull(inputId18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "*global*" + "'", str19, "*global*");
    }

    @Test
    public void test10809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10809");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(true, false);
        long long6 = file2.lastModified();
        boolean boolean7 = file2.mkdir();
        java.lang.String str8 = file2.getCanonicalPath();
        java.io.File file9 = file2.getAbsoluteFile();
        java.lang.String str10 = file9.getPath();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/experiment/:/hi!" + "'", str8, "/experiment/:/hi!");
        org.junit.Assert.assertNotNull(file9);
// flaky:         org.junit.Assert.assertEquals(file9.getParent(), "/experiment/:");
// flaky:         org.junit.Assert.assertEquals(file9.toString(), "/experiment/:/hi!");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/experiment/:/hi!" + "'", str10, "/experiment/:/hi!");
    }

    @Test
    public void test10810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10810");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        boolean boolean5 = compilerOptions0.ideMode;
        compilerOptions0.renamePrefix = "hi!";
        boolean boolean8 = compilerOptions0.inlineConstantVars;
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode10 = null;
        compilerOptions9.setTracerMode(tracerMode10);
        boolean boolean12 = compilerOptions9.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel13 = compilerOptions9.sourceMapDetailLevel;
        compilerOptions9.setColorizeErrorOutput(true);
        compilerOptions9.collapseProperties = false;
        com.google.javascript.jscomp.CheckLevel checkLevel18 = com.google.javascript.jscomp.CheckLevel.WARNING;
        compilerOptions9.setCheckMissingGetCssNameLevel(checkLevel18);
        compilerOptions0.checkProvides = checkLevel18;
        compilerOptions0.markAsCompiled = true;
        compilerOptions0.setLocale("OFF");
        compilerOptions0.optimizeReturns = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel28 = compilerOptions27.checkRequires;
        compilerOptions27.setRewriteNewDateGoogNow(true);
        compilerOptions27.setSyntheticBlockStartMarker("OFF");
        compilerOptions27.setInlineLocalFunctions(true);
        com.google.common.collect.Multimap<com.google.javascript.jscomp.CustomPassExecutionTime, com.google.javascript.jscomp.CompilerPass> customPassExecutionTimeMultimap35 = compilerOptions27.customPasses;
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions36.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy39 = compilerOptions36.propertyRenaming;
        java.lang.String[] strArray42 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        compilerOptions36.setStripTypes((java.util.Set<java.lang.String>) strSet43);
        boolean boolean46 = compilerOptions36.inlineLocalFunctions;
        compilerOptions36.removeDeadCode = true;
        compilerOptions36.jqueryPass = true;
        compilerOptions36.setReportPath("PARAM_LIST\n");
        com.google.javascript.jscomp.CompilerOptions compilerOptions53 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str54 = compilerOptions53.syntheticBlockStartMarker;
        compilerOptions53.setMarkNoSideEffectCalls(false);
        com.google.javascript.jscomp.CheckLevel checkLevel57 = compilerOptions53.checkGlobalThisLevel;
        compilerOptions36.setCheckRequires(checkLevel57);
        compilerOptions27.setCheckMissingReturn(checkLevel57);
        compilerOptions0.setCheckUnreachableCode(checkLevel57);
        boolean boolean61 = compilerOptions0.collapseVariableDeclarations;
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(detailLevel13);
        org.junit.Assert.assertTrue("'" + checkLevel18 + "' != '" + com.google.javascript.jscomp.CheckLevel.WARNING + "'", checkLevel18.equals(com.google.javascript.jscomp.CheckLevel.WARNING));
        org.junit.Assert.assertTrue("'" + checkLevel28 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel28.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(customPassExecutionTimeMultimap35);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy39 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy39.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + checkLevel57 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel57.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test10811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10811");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setProtectHiddenSideEffects(true);
        compilerOptions0.moveFunctionDeclarations = true;
        java.lang.String str7 = compilerOptions0.aliasStringsBlacklist;
        compilerOptions0.renamePrefix = "PARAM_LIST [var_args_name: 1] [opt_arg: 1]";
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test10812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10812");
        java.io.InputStream inputStream2 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.jscomp.SourceFile sourceFile3 = com.google.javascript.jscomp.SourceFile.fromInputStream("STRING java.io.IOException: ", "java.io.IOException: OFF", inputStream2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10813");
        java.nio.charset.Charset charset1 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str2 = charset1.name();
        com.google.javascript.jscomp.SourceFile sourceFile3 = com.google.javascript.jscomp.SourceFile.fromFile("OFF", charset1);
        java.lang.String str4 = charset1.displayName();
        java.lang.String str5 = charset1.toString();
        org.junit.Assert.assertNotNull(charset1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "US-ASCII" + "'", str2, "US-ASCII");
        org.junit.Assert.assertNotNull(sourceFile3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "US-ASCII" + "'", str4, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "US-ASCII" + "'", str5, "US-ASCII");
    }

    @Test
    public void test10814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10814");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        compilerOptions7.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions7.checkGlobalNamesLevel;
        compilerOptions0.setReportMissingOverride(checkLevel15);
        java.util.Set<java.lang.String> strSet17 = compilerOptions0.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode19 = null;
        compilerOptions18.setTracerMode(tracerMode19);
        boolean boolean21 = compilerOptions18.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel22 = compilerOptions18.sourceMapDetailLevel;
        compilerOptions18.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet25 = compilerOptions18.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile27 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput29 = new com.google.javascript.jscomp.CompilerInput(sourceFile27, true);
        com.google.javascript.rhino.InputId inputId31 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput33 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput29, inputId31, true);
        java.lang.String str34 = compilerInput33.toString();
        boolean boolean35 = strSet25.contains((java.lang.Object) compilerInput33);
        compilerOptions0.stripTypes = strSet25;
        compilerOptions0.setMarkAsCompiled(true);
        java.util.Set<java.lang.String> strSet39 = compilerOptions0.stripTypePrefixes;
        compilerOptions0.setTightenTypes(false);
        compilerOptions0.setRecordFunctionInformation(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions44 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions44.crossModuleMethodMotion = true;
        compilerOptions44.optimizeParameters = true;
        compilerOptions44.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel52 = compilerOptions44.checkGlobalNamesLevel;
        compilerOptions44.setCheckMissingGetCssNameBlacklist("");
        boolean boolean55 = compilerOptions44.removeTryCatchFinally;
        compilerOptions44.setMarkAsCompiled(true);
        compilerOptions44.inlineGetters = false;
        boolean boolean60 = compilerOptions44.inlineFunctions;
        com.google.javascript.jscomp.CompilerOptions compilerOptions61 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions61.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions61.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode67 = null;
        compilerOptions61.setLanguageOut(languageMode67);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy69 = null;
        compilerOptions61.variableRenaming = variableRenamingPolicy69;
        com.google.javascript.jscomp.CheckLevel checkLevel71 = compilerOptions61.checkUnreachableCode;
        compilerOptions44.setCheckProvides(checkLevel71);
        compilerOptions0.checkRequires = checkLevel71;
        com.google.javascript.jscomp.CheckLevel checkLevel74 = compilerOptions0.checkMissingReturn;
        compilerOptions0.setGatherCssNames(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(detailLevel22);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "*global*" + "'", str34, "*global*");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + checkLevel52 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel52.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + checkLevel71 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel71.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel74 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel74.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10815");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setOutputJsStringUsage(true);
        java.util.Set<java.lang.String> strSet4 = compilerOptions0.stripNamePrefixes;
        boolean boolean5 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.crossModuleMethodMotion = false;
        compilerOptions0.setInlineVariables(true);
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test10816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10816");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.setSyntheticBlockStartMarker("OFF");
        compilerOptions0.setChainCalls(false);
        compilerOptions0.setTweakToBooleanLiteral("Unversioned directory", false);
        boolean boolean11 = compilerOptions0.disambiguateProperties;
        compilerOptions0.setCheckControlStructures(false);
        compilerOptions0.optimizeArgumentsArray = true;
        compilerOptions0.setCollapseAnonymousFunctions(false);
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test10817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10817");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        compilerOptions0.removeUnusedVars = false;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = compilerOptions0.variableRenaming;
        compilerOptions0.setReserveRawExports(false);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy8 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.OFF + "'", variableRenamingPolicy8.equals(com.google.javascript.jscomp.VariableRenamingPolicy.OFF));
    }

    @Test
    public void test10818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10818");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode6 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions0.setTracer(tracerMode6);
        compilerOptions0.setSyntheticBlockStartMarker("");
        compilerOptions0.setAliasStringsBlacklist("InputId: *global*");
        compilerOptions0.setLineBreak(false);
        compilerOptions0.setRenamePrefixNamespace("Node tree inequality:\nTree1:\nTHIS\n    STRING java.io.IOException:  43\n    PARAM_LIST [var_args_name: 1] [opt_arg: 1]\n\n\nTree2:\nSTRING \n\n\nSubtree1: THIS\n    STRING java.io.IOException:  43\n    PARAM_LIST [var_args_name: 1] [opt_arg: 1]\n\n\nSubtree2: STRING \n");
        com.google.javascript.jscomp.CompilerOptions compilerOptions16 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode17 = null;
        compilerOptions16.setTracerMode(tracerMode17);
        boolean boolean19 = compilerOptions16.coalesceVariableNames;
        boolean boolean20 = compilerOptions16.removeUnusedLocalVars;
        boolean boolean21 = compilerOptions16.lineBreak;
        boolean boolean22 = compilerOptions16.optimizeParameters;
        compilerOptions16.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions16.checkRequires;
        boolean boolean26 = compilerOptions16.prettyPrint;
        java.lang.String str27 = compilerOptions16.renamePrefix;
        com.google.javascript.jscomp.CheckLevel checkLevel28 = compilerOptions16.checkGlobalNamesLevel;
        compilerOptions0.setCheckMissingGetCssNameLevel(checkLevel28);
        org.junit.Assert.assertTrue("'" + tracerMode6 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode6.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + checkLevel28 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel28.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10819");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        java.lang.Object obj6 = null;
        com.google.javascript.rhino.Node node7 = strMap4.get(obj6);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.Node>> strEntrySet8 = strMap4.entrySet();
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        compilerOptions9.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy14 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions15 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions15.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy18 = compilerOptions15.propertyRenaming;
        compilerOptions9.setRenamingPolicy(variableRenamingPolicy14, propertyRenamingPolicy18);
        boolean boolean20 = compilerOptions9.checkControlStructures;
        boolean boolean21 = compilerOptions9.crossModuleCodeMotion;
        compilerOptions9.setCheckMissingGetCssNameBlacklist(":/hi!");
        compilerOptions9.setDefineToStringLiteral("JSC_OPTIMIZE_LOOP_ERROR", "java.io.IOException: ");
        java.io.PrintStream printStream27 = null;
        com.google.javascript.jscomp.Compiler compiler28 = new com.google.javascript.jscomp.Compiler(printStream27);
        java.lang.String str29 = compiler28.getAstDotGraph();
        double double30 = compiler28.getProgress();
        com.google.javascript.jscomp.Scope scope31 = compiler28.getTopScope();
        boolean boolean32 = strMap4.remove((java.lang.Object) compilerOptions9, (java.lang.Object) compiler28);
        compilerOptions9.inlineFunctions = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions35 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str36 = compilerOptions35.syntheticBlockStartMarker;
        compilerOptions35.labelRenaming = true;
        boolean boolean39 = compilerOptions35.inlineLocalFunctions;
        com.google.javascript.jscomp.CompilerOptions compilerOptions40 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions40.crossModuleMethodMotion = true;
        compilerOptions40.skipAllCompilerPasses();
        boolean boolean44 = compilerOptions40.flowSensitiveInlineVariables;
        java.lang.String[] strArray54 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet55 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet55, strArray54);
        compilerOptions40.stripTypes = strSet55;
        compilerOptions35.setStripNameSuffixes((java.util.Set<java.lang.String>) strSet55);
        boolean boolean59 = compilerOptions35.ideMode;
        compilerOptions35.setLooseTypes(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions62 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions62.crossModuleMethodMotion = true;
        compilerOptions62.setProtectHiddenSideEffects(true);
        boolean boolean67 = compilerOptions62.isExternExportsEnabled();
        boolean boolean68 = compilerOptions62.recordFunctionInformation;
        compilerOptions62.setInputDelimiter("FINEST");
        com.google.javascript.jscomp.CompilerOptions compilerOptions71 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions71.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions71.setTweakToDoubleLiteral("", (double) (short) 1);
        compilerOptions71.setCrossModuleCodeMotion(false);
        compilerOptions71.inputDelimiter = "STRING PARAM_LIST 49";
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy81 = compilerOptions71.variableRenaming;
        compilerOptions62.setVariableRenaming(variableRenamingPolicy81);
        compilerOptions35.setVariableRenaming(variableRenamingPolicy81);
        com.google.javascript.jscomp.CompilerOptions compilerOptions84 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions84.crossModuleMethodMotion = true;
        compilerOptions84.optimizeParameters = true;
        compilerOptions84.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel92 = compilerOptions84.checkGlobalNamesLevel;
        boolean boolean93 = compilerOptions84.removeUnusedPrototypeProperties;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy94 = com.google.javascript.jscomp.PropertyRenamingPolicy.ALL_UNQUOTED;
        compilerOptions84.setPropertyRenaming(propertyRenamingPolicy94);
        compilerOptions9.setRenamingPolicy(variableRenamingPolicy81, propertyRenamingPolicy94);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(strEntrySet8);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy18 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy18.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(scope31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy81 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.OFF + "'", variableRenamingPolicy81.equals(com.google.javascript.jscomp.VariableRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel92 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel92.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy94 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.ALL_UNQUOTED + "'", propertyRenamingPolicy94.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.ALL_UNQUOTED));
    }

    @Test
    public void test10820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10820");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        compilerOptions0.setDefineToBooleanLiteral("", true);
        java.lang.String str12 = compilerOptions0.renamePrefixNamespace;
        java.util.Set<java.lang.String> strSet13 = compilerOptions0.stripNamePrefixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        java.lang.String[] strArray20 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        compilerOptions14.setStripTypes((java.util.Set<java.lang.String>) strSet21);
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode25 = null;
        compilerOptions24.setTracerMode(tracerMode25);
        boolean boolean27 = compilerOptions24.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel28 = compilerOptions24.sourceMapDetailLevel;
        compilerOptions24.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions31.crossModuleMethodMotion = true;
        compilerOptions31.optimizeParameters = true;
        compilerOptions31.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel39 = compilerOptions31.checkGlobalNamesLevel;
        compilerOptions24.setReportMissingOverride(checkLevel39);
        compilerOptions14.setCheckUnreachableCode(checkLevel39);
        compilerOptions14.syntheticBlockStartMarker = "*global*";
        compilerOptions14.prettyPrint = false;
        boolean boolean46 = compilerOptions14.aliasAllStrings;
        com.google.javascript.jscomp.CompilerOptions.Reach reach47 = com.google.javascript.jscomp.CompilerOptions.Reach.NONE;
        compilerOptions14.setInlineVariables(reach47);
        compilerOptions0.setRemoveUnusedVariables(reach47);
        com.google.javascript.jscomp.SourceMap.LocationMapping locationMapping52 = new com.google.javascript.jscomp.SourceMap.LocationMapping("PARAM_LIST", "STRING PARAM_LIST 49");
        com.google.javascript.jscomp.SourceMap.LocationMapping[] locationMappingArray53 = new com.google.javascript.jscomp.SourceMap.LocationMapping[] { locationMapping52 };
        java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping> locationMappingList54 = new java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList54, locationMappingArray53);
        compilerOptions0.sourceMapLocationMappings = locationMappingList54;
        compilerOptions0.setComputeFunctionSideEffects(false);
        boolean boolean59 = compilerOptions0.collapseProperties;
        compilerOptions0.deadAssignmentElimination = false;
        com.google.javascript.jscomp.CheckLevel checkLevel62 = compilerOptions0.brokenClosureRequiresLevel;
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(detailLevel28);
        org.junit.Assert.assertTrue("'" + checkLevel39 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel39.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + reach47 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.NONE + "'", reach47.equals(com.google.javascript.jscomp.CompilerOptions.Reach.NONE));
        org.junit.Assert.assertNotNull(locationMappingArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + checkLevel62 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel62.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
    }

    @Test
    public void test10821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10821");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.generatePseudoNames = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy9 = com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED;
        compilerOptions0.setVariableRenaming(variableRenamingPolicy9);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy11 = compilerOptions0.variableRenaming;
        boolean boolean12 = compilerOptions0.exportTestFunctions;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED + "'", variableRenamingPolicy9.equals(com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED));
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy11 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED + "'", variableRenamingPolicy11.equals(com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test10822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10822");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.Node node37 = node6.removeFirstChild();
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.Node node44 = jSTypeRegistry40.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        node44.addChildrenToBack(node50);
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList55 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55, jSTypeArray54);
        com.google.javascript.rhino.Node node57 = jSTypeRegistry53.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList55);
        boolean boolean58 = node57.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry60 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        com.google.javascript.rhino.Node node64 = jSTypeRegistry60.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        boolean boolean65 = node64.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter66 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry67 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter66);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.Node node71 = jSTypeRegistry67.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        com.google.javascript.rhino.Node node74 = new com.google.javascript.rhino.Node((int) (short) 0, node44, node57, node64, node71, 0, 49);
        boolean boolean75 = node44.isDo();
        boolean boolean76 = node44.isWhile();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable77 = node44.children();
        java.lang.String str78 = node44.getQualifiedName();
        boolean boolean79 = node44.isString();
        com.google.javascript.rhino.Node node80 = node6.useSourceInfoIfMissingFromForTree(node44);
        com.google.javascript.rhino.Node node81 = node6.getLastChild();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = node81.isIn();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(nodeIterable77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertNull(node81);
    }

    @Test
    public void test10823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10823");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        compilerOptions0.setGroupVariableDeclarations(false);
        compilerOptions0.setCommonJSModulePathPrefix("java.io.IOException");
        compilerOptions0.setTransformAMDToCJSModules(true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
    }

    @Test
    public void test10824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10824");
        com.google.javascript.rhino.Node node1 = new com.google.javascript.rhino.Node(38);
        com.google.javascript.rhino.InputId inputId2 = node1.getInputId();
        boolean boolean3 = node1.isAssign();
        org.junit.Assert.assertNull(inputId2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test10825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10825");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions21.crossModuleMethodMotion = true;
        compilerOptions21.skipAllCompilerPasses();
        boolean boolean25 = compilerOptions21.flowSensitiveInlineVariables;
        java.lang.String[] strArray35 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet36 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet36, strArray35);
        compilerOptions21.stripTypes = strSet36;
        compilerOptions0.stripNameSuffixes = strSet36;
        compilerOptions0.setExtractPrototypeMemberDeclarations(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions42 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions42.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy45 = compilerOptions42.propertyRenaming;
        java.lang.String[] strArray48 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet49 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet49, strArray48);
        compilerOptions42.setStripTypes((java.util.Set<java.lang.String>) strSet49);
        com.google.javascript.jscomp.CompilerOptions compilerOptions52 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode53 = null;
        compilerOptions52.setTracerMode(tracerMode53);
        boolean boolean55 = compilerOptions52.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel56 = compilerOptions52.sourceMapDetailLevel;
        compilerOptions52.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions59 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions59.crossModuleMethodMotion = true;
        compilerOptions59.optimizeParameters = true;
        compilerOptions59.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel67 = compilerOptions59.checkGlobalNamesLevel;
        compilerOptions52.setReportMissingOverride(checkLevel67);
        compilerOptions42.setCheckUnreachableCode(checkLevel67);
        byte[] byteArray74 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 1 };
        compilerOptions42.inputVariableMapSerialized = byteArray74;
        compilerOptions0.inputPropertyMapSerialized = byteArray74;
        boolean boolean77 = compilerOptions0.optimizeParameters;
        compilerOptions0.renamePrefix = "OFF";
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy45 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy45.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(detailLevel56);
        org.junit.Assert.assertTrue("'" + checkLevel67 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel67.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[0, 1, 10, 1]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test10826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10826");
        java.util.logging.Level level0 = java.util.logging.Level.SEVERE;
        java.lang.Object obj1 = null;
        boolean boolean2 = level0.equals(obj1);
        java.lang.String str3 = level0.getName();
        java.lang.String str4 = level0.getLocalizedName();
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode6 = null;
        compilerOptions5.setTracerMode(tracerMode6);
        boolean boolean8 = compilerOptions5.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel9 = compilerOptions5.sourceMapDetailLevel;
        compilerOptions5.setColorizeErrorOutput(true);
        compilerOptions5.collapseProperties = false;
        compilerOptions5.setSkipAllPasses(false);
        compilerOptions5.setPropertyAffinity(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode19 = null;
        compilerOptions18.setTracerMode(tracerMode19);
        boolean boolean21 = compilerOptions18.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel22 = compilerOptions18.sourceMapDetailLevel;
        compilerOptions18.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions25 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions25.crossModuleMethodMotion = true;
        compilerOptions25.optimizeParameters = true;
        compilerOptions25.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel33 = compilerOptions25.checkGlobalNamesLevel;
        compilerOptions18.setReportMissingOverride(checkLevel33);
        compilerOptions5.setCheckGlobalNamesLevel(checkLevel33);
        boolean boolean36 = compilerOptions5.ambiguateProperties;
        compilerOptions5.setDeadAssignmentElimination(true);
        boolean boolean39 = compilerOptions5.devirtualizePrototypeMethods;
        compilerOptions5.setAppNameStr("STRING PARAM_LIST");
        compilerOptions5.setTransformAMDToCJSModules(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions44 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions44.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel47 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions44.setSourceMapDetailLevel(detailLevel47);
        com.google.javascript.jscomp.CompilerOptions compilerOptions49 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode50 = null;
        compilerOptions49.setTracerMode(tracerMode50);
        boolean boolean52 = compilerOptions49.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel53 = compilerOptions49.sourceMapDetailLevel;
        compilerOptions49.setColorizeErrorOutput(true);
        compilerOptions49.collapseProperties = false;
        compilerOptions49.setSkipAllPasses(false);
        com.google.javascript.jscomp.CompilerOptions.Reach reach60 = com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY;
        compilerOptions49.setInlineFunctions(reach60);
        compilerOptions44.setInlineVariables(reach60);
        compilerOptions5.setInlineFunctions(reach60);
        boolean boolean64 = level0.equals((java.lang.Object) compilerOptions5);
        java.lang.String str65 = level0.getLocalizedName();
        org.junit.Assert.assertNotNull(level0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "SEVERE" + "'", str3, "SEVERE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SEVERE" + "'", str4, "SEVERE");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(detailLevel9);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(detailLevel22);
        org.junit.Assert.assertTrue("'" + checkLevel33 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel33.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(detailLevel47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(detailLevel53);
        org.junit.Assert.assertTrue("'" + reach60 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY + "'", reach60.equals(com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "SEVERE" + "'", str65, "SEVERE");
    }

    @Test
    public void test10827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10827");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy8 = compilerOptions5.propertyRenaming;
        java.lang.String[] strArray11 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        compilerOptions5.setStripTypes((java.util.Set<java.lang.String>) strSet12);
        compilerOptions0.stripNamePrefixes = strSet12;
        compilerOptions0.checkTypes = false;
        compilerOptions0.setSyntheticBlockEndMarker("");
        compilerOptions0.setOptimizeReturns(true);
        com.google.javascript.jscomp.CheckLevel checkLevel22 = compilerOptions0.checkUnreachableCode;
        boolean boolean23 = compilerOptions0.removeTryCatchFinally;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy8 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy8.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + checkLevel22 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel22.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test10828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10828");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        compilerOptions7.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions7.checkGlobalNamesLevel;
        compilerOptions0.setReportMissingOverride(checkLevel15);
        java.util.Set<java.lang.String> strSet17 = compilerOptions0.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode19 = null;
        compilerOptions18.setTracerMode(tracerMode19);
        boolean boolean21 = compilerOptions18.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel22 = compilerOptions18.sourceMapDetailLevel;
        compilerOptions18.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet25 = compilerOptions18.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile27 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput29 = new com.google.javascript.jscomp.CompilerInput(sourceFile27, true);
        com.google.javascript.rhino.InputId inputId31 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput33 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput29, inputId31, true);
        java.lang.String str34 = compilerInput33.toString();
        boolean boolean35 = strSet25.contains((java.lang.Object) compilerInput33);
        compilerOptions0.stripTypes = strSet25;
        compilerOptions0.setMarkAsCompiled(true);
        java.util.Set<java.lang.String> strSet39 = compilerOptions0.stripTypePrefixes;
        compilerOptions0.setPreferLineBreakAtEndOfFile(true);
        boolean boolean42 = compilerOptions0.collapseVariableDeclarations;
        compilerOptions0.disambiguateProperties = true;
        compilerOptions0.setCheckSymbols(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(detailLevel22);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "*global*" + "'", str34, "*global*");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test10829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10829");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        jSTypeRegistry1.forwardDeclareType("PARAM_LIST");
        jSTypeRegistry1.incrementGeneration();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry14.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream19 = jSTypeList16.parallelStream();
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean21 = compilerOptions20.moveFunctionDeclarations;
        compilerOptions20.crossModuleCodeMotion = true;
        compilerOptions20.setManageClosureDependencies(false);
        boolean boolean26 = compilerOptions20.inlineLocalFunctions;
        compilerOptions20.disableRuntimeTypeCheck();
        boolean boolean28 = jSTypeList16.equals((java.lang.Object) compilerOptions20);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream29 = jSTypeList16.parallelStream();
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator30 = jSTypeList16.spliterator();
        com.google.javascript.rhino.Node node31 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        java.util.Iterator<com.google.javascript.rhino.jstype.JSType> jSTypeItor32 = jSTypeList16.iterator();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(jSTypeStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeStream29);
        org.junit.Assert.assertNotNull(jSTypeSpliterator30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(jSTypeItor32);
    }

    @Test
    public void test10830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10830");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.Node node37 = node6.removeFirstChild();
        java.lang.String str41 = node37.toString(true, true, false);
        com.google.javascript.rhino.ErrorReporter errorReporter42 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry43 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter42);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray44 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList45 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList45, jSTypeArray44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        boolean boolean50 = jSTypeList45.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        com.google.javascript.rhino.Node node51 = jSTypeRegistry43.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList45);
        boolean boolean52 = node51.isVarArgs();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable53 = node51.siblings();
        com.google.javascript.rhino.Node node54 = node51.cloneTree();
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder55 = node51.new FileLevelJsDocBuilder();
        boolean boolean56 = node51.isRegExp();
        com.google.javascript.rhino.Node node57 = node37.copyInformationFrom(node51);
        boolean boolean58 = node57.isAnd();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PARAM_LIST" + "'", str41, "PARAM_LIST");
        org.junit.Assert.assertNotNull(jSTypeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(nodeIterable53);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test10831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10831");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        jSTypeRegistry1.setLastGeneration(false);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable13 = jSTypeRegistry1.getEachReferenceTypeWithProperty("*global*.  at *global* line (unknown line) : (unknown column)");
        jSTypeRegistry1.resetForTypeCheck();
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray17 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList18 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList18, jSTypeArray17);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray20 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList21 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList21, jSTypeArray20);
        boolean boolean23 = jSTypeList18.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry16.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList18);
        jSTypeRegistry16.setLastGeneration(false);
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry28 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27);
        com.google.javascript.rhino.jstype.ObjectType objectType29 = jSTypeRegistry28.createAnonymousObjectType();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        boolean boolean38 = jSTypeList33.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        com.google.javascript.rhino.Node node39 = jSTypeRegistry31.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        jSTypeRegistry31.setLastGeneration(false);
        com.google.javascript.rhino.jstype.JSType jSType46 = jSTypeRegistry31.createNamedType("java.io.IOException: java.io.IOException: ", "", 47, (int) (short) 1);
        jSTypeRegistry31.resetForTypeCheck();
        com.google.javascript.rhino.jstype.JSType jSType48 = null;
        com.google.javascript.rhino.ErrorReporter errorReporter50 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry51 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter50);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray52 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList53 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList53, jSTypeArray52);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray55 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList56 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56, jSTypeArray55);
        boolean boolean58 = jSTypeList53.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        com.google.javascript.rhino.Node node59 = jSTypeRegistry51.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList53);
        jSTypeRegistry51.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable63 = jSTypeRegistry51.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType68 = jSTypeRegistry51.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter69 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry70 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter69);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray71 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList72 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72, jSTypeArray71);
        com.google.javascript.rhino.Node node74 = jSTypeRegistry70.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream75 = jSTypeList72.parallelStream();
        com.google.javascript.rhino.Node node76 = jSTypeRegistry51.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray77 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.JSType jSType78 = jSTypeRegistry51.createUnionType(jSTypeArray77);
        com.google.javascript.rhino.jstype.FunctionType functionType79 = jSTypeRegistry31.createFunctionType(jSType48, false, jSTypeArray77);
        com.google.javascript.rhino.jstype.FunctionType functionType80 = jSTypeRegistry16.createConstructorTypeWithVarArgs((com.google.javascript.rhino.jstype.JSType) objectType29, jSTypeArray77);
        com.google.javascript.rhino.Node node81 = jSTypeRegistry1.createParameters(jSTypeArray77);
        jSTypeRegistry1.identifyNonNullableName("/experiment/:");
        com.google.javascript.rhino.ErrorReporter errorReporter84 = jSTypeRegistry1.getErrorReporter();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(objectTypeIterable13);
        org.junit.Assert.assertNotNull(jSTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(jSTypeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(objectType29);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(jSType46);
        org.junit.Assert.assertNotNull(jSTypeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(jSTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(jSTypeIterable63);
        org.junit.Assert.assertNotNull(jSType68);
        org.junit.Assert.assertNotNull(jSTypeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNotNull(jSTypeStream75);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNotNull(jSTypeArray77);
        org.junit.Assert.assertNotNull(jSType78);
        org.junit.Assert.assertNotNull(functionType79);
        org.junit.Assert.assertNotNull(functionType80);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNull(errorReporter84);
    }

    @Test
    public void test10832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10832");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        boolean boolean37 = node26.isTrue();
        boolean boolean38 = node26.isTry();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test10833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10833");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        compilerOptions0.setDefineToBooleanLiteral("", true);
        java.lang.String str12 = compilerOptions0.renamePrefixNamespace;
        java.util.Set<java.lang.String> strSet13 = compilerOptions0.stripNamePrefixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        java.lang.String[] strArray20 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        compilerOptions14.setStripTypes((java.util.Set<java.lang.String>) strSet21);
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode25 = null;
        compilerOptions24.setTracerMode(tracerMode25);
        boolean boolean27 = compilerOptions24.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel28 = compilerOptions24.sourceMapDetailLevel;
        compilerOptions24.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions31.crossModuleMethodMotion = true;
        compilerOptions31.optimizeParameters = true;
        compilerOptions31.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel39 = compilerOptions31.checkGlobalNamesLevel;
        compilerOptions24.setReportMissingOverride(checkLevel39);
        compilerOptions14.setCheckUnreachableCode(checkLevel39);
        compilerOptions14.syntheticBlockStartMarker = "*global*";
        compilerOptions14.prettyPrint = false;
        boolean boolean46 = compilerOptions14.aliasAllStrings;
        com.google.javascript.jscomp.CompilerOptions.Reach reach47 = com.google.javascript.jscomp.CompilerOptions.Reach.NONE;
        compilerOptions14.setInlineVariables(reach47);
        compilerOptions0.setRemoveUnusedVariables(reach47);
        com.google.javascript.jscomp.SourceMap.LocationMapping locationMapping52 = new com.google.javascript.jscomp.SourceMap.LocationMapping("PARAM_LIST", "STRING PARAM_LIST 49");
        com.google.javascript.jscomp.SourceMap.LocationMapping[] locationMappingArray53 = new com.google.javascript.jscomp.SourceMap.LocationMapping[] { locationMapping52 };
        java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping> locationMappingList54 = new java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList54, locationMappingArray53);
        compilerOptions0.sourceMapLocationMappings = locationMappingList54;
        compilerOptions0.setAppNameStr("TYPEOF : 44\n");
        compilerOptions0.setCoalesceVariableNames(false);
        compilerOptions0.setSummaryDetailLevel((int) ':');
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(detailLevel28);
        org.junit.Assert.assertTrue("'" + checkLevel39 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel39.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + reach47 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.NONE + "'", reach47.equals(com.google.javascript.jscomp.CompilerOptions.Reach.NONE));
        org.junit.Assert.assertNotNull(locationMappingArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test10834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10834");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        boolean boolean5 = compilerOptions0.ideMode;
        compilerOptions0.removeUnusedLocalVars = true;
        boolean boolean8 = compilerOptions0.inlineConstantVars;
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test10835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10835");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString((int) ' ', "OFF");
        boolean boolean3 = node2.hasOneChild();
        com.google.javascript.rhino.InputId inputId4 = node2.getInputId();
        boolean boolean5 = node2.isInc();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(inputId4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test10836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10836");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup0 = com.google.javascript.jscomp.DiagnosticGroups.VISIBILITY;
        com.google.javascript.jscomp.DiagnosticGroups.ES5_STRICT = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.CHECK_REGEXP = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.DUPLICATE_VARS = diagnosticGroup0;
        com.google.javascript.jscomp.DiagnosticGroups.TWEAKS = diagnosticGroup0;
// flaky:         org.junit.Assert.assertNull(diagnosticGroup0);
    }

    @Test
    public void test10837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10837");
        java.io.PrintStream printStream1 = new java.io.PrintStream("DiagnosticGroup<checkProvides>");
        printStream1.println((float) 280490655744L);
    }

    @Test
    public void test10838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10838");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("");
        int int2 = stats1.runs;
        int int3 = stats1.gzDiff;
        int int4 = stats1.gzDiff;
        long long5 = stats1.runtime;
        stats1.diff = ' ';
        int int8 = stats1.changes;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test10839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10839");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newString(":", (int) (short) -1, 500);
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec6 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("*global*");
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.Node node13 = jSTypeRegistry9.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList11);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        node13.addChildrenToBack(node19);
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        boolean boolean34 = node33.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter35 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter35);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.Node node40 = jSTypeRegistry36.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        com.google.javascript.rhino.Node node43 = new com.google.javascript.rhino.Node((int) (short) 0, node13, node26, node33, node40, 0, 49);
        boolean boolean44 = node33.isInc();
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable52 = jSTypeRegistry46.getTypesWithProperty("");
        com.google.javascript.rhino.jstype.JSType jSType53 = assertionFunctionSpec6.getAssertedType(node33, jSTypeRegistry46);
        com.google.javascript.rhino.Node node56 = com.google.javascript.rhino.Node.newString((int) (short) 10, ":/hi!");
        int int57 = node56.getLineno();
        boolean boolean58 = node56.isThrow();
        com.google.javascript.rhino.Node node59 = assertionFunctionSpec6.getAssertedParam(node56);
        boolean boolean60 = node59.isWith();
        com.google.javascript.rhino.Node node64 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        java.lang.String str65 = node64.toString();
        boolean boolean66 = node64.isThis();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newString("hi!");
        boolean boolean69 = node68.isUnscopedQualifiedName();
        boolean boolean70 = node68.isTry();
        com.google.javascript.rhino.Node node71 = new com.google.javascript.rhino.Node(52, node59, node64, node68);
        com.google.javascript.rhino.Node node72 = node3.useSourceInfoIfMissingFrom(node64);
        boolean boolean74 = node72.getBooleanProp(6);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSTypeIterable52);
        org.junit.Assert.assertNull(jSType53);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "NUMBER -1.0" + "'", str65, "NUMBER -1.0");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test10840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10840");
        com.google.javascript.rhino.Node node2 = new com.google.javascript.rhino.Node((int) (short) 1);
        boolean boolean3 = node2.isTry();
        java.lang.String str4 = node2.getQualifiedName();
        com.google.javascript.rhino.Node node9 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean14 = node13.isTry();
        java.lang.String str15 = node13.toString();
        boolean boolean16 = node9.hasChild(node13);
        boolean boolean17 = node9.isFromExterns();
        com.google.javascript.rhino.ErrorReporter errorReporter18 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter18);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray20 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList21 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList21, jSTypeArray20);
        com.google.javascript.rhino.Node node23 = jSTypeRegistry19.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList21);
        boolean boolean24 = node23.isIn();
        boolean boolean25 = node23.isVoid();
        node23.setOptionalArg(true);
        node23.setVarArgs(true);
        com.google.javascript.rhino.JSDocInfo jSDocInfo30 = node23.getJSDocInfo();
        com.google.javascript.rhino.Node node31 = new com.google.javascript.rhino.Node(42, node9, node23);
        com.google.javascript.rhino.Node node34 = com.google.javascript.rhino.Node.newString((int) ' ', "OFF");
        boolean boolean35 = node34.hasOneChild();
        boolean boolean36 = node34.isExprResult();
        com.google.javascript.rhino.Node node37 = new com.google.javascript.rhino.Node(12, node2, node31, node34);
        com.google.javascript.jscomp.SourceFile.Builder builder38 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile42 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int44 = sourceFile42.getLineOfOffset((int) (short) 1);
        java.io.Reader reader45 = sourceFile42.getCodeReader();
        int int46 = reader45.read();
        com.google.javascript.jscomp.SourceFile sourceFile47 = builder38.buildFromReader("*global*", reader45);
        node2.setStaticSourceFile((com.google.javascript.rhino.jstype.StaticSourceFile) sourceFile47);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "STRING PARAM_LIST 49" + "'", str15, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(jSTypeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(jSDocInfo30);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(sourceFile42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(reader45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(sourceFile47);
    }

    @Test
    public void test10841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10841");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageOut();
        compilerOptions0.setFoldConstants(true);
        compilerOptions0.optimizeArgumentsArray = true;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel10 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel11 = compilerOptions0.checkGlobalNamesLevel;
        boolean boolean12 = compilerOptions0.smartNameRemoval;
        compilerOptions0.setMoveFunctionDeclarations(false);
        boolean boolean15 = compilerOptions0.smartNameRemoval;
        com.google.javascript.jscomp.CompilerOptions compilerOptions16 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode17 = null;
        compilerOptions16.setTracerMode(tracerMode17);
        boolean boolean19 = compilerOptions16.coalesceVariableNames;
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode23 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions20.setTracer(tracerMode23);
        compilerOptions20.setFoldConstants(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode28 = null;
        compilerOptions27.setTracerMode(tracerMode28);
        boolean boolean30 = compilerOptions27.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel31 = compilerOptions27.sourceMapDetailLevel;
        compilerOptions27.setColorizeErrorOutput(true);
        compilerOptions27.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions36.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy39 = compilerOptions36.propertyRenaming;
        compilerOptions27.propertyRenaming = propertyRenamingPolicy39;
        com.google.javascript.jscomp.CheckLevel checkLevel41 = compilerOptions27.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel42 = compilerOptions27.checkRequires;
        compilerOptions20.reportMissingOverride = checkLevel42;
        compilerOptions16.setAggressiveVarCheck(checkLevel42);
        compilerOptions16.setReplaceIdGenerators(true);
        compilerOptions16.setOptimizeParameters(false);
        boolean boolean49 = compilerOptions16.inlineVariables;
        com.google.javascript.jscomp.CheckLevel checkLevel50 = compilerOptions16.checkGlobalThisLevel;
        compilerOptions0.brokenClosureRequiresLevel = checkLevel50;
        compilerOptions0.inputDelimiter = "java.io.IOException: ";
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(languageMode5);
        org.junit.Assert.assertNotNull(detailLevel10);
        org.junit.Assert.assertTrue("'" + checkLevel11 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel11.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + tracerMode23 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode23.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(detailLevel31);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy39 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy39.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel41 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel41.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel42 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel42.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + checkLevel50 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel50.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10842");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        boolean boolean5 = compilerOptions0.collapseAnonymousFunctions;
        com.google.javascript.jscomp.DiagnosticType diagnosticType6 = com.google.javascript.jscomp.Compiler.MOTION_ITERATIONS_ERROR;
        com.google.javascript.jscomp.CheckLevel checkLevel7 = diagnosticType6.defaultLevel;
        compilerOptions0.checkProvides = checkLevel7;
        compilerOptions0.inlineVariables = false;
        com.google.javascript.jscomp.CheckLevel checkLevel11 = compilerOptions0.checkMissingReturn;
        compilerOptions0.setAssumeStrictThis(false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(diagnosticType6);
        org.junit.Assert.assertTrue("'" + checkLevel7 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel7.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel11 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel11.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10843");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        compilerOptions0.setFoldConstants(true);
        compilerOptions0.flowSensitiveInlineVariables = true;
        compilerOptions0.ambiguateProperties = false;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel11 = compilerOptions0.sourceMapDetailLevel;
        boolean boolean12 = compilerOptions0.generatePseudoNames;
        boolean boolean13 = compilerOptions0.recordFunctionInformation;
        compilerOptions0.setOutputCharset("goog.exportProperty");
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertNotNull(detailLevel11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test10844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10844");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node2 = node1.cloneTree();
        com.google.javascript.rhino.InputId inputId3 = node2.getInputId();
        boolean boolean4 = node2.isGetElem();
        boolean boolean5 = node2.wasEmptyNode();
        java.lang.String str6 = node2.getSourceFileName();
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertNull(inputId3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test10845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10845");
        java.io.InputStream inputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromInputStream("/tmp/PARAM_LIST1732384991772173346Unversioned directory", inputStream1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10846");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) 280492470272L, 36, 26);
        org.junit.Assert.assertNotNull(node3);
    }

    @Test
    public void test10847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10847");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("FINEST");
        stats1.gzSize = 300;
        int int4 = stats1.gzDiff;
        stats1.gzDiff = 4095;
        int int7 = stats1.size;
        long long8 = stats1.runtime;
        int int9 = stats1.gzSize;
        int int10 = stats1.diff;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 300 + "'", int9 == 300);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test10848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10848");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        boolean boolean7 = node6.isIn();
        boolean boolean8 = node6.isVoid();
        node6.setOptionalArg(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode12 = null;
        compilerOptions11.setTracerMode(tracerMode12);
        boolean boolean14 = compilerOptions11.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel15 = compilerOptions11.sourceMapDetailLevel;
        compilerOptions11.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions18.crossModuleMethodMotion = true;
        compilerOptions18.optimizeParameters = true;
        compilerOptions18.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel26 = compilerOptions18.checkGlobalNamesLevel;
        compilerOptions11.setReportMissingOverride(checkLevel26);
        com.google.javascript.jscomp.DiagnosticType diagnosticType28 = com.google.javascript.jscomp.Compiler.MOTION_ITERATIONS_ERROR;
        java.lang.String[] strArray29 = null;
        com.google.javascript.jscomp.JSError jSError30 = com.google.javascript.jscomp.JSError.make("", node6, checkLevel26, diagnosticType28, strArray29);
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions31.crossModuleMethodMotion = true;
        compilerOptions31.skipAllCompilerPasses();
        compilerOptions31.resetWarningsGuard();
        compilerOptions31.setInlineLocalVariables(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions38 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode39 = null;
        compilerOptions38.setTracerMode(tracerMode39);
        boolean boolean41 = compilerOptions38.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel42 = compilerOptions38.sourceMapDetailLevel;
        compilerOptions38.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet45 = compilerOptions38.stripNameSuffixes;
        compilerOptions31.setReplaceStringsReservedStrings(strSet45);
        boolean boolean47 = strSet45.isEmpty();
        node6.setDirectives(strSet45);
        com.google.javascript.jscomp.CompilerOptions compilerOptions49 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions49.crossModuleMethodMotion = true;
        compilerOptions49.skipAllCompilerPasses();
        compilerOptions49.resetWarningsGuard();
        compilerOptions49.setInlineLocalVariables(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions56 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode57 = null;
        compilerOptions56.setTracerMode(tracerMode57);
        boolean boolean59 = compilerOptions56.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel60 = compilerOptions56.sourceMapDetailLevel;
        compilerOptions56.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet63 = compilerOptions56.stripNameSuffixes;
        compilerOptions49.setReplaceStringsReservedStrings(strSet63);
        boolean boolean65 = strSet45.remove((java.lang.Object) compilerOptions49);
        com.google.javascript.jscomp.CompilerOptions compilerOptions66 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions66.setInlineLocalFunctions(false);
        compilerOptions66.moveFunctionDeclarations = true;
        compilerOptions66.setInlineLocalFunctions(false);
        boolean boolean73 = strSet45.contains((java.lang.Object) compilerOptions66);
        compilerOptions66.setRuntimeTypeCheckLogFunction("// Input %num%");
        compilerOptions66.deadAssignmentElimination = false;
        boolean boolean78 = compilerOptions66.disambiguateProperties;
        boolean boolean79 = compilerOptions66.aliasAllStrings;
        boolean boolean80 = compilerOptions66.aliasExternals;
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(detailLevel15);
        org.junit.Assert.assertTrue("'" + checkLevel26 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel26.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(diagnosticType28);
        org.junit.Assert.assertNotNull(jSError30);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(detailLevel42);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(detailLevel60);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test10849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10849");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newString("/experiment/:");
        boolean boolean2 = node1.isLocalResultCall();
        boolean boolean3 = node1.isRegExp();
        com.google.javascript.rhino.Node node4 = null;
        com.google.javascript.rhino.Node node8 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray12 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList13 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13, jSTypeArray12);
        com.google.javascript.rhino.Node node15 = jSTypeRegistry11.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray18 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList19 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList19, jSTypeArray18);
        com.google.javascript.rhino.Node node21 = jSTypeRegistry17.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList19);
        node15.addChildrenToBack(node21);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        boolean boolean29 = node28.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.Node node35 = jSTypeRegistry31.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        boolean boolean36 = node35.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        com.google.javascript.rhino.Node node45 = new com.google.javascript.rhino.Node((int) (short) 0, node15, node28, node35, node42, 0, 49);
        com.google.javascript.jscomp.CodingConvention.Bind bind46 = new com.google.javascript.jscomp.CodingConvention.Bind(node4, node8, node42);
        boolean boolean47 = node42.isIn();
        node42.setIsSyntheticBlock(true);
        node42.detachChildren();
        boolean boolean51 = node42.isBlock();
        com.google.javascript.rhino.Node node52 = node1.srcref(node42);
        com.google.javascript.rhino.InputId inputId54 = new com.google.javascript.rhino.InputId("DiagnosticGroup<checkProvides>");
        node52.setInputId(inputId54);
        com.google.javascript.rhino.Node node59 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        boolean boolean60 = node59.isContinue();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        jSTypeRegistry62.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSType jSType64 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] { jSType64 };
        com.google.javascript.rhino.Node node66 = jSTypeRegistry62.createParameters(jSTypeArray65);
        int int67 = node59.getIndexOfChild(node66);
        boolean boolean68 = node59.isDelProp();
        com.google.javascript.rhino.Node node72 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean73 = node72.isTry();
        java.lang.String str74 = node72.toString();
        node59.addChildToBack(node72);
        boolean boolean76 = node72.isAssignAdd();
        boolean boolean77 = node72.isDec();
        boolean boolean78 = node72.isWith();
        boolean boolean79 = inputId54.equals((java.lang.Object) node72);
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(jSTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(jSTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "STRING PARAM_LIST 49" + "'", str74, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test10850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10850");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        java.lang.String str37 = node26.toStringTree();
        com.google.javascript.rhino.Node node38 = node26.cloneTree();
        com.google.javascript.rhino.Node node42 = com.google.javascript.rhino.Node.newNumber(0.0d, (int) (byte) -1, 37);
        boolean boolean43 = node42.isString();
        com.google.javascript.rhino.Node node44 = node38.srcrefTree(node42);
        boolean boolean45 = node38.isLabel();
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable46 = node38.getAncestors();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PARAM_LIST\n" + "'", str37, "PARAM_LIST\n");
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(ancestorIterable46);
    }

    @Test
    public void test10851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10851");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable11 = jSTypeRegistry1.getEachReferenceTypeWithProperty("goog.exportSymbol");
        jSTypeRegistry1.clearNamedTypes();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(objectTypeIterable11);
    }

    @Test
    public void test10852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10852");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.setSyntheticBlockStartMarker("OFF");
        compilerOptions0.skipAllCompilerPasses();
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy10 = compilerOptions7.propertyRenaming;
        java.lang.String[] strArray13 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        compilerOptions7.setStripTypes((java.util.Set<java.lang.String>) strSet14);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode18 = null;
        compilerOptions17.setTracerMode(tracerMode18);
        boolean boolean20 = compilerOptions17.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel21 = compilerOptions17.sourceMapDetailLevel;
        compilerOptions17.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions24.crossModuleMethodMotion = true;
        compilerOptions24.optimizeParameters = true;
        compilerOptions24.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel32 = compilerOptions24.checkGlobalNamesLevel;
        compilerOptions17.setReportMissingOverride(checkLevel32);
        compilerOptions7.setCheckUnreachableCode(checkLevel32);
        compilerOptions0.setCheckMissingReturn(checkLevel32);
        com.google.javascript.jscomp.CompilerOptions.Reach reach36 = com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY;
        compilerOptions0.setInlineVariables(reach36);
        com.google.javascript.jscomp.ErrorFormat errorFormat38 = compilerOptions0.errorFormat;
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap39 = null;
        compilerOptions0.cssRenamingMap = cssRenamingMap39;
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy10 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy10.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(detailLevel21);
        org.junit.Assert.assertTrue("'" + checkLevel32 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel32.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + reach36 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY + "'", reach36.equals(com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY));
        org.junit.Assert.assertNotNull(errorFormat38);
    }

    @Test
    public void test10853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10853");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setProtectHiddenSideEffects(true);
        compilerOptions0.moveFunctionDeclarations = true;
        boolean boolean7 = compilerOptions0.inlineConstantVars;
        boolean boolean8 = compilerOptions0.assumeStrictThis();
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy9 = com.google.javascript.jscomp.VariableRenamingPolicy.OFF;
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions10.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel13 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions10.setSourceMapDetailLevel(detailLevel13);
        boolean boolean15 = compilerOptions10.ideMode;
        com.google.javascript.jscomp.CompilerOptions compilerOptions16 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions16.crossModuleMethodMotion = true;
        compilerOptions16.skipAllCompilerPasses();
        compilerOptions16.resetWarningsGuard();
        compilerOptions16.setInlineLocalVariables(false);
        compilerOptions16.coalesceVariableNames = true;
        java.lang.String str25 = compilerOptions16.aliasStringsBlacklist;
        compilerOptions16.devirtualizePrototypeMethods = false;
        compilerOptions16.optimizeParameters = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy30 = com.google.javascript.jscomp.PropertyRenamingPolicy.HEURISTIC;
        compilerOptions16.setPropertyRenaming(propertyRenamingPolicy30);
        compilerOptions10.propertyRenaming = propertyRenamingPolicy30;
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy9, propertyRenamingPolicy30);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.OFF + "'", variableRenamingPolicy9.equals(com.google.javascript.jscomp.VariableRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(detailLevel13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy30 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.HEURISTIC + "'", propertyRenamingPolicy30.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.HEURISTIC));
    }

    @Test
    public void test10854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10854");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.syntheticBlockEndMarker = "hi!";
        compilerOptions0.coalesceVariableNames = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode8 = null;
        compilerOptions7.setTracerMode(tracerMode8);
        boolean boolean10 = compilerOptions7.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel11 = compilerOptions7.sourceMapDetailLevel;
        compilerOptions7.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        compilerOptions14.optimizeParameters = true;
        compilerOptions14.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel22 = compilerOptions14.checkGlobalNamesLevel;
        compilerOptions7.setReportMissingOverride(checkLevel22);
        java.util.Set<java.lang.String> strSet24 = compilerOptions7.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile27 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int29 = sourceFile27.getLineOfOffset((int) (short) 1);
        java.lang.String str30 = sourceFile27.getName();
        java.lang.String str31 = sourceFile27.getName();
        java.lang.String str32 = sourceFile27.getName();
        int int34 = sourceFile27.getLineOfOffset((-1));
        boolean boolean35 = strSet24.equals((java.lang.Object) int34);
        compilerOptions0.stripNamePrefixes = strSet24;
        compilerOptions0.setSmartNameRemoval(true);
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap39 = compilerOptions0.cssRenamingMap;
        java.lang.String str40 = compilerOptions0.syntheticBlockStartMarker;
        compilerOptions0.removeDeadCode = false;
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(detailLevel11);
        org.junit.Assert.assertTrue("'" + checkLevel22 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel22.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(sourceFile27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(cssRenamingMap39);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test10855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10855");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        compilerOptions0.setDefineToBooleanLiteral("", true);
        java.lang.String str12 = compilerOptions0.renamePrefixNamespace;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap13 = compilerOptions0.getTweakReplacements();
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap14 = null;
        compilerOptions0.setCssRenamingMap(cssRenamingMap14);
        compilerOptions0.setColorizeErrorOutput(false);
        boolean boolean18 = compilerOptions0.inlineFunctions;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = null;
        compilerOptions0.setDefineReplacements(strMap19);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test10856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10856");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.jstype.JSType jSType37 = node26.getJSType();
        com.google.javascript.rhino.JSDocInfo jSDocInfo38 = null;
        node26.setJSDocInfo(jSDocInfo38);
        com.google.javascript.rhino.ErrorReporter errorReporter41 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry42 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter41);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray43 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList44 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList44, jSTypeArray43);
        com.google.javascript.rhino.Node node46 = jSTypeRegistry42.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList44);
        com.google.javascript.rhino.ErrorReporter errorReporter47 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry48 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter47);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray49 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList50 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList50, jSTypeArray49);
        com.google.javascript.rhino.Node node52 = jSTypeRegistry48.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList50);
        node46.addChildrenToBack(node52);
        com.google.javascript.rhino.ErrorReporter errorReporter54 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter54);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.Node node59 = jSTypeRegistry55.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        boolean boolean60 = node59.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray63 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList64 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList64, jSTypeArray63);
        com.google.javascript.rhino.Node node66 = jSTypeRegistry62.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList64);
        boolean boolean67 = node66.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter68 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry69 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter68);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray70 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList71 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList71, jSTypeArray70);
        com.google.javascript.rhino.Node node73 = jSTypeRegistry69.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList71);
        com.google.javascript.rhino.Node node76 = new com.google.javascript.rhino.Node((int) (short) 0, node46, node59, node66, node73, 0, 49);
        com.google.javascript.rhino.Node node77 = node46.getNext();
        com.google.javascript.rhino.Node node78 = node26.clonePropsFrom(node77);
        // The following exception was thrown during execution in test generation
        try {
            node78.setSideEffectFlags((int) ':');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNull(jSType37);
        org.junit.Assert.assertNotNull(jSTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(jSTypeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(jSTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(jSTypeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(node78);
    }

    @Test
    public void test10857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10857");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.generatePseudoNames;
        java.util.Set<java.lang.String> strSet4 = compilerOptions0.stripTypes;
        compilerOptions0.setCollapseProperties(true);
        compilerOptions0.inlineLocalFunctions = false;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setDeadAssignmentElimination(true);
        java.lang.String str13 = compilerOptions0.sourceMapOutputPath;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test10858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10858");
        com.google.javascript.jscomp.SourceFile.Builder builder0 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile4 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int6 = sourceFile4.getLineOfOffset((int) (short) 1);
        java.io.Reader reader7 = sourceFile4.getCodeReader();
        int int8 = reader7.read();
        com.google.javascript.jscomp.SourceFile sourceFile9 = builder0.buildFromReader("*global*", reader7);
        java.io.File file12 = new java.io.File(":", "hi!");
        boolean boolean15 = file12.setExecutable(false, false);
        java.io.File file16 = file12.getParentFile();
        long long17 = file16.getUsableSpace();
        boolean boolean18 = file16.mkdirs();
        java.nio.charset.Charset charset19 = null;
        com.google.javascript.jscomp.JSSourceFile jSSourceFile20 = com.google.javascript.jscomp.JSSourceFile.fromFile(file16, charset19);
        boolean boolean21 = file16.canExecute();
        com.google.javascript.jscomp.SourceFile sourceFile22 = builder0.buildFromFile(file16);
        java.lang.String str23 = sourceFile22.getName();
        boolean boolean24 = sourceFile22.isExtern();
        org.junit.Assert.assertNotNull(sourceFile4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(sourceFile9);
        org.junit.Assert.assertEquals(file12.getParent(), ":");
        org.junit.Assert.assertEquals(file12.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertNull("file16.getParent() == null", file16.getParent());
        org.junit.Assert.assertEquals(file16.toString(), ":");
// flaky:         org.junit.Assert.assertTrue("'" + long17 + "' != '" + 280491003904L + "'", long17 == 280491003904L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(jSSourceFile20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(sourceFile22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + ":" + "'", str23, ":");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test10859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10859");
        com.google.javascript.rhino.Node node2 = com.google.javascript.rhino.Node.newString(0, "*global*");
        boolean boolean3 = node2.isIf();
        boolean boolean4 = node2.isInstanceOf();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test10860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10860");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        compilerOptions9.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy14 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions15 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions15.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy18 = compilerOptions15.propertyRenaming;
        compilerOptions9.setRenamingPolicy(variableRenamingPolicy14, propertyRenamingPolicy18);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.skipAllCompilerPasses();
        boolean boolean24 = compilerOptions20.flowSensitiveInlineVariables;
        java.lang.String[] strArray34 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        compilerOptions20.stripTypes = strSet35;
        compilerOptions9.setStripNamePrefixes((java.util.Set<java.lang.String>) strSet35);
        compilerOptions0.setReplaceStringsReservedStrings((java.util.Set<java.lang.String>) strSet35);
        compilerOptions0.setDebugFunctionSideEffectsPath("/experiment/:/hi!");
        com.google.javascript.jscomp.CompilerOptions compilerOptions42 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions42.crossModuleMethodMotion = true;
        compilerOptions42.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy47 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions48 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions48.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy51 = compilerOptions48.propertyRenaming;
        compilerOptions42.setRenamingPolicy(variableRenamingPolicy47, propertyRenamingPolicy51);
        boolean boolean53 = compilerOptions42.checkControlStructures;
        compilerOptions42.syntheticBlockEndMarker = "FINEST";
        compilerOptions42.setOptimizeParameters(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions58 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel59 = compilerOptions58.checkRequires;
        com.google.javascript.jscomp.CompilerOptions compilerOptions60 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode61 = null;
        compilerOptions60.setTracerMode(tracerMode61);
        boolean boolean63 = compilerOptions60.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel64 = compilerOptions60.sourceMapDetailLevel;
        compilerOptions60.setColorizeErrorOutput(true);
        compilerOptions60.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions69 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions69.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy72 = compilerOptions69.propertyRenaming;
        compilerOptions60.propertyRenaming = propertyRenamingPolicy72;
        com.google.javascript.jscomp.CheckLevel checkLevel74 = compilerOptions60.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel75 = compilerOptions60.checkRequires;
        compilerOptions58.setCheckRequires(checkLevel75);
        compilerOptions42.setCheckGlobalNamesLevel(checkLevel75);
        compilerOptions0.checkMissingGetCssNameLevel = checkLevel75;
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = null;
        compilerOptions0.setDefineReplacements(strMap79);
        boolean boolean81 = compilerOptions0.collapseAnonymousFunctions;
        // The following exception was thrown during execution in test generation
        try {
            compilerOptions0.setDefineToNumberLiteral("sun.util.logging.resources.logging", 400);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy18 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy18.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy51 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy51.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + checkLevel59 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel59.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(detailLevel64);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy72 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy72.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel74 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel74.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel75 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel75.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test10861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10861");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        jSModule1.removeAll();
        com.google.javascript.jscomp.SourceFile sourceFile6 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int8 = sourceFile6.getLineOfOffset((int) (short) 1);
        int int10 = sourceFile6.getLineOfOffset(100);
        java.lang.String str11 = sourceFile6.getName();
        java.io.Reader reader12 = sourceFile6.getCodeReader();
        reader12.reset();
        com.google.javascript.jscomp.SourceFile sourceFile14 = com.google.javascript.jscomp.SourceFile.fromReader("PARAM_LIST", reader12);
        java.lang.String str15 = sourceFile14.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput16 = new com.google.javascript.jscomp.CompilerInput(sourceFile14);
        jSModule1.add(compilerInput16);
        com.google.javascript.jscomp.CompilerInput compilerInput18 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput16);
        int int19 = compilerInput18.getNumLines();
        boolean boolean20 = compilerInput18.isExtern();
        org.junit.Assert.assertNotNull(sourceFile6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(reader12);
        org.junit.Assert.assertNotNull(sourceFile14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PARAM_LIST" + "'", str15, "PARAM_LIST");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test10862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10862");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("FINEST");
        stats1.gzSize = 300;
        int int4 = stats1.gzDiff;
        stats1.gzDiff = 4095;
        int int7 = stats1.diff;
        stats1.runtime = 280488574976L;
        int int10 = stats1.runs;
        java.lang.String str11 = stats1.pass;
        stats1.gzDiff = 52;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "FINEST" + "'", str11, "FINEST");
    }

    @Test
    public void test10863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10863");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        boolean boolean6 = node5.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.Node node13 = jSTypeRegistry9.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList11);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        node13.addChildrenToBack(node19);
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        boolean boolean34 = node33.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter35 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry36 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter35);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        com.google.javascript.rhino.Node node40 = jSTypeRegistry36.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        com.google.javascript.rhino.Node node43 = new com.google.javascript.rhino.Node((int) (short) 0, node13, node26, node33, node40, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        node50.addChildrenToBack(node56);
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        boolean boolean71 = node70.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray74 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList75 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList75, jSTypeArray74);
        com.google.javascript.rhino.Node node77 = jSTypeRegistry73.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList75);
        com.google.javascript.rhino.Node node80 = new com.google.javascript.rhino.Node((int) (short) 0, node50, node63, node70, node77, 0, 49);
        com.google.javascript.rhino.Node node81 = node43.useSourceInfoFrom(node63);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder82 = node63.getJsDocBuilderForNode();
        com.google.javascript.rhino.Node node83 = node5.copyInformationFrom(node63);
        boolean boolean84 = node83.isFromExterns();
        node83.putIntProp(45, (int) (byte) 1);
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(jSTypeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNotNull(fileLevelJsDocBuilder82);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test10864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10864");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(true, false);
        boolean boolean7 = file2.setWritable(false);
        boolean boolean8 = file2.exists();
        boolean boolean9 = file2.mkdir();
        boolean boolean11 = file2.setLastModified(280489385984L);
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test10865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10865");
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray0 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList1 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList1, jSTypeArray0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        boolean boolean6 = jSTypeList1.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        java.lang.Object[] objArray7 = jSTypeList1.toArray();
        com.google.javascript.rhino.ErrorReporter errorReporter9 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry10 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter9);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray11 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList12 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList12, jSTypeArray11);
        com.google.javascript.rhino.Node node14 = jSTypeRegistry10.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList12);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray17 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList18 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList18, jSTypeArray17);
        com.google.javascript.rhino.Node node20 = jSTypeRegistry16.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList18);
        node14.addChildrenToBack(node20);
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.Node node27 = jSTypeRegistry23.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = node27.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        com.google.javascript.rhino.Node node34 = jSTypeRegistry30.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        boolean boolean35 = node34.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray38 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList39 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList39, jSTypeArray38);
        com.google.javascript.rhino.Node node41 = jSTypeRegistry37.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList39);
        com.google.javascript.rhino.Node node44 = new com.google.javascript.rhino.Node((int) (short) 0, node14, node27, node34, node41, 0, 49);
        boolean boolean45 = node14.isDo();
        boolean boolean46 = node14.isWith();
        int int47 = jSTypeList1.lastIndexOf((java.lang.Object) node14);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.JSType jSType49 = jSTypeList1.remove(50);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 50, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(jSTypeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(jSTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(jSTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test10866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10866");
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags1 = new com.google.javascript.rhino.Node.SideEffectFlags(4095);
        int int2 = sideEffectFlags1.valueOf();
        sideEffectFlags1.clearAllFlags();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4095 + "'", int2 == 4095);
    }

    @Test
    public void test10867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10867");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions0.checkGlobalNamesLevel;
        compilerOptions0.setCheckMissingGetCssNameBlacklist("");
        boolean boolean11 = compilerOptions0.removeTryCatchFinally;
        compilerOptions0.setSkipAllPasses(true);
        compilerOptions0.setDebugFunctionSideEffectsPath("");
        compilerOptions0.setCollapsePropertiesOnExternTypes(false);
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test10868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10868");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        boolean boolean4 = node3.isContinue();
        com.google.javascript.rhino.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry6 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter5);
        jSTypeRegistry6.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSType jSType8 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] { jSType8 };
        com.google.javascript.rhino.Node node10 = jSTypeRegistry6.createParameters(jSTypeArray9);
        int int11 = node3.getIndexOfChild(node10);
        boolean boolean12 = node3.isDelProp();
        java.lang.Object obj14 = null;
        node3.putProp((int) '#', obj14);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList20 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20, jSTypeArray19);
        com.google.javascript.rhino.Node node22 = jSTypeRegistry18.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList20);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        node22.addChildrenToBack(node28);
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.Node node35 = jSTypeRegistry31.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        boolean boolean36 = node35.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        boolean boolean43 = node42.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        com.google.javascript.rhino.Node node52 = new com.google.javascript.rhino.Node((int) (short) 0, node22, node35, node42, node49, 0, 49);
        com.google.javascript.rhino.Node node53 = node22.getNext();
        com.google.javascript.jscomp.CompilerOptions compilerOptions54 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions54.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel57 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions54.setSourceMapDetailLevel(detailLevel57);
        compilerOptions54.inlineFunctions = true;
        compilerOptions54.setCommonJSModulePathPrefix(":");
        compilerOptions54.setCrossModuleCodeMotion(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions65 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions65.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy68 = compilerOptions65.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap69 = compilerOptions65.getTweakReplacements();
        boolean boolean70 = strMap69.isEmpty();
        java.lang.Object obj71 = null;
        com.google.javascript.rhino.Node node72 = strMap69.get(obj71);
        java.util.Set<java.lang.String> strSet73 = strMap69.keySet();
        compilerOptions54.setIdGenerators(strSet73);
        node53.setDirectives(strSet73);
        com.google.javascript.rhino.Node node76 = node3.useSourceInfoIfMissingFrom(node53);
        int int77 = node53.getLength();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(detailLevel57);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy68 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy68.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test10869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10869");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        int int37 = node19.getLength();
        com.google.javascript.jscomp.SourceFile sourceFile40 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput42 = new com.google.javascript.jscomp.CompilerInput(sourceFile40, true);
        com.google.javascript.rhino.InputId inputId44 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput46 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput42, inputId44, true);
        com.google.javascript.jscomp.CompilerInput compilerInput48 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput46, false);
        com.google.javascript.jscomp.JSModule jSModule50 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler51 = new com.google.javascript.jscomp.Compiler();
        jSModule50.sortInputsByDeps(compiler51);
        java.lang.String str53 = jSModule50.getName();
        compilerInput46.setModule(jSModule50);
        java.lang.String str55 = compilerInput46.getCode();
        com.google.javascript.jscomp.CompilerInput compilerInput58 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput46, "*global*", true);
        node19.putProp((int) '4', (java.lang.Object) compilerInput46);
        java.lang.String str60 = compilerInput46.toString();
        com.google.javascript.jscomp.CompilerInput compilerInput61 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput46);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "STRING PARAM_LIST 49" + "'", str53, "STRING PARAM_LIST 49");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "*global*" + "'", str60, "*global*");
    }

    @Test
    public void test10870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10870");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        jSTypeRegistry1.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable13 = jSTypeRegistry1.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType18 = jSTypeRegistry1.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream25 = jSTypeList22.parallelStream();
        com.google.javascript.rhino.Node node26 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray27 = new com.google.javascript.rhino.jstype.JSType[] {};
        com.google.javascript.rhino.jstype.JSType jSType28 = jSTypeRegistry1.createUnionType(jSTypeArray27);
        com.google.javascript.jscomp.JSModule jSModule30 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        jSModule30.removeAll();
        java.util.List<com.google.javascript.jscomp.JSModule> jSModuleList32 = jSModule30.getDependencies();
        java.util.List<java.lang.String> strList33 = jSModule30.getRequires();
        jSTypeRegistry1.setTemplateTypeNames(strList33);
        com.google.javascript.rhino.jstype.ObjectType objectType35 = jSTypeRegistry1.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.JSType jSType37 = jSTypeRegistry1.createUnionType(jSTypeArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeIterable13);
        org.junit.Assert.assertNotNull(jSType18);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(jSTypeStream25);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(jSTypeArray27);
        org.junit.Assert.assertNotNull(jSType28);
        org.junit.Assert.assertNotNull(jSModuleList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(objectType35);
    }

    @Test
    public void test10871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10871");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        compilerOptions0.setRemoveDeadCode(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions23 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions23.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy26 = compilerOptions23.propertyRenaming;
        com.google.javascript.jscomp.AnonymousFunctionNamingPolicy anonymousFunctionNamingPolicy27 = com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF;
        compilerOptions23.anonymousFunctionNaming = anonymousFunctionNamingPolicy27;
        com.google.javascript.jscomp.DependencyOptions dependencyOptions29 = new com.google.javascript.jscomp.DependencyOptions();
        com.google.javascript.jscomp.DependencyOptions dependencyOptions31 = dependencyOptions29.setDependencyPruning(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions33 = dependencyOptions31.setMoocherDropping(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions35 = dependencyOptions33.setDependencySorting(false);
        compilerOptions23.setDependencyOptions(dependencyOptions35);
        boolean boolean37 = compilerOptions23.devirtualizePrototypeMethods;
        com.google.javascript.jscomp.CheckLevel checkLevel38 = compilerOptions23.checkMissingReturn;
        compilerOptions0.setReportMissingOverride(checkLevel38);
        boolean boolean40 = compilerOptions0.optimizeCalls;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy26 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy26.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + anonymousFunctionNamingPolicy27 + "' != '" + com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF + "'", anonymousFunctionNamingPolicy27.equals(com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.OFF));
        org.junit.Assert.assertNotNull(dependencyOptions31);
        org.junit.Assert.assertNotNull(dependencyOptions33);
        org.junit.Assert.assertNotNull(dependencyOptions35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + checkLevel38 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel38.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test10872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10872");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode6 = null;
        compilerOptions5.setTracerMode(tracerMode6);
        boolean boolean8 = compilerOptions5.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel9 = compilerOptions5.sourceMapDetailLevel;
        compilerOptions5.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet12 = compilerOptions5.stripNameSuffixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode14 = null;
        compilerOptions13.setTracerMode(tracerMode14);
        boolean boolean16 = compilerOptions13.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel17 = compilerOptions13.sourceMapDetailLevel;
        compilerOptions13.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.optimizeParameters = true;
        compilerOptions20.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel28 = compilerOptions20.checkGlobalNamesLevel;
        compilerOptions13.setReportMissingOverride(checkLevel28);
        compilerOptions5.setAggressiveVarCheck(checkLevel28);
        compilerOptions0.setCheckUnreachableCode(checkLevel28);
        com.google.javascript.jscomp.SourceMap.Format format32 = compilerOptions0.sourceMapFormat;
        boolean boolean33 = compilerOptions0.recordFunctionInformation;
        compilerOptions0.setComputeFunctionSideEffects(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions36.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions36.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode42 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions36.setTracer(tracerMode42);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy44 = compilerOptions36.variableRenaming;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy45 = com.google.javascript.jscomp.PropertyRenamingPolicy.HEURISTIC;
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy44, propertyRenamingPolicy45);
        com.google.javascript.jscomp.CompilerOptions.AliasTransformationHandler aliasTransformationHandler47 = null;
        compilerOptions0.setAliasTransformationHandler(aliasTransformationHandler47);
        compilerOptions0.setAliasAllStrings(false);
        boolean boolean51 = compilerOptions0.removeUnusedPrototypeProperties;
        com.google.javascript.jscomp.CompilerOptions compilerOptions52 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions52.crossModuleMethodMotion = true;
        compilerOptions52.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy57 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions58 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions58.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy61 = compilerOptions58.propertyRenaming;
        compilerOptions52.setRenamingPolicy(variableRenamingPolicy57, propertyRenamingPolicy61);
        boolean boolean63 = compilerOptions52.checkControlStructures;
        boolean boolean64 = compilerOptions52.crossModuleCodeMotion;
        compilerOptions52.extractPrototypeMemberDeclarations = true;
        compilerOptions52.prettyPrint = true;
        com.google.javascript.jscomp.CheckLevel checkLevel69 = compilerOptions52.checkProvides;
        compilerOptions0.checkMissingReturn = checkLevel69;
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(detailLevel9);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(detailLevel17);
        org.junit.Assert.assertTrue("'" + checkLevel28 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel28.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(format32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + tracerMode42 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode42.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy44 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.OFF + "'", variableRenamingPolicy44.equals(com.google.javascript.jscomp.VariableRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy45 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.HEURISTIC + "'", propertyRenamingPolicy45.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.HEURISTIC));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy61 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy61.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + checkLevel69 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel69.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10873");
        com.google.javascript.jscomp.SourceFile.Generator generator1 = null;
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromGenerator("goog.exportSymbol", generator1);
        org.junit.Assert.assertNotNull(sourceFile2);
    }

    @Test
    public void test10874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10874");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        boolean boolean21 = compilerOptions0.shouldColorizeErrorOutput();
        boolean boolean22 = compilerOptions0.extractPrototypeMemberDeclarations;
        compilerOptions0.setNameAnonymousFunctionsOnly(false);
        boolean boolean25 = compilerOptions0.assumeStrictThis();
        compilerOptions0.setSyntheticBlockEndMarker("java.io.IOException: java.io.IOException");
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test10875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10875");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        compilerOptions0.setSummaryDetailLevel(49);
        compilerOptions0.setRemoveTryCatchFinally(true);
        compilerOptions0.setComputeFunctionSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel12 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions9.setSourceMapDetailLevel(detailLevel12);
        compilerOptions0.sourceMapDetailLevel = detailLevel12;
        boolean boolean15 = compilerOptions0.isRemoveUnusedClassProperties();
        boolean boolean16 = compilerOptions0.inlineLocalFunctions;
        compilerOptions0.setDeadAssignmentElimination(false);
        compilerOptions0.setTweakToDoubleLiteral("PARAM_LIST: PARAM_LIST\n", (double) 280488861696L);
        compilerOptions0.setInstrumentationTemplate("");
        org.junit.Assert.assertNotNull(detailLevel12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test10876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10876");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        com.google.javascript.jscomp.CheckLevel checkLevel30 = compilerOptions0.checkMissingReturn;
        compilerOptions0.setCollapseObjectLiterals(true);
        compilerOptions0.setGroupVariableDeclarations(false);
        compilerOptions0.setCheckMissingGetCssNameBlacklist("/tmp");
        boolean boolean37 = compilerOptions0.exportTestFunctions;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel30 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel30.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test10877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10877");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream6 = jSTypeList3.parallelStream();
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean8 = compilerOptions7.moveFunctionDeclarations;
        compilerOptions7.crossModuleCodeMotion = true;
        compilerOptions7.setManageClosureDependencies(false);
        boolean boolean13 = compilerOptions7.inlineLocalFunctions;
        compilerOptions7.disableRuntimeTypeCheck();
        boolean boolean15 = jSTypeList3.equals((java.lang.Object) compilerOptions7);
        boolean boolean16 = compilerOptions7.moveFunctionDeclarations;
        com.google.javascript.jscomp.CheckLevel checkLevel17 = compilerOptions7.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions18.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel21 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions18.setSourceMapDetailLevel(detailLevel21);
        compilerOptions18.disambiguateProperties = true;
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions18.reportMissingOverride;
        compilerOptions7.setBrokenClosureRequiresLevel(checkLevel25);
        boolean boolean27 = compilerOptions7.ambiguateProperties;
        compilerOptions7.setProtectHiddenSideEffects(true);
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeStream6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + checkLevel17 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel17.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertNotNull(detailLevel21);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test10878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10878");
        java.nio.charset.Charset charset0 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str1 = charset0.name();
        java.lang.String str2 = charset0.name();
        java.nio.charset.Charset charset3 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str4 = charset3.toString();
        boolean boolean5 = charset0.contains(charset3);
        java.nio.charset.CharsetEncoder charsetEncoder6 = charset3.newEncoder();
        java.io.File file9 = new java.io.File(":", "hi!");
        boolean boolean12 = file9.setExecutable(false, false);
        java.io.File file13 = file9.getParentFile();
        long long14 = file13.getUsableSpace();
        boolean boolean15 = file13.mkdirs();
        java.nio.charset.Charset charset16 = null;
        com.google.javascript.jscomp.JSSourceFile jSSourceFile17 = com.google.javascript.jscomp.JSSourceFile.fromFile(file13, charset16);
        java.io.File file20 = new java.io.File(":", "hi!");
        boolean boolean23 = file20.setExecutable(true, false);
        boolean boolean25 = file20.setWritable(false);
        boolean boolean26 = file20.canWrite();
        java.net.URI uRI27 = file20.toURI();
        boolean boolean28 = file13.renameTo(file20);
        java.nio.charset.Charset charset29 = java.nio.charset.Charset.defaultCharset();
        com.google.javascript.jscomp.SourceFile sourceFile30 = com.google.javascript.jscomp.SourceFile.fromFile(file13, charset29);
        java.lang.String str31 = charset29.displayName();
        boolean boolean32 = charset3.contains(charset29);
        java.nio.charset.Charset charset33 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str34 = charset33.name();
        java.util.Locale locale35 = null;
        java.lang.String str36 = charset33.displayName(locale35);
        java.nio.ByteBuffer byteBuffer38 = charset33.encode("/experiment/:/hi!");
        java.nio.CharBuffer charBuffer39 = charset29.decode(byteBuffer38);
        com.google.javascript.jscomp.CompilerOptions compilerOptions40 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions40.crossModuleMethodMotion = true;
        compilerOptions40.skipAllCompilerPasses();
        compilerOptions40.resetWarningsGuard();
        compilerOptions40.setInlineLocalVariables(false);
        compilerOptions40.setIdeMode(false);
        compilerOptions40.setDefineToBooleanLiteral("", true);
        java.lang.String str52 = compilerOptions40.renamePrefixNamespace;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap53 = compilerOptions40.getTweakReplacements();
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap54 = null;
        compilerOptions40.setCssRenamingMap(cssRenamingMap54);
        java.lang.String str56 = compilerOptions40.inputDelimiter;
        boolean boolean57 = compilerOptions40.isRemoveUnusedClassProperties();
        boolean boolean58 = charset29.equals((java.lang.Object) compilerOptions40);
        java.nio.ByteBuffer byteBuffer60 = charset29.encode("JSC_OPTIMIZE_LOOP_ERROR. Exceeded max number of code motion iterations: Unversioned directory at / line (unknown line) : 48");
        org.junit.Assert.assertNotNull(charset0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "US-ASCII" + "'", str1, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "US-ASCII" + "'", str2, "US-ASCII");
        org.junit.Assert.assertNotNull(charset3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "US-ASCII" + "'", str4, "US-ASCII");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charsetEncoder6);
        org.junit.Assert.assertEquals(file9.getParent(), ":");
        org.junit.Assert.assertEquals(file9.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertNull("file13.getParent() == null", file13.getParent());
        org.junit.Assert.assertEquals(file13.toString(), ":");
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 280489242624L + "'", long14 == 280489242624L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(jSSourceFile17);
        org.junit.Assert.assertEquals(file20.getParent(), ":");
        org.junit.Assert.assertEquals(file20.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(uRI27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charset29);
        org.junit.Assert.assertNotNull(sourceFile30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "US-ASCII" + "'", str31, "US-ASCII");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charset33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "US-ASCII" + "'", str34, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "US-ASCII" + "'", str36, "US-ASCII");
        org.junit.Assert.assertNotNull(byteBuffer38);
        org.junit.Assert.assertNotNull(charBuffer39);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "// Input %num%" + "'", str56, "// Input %num%");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(byteBuffer60);
    }

    @Test
    public void test10879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10879");
        com.google.javascript.jscomp.SourceFile.Generator generator1 = null;
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromGenerator("PARAM_LIST 0\n", generator1);
        org.junit.Assert.assertNotNull(sourceFile2);
    }

    @Test
    public void test10880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10880");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str1 = compilerOptions0.syntheticBlockStartMarker;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel2 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setExternExports(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.crossModuleMethodMotion = true;
        compilerOptions5.setProtectHiddenSideEffects(true);
        boolean boolean10 = compilerOptions5.isExternExportsEnabled();
        com.google.javascript.jscomp.CompilerOptions.Reach reach11 = com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY;
        compilerOptions5.setInlineFunctions(reach11);
        compilerOptions0.setInlineVariables(reach11);
        compilerOptions0.setRemoveUnusedClassProperties(false);
        boolean boolean16 = compilerOptions0.convertToDottedProperties;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(detailLevel2);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + reach11 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY + "'", reach11.equals(com.google.javascript.jscomp.CompilerOptions.Reach.LOCAL_ONLY));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test10881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10881");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setOutputJsStringUsage(true);
        java.util.Set<java.lang.String> strSet4 = compilerOptions0.stripNamePrefixes;
        boolean boolean5 = compilerOptions0.reserveRawExports;
        compilerOptions0.collapseAnonymousFunctions = false;
        compilerOptions0.removeUnusedVars = true;
        compilerOptions0.setSpecializeInitialModule(false);
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test10882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10882");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.setSyntheticBlockStartMarker("OFF");
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.jqueryPass = false;
        compilerOptions0.setConvertToDottedProperties(false);
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.checkMissingGetCssNameBlacklist = "goog.exportProperty";
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10883");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        strMap4.clear();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        java.lang.String str12 = node11.getQualifiedName();
        com.google.javascript.rhino.Node node13 = node11.getLastChild();
        com.google.javascript.rhino.Node node14 = strMap4.replace("FINEST", node11);
        boolean boolean15 = strMap4.isEmpty();
        com.google.javascript.jscomp.JSModule jSModule17 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler18 = new com.google.javascript.jscomp.Compiler();
        jSModule17.sortInputsByDeps(compiler18);
        com.google.javascript.jscomp.SourceFile.Builder builder20 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile24 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int26 = sourceFile24.getLineOfOffset((int) (short) 1);
        java.io.Reader reader27 = sourceFile24.getCodeReader();
        int int28 = reader27.read();
        com.google.javascript.jscomp.SourceFile sourceFile29 = builder20.buildFromReader("*global*", reader27);
        jSModule17.add(sourceFile29);
        int int32 = sourceFile29.getLineOfOffset(37);
        com.google.javascript.rhino.Node node33 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray34 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList35 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList35, jSTypeArray34);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray37 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList38 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38, jSTypeArray37);
        boolean boolean40 = jSTypeList35.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList38);
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType41 = com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN;
        com.google.javascript.rhino.Node node45 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean46 = node45.isTry();
        java.lang.String str47 = node45.toString();
        boolean boolean48 = node45.isIn();
        com.google.javascript.rhino.Node node52 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship53 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType41, node45, node52);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder54 = node52.new FileLevelJsDocBuilder();
        boolean boolean55 = jSTypeList35.remove((java.lang.Object) node52);
        com.google.javascript.rhino.ErrorReporter errorReporter57 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry58 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter57);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray59 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList60 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList60, jSTypeArray59);
        com.google.javascript.rhino.Node node62 = jSTypeRegistry58.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList60);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList66 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList66, jSTypeArray65);
        com.google.javascript.rhino.Node node68 = jSTypeRegistry64.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList66);
        node62.addChildrenToBack(node68);
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray72 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList73 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList73, jSTypeArray72);
        com.google.javascript.rhino.Node node75 = jSTypeRegistry71.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList73);
        boolean boolean76 = node75.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter77 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry78 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter77);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray79 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList80 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList80, jSTypeArray79);
        com.google.javascript.rhino.Node node82 = jSTypeRegistry78.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList80);
        boolean boolean83 = node82.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter84 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry85 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter84);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray86 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList87 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList87, jSTypeArray86);
        com.google.javascript.rhino.Node node89 = jSTypeRegistry85.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList87);
        com.google.javascript.rhino.Node node92 = new com.google.javascript.rhino.Node((int) (short) 0, node62, node75, node82, node89, 0, 49);
        com.google.javascript.jscomp.CodingConvention.Bind bind93 = new com.google.javascript.jscomp.CodingConvention.Bind(node33, node52, node82);
        com.google.javascript.rhino.Node node94 = strMap4.getOrDefault((java.lang.Object) int32, node52);
        boolean boolean95 = node52.isName();
        java.lang.String str96 = node52.toString();
        double double97 = node52.getDouble();
        boolean boolean98 = node52.isGetElem();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(sourceFile24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(reader27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(sourceFile29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(jSTypeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSTypeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + subclassType41 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN + "'", subclassType41.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN));
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "STRING PARAM_LIST 49" + "'", str47, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(jSTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(jSTypeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(jSTypeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(jSTypeArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertNotNull(node94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "NUMBER -1.0" + "'", str96, "NUMBER -1.0");
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + (-1.0d) + "'", double97 == (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test10884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10884");
        java.io.PrintStream printStream1 = new java.io.PrintStream("PARAM_LIST: PARAM_LIST\n");
        printStream1.println("");
        java.io.PrintStream printStream4 = new java.io.PrintStream((java.io.OutputStream) printStream1);
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.crossModuleMethodMotion = true;
        compilerOptions5.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions10.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy13 = compilerOptions10.propertyRenaming;
        java.lang.String[] strArray16 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        compilerOptions10.setStripTypes((java.util.Set<java.lang.String>) strSet17);
        compilerOptions5.stripNamePrefixes = strSet17;
        compilerOptions5.lineBreak = true;
        compilerOptions5.setCheckTypes(false);
        compilerOptions5.setRemoveAbstractMethods(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode28 = null;
        compilerOptions27.setTracerMode(tracerMode28);
        boolean boolean30 = compilerOptions27.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel31 = compilerOptions27.sourceMapDetailLevel;
        compilerOptions27.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions34 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions34.crossModuleMethodMotion = true;
        compilerOptions34.optimizeParameters = true;
        compilerOptions34.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel42 = compilerOptions34.checkGlobalNamesLevel;
        compilerOptions27.setReportMissingOverride(checkLevel42);
        java.util.Set<java.lang.String> strSet44 = compilerOptions27.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions45 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel46 = compilerOptions45.checkRequires;
        compilerOptions27.setReportMissingOverride(checkLevel46);
        java.util.Set<java.lang.String> strSet48 = compilerOptions27.stripNameSuffixes;
        compilerOptions27.setOptimizeReturns(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions51 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions51.crossModuleMethodMotion = true;
        compilerOptions51.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy56 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions57 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions57.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy60 = compilerOptions57.propertyRenaming;
        compilerOptions51.setRenamingPolicy(variableRenamingPolicy56, propertyRenamingPolicy60);
        compilerOptions51.setTransformAMDToCJSModules(true);
        boolean boolean64 = compilerOptions51.exportTestFunctions;
        boolean boolean65 = compilerOptions51.exportTestFunctions;
        boolean boolean66 = compilerOptions51.foldConstants;
        byte[] byteArray67 = new byte[] {};
        compilerOptions51.setInputVariableMapSerialized(byteArray67);
        compilerOptions27.inputPropertyMapSerialized = byteArray67;
        compilerOptions5.setInputPropertyMapSerialized(byteArray67);
        printStream1.write(byteArray67);
        java.io.PrintStream printStream73 = new java.io.PrintStream((java.io.OutputStream) printStream1, false);
        printStream1.println("InputId: JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of code motion iterations: {0}");
        com.google.javascript.jscomp.JSModule jSModule78 = new com.google.javascript.jscomp.JSModule("PARAM_LIST 0");
        java.util.Set<com.google.javascript.jscomp.JSModule> jSModuleSet79 = jSModule78.getThisAndAllDependencies();
        com.google.javascript.jscomp.JSModule[] jSModuleArray80 = com.google.javascript.jscomp.JSModule.sortJsModules((java.util.Collection<com.google.javascript.jscomp.JSModule>) jSModuleSet79);
        java.io.PrintStream printStream81 = printStream1.printf("TYPEOF OFF", (java.lang.Object[]) jSModuleArray80);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy13 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy13.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(detailLevel31);
        org.junit.Assert.assertTrue("'" + checkLevel42 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel42.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + checkLevel46 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel46.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy60 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy60.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(jSModuleSet79);
        org.junit.Assert.assertNotNull(jSModuleArray80);
        org.junit.Assert.assertNotNull(printStream81);
    }

    @Test
    public void test10885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10885");
        com.google.javascript.jscomp.SourceFile.Builder builder1 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile5 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int7 = sourceFile5.getLineOfOffset((int) (short) 1);
        java.io.Reader reader8 = sourceFile5.getCodeReader();
        int int9 = reader8.read();
        com.google.javascript.jscomp.SourceFile sourceFile10 = builder1.buildFromReader("*global*", reader8);
        java.nio.charset.Charset charset11 = null;
        com.google.javascript.jscomp.SourceFile.Builder builder12 = builder1.withCharset(charset11);
        java.io.File file15 = new java.io.File(":", "hi!");
        boolean boolean18 = file15.setExecutable(true, false);
        long long19 = file15.lastModified();
        boolean boolean20 = file15.mkdir();
        com.google.javascript.jscomp.SourceFile sourceFile21 = builder1.buildFromFile(file15);
        com.google.javascript.jscomp.SourceFile.Builder builder23 = builder1.withOriginalPath("java.io.IOException: OFF");
        java.nio.charset.Charset charset24 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str25 = charset24.name();
        java.lang.String str26 = charset24.name();
        com.google.javascript.jscomp.SourceFile.Builder builder27 = builder1.withCharset(charset24);
        java.nio.charset.Charset charset29 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str30 = charset29.name();
        java.util.Locale locale31 = null;
        java.lang.String str32 = charset29.displayName(locale31);
        com.google.javascript.jscomp.JSSourceFile jSSourceFile33 = com.google.javascript.jscomp.JSSourceFile.fromFile("Node tree inequality:\nTree1:\nPARAM_LIST\n    NAME \n\n\nTree2:\nNUMBER -1.0\n\n\nSubtree1: PARAM_LIST\n    NAME \n\n\nSubtree2: NUMBER -1.0\n", charset29);
        java.nio.charset.CharsetEncoder charsetEncoder34 = charset29.newEncoder();
        com.google.javascript.jscomp.SourceFile.Builder builder35 = builder1.withCharset(charset29);
        java.util.Set<java.lang.String> strSet36 = charset29.aliases();
        com.google.javascript.jscomp.JSSourceFile jSSourceFile37 = com.google.javascript.jscomp.JSSourceFile.fromFile("InputId: STRING PARAM_LIST 49", charset29);
        org.junit.Assert.assertNotNull(sourceFile5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(sourceFile10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertEquals(file15.getParent(), ":");
        org.junit.Assert.assertEquals(file15.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 280489385000L + "'", long19 == 280489385000L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(sourceFile21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(charset24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "US-ASCII" + "'", str25, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "US-ASCII" + "'", str26, "US-ASCII");
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(charset29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "US-ASCII" + "'", str30, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "US-ASCII" + "'", str32, "US-ASCII");
        org.junit.Assert.assertNotNull(jSSourceFile33);
        org.junit.Assert.assertNotNull(charsetEncoder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(jSSourceFile37);
    }

    @Test
    public void test10886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10886");
        com.google.javascript.jscomp.DiagnosticType diagnosticType2 = com.google.javascript.jscomp.DiagnosticType.warning("PARAM_LIST", "PARAM_LIST\n");
        com.google.javascript.jscomp.DiagnosticType diagnosticType5 = com.google.javascript.jscomp.DiagnosticType.error("InputId: *global*", "");
        int int6 = diagnosticType2.compareTo(diagnosticType5);
        com.google.javascript.jscomp.DiagnosticType diagnosticType7 = com.google.javascript.jscomp.Compiler.OPTIMIZE_LOOP_ERROR;
        java.lang.String str8 = diagnosticType7.toString();
        int int9 = diagnosticType5.compareTo(diagnosticType7);
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup10 = com.google.javascript.jscomp.DiagnosticGroup.forType(diagnosticType7);
        org.junit.Assert.assertNotNull(diagnosticType2);
        org.junit.Assert.assertNotNull(diagnosticType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 7 + "'", int6 == 7);
        org.junit.Assert.assertNotNull(diagnosticType7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of optimization iterations: {0}" + "'", str8, "JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of optimization iterations: {0}");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(diagnosticGroup10);
    }

    @Test
    public void test10887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10887");
        com.google.javascript.rhino.Node.SideEffectFlags sideEffectFlags1 = new com.google.javascript.rhino.Node.SideEffectFlags(2147483647);
        sideEffectFlags1.clearSideEffectFlags();
        sideEffectFlags1.clearAllFlags();
        sideEffectFlags1.setMutatesGlobalState();
    }

    @Test
    public void test10888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10888");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        compilerOptions0.inlineFunctions = true;
        compilerOptions0.setCommonJSModulePathPrefix(":");
        compilerOptions0.setCrossModuleCodeMotion(true);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode11 = compilerOptions0.getLanguageIn();
        compilerOptions0.setExtractPrototypeMemberDeclarations(true);
        compilerOptions0.setSpecializeInitialModule(false);
        compilerOptions0.setCollapsePropertiesOnExternTypes(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean19 = compilerOptions18.moveFunctionDeclarations;
        compilerOptions18.setReportPath("java.io.IOException: ");
        boolean boolean22 = compilerOptions18.inlineConstantVars;
        boolean boolean23 = compilerOptions18.deadAssignmentElimination;
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode25 = null;
        compilerOptions24.setTracerMode(tracerMode25);
        boolean boolean27 = compilerOptions24.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel28 = compilerOptions24.sourceMapDetailLevel;
        compilerOptions24.setColorizeErrorOutput(true);
        compilerOptions24.generatePseudoNames = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy33 = com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED;
        compilerOptions24.setVariableRenaming(variableRenamingPolicy33);
        com.google.javascript.jscomp.ErrorFormat errorFormat35 = compilerOptions24.errorFormat;
        compilerOptions18.setErrorFormat(errorFormat35);
        compilerOptions0.setErrorFormat(errorFormat35);
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertTrue("'" + languageMode11 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode11.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(detailLevel28);
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy33 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED + "'", variableRenamingPolicy33.equals(com.google.javascript.jscomp.VariableRenamingPolicy.UNSPECIFIED));
        org.junit.Assert.assertNotNull(errorFormat35);
    }

    @Test
    public void test10889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10889");
        com.google.javascript.jscomp.CheckLevel checkLevel4 = com.google.javascript.jscomp.CheckLevel.WARNING;
        com.google.javascript.jscomp.DiagnosticType diagnosticType6 = com.google.javascript.jscomp.DiagnosticType.make("WARNING", checkLevel4, "hi!");
        java.lang.String[] strArray9 = new java.lang.String[] { ":/hi!", "US-ASCII" };
        com.google.javascript.jscomp.JSError jSError10 = com.google.javascript.jscomp.JSError.make("goog.abstractMethod", (-1), (-1), diagnosticType6, strArray9);
        com.google.javascript.jscomp.CheckLevel checkLevel11 = diagnosticType6.level;
        java.lang.Object obj12 = null;
        boolean boolean13 = diagnosticType6.equals(obj12);
        org.junit.Assert.assertTrue("'" + checkLevel4 + "' != '" + com.google.javascript.jscomp.CheckLevel.WARNING + "'", checkLevel4.equals(com.google.javascript.jscomp.CheckLevel.WARNING));
        org.junit.Assert.assertNotNull(diagnosticType6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(jSError10);
        org.junit.Assert.assertTrue("'" + checkLevel11 + "' != '" + com.google.javascript.jscomp.CheckLevel.WARNING + "'", checkLevel11.equals(com.google.javascript.jscomp.CheckLevel.WARNING));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test10890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10890");
        com.google.javascript.rhino.Node node3 = new com.google.javascript.rhino.Node(54, 45, 0);
        boolean boolean4 = node3.isThis();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test10891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10891");
        com.google.javascript.jscomp.SourceFile sourceFile1 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput3 = new com.google.javascript.jscomp.CompilerInput(sourceFile1, true);
        com.google.javascript.rhino.InputId inputId5 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput7 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput3, inputId5, true);
        java.lang.String str8 = compilerInput7.toString();
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray12 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList13 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList13, jSTypeArray12);
        com.google.javascript.rhino.Node node15 = jSTypeRegistry11.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList13);
        com.google.javascript.rhino.ErrorReporter errorReporter16 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry17 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter16);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray18 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList19 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList19, jSTypeArray18);
        com.google.javascript.rhino.Node node21 = jSTypeRegistry17.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList19);
        node15.addChildrenToBack(node21);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        boolean boolean29 = node28.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.Node node35 = jSTypeRegistry31.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        boolean boolean36 = node35.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        com.google.javascript.rhino.Node node45 = new com.google.javascript.rhino.Node((int) (short) 0, node15, node28, node35, node42, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter47 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry48 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter47);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray49 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList50 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList50, jSTypeArray49);
        com.google.javascript.rhino.Node node52 = jSTypeRegistry48.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList50);
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry54 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray55 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList56 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56, jSTypeArray55);
        com.google.javascript.rhino.Node node58 = jSTypeRegistry54.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        node52.addChildrenToBack(node58);
        com.google.javascript.rhino.ErrorReporter errorReporter60 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter60);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray62 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList63 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63, jSTypeArray62);
        com.google.javascript.rhino.Node node65 = jSTypeRegistry61.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        boolean boolean66 = node65.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter67 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry68 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter67);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray69 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList70 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList70, jSTypeArray69);
        com.google.javascript.rhino.Node node72 = jSTypeRegistry68.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList70);
        boolean boolean73 = node72.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter74 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry75 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter74);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray76 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList77 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList77, jSTypeArray76);
        com.google.javascript.rhino.Node node79 = jSTypeRegistry75.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList77);
        com.google.javascript.rhino.Node node82 = new com.google.javascript.rhino.Node((int) (short) 0, node52, node65, node72, node79, 0, 49);
        com.google.javascript.rhino.Node node83 = node45.useSourceInfoFrom(node65);
        boolean boolean84 = node83.hasChildren();
        boolean boolean85 = node83.isArrayLit();
        com.google.javascript.rhino.InputId inputId87 = new com.google.javascript.rhino.InputId("*global*");
        java.lang.String str88 = inputId87.toString();
        node83.setInputId(inputId87);
        java.lang.String str90 = inputId87.getIdName();
        com.google.javascript.jscomp.CompilerInput compilerInput92 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput7, inputId87, false);
        com.google.javascript.jscomp.SourceAst sourceAst93 = compilerInput7.getAst();
        com.google.javascript.jscomp.SourceAst sourceAst94 = compilerInput7.getSourceAst();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.jscomp.Region region96 = compilerInput7.getRegion(38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "*global*" + "'", str8, "*global*");
        org.junit.Assert.assertNotNull(jSTypeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(jSTypeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(jSTypeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(jSTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(jSTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(jSTypeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(jSTypeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "InputId: *global*" + "'", str88, "InputId: *global*");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "*global*" + "'", str90, "*global*");
        org.junit.Assert.assertNotNull(sourceAst93);
        org.junit.Assert.assertNotNull(sourceAst94);
    }

    @Test
    public void test10892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10892");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        com.google.javascript.rhino.jstype.JSType jSType16 = jSTypeRegistry7.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList20 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20, jSTypeArray19);
        com.google.javascript.rhino.Node node22 = jSTypeRegistry18.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList20);
        com.google.javascript.rhino.jstype.JSType jSType27 = jSTypeRegistry18.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] { jSType27 };
        com.google.javascript.rhino.jstype.FunctionType functionType29 = jSTypeRegistry1.createConstructorTypeWithVarArgs(jSType16, jSTypeArray28);
        com.google.javascript.rhino.ErrorReporter errorReporter30 = jSTypeRegistry1.getErrorReporter();
        jSTypeRegistry1.identifyNonNullableName("NUMBER -1.0");
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry35 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33, true);
        com.google.javascript.rhino.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry37 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter36);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray38 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList39 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList39, jSTypeArray38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        boolean boolean44 = jSTypeList39.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry37.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList39);
        jSTypeRegistry37.forwardDeclareType("PARAM_LIST");
        jSTypeRegistry37.setLastGeneration(true);
        com.google.javascript.rhino.jstype.JSTypeNative[] jSTypeNativeArray50 = new com.google.javascript.rhino.jstype.JSTypeNative[] {};
        com.google.javascript.rhino.jstype.JSType jSType51 = jSTypeRegistry37.createUnionType(jSTypeNativeArray50);
        com.google.javascript.rhino.jstype.JSType jSType52 = jSTypeRegistry35.createUnionType(jSTypeNativeArray50);
        com.google.javascript.rhino.jstype.JSType jSType53 = jSTypeRegistry1.createUnionType(jSTypeNativeArray50);
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSType16);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(jSType27);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertNotNull(functionType29);
        org.junit.Assert.assertNull(errorReporter30);
        org.junit.Assert.assertNotNull(jSTypeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(jSTypeNativeArray50);
        org.junit.Assert.assertNotNull(jSType51);
        org.junit.Assert.assertNotNull(jSType52);
        org.junit.Assert.assertNotNull(jSType53);
    }

    @Test
    public void test10893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10893");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        compilerOptions7.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions7.checkGlobalNamesLevel;
        compilerOptions0.setReportMissingOverride(checkLevel15);
        java.util.Set<java.lang.String> strSet17 = compilerOptions0.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel19 = compilerOptions18.checkRequires;
        compilerOptions0.setReportMissingOverride(checkLevel19);
        compilerOptions0.setGatherCssNames(true);
        compilerOptions0.setLineBreak(false);
        compilerOptions0.setGroupVariableDeclarations(false);
        compilerOptions0.setSyntheticBlockStartMarker("PARAM_LIST\n");
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap29 = null;
        compilerOptions0.cssRenamingMap = cssRenamingMap29;
        compilerOptions0.prettyPrint = true;
        com.google.javascript.jscomp.CheckLevel checkLevel33 = compilerOptions0.reportMissingOverride;
        compilerOptions0.setSkipAllPasses(false);
        com.google.javascript.jscomp.CheckLevel checkLevel36 = compilerOptions0.checkMissingGetCssNameLevel;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + checkLevel19 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel19.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel33 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel33.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel36 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel36.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10894");
        com.google.javascript.jscomp.DependencyOptions dependencyOptions0 = new com.google.javascript.jscomp.DependencyOptions();
        com.google.javascript.jscomp.DependencyOptions dependencyOptions2 = dependencyOptions0.setDependencyPruning(false);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions4 = dependencyOptions0.setMoocherDropping(true);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions6 = dependencyOptions4.setDependencyPruning(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode8 = null;
        compilerOptions7.setTracerMode(tracerMode8);
        boolean boolean10 = compilerOptions7.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel11 = compilerOptions7.sourceMapDetailLevel;
        compilerOptions7.setColorizeErrorOutput(true);
        compilerOptions7.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions16 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions16.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy19 = compilerOptions16.propertyRenaming;
        compilerOptions7.propertyRenaming = propertyRenamingPolicy19;
        com.google.javascript.jscomp.CheckLevel checkLevel21 = compilerOptions7.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel22 = compilerOptions7.checkRequires;
        compilerOptions7.setReportPath("OFF");
        byte[] byteArray25 = compilerOptions7.inputPropertyMapSerialized;
        compilerOptions7.setGenerateExports(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions28 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode29 = null;
        compilerOptions28.setTracerMode(tracerMode29);
        boolean boolean31 = compilerOptions28.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel32 = compilerOptions28.sourceMapDetailLevel;
        compilerOptions28.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet35 = compilerOptions28.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile37 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput39 = new com.google.javascript.jscomp.CompilerInput(sourceFile37, true);
        com.google.javascript.rhino.InputId inputId41 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput43 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput39, inputId41, true);
        java.lang.String str44 = compilerInput43.toString();
        boolean boolean45 = strSet35.contains((java.lang.Object) compilerInput43);
        java.lang.Object[] objArray46 = strSet35.toArray();
        java.lang.Object obj47 = null;
        boolean boolean48 = strSet35.contains(obj47);
        boolean boolean49 = strSet35.isEmpty();
        compilerOptions7.setStripTypes(strSet35);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions51 = dependencyOptions6.setEntryPoints((java.util.Collection<java.lang.String>) strSet35);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions53 = dependencyOptions51.setMoocherDropping(true);
        com.google.javascript.jscomp.DependencyOptions dependencyOptions55 = dependencyOptions51.setDependencySorting(true);
        org.junit.Assert.assertNotNull(dependencyOptions2);
        org.junit.Assert.assertNotNull(dependencyOptions4);
        org.junit.Assert.assertNotNull(dependencyOptions6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(detailLevel11);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy19 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy19.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel21 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel21.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel22 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel22.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(detailLevel32);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "*global*" + "'", str44, "*global*");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(dependencyOptions51);
        org.junit.Assert.assertNotNull(dependencyOptions53);
        org.junit.Assert.assertNotNull(dependencyOptions55);
    }

    @Test
    public void test10895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10895");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int4 = sourceFile2.getLineOfOffset((int) (short) 1);
        java.lang.String str5 = sourceFile2.getName();
        com.google.javascript.jscomp.JsAst jsAst6 = new com.google.javascript.jscomp.JsAst(sourceFile2);
        jsAst6.clearAst();
        com.google.javascript.jscomp.SourceFile sourceFile10 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int12 = sourceFile10.getLineOfOffset((int) (short) 1);
        java.lang.String str13 = sourceFile10.getName();
        java.lang.String str14 = sourceFile10.getName();
        jsAst6.setSourceFile(sourceFile10);
        com.google.javascript.jscomp.SourceFile sourceFile16 = jsAst6.getSourceFile();
        jsAst6.clearAst();
        com.google.javascript.jscomp.SourceFile sourceFile20 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int22 = sourceFile20.getLineOfOffset((int) (short) 1);
        java.lang.String str23 = sourceFile20.getName();
        com.google.javascript.jscomp.JsAst jsAst24 = new com.google.javascript.jscomp.JsAst(sourceFile20);
        jsAst24.clearAst();
        com.google.javascript.jscomp.SourceFile sourceFile28 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int30 = sourceFile28.getLineOfOffset((int) (short) 1);
        java.lang.String str31 = sourceFile28.getName();
        java.lang.String str32 = sourceFile28.getName();
        jsAst24.setSourceFile(sourceFile28);
        com.google.javascript.jscomp.SourceFile sourceFile34 = jsAst24.getSourceFile();
        boolean boolean35 = sourceFile34.isExtern();
        int int37 = sourceFile34.getColumnOfOffset(36);
        jsAst6.setSourceFile(sourceFile34);
        com.google.javascript.rhino.InputId inputId39 = jsAst6.getInputId();
        java.lang.String str40 = inputId39.toString();
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(sourceFile10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(sourceFile16);
        org.junit.Assert.assertNotNull(sourceFile20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(sourceFile28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(sourceFile34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 36 + "'", int37 == 36);
        org.junit.Assert.assertNotNull(inputId39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "InputId: hi!" + "'", str40, "InputId: hi!");
    }

    @Test
    public void test10896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10896");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean1 = java.nio.charset.Charset.isSupported(":/hi!/PARAM_LIST\n");
            org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: :/hi!/PARAM_LIST?");
        } catch (java.nio.charset.IllegalCharsetNameException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10897");
        com.google.javascript.jscomp.DiagnosticGroups diagnosticGroups0 = new com.google.javascript.jscomp.DiagnosticGroups();
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup2 = diagnosticGroups0.forName(":");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup4 = diagnosticGroups0.forName("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup6 = diagnosticGroups0.forName("java.io.IOException: ");
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup8 = diagnosticGroups0.forName("InputId: hi!");
        org.junit.Assert.assertNull(diagnosticGroup2);
        org.junit.Assert.assertNull(diagnosticGroup4);
        org.junit.Assert.assertNull(diagnosticGroup6);
        org.junit.Assert.assertNull(diagnosticGroup8);
    }

    @Test
    public void test10898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10898");
        com.google.javascript.jscomp.SourceFile.Builder builder0 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile4 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int6 = sourceFile4.getLineOfOffset((int) (short) 1);
        java.io.Reader reader7 = sourceFile4.getCodeReader();
        int int8 = reader7.read();
        com.google.javascript.jscomp.SourceFile sourceFile9 = builder0.buildFromReader("*global*", reader7);
        java.nio.charset.Charset charset10 = null;
        com.google.javascript.jscomp.SourceFile.Builder builder11 = builder0.withCharset(charset10);
        com.google.javascript.jscomp.SourceFile sourceFile13 = builder11.buildFromFile("/experiment/:/hi!");
        com.google.javascript.jscomp.SourceFile.Builder builder15 = builder11.withOriginalPath(":");
        com.google.javascript.jscomp.SourceFile sourceFile17 = builder15.buildFromFile("java.io.IOException: OFF");
        com.google.javascript.jscomp.SourceFile.Generator generator19 = null;
        com.google.javascript.jscomp.SourceFile sourceFile20 = builder15.buildFromGenerator("OFF", generator19);
        com.google.javascript.jscomp.SourceFile sourceFile23 = builder15.buildFromCode("PARAM_LIST\n", "/experiment/:/hi!");
        com.google.javascript.jscomp.SourceFile.Builder builder25 = builder15.withOriginalPath("PARAM_LIST");
        java.io.File file31 = new java.io.File(":");
        java.io.File file33 = new java.io.File(file31, "FINEST");
        java.io.File file34 = java.io.File.createTempFile("OFF", "", file31);
        java.io.File file35 = file31.getCanonicalFile();
        boolean boolean36 = file31.mkdirs();
        java.io.File file37 = java.io.File.createTempFile("Unversioned directory", "java.io.IOException: OFF", file31);
        boolean boolean40 = file31.setExecutable(false, true);
        long long41 = file31.length();
        java.nio.charset.Charset charset42 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str43 = charset42.name();
        java.util.Set<java.lang.String> strSet44 = charset42.aliases();
        java.util.Set<java.lang.String> strSet45 = charset42.aliases();
        com.google.javascript.jscomp.SourceFile sourceFile46 = com.google.javascript.jscomp.SourceFile.fromFile(file31, charset42);
        com.google.javascript.jscomp.SourceFile.Builder builder47 = builder25.withCharset(charset42);
        com.google.javascript.jscomp.SourceFile.Builder builder49 = builder25.withOriginalPath("JSC_OPTIMIZE_LOOP_ERROR. Exceeded max number of code motion iterations: {0} at (unknown source) line (unknown line) : (unknown column)");
        java.io.InputStream inputStream51 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.jscomp.SourceFile sourceFile52 = builder49.buildFromInputStream("/experiment/:/hi!", inputStream51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(sourceFile4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(sourceFile9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(sourceFile13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(sourceFile17);
        org.junit.Assert.assertNotNull(sourceFile20);
        org.junit.Assert.assertNotNull(sourceFile23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull("file31.getParent() == null", file31.getParent());
        org.junit.Assert.assertEquals(file31.toString(), ":");
        org.junit.Assert.assertEquals(file33.getParent(), ":");
        org.junit.Assert.assertEquals(file33.toString(), ":/FINEST");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), ":");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), ":/OFF3161498000281346113");
        org.junit.Assert.assertNotNull(file35);
// flaky:         org.junit.Assert.assertEquals(file35.getParent(), "/experiment");
// flaky:         org.junit.Assert.assertEquals(file35.toString(), "/experiment/:");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), ":");
// flaky:         org.junit.Assert.assertEquals(file37.toString(), ":/Unversioned directory5256511592790272557java.io.IOException: OFF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long41 + "' != '" + 12288L + "'", long41 == 12288L);
        org.junit.Assert.assertNotNull(charset42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "US-ASCII" + "'", str43, "US-ASCII");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(sourceFile46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
    }

    @Test
    public void test10899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10899");
        java.io.PrintStream printStream1 = new java.io.PrintStream("goog.abstractMethod");
        printStream1.print(39L);
        com.google.javascript.jscomp.Compiler compiler4 = new com.google.javascript.jscomp.Compiler(printStream1);
        printStream1.println(83);
        printStream1.println();
    }

    @Test
    public void test10900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10900");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.crossModuleCodeMotion = true;
        compilerOptions0.setManageClosureDependencies(false);
        boolean boolean6 = compilerOptions0.inlineLocalFunctions;
        boolean boolean7 = compilerOptions0.markAsCompiled;
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions0.checkProvides;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10901");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setProtectHiddenSideEffects(true);
        boolean boolean5 = compilerOptions0.isExternExportsEnabled();
        boolean boolean6 = compilerOptions0.aliasAllStrings;
        compilerOptions0.reserveRawExports = true;
        compilerOptions0.inlineGetters = false;
        compilerOptions0.enableExternExports(true);
        com.google.javascript.jscomp.CompilerOptions.TweakProcessing tweakProcessing13 = compilerOptions0.getTweakProcessing();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + tweakProcessing13 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF + "'", tweakProcessing13.equals(com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF));
    }

    @Test
    public void test10902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10902");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int4 = sourceFile2.getLineOfOffset((int) (short) 1);
        java.lang.String str5 = sourceFile2.getName();
        com.google.javascript.jscomp.JsAst jsAst6 = new com.google.javascript.jscomp.JsAst(sourceFile2);
        jsAst6.clearAst();
        com.google.javascript.jscomp.CompilerInput compilerInput10 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) jsAst6, "*global*", false);
        com.google.javascript.rhino.InputId inputId11 = compilerInput10.getInputId();
        com.google.javascript.jscomp.SourceFile sourceFile12 = compilerInput10.getSourceFile();
        com.google.javascript.jscomp.SourceFile sourceFile15 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int17 = sourceFile15.getLineOfOffset((int) (short) 1);
        int int19 = sourceFile15.getLineOfOffset(100);
        java.lang.String str20 = sourceFile15.getName();
        java.io.Reader reader21 = sourceFile15.getCodeReader();
        com.google.javascript.jscomp.CompilerInput compilerInput22 = new com.google.javascript.jscomp.CompilerInput(sourceFile15);
        compilerInput10.setSourceFile(sourceFile15);
        com.google.javascript.jscomp.JSModule jSModule24 = compilerInput10.getModule();
        com.google.javascript.jscomp.SourceFile sourceFile25 = compilerInput10.getSourceFile();
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(inputId11);
        org.junit.Assert.assertNotNull(sourceFile12);
        org.junit.Assert.assertNotNull(sourceFile15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(reader21);
        org.junit.Assert.assertNull(jSModule24);
        org.junit.Assert.assertNotNull(sourceFile25);
    }

    @Test
    public void test10903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10903");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        node3.putBooleanProp(2147483647, false);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry14.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        node12.addChildrenToBack(node18);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile20 = node12.getStaticSourceFile();
        com.google.javascript.rhino.Node node21 = node3.copyInformationFrom(node12);
        com.google.javascript.rhino.Node node25 = new com.google.javascript.rhino.Node((int) (byte) 10, 51, 39);
        boolean boolean26 = node25.isWhile();
        boolean boolean27 = node25.isString();
        boolean boolean28 = node25.isAssignAdd();
        com.google.javascript.rhino.Node node29 = node21.clonePropsFrom(node25);
        node21.setWasEmptyNode(true);
        node21.setSourceEncodedPositionForTree((-17));
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(staticSourceFile20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(node29);
    }

    @Test
    public void test10904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10904");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable11 = jSTypeRegistry1.getTypesWithProperty(":");
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        jSTypeRegistry13.clearNamedTypes();
        jSTypeRegistry13.forwardDeclareType("STRING PARAM_LIST 49");
        com.google.javascript.rhino.jstype.ObjectType objectType17 = jSTypeRegistry13.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.JSType jSType18 = jSTypeRegistry1.createNullableType((com.google.javascript.rhino.jstype.JSType) objectType17);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable20 = jSTypeRegistry1.getTypesWithProperty("2019/07/12 07:12");
        boolean boolean21 = jSTypeRegistry1.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSType jSType22 = null;
        com.google.javascript.rhino.Node node27 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean29 = node27.getBooleanProp((int) (byte) 10);
        com.google.javascript.rhino.Node node32 = new com.google.javascript.rhino.Node((int) (short) -1, node27, (int) '/', 4095);
        boolean boolean33 = node32.isAnd();
        node32.putIntProp(15, 2147483647);
        com.google.javascript.rhino.Node node37 = node32.getLastSibling();
        com.google.javascript.rhino.jstype.FunctionType functionType38 = jSTypeRegistry1.createFunctionType(jSType22, node37);
        com.google.javascript.rhino.jstype.JSType jSType40 = jSTypeRegistry1.getType("");
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeIterable11);
        org.junit.Assert.assertNotNull(objectType17);
        org.junit.Assert.assertNotNull(jSType18);
        org.junit.Assert.assertNotNull(jSTypeIterable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(functionType38);
        org.junit.Assert.assertNull(jSType40);
    }

    @Test
    public void test10905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10905");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        java.lang.Object obj6 = null;
        com.google.javascript.rhino.Node node7 = strMap4.get(obj6);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel11 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions8.setSourceMapDetailLevel(detailLevel11);
        boolean boolean13 = compilerOptions8.ideMode;
        compilerOptions8.setUnaliasableGlobals("");
        com.google.javascript.jscomp.CheckLevel checkLevel16 = compilerOptions8.checkUnreachableCode;
        com.google.javascript.rhino.Node node17 = strMap4.remove((java.lang.Object) checkLevel16);
        com.google.javascript.jscomp.CompilerOptions compilerOptions19 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode20 = null;
        compilerOptions19.setTracerMode(tracerMode20);
        boolean boolean22 = compilerOptions19.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel23 = compilerOptions19.sourceMapDetailLevel;
        compilerOptions19.optimizeArgumentsArray = false;
        compilerOptions19.setAliasableGlobals("STRING PARAM_LIST 49");
        boolean boolean28 = compilerOptions19.rewriteFunctionExpressions;
        compilerOptions19.setSourceMapOutputPath("sun.util.logging.resources.logging");
        boolean boolean31 = strMap4.remove((java.lang.Object) "InputId: JSC_OPTIMIZE_LOOP_ERROR: Exceeded max number of code motion iterations: {0}", (java.lang.Object) "sun.util.logging.resources.logging");
        com.google.javascript.rhino.Node node33 = null;
        com.google.javascript.rhino.Node node34 = strMap4.put("/tmp", node33);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        boolean boolean42 = jSTypeList37.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType43 = com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN;
        com.google.javascript.rhino.Node node47 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean48 = node47.isTry();
        java.lang.String str49 = node47.toString();
        boolean boolean50 = node47.isIn();
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship55 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType43, node47, node54);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder56 = node54.new FileLevelJsDocBuilder();
        boolean boolean57 = jSTypeList37.remove((java.lang.Object) node54);
        node54.addSuppression(":");
        boolean boolean60 = node54.isLabelName();
        com.google.javascript.rhino.ErrorReporter errorReporter61 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry62 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter61);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray63 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList64 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList64, jSTypeArray63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        boolean boolean69 = jSTypeList64.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry62.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList64);
        boolean boolean71 = node70.isVarArgs();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable72 = node70.siblings();
        com.google.javascript.jscomp.SourceFile sourceFile76 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int78 = sourceFile76.getLineOfOffset((int) (short) 1);
        int int80 = sourceFile76.getLineOfOffset(100);
        java.lang.String str81 = sourceFile76.getName();
        java.io.Reader reader82 = sourceFile76.getCodeReader();
        reader82.reset();
        com.google.javascript.jscomp.SourceFile sourceFile84 = com.google.javascript.jscomp.SourceFile.fromReader("PARAM_LIST", reader82);
        node70.setStaticSourceFile((com.google.javascript.rhino.jstype.StaticSourceFile) sourceFile84);
        boolean boolean86 = strMap4.replace("PARAM_LIST8468507651125183373Unversioned directory", node54, node70);
        boolean boolean87 = node54.isStringKey();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(detailLevel11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + checkLevel16 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel16.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(detailLevel23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + subclassType43 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN + "'", subclassType43.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN));
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "STRING PARAM_LIST 49" + "'", str49, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(jSTypeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(nodeIterable72);
        org.junit.Assert.assertNotNull(sourceFile76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(reader82);
        org.junit.Assert.assertNotNull(sourceFile84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test10906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10906");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        boolean boolean5 = compilerOptions0.ideMode;
        compilerOptions0.renamePrefix = "hi!";
        boolean boolean8 = compilerOptions0.inlineConstantVars;
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode10 = null;
        compilerOptions9.setTracerMode(tracerMode10);
        boolean boolean12 = compilerOptions9.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel13 = compilerOptions9.sourceMapDetailLevel;
        compilerOptions9.setColorizeErrorOutput(true);
        compilerOptions9.collapseProperties = false;
        com.google.javascript.jscomp.CheckLevel checkLevel18 = com.google.javascript.jscomp.CheckLevel.WARNING;
        compilerOptions9.setCheckMissingGetCssNameLevel(checkLevel18);
        compilerOptions0.checkProvides = checkLevel18;
        compilerOptions0.markAsCompiled = true;
        compilerOptions0.setLocale("OFF");
        compilerOptions0.setConvertToDottedProperties(false);
        compilerOptions0.setLabelRenaming(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions29 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions29.crossModuleMethodMotion = true;
        compilerOptions29.skipAllCompilerPasses();
        compilerOptions29.resetWarningsGuard();
        compilerOptions29.setInlineLocalVariables(false);
        compilerOptions29.coalesceVariableNames = true;
        com.google.javascript.jscomp.CheckLevel checkLevel38 = compilerOptions29.aggressiveVarCheck;
        compilerOptions0.checkGlobalNamesLevel = checkLevel38;
        compilerOptions0.resetWarningsGuard();
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode41 = compilerOptions0.getLanguageOut();
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(detailLevel13);
        org.junit.Assert.assertTrue("'" + checkLevel18 + "' != '" + com.google.javascript.jscomp.CheckLevel.WARNING + "'", checkLevel18.equals(com.google.javascript.jscomp.CheckLevel.WARNING));
        org.junit.Assert.assertTrue("'" + checkLevel38 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel38.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(languageMode41);
    }

    @Test
    public void test10907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10907");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(true, false);
        boolean boolean7 = file2.setWritable(false);
        boolean boolean8 = file2.delete();
        java.io.File file11 = new java.io.File("/experiment/:", "sun.util.logging.resources.logging");
        boolean boolean12 = file2.renameTo(file11);
        long long13 = file11.length();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals(file11.getParent(), "/experiment/:");
        org.junit.Assert.assertEquals(file11.toString(), "/experiment/:/sun.util.logging.resources.logging");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 4096L + "'", long13 == 4096L);
    }

    @Test
    public void test10908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10908");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.crossModuleCodeMotion = true;
        compilerOptions0.checkSymbols = true;
        compilerOptions0.setExtractPrototypeMemberDeclarations(true);
        boolean boolean8 = compilerOptions0.checkSuspiciousCode;
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str10 = compilerOptions9.syntheticBlockStartMarker;
        compilerOptions9.labelRenaming = true;
        boolean boolean13 = compilerOptions9.inlineLocalFunctions;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        compilerOptions14.skipAllCompilerPasses();
        boolean boolean18 = compilerOptions14.flowSensitiveInlineVariables;
        java.lang.String[] strArray28 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        compilerOptions14.stripTypes = strSet29;
        compilerOptions9.setStripNameSuffixes((java.util.Set<java.lang.String>) strSet29);
        compilerOptions0.setExtraAnnotationNames((java.util.Set<java.lang.String>) strSet29);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        compilerOptions0.setTweakReplacements(strMap34);
        compilerOptions0.setInferTypes(true);
        compilerOptions0.jqueryPass = false;
        boolean boolean40 = compilerOptions0.deadAssignmentElimination;
        compilerOptions0.setCollapseVariableDeclarations(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test10909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10909");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        jSModule1.removeAll();
        java.util.List<com.google.javascript.jscomp.JSModule> jSModuleList3 = jSModule1.getDependencies();
        com.google.javascript.jscomp.SourceFile sourceFile6 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        java.io.Reader reader7 = sourceFile6.getCodeReader();
        com.google.javascript.jscomp.CompilerInput compilerInput9 = new com.google.javascript.jscomp.CompilerInput(sourceFile6, false);
        jSModule1.addFirst(compilerInput9);
        com.google.javascript.jscomp.CompilerInput compilerInput13 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput9, "DiagnosticGroup<java.io.IOException: OFF>", true);
        com.google.javascript.jscomp.SourceFile sourceFile14 = compilerInput9.getSourceFile();
        org.junit.Assert.assertNotNull(jSModuleList3);
        org.junit.Assert.assertNotNull(sourceFile6);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertNotNull(sourceFile14);
    }

    @Test
    public void test10910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10910");
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType0 = com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN;
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean5 = node4.isTry();
        java.lang.String str6 = node4.toString();
        boolean boolean7 = node4.isIn();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship12 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType0, node4, node11);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder13 = node11.new FileLevelJsDocBuilder();
        boolean boolean14 = node11.isSetterDef();
        java.util.Set<java.lang.String> strSet15 = node11.getDirectives();
        boolean boolean16 = node11.isInc();
        boolean boolean17 = node11.isFor();
        org.junit.Assert.assertTrue("'" + subclassType0 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN + "'", subclassType0.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN));
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "STRING PARAM_LIST 49" + "'", str6, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test10911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10911");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList15 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15, jSTypeArray14);
        com.google.javascript.rhino.Node node17 = jSTypeRegistry13.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList15);
        com.google.javascript.rhino.jstype.JSType jSType22 = jSTypeRegistry13.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        com.google.javascript.rhino.jstype.JSType jSType33 = jSTypeRegistry24.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray34 = new com.google.javascript.rhino.jstype.JSType[] { jSType33 };
        com.google.javascript.rhino.jstype.FunctionType functionType35 = jSTypeRegistry7.createConstructorTypeWithVarArgs(jSType22, jSTypeArray34);
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        com.google.javascript.rhino.jstype.JSType jSType53 = jSTypeRegistry44.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter54 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter54);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.Node node59 = jSTypeRegistry55.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        com.google.javascript.rhino.jstype.JSType jSType64 = jSTypeRegistry55.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] { jSType64 };
        com.google.javascript.rhino.jstype.FunctionType functionType66 = jSTypeRegistry38.createConstructorTypeWithVarArgs(jSType53, jSTypeArray65);
        boolean boolean67 = jSTypeRegistry7.declareType("", jSType53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray71 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList72 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72, jSTypeArray71);
        boolean boolean74 = jSTypeList69.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator75 = jSTypeList69.spliterator();
        com.google.javascript.rhino.jstype.FunctionType functionType76 = jSTypeRegistry1.createFunctionTypeWithVarArgs(jSType53, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray77 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList78 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList78, jSTypeArray77);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray80 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList81 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList81, jSTypeArray80);
        boolean boolean83 = jSTypeList78.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList81);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator84 = jSTypeList78.spliterator();
        com.google.javascript.rhino.Node node85 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList78);
        java.util.ListIterator<com.google.javascript.rhino.jstype.JSType> jSTypeItor86 = jSTypeList78.listIterator();
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator87 = jSTypeList78.spliterator();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(jSType22);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(jSType33);
        org.junit.Assert.assertNotNull(jSTypeArray34);
        org.junit.Assert.assertNotNull(functionType35);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(jSType53);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(jSType64);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertNotNull(functionType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(jSTypeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(jSTypeSpliterator75);
        org.junit.Assert.assertNotNull(functionType76);
        org.junit.Assert.assertNotNull(jSTypeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(jSTypeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(jSTypeSpliterator84);
        org.junit.Assert.assertNotNull(node85);
        org.junit.Assert.assertNotNull(jSTypeItor86);
        org.junit.Assert.assertNotNull(jSTypeSpliterator87);
    }

    @Test
    public void test10912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10912");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        boolean boolean37 = node6.isDelProp();
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        jSTypeRegistry39.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSType jSType41 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] { jSType41 };
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParameters(jSTypeArray42);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        node50.addChildrenToBack(node56);
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        boolean boolean71 = node70.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray74 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList75 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList75, jSTypeArray74);
        com.google.javascript.rhino.Node node77 = jSTypeRegistry73.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList75);
        com.google.javascript.rhino.Node node80 = new com.google.javascript.rhino.Node((int) (short) 0, node50, node63, node70, node77, 0, 49);
        boolean boolean81 = node50.isDo();
        boolean boolean82 = node50.isWhile();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable83 = node50.children();
        com.google.javascript.jscomp.CodingConvention.Bind bind84 = new com.google.javascript.jscomp.CodingConvention.Bind(node6, node43, node50);
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable85 = node6.getAncestors();
        com.google.javascript.rhino.Node node89 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        java.lang.String str90 = node89.getQualifiedName();
        com.google.javascript.rhino.Node node91 = node6.srcref(node89);
        boolean boolean92 = node6.isComma();
        boolean boolean93 = node6.isOptionalArg();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable94 = node6.children();
        com.google.javascript.rhino.Node node95 = node6.detachFromParent();
        int int97 = node95.getIntProp(97);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(jSTypeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(nodeIterable83);
        org.junit.Assert.assertNotNull(ancestorIterable85);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(node91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(nodeIterable94);
        org.junit.Assert.assertNotNull(node95);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    public void test10913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10913");
        com.google.javascript.jscomp.DiagnosticType diagnosticType0 = com.google.javascript.jscomp.Compiler.OPTIMIZE_LOOP_ERROR;
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup1 = com.google.javascript.jscomp.DiagnosticGroup.forType(diagnosticType0);
        com.google.javascript.jscomp.DiagnosticGroups.DUPLICATE_VARS = diagnosticGroup1;
        com.google.javascript.jscomp.DiagnosticGroups.UNDEFINED_NAMES = diagnosticGroup1;
        com.google.javascript.jscomp.DiagnosticGroups.DEBUGGER_STATEMENT_PRESENT = diagnosticGroup1;
        org.junit.Assert.assertNotNull(diagnosticType0);
        org.junit.Assert.assertNotNull(diagnosticGroup1);
    }

    @Test
    public void test10914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10914");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.generatePseudoNames = true;
        com.google.javascript.rhino.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry11 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter10);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList15 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15, jSTypeArray14);
        com.google.javascript.rhino.Node node17 = jSTypeRegistry13.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList15);
        com.google.javascript.rhino.ErrorReporter errorReporter18 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry19 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter18);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray20 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList21 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList21, jSTypeArray20);
        com.google.javascript.rhino.Node node23 = jSTypeRegistry19.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList21);
        com.google.javascript.rhino.jstype.JSType jSType28 = jSTypeRegistry19.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        com.google.javascript.rhino.Node node34 = jSTypeRegistry30.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        com.google.javascript.rhino.jstype.JSType jSType39 = jSTypeRegistry30.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] { jSType39 };
        com.google.javascript.rhino.jstype.FunctionType functionType41 = jSTypeRegistry13.createConstructorTypeWithVarArgs(jSType28, jSTypeArray40);
        boolean boolean43 = jSTypeRegistry11.canPropertyBeDefined(jSType28, "");
        java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> objectTypeIterable45 = jSTypeRegistry11.getEachReferenceTypeWithProperty("/");
        java.lang.String[] strArray50 = new java.lang.String[] { "Unversioned directory", "/experiment/:/hi!", ":", "OFF" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        jSTypeRegistry11.setTemplateTypeNames((java.util.List<java.lang.String>) strList51);
        compilerOptions0.setReplaceStringsConfiguration(":/hi!", (java.util.List<java.lang.String>) strList51);
        com.google.javascript.jscomp.ErrorFormat errorFormat55 = compilerOptions0.errorFormat;
        boolean boolean56 = compilerOptions0.convertToDottedProperties;
        compilerOptions0.devirtualizePrototypeMethods = false;
        compilerOptions0.setRewriteFunctionExpressions(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(jSTypeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(jSType28);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(jSType39);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertNotNull(functionType41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objectTypeIterable45);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(errorFormat55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test10915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10915");
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType2 = com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN;
        com.google.javascript.rhino.Node node6 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean7 = node6.isTry();
        java.lang.String str8 = node6.toString();
        boolean boolean9 = node6.isIn();
        com.google.javascript.rhino.Node node13 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship14 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType2, node6, node13);
        node6.setSourceEncodedPositionForTree((int) 'a');
        com.google.javascript.rhino.JSDocInfo jSDocInfo17 = node6.getJSDocInfo();
        int int18 = node6.getLength();
        boolean boolean19 = node6.isContinue();
        com.google.javascript.rhino.Node[] nodeArray20 = new com.google.javascript.rhino.Node[] { node6 };
        com.google.javascript.rhino.Node node23 = new com.google.javascript.rhino.Node(54, nodeArray20, 1, 15);
        node23.setIsSyntheticBlock(true);
        com.google.javascript.rhino.Node node26 = new com.google.javascript.rhino.Node((-4), node23);
        java.util.Set<java.lang.String> strSet27 = node23.getDirectives();
        org.junit.Assert.assertTrue("'" + subclassType2 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN + "'", subclassType2.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "STRING PARAM_LIST 49" + "'", str8, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(jSDocInfo17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(nodeArray20);
        org.junit.Assert.assertNull(strSet27);
    }

    @Test
    public void test10916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10916");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        compilerOptions0.setSkipAllPasses(false);
        compilerOptions0.setPropertyAffinity(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode14 = null;
        compilerOptions13.setTracerMode(tracerMode14);
        boolean boolean16 = compilerOptions13.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel17 = compilerOptions13.sourceMapDetailLevel;
        compilerOptions13.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.optimizeParameters = true;
        compilerOptions20.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel28 = compilerOptions20.checkGlobalNamesLevel;
        compilerOptions13.setReportMissingOverride(checkLevel28);
        compilerOptions0.setCheckGlobalNamesLevel(checkLevel28);
        boolean boolean31 = compilerOptions0.ambiguateProperties;
        compilerOptions0.setDeadAssignmentElimination(true);
        boolean boolean34 = compilerOptions0.devirtualizePrototypeMethods;
        compilerOptions0.setAppNameStr("STRING PARAM_LIST");
        compilerOptions0.setSummaryDetailLevel((int) (byte) 10);
        compilerOptions0.setCollapseAnonymousFunctions(false);
        java.util.Set<java.lang.String> strSet41 = compilerOptions0.stripNameSuffixes;
        java.lang.Object obj42 = compilerOptions0.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(detailLevel17);
        org.junit.Assert.assertTrue("'" + checkLevel28 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel28.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test10917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10917");
        com.google.javascript.jscomp.CompilerOptions compilerOptions1 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions1.setLooseTypes(false);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode4 = compilerOptions1.getLanguageIn();
        compilerOptions1.inputDelimiter = "PARAM_LIST [directives: []]\n";
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.setInlineLocalFunctions(false);
        java.util.Set<java.lang.String> strSet10 = compilerOptions7.stripNameSuffixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions11.crossModuleMethodMotion = true;
        compilerOptions11.optimizeParameters = true;
        compilerOptions11.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel19 = compilerOptions11.checkGlobalNamesLevel;
        compilerOptions7.checkRequires = checkLevel19;
        compilerOptions1.reportMissingOverride = checkLevel19;
        com.google.javascript.jscomp.DiagnosticType diagnosticType23 = com.google.javascript.jscomp.DiagnosticType.make("();", checkLevel19, "OFF");
        org.junit.Assert.assertTrue("'" + languageMode4 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode4.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + checkLevel19 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel19.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(diagnosticType23);
    }

    @Test
    public void test10918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10918");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("FINEST");
        stats1.gzSize = 300;
        int int4 = stats1.gzDiff;
        stats1.gzDiff = 4095;
        int int7 = stats1.changes;
        int int8 = stats1.gzSize;
        stats1.runs = 2147483647;
        stats1.gzDiff = 49;
        java.lang.String str13 = stats1.pass;
        stats1.gzDiff = 10;
        long long16 = stats1.runtime;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 300 + "'", int8 == 300);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "FINEST" + "'", str13, "FINEST");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test10919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10919");
        com.google.javascript.rhino.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry3 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray4 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList5 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList5, jSTypeArray4);
        com.google.javascript.rhino.Node node7 = jSTypeRegistry3.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList5);
        com.google.javascript.rhino.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry9 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter8);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray10 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList11 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList11, jSTypeArray10);
        com.google.javascript.rhino.Node node13 = jSTypeRegistry9.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList11);
        node7.addChildrenToBack(node13);
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray17 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList18 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList18, jSTypeArray17);
        com.google.javascript.rhino.Node node20 = jSTypeRegistry16.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList18);
        boolean boolean21 = node20.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry23 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter22);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray24 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList25 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList25, jSTypeArray24);
        com.google.javascript.rhino.Node node27 = jSTypeRegistry23.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList25);
        boolean boolean28 = node27.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter29 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry30 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter29);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray31 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList32 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList32, jSTypeArray31);
        com.google.javascript.rhino.Node node34 = jSTypeRegistry30.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList32);
        com.google.javascript.rhino.Node node37 = new com.google.javascript.rhino.Node((int) (short) 0, node7, node20, node27, node34, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.Node node44 = jSTypeRegistry40.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        node44.addChildrenToBack(node50);
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList55 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55, jSTypeArray54);
        com.google.javascript.rhino.Node node57 = jSTypeRegistry53.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList55);
        boolean boolean58 = node57.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter59 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry60 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter59);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        com.google.javascript.rhino.Node node64 = jSTypeRegistry60.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        boolean boolean65 = node64.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter66 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry67 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter66);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.Node node71 = jSTypeRegistry67.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        com.google.javascript.rhino.Node node74 = new com.google.javascript.rhino.Node((int) (short) 0, node44, node57, node64, node71, 0, 49);
        com.google.javascript.rhino.Node node75 = node37.useSourceInfoFrom(node57);
        com.google.javascript.jscomp.CheckLevel checkLevel77 = null;
        com.google.javascript.jscomp.DiagnosticType diagnosticType79 = com.google.javascript.jscomp.DiagnosticType.make("*global*", checkLevel77, "");
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!", ":" };
        com.google.javascript.jscomp.JSError jSError87 = com.google.javascript.jscomp.JSError.make("*global*", node75, diagnosticType79, strArray86);
        java.lang.String str88 = jSError87.description;
        int int89 = jSError87.lineNumber;
        java.lang.String str90 = jSError87.toString();
        org.junit.Assert.assertNotNull(jSTypeArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(jSTypeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(jSTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(jSTypeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(diagnosticType79);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(jSError87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "*global*.  at *global* line (unknown line) : (unknown column)" + "'", str90, "*global*.  at *global* line (unknown line) : (unknown column)");
    }

    @Test
    public void test10920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10920");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.syntheticBlockEndMarker = "hi!";
        compilerOptions0.setMarkNoSideEffectCalls(false);
        java.util.List<java.lang.String> strList7 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerOptions0.setManageClosureDependencies(strList7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10921");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(false, false);
        boolean boolean8 = file2.setExecutable(false, true);
        java.io.File file9 = file2.getParentFile();
        java.nio.charset.Charset charset11 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str12 = charset11.name();
        java.lang.String str13 = charset11.name();
        java.nio.charset.Charset charset14 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str15 = charset14.toString();
        boolean boolean16 = charset11.contains(charset14);
        com.google.javascript.jscomp.SourceFile sourceFile17 = com.google.javascript.jscomp.SourceFile.fromFile("/", charset14);
        com.google.javascript.jscomp.SourceFile sourceFile18 = com.google.javascript.jscomp.SourceFile.fromFile(file9, charset14);
        java.lang.String str19 = charset14.name();
        java.lang.String str20 = charset14.toString();
        java.nio.charset.Charset charset22 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str23 = charset22.name();
        java.lang.String str24 = charset22.name();
        java.nio.charset.Charset charset25 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str26 = charset25.toString();
        boolean boolean27 = charset22.contains(charset25);
        com.google.javascript.jscomp.SourceFile sourceFile28 = com.google.javascript.jscomp.SourceFile.fromFile("/", charset25);
        java.nio.charset.Charset charset30 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str31 = charset30.name();
        java.lang.String str32 = charset30.name();
        com.google.javascript.jscomp.JSSourceFile jSSourceFile33 = com.google.javascript.jscomp.JSSourceFile.fromFile("STRING PARAM_LIST 49: hi!", charset30);
        boolean boolean34 = charset25.contains(charset30);
        java.io.File file37 = new java.io.File(":", "hi!");
        boolean boolean40 = file37.setExecutable(false, false);
        java.io.File file41 = file37.getParentFile();
        long long42 = file41.getUsableSpace();
        boolean boolean43 = file41.mkdirs();
        java.nio.charset.Charset charset44 = null;
        com.google.javascript.jscomp.JSSourceFile jSSourceFile45 = com.google.javascript.jscomp.JSSourceFile.fromFile(file41, charset44);
        java.io.File file48 = new java.io.File(":", "hi!");
        boolean boolean51 = file48.setExecutable(true, false);
        boolean boolean53 = file48.setWritable(false);
        boolean boolean54 = file48.canWrite();
        java.net.URI uRI55 = file48.toURI();
        boolean boolean56 = file41.renameTo(file48);
        java.nio.charset.Charset charset57 = java.nio.charset.Charset.defaultCharset();
        com.google.javascript.jscomp.SourceFile sourceFile58 = com.google.javascript.jscomp.SourceFile.fromFile(file41, charset57);
        int int59 = charset30.compareTo(charset57);
        java.nio.charset.Charset charset60 = java.nio.charset.Charset.defaultCharset();
        boolean boolean61 = charset60.isRegistered();
        java.nio.charset.Charset charset62 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str63 = charset62.name();
        java.lang.String str64 = charset62.name();
        java.lang.String str65 = charset62.name();
        java.nio.ByteBuffer byteBuffer67 = charset62.encode("PARAM_LIST 0");
        java.nio.CharBuffer charBuffer68 = charset60.decode(byteBuffer67);
        java.nio.ByteBuffer byteBuffer69 = charset30.encode(charBuffer68);
        java.nio.CharBuffer charBuffer70 = charset14.decode(byteBuffer69);
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertNull("file9.getParent() == null", file9.getParent());
        org.junit.Assert.assertEquals(file9.toString(), ":");
        org.junit.Assert.assertNotNull(charset11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "US-ASCII" + "'", str12, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "US-ASCII" + "'", str13, "US-ASCII");
        org.junit.Assert.assertNotNull(charset14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "US-ASCII" + "'", str15, "US-ASCII");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(sourceFile17);
        org.junit.Assert.assertNotNull(sourceFile18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "US-ASCII" + "'", str19, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "US-ASCII" + "'", str20, "US-ASCII");
        org.junit.Assert.assertNotNull(charset22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "US-ASCII" + "'", str23, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "US-ASCII" + "'", str24, "US-ASCII");
        org.junit.Assert.assertNotNull(charset25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "US-ASCII" + "'", str26, "US-ASCII");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(sourceFile28);
        org.junit.Assert.assertNotNull(charset30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "US-ASCII" + "'", str31, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "US-ASCII" + "'", str32, "US-ASCII");
        org.junit.Assert.assertNotNull(jSSourceFile33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals(file37.getParent(), ":");
        org.junit.Assert.assertEquals(file37.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertNull("file41.getParent() == null", file41.getParent());
        org.junit.Assert.assertEquals(file41.toString(), ":");
// flaky:         org.junit.Assert.assertTrue("'" + long42 + "' != '" + 280491421696L + "'", long42 == 280491421696L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(jSSourceFile45);
        org.junit.Assert.assertEquals(file48.getParent(), ":");
        org.junit.Assert.assertEquals(file48.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(uRI55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charset57);
        org.junit.Assert.assertNotNull(sourceFile58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(charset60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charset62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "US-ASCII" + "'", str63, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "US-ASCII" + "'", str64, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "US-ASCII" + "'", str65, "US-ASCII");
        org.junit.Assert.assertNotNull(byteBuffer67);
        org.junit.Assert.assertNotNull(charBuffer68);
        org.junit.Assert.assertNotNull(byteBuffer69);
        org.junit.Assert.assertNotNull(charBuffer70);
    }

    @Test
    public void test10922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10922");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions6.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap10 = compilerOptions6.getTweakReplacements();
        boolean boolean11 = strMap10.isEmpty();
        strMap10.clear();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry14.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        boolean boolean19 = node18.isIn();
        boolean boolean20 = strMap10.containsValue((java.lang.Object) node18);
        boolean boolean21 = strMap4.containsKey((java.lang.Object) strMap10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions22 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions22.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy25 = compilerOptions22.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap26 = compilerOptions22.getTweakReplacements();
        boolean boolean27 = strMap26.isEmpty();
        java.lang.Object obj28 = null;
        com.google.javascript.rhino.Node node29 = strMap26.get(obj28);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.Node>> strEntrySet30 = strMap26.entrySet();
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions31.crossModuleMethodMotion = true;
        compilerOptions31.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy36 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions37 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions37.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy40 = compilerOptions37.propertyRenaming;
        compilerOptions31.setRenamingPolicy(variableRenamingPolicy36, propertyRenamingPolicy40);
        boolean boolean42 = compilerOptions31.checkControlStructures;
        boolean boolean43 = compilerOptions31.crossModuleCodeMotion;
        compilerOptions31.setCheckMissingGetCssNameBlacklist(":/hi!");
        compilerOptions31.setDefineToStringLiteral("JSC_OPTIMIZE_LOOP_ERROR", "java.io.IOException: ");
        java.io.PrintStream printStream49 = null;
        com.google.javascript.jscomp.Compiler compiler50 = new com.google.javascript.jscomp.Compiler(printStream49);
        java.lang.String str51 = compiler50.getAstDotGraph();
        double double52 = compiler50.getProgress();
        com.google.javascript.jscomp.Scope scope53 = compiler50.getTopScope();
        boolean boolean54 = strMap26.remove((java.lang.Object) compilerOptions31, (java.lang.Object) compiler50);
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap55 = compilerOptions31.getDefineReplacements();
        strMap10.putAll(strMap55);
        java.util.Set<java.util.Map.Entry<java.lang.String, com.google.javascript.rhino.Node>> strEntrySet57 = strMap55.entrySet();
        com.google.javascript.rhino.Node node62 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        boolean boolean63 = node62.isContinue();
        com.google.javascript.rhino.Node node67 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        java.lang.String str68 = node67.getQualifiedName();
        com.google.javascript.rhino.Node node69 = node67.getLastChild();
        com.google.javascript.rhino.Node node70 = node67.getLastSibling();
        boolean boolean71 = strMap55.replace("java.io.IOException: java.io.IOException: ", node62, node70);
        boolean boolean73 = strMap55.containsKey((java.lang.Object) 1645456610000L);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy25 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy25.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(strEntrySet30);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy40 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy40.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNull(scope53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strEntrySet57);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test10923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10923");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        boolean boolean76 = node36.getBooleanProp((int) (short) -1);
        boolean boolean78 = node36.getBooleanProp((int) ' ');
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test10924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10924");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.jstype.JSType jSType10 = jSTypeRegistry1.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter11 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry12 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter11);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray13 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList14 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList14, jSTypeArray13);
        com.google.javascript.rhino.Node node16 = jSTypeRegistry12.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList14);
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList20 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20, jSTypeArray19);
        com.google.javascript.rhino.Node node22 = jSTypeRegistry18.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList20);
        com.google.javascript.rhino.jstype.JSType jSType27 = jSTypeRegistry18.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.jstype.JSType jSType38 = jSTypeRegistry29.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] { jSType38 };
        com.google.javascript.rhino.jstype.FunctionType functionType40 = jSTypeRegistry12.createConstructorTypeWithVarArgs(jSType27, jSTypeArray39);
        com.google.javascript.rhino.jstype.JSType jSType41 = jSTypeRegistry1.createOptionalNullableType(jSType27);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable43 = jSTypeRegistry1.getTypesWithProperty("goog.global");
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray49 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList50 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList50, jSTypeArray49);
        boolean boolean52 = jSTypeList47.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList50);
        com.google.javascript.rhino.Node node53 = jSTypeRegistry45.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        jSTypeRegistry45.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable57 = jSTypeRegistry45.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType62 = jSTypeRegistry45.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList66 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList66, jSTypeArray65);
        com.google.javascript.rhino.Node node68 = jSTypeRegistry64.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList66);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream69 = jSTypeList66.parallelStream();
        com.google.javascript.rhino.Node node70 = jSTypeRegistry45.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList66);
        java.lang.Object obj71 = null;
        int int72 = jSTypeList66.lastIndexOf(obj71);
        com.google.javascript.rhino.Node node73 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList66);
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSType10);
        org.junit.Assert.assertNotNull(jSTypeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(jSType27);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSType38);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertNotNull(functionType40);
        org.junit.Assert.assertNotNull(jSType41);
        org.junit.Assert.assertNotNull(jSTypeIterable43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(jSTypeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNotNull(jSTypeIterable57);
        org.junit.Assert.assertNotNull(jSType62);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(jSTypeStream69);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(node73);
    }

    @Test
    public void test10925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10925");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList15 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15, jSTypeArray14);
        com.google.javascript.rhino.Node node17 = jSTypeRegistry13.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList15);
        com.google.javascript.rhino.jstype.JSType jSType22 = jSTypeRegistry13.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        com.google.javascript.rhino.jstype.JSType jSType33 = jSTypeRegistry24.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray34 = new com.google.javascript.rhino.jstype.JSType[] { jSType33 };
        com.google.javascript.rhino.jstype.FunctionType functionType35 = jSTypeRegistry7.createConstructorTypeWithVarArgs(jSType22, jSTypeArray34);
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        com.google.javascript.rhino.jstype.JSType jSType53 = jSTypeRegistry44.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter54 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter54);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.Node node59 = jSTypeRegistry55.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        com.google.javascript.rhino.jstype.JSType jSType64 = jSTypeRegistry55.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] { jSType64 };
        com.google.javascript.rhino.jstype.FunctionType functionType66 = jSTypeRegistry38.createConstructorTypeWithVarArgs(jSType53, jSTypeArray65);
        boolean boolean67 = jSTypeRegistry7.declareType("", jSType53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray71 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList72 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72, jSTypeArray71);
        boolean boolean74 = jSTypeList69.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator75 = jSTypeList69.spliterator();
        com.google.javascript.rhino.jstype.FunctionType functionType76 = jSTypeRegistry1.createFunctionTypeWithVarArgs(jSType53, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        boolean boolean77 = jSTypeRegistry1.shouldTolerateUndefinedValues();
        jSTypeRegistry1.forwardDeclareType("JSC_OPTIMIZE_LOOP_ERROR");
        boolean boolean80 = jSTypeRegistry1.shouldTolerateUndefinedValues();
        com.google.javascript.rhino.jstype.JSTypeNative jSTypeNative81 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.jstype.JSType jSType82 = jSTypeRegistry1.getNativeType(jSTypeNative81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(jSType22);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(jSType33);
        org.junit.Assert.assertNotNull(jSTypeArray34);
        org.junit.Assert.assertNotNull(functionType35);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(jSType53);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(jSType64);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertNotNull(functionType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(jSTypeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(jSTypeSpliterator75);
        org.junit.Assert.assertNotNull(functionType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test10926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10926");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setInlineLocalFunctions(false);
        java.util.Set<java.lang.String> strSet3 = compilerOptions0.stripNameSuffixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions4 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions4.crossModuleMethodMotion = true;
        compilerOptions4.optimizeParameters = true;
        compilerOptions4.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel12 = compilerOptions4.checkGlobalNamesLevel;
        compilerOptions0.checkRequires = checkLevel12;
        com.google.javascript.jscomp.CheckLevel checkLevel14 = com.google.javascript.jscomp.CheckLevel.WARNING;
        compilerOptions0.setCheckGlobalNamesLevel(checkLevel14);
        byte[] byteArray16 = compilerOptions0.inputVariableMapSerialized;
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + checkLevel12 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel12.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel14 + "' != '" + com.google.javascript.jscomp.CheckLevel.WARNING + "'", checkLevel14.equals(com.google.javascript.jscomp.CheckLevel.WARNING));
        org.junit.Assert.assertNull(byteArray16);
    }

    @Test
    public void test10927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10927");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newString("US-ASCII", 3, 39);
        org.junit.Assert.assertNotNull(node3);
    }

    @Test
    public void test10928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10928");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("FINEST");
        stats1.gzSize = 300;
        int int4 = stats1.gzDiff;
        java.lang.String str5 = stats1.pass;
        int int6 = stats1.size;
        stats1.diff = 46;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "FINEST" + "'", str5, "FINEST");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test10929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10929");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.generatePseudoNames = true;
        java.lang.String str9 = compilerOptions0.renamePrefixNamespace;
        compilerOptions0.setTweakToNumberLiteral("", (-9));
        boolean boolean13 = compilerOptions0.collapseVariableDeclarations;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test10930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10930");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        compilerOptions0.setSkipAllPasses(false);
        compilerOptions0.setPropertyAffinity(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode14 = null;
        compilerOptions13.setTracerMode(tracerMode14);
        boolean boolean16 = compilerOptions13.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel17 = compilerOptions13.sourceMapDetailLevel;
        compilerOptions13.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.optimizeParameters = true;
        compilerOptions20.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel28 = compilerOptions20.checkGlobalNamesLevel;
        compilerOptions13.setReportMissingOverride(checkLevel28);
        compilerOptions0.setCheckGlobalNamesLevel(checkLevel28);
        compilerOptions0.setCheckMissingGetCssNameBlacklist("");
        compilerOptions0.checkSuspiciousCode = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(detailLevel17);
        org.junit.Assert.assertTrue("'" + checkLevel28 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel28.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10931");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        compilerOptions0.inlineFunctions = true;
        compilerOptions0.setCommonJSModulePathPrefix(":");
        compilerOptions0.setCrossModuleCodeMotion(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions11.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy14 = compilerOptions11.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap15 = compilerOptions11.getTweakReplacements();
        boolean boolean16 = strMap15.isEmpty();
        java.lang.Object obj17 = null;
        com.google.javascript.rhino.Node node18 = strMap15.get(obj17);
        java.util.Set<java.lang.String> strSet19 = strMap15.keySet();
        compilerOptions0.setIdGenerators(strSet19);
        com.google.javascript.jscomp.CompilerOptions.Reach reach21 = com.google.javascript.jscomp.CompilerOptions.Reach.ALL;
        compilerOptions0.setRemoveUnusedVariable(reach21);
        java.lang.String[] strArray33 = new java.lang.String[] { "InputId: *global*", "OFF", "*global*.  at *global* line (unknown line) : (unknown column)", "PARAM_LIST\n", "/", "*global*.  at *global* line (unknown line) : (unknown column)", "hi!", "/experiment/:/hi!", "PARAM_LIST" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        compilerOptions0.setReplaceStringsConfiguration("FINEST", (java.util.List<java.lang.String>) strList34);
        compilerOptions0.setCrossModuleCodeMotion(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions39 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions39.crossModuleMethodMotion = true;
        compilerOptions39.skipAllCompilerPasses();
        compilerOptions39.resetWarningsGuard();
        compilerOptions39.setInlineLocalVariables(false);
        compilerOptions39.setIdeMode(false);
        compilerOptions39.setAliasKeywords(true);
        compilerOptions39.setSyntheticBlockStartMarker("java.io.IOException: ");
        com.google.javascript.rhino.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry53 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter52);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray54 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList55 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList55, jSTypeArray54);
        com.google.javascript.rhino.Node node57 = jSTypeRegistry53.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList55);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream58 = jSTypeList55.parallelStream();
        java.lang.Object obj59 = null;
        int int60 = jSTypeList55.lastIndexOf(obj59);
        com.google.javascript.jscomp.CompilerOptions compilerOptions61 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions61.setInlineLocalFunctions(false);
        compilerOptions61.moveFunctionDeclarations = true;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode66 = compilerOptions61.getLanguageIn();
        com.google.javascript.jscomp.CompilerOptions compilerOptions67 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions67.setInlineLocalFunctions(false);
        compilerOptions67.moveFunctionDeclarations = true;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode72 = compilerOptions67.getLanguageIn();
        compilerOptions61.setLanguageIn(languageMode72);
        compilerOptions61.setPropertyAffinity(true);
        compilerOptions61.crossModuleCodeMotion = false;
        com.google.javascript.jscomp.CheckLevel checkLevel78 = compilerOptions61.reportMissingOverride;
        int int79 = jSTypeList55.indexOf((java.lang.Object) checkLevel78);
        compilerOptions39.setCheckMissingGetCssNameLevel(checkLevel78);
        compilerOptions0.checkProvides = checkLevel78;
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy14 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy14.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + reach21 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.ALL + "'", reach21.equals(com.google.javascript.jscomp.CompilerOptions.Reach.ALL));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(jSTypeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNotNull(jSTypeStream58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + languageMode66 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode66.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertTrue("'" + languageMode72 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode72.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertTrue("'" + checkLevel78 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel78.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test10932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10932");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("PARAM_LIST 0");
        int int2 = stats1.gzDiff;
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test10933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10933");
        com.google.javascript.jscomp.SourceFile.Builder builder0 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile4 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int6 = sourceFile4.getLineOfOffset((int) (short) 1);
        java.io.Reader reader7 = sourceFile4.getCodeReader();
        int int8 = reader7.read();
        com.google.javascript.jscomp.SourceFile sourceFile9 = builder0.buildFromReader("*global*", reader7);
        java.nio.charset.Charset charset10 = null;
        com.google.javascript.jscomp.SourceFile.Builder builder11 = builder0.withCharset(charset10);
        java.io.File file14 = new java.io.File(":", "hi!");
        boolean boolean17 = file14.setExecutable(true, false);
        long long18 = file14.lastModified();
        boolean boolean19 = file14.mkdir();
        com.google.javascript.jscomp.SourceFile sourceFile20 = builder0.buildFromFile(file14);
        com.google.javascript.jscomp.SourceFile sourceFile22 = builder0.buildFromFile("/experiment/:/hi!");
        com.google.javascript.jscomp.SourceFile.Generator generator24 = null;
        com.google.javascript.jscomp.SourceFile sourceFile25 = builder0.buildFromGenerator("NUMBER -1.0", generator24);
        java.lang.String str26 = sourceFile25.getOriginalPath();
        // The following exception was thrown during execution in test generation
        try {
            int int28 = sourceFile25.getLineOfOffset(6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(sourceFile4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(sourceFile9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertEquals(file14.getParent(), ":");
        org.junit.Assert.assertEquals(file14.toString(), ":/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 280489385000L + "'", long18 == 280489385000L);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(sourceFile20);
        org.junit.Assert.assertNotNull(sourceFile22);
        org.junit.Assert.assertNotNull(sourceFile25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "NUMBER -1.0" + "'", str26, "NUMBER -1.0");
    }

    @Test
    public void test10934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10934");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newString("goog.exportSymbol", (int) ' ', 20);
        org.junit.Assert.assertNotNull(node3);
    }

    @Test
    public void test10935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10935");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        com.google.javascript.jscomp.CompilerOptions compilerOptions2 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = null;
        compilerOptions2.setTracerMode(tracerMode3);
        boolean boolean5 = compilerOptions2.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel6 = compilerOptions2.sourceMapDetailLevel;
        compilerOptions2.setColorizeErrorOutput(true);
        compilerOptions2.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions11 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions11.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy14 = compilerOptions11.propertyRenaming;
        compilerOptions2.propertyRenaming = propertyRenamingPolicy14;
        com.google.javascript.jscomp.CheckLevel checkLevel16 = compilerOptions2.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel17 = compilerOptions2.checkRequires;
        compilerOptions0.setCheckRequires(checkLevel17);
        java.lang.String str19 = compilerOptions0.syntheticBlockEndMarker;
        compilerOptions0.setReserveRawExports(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions22 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions22.crossModuleMethodMotion = true;
        compilerOptions22.setProtectHiddenSideEffects(true);
        boolean boolean27 = compilerOptions22.isExternExportsEnabled();
        boolean boolean28 = compilerOptions22.aliasAllStrings;
        compilerOptions22.setRewriteNewDateGoogNow(true);
        compilerOptions22.inlineLocalFunctions = false;
        java.util.Set<java.lang.String> strSet33 = compilerOptions22.stripTypes;
        compilerOptions0.setStripNameSuffixes(strSet33);
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(detailLevel6);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy14 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy14.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel16 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel16.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel17 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel17.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strSet33);
    }

    @Test
    public void test10936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10936");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode6 = null;
        compilerOptions0.setLanguageOut(languageMode6);
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy8 = null;
        compilerOptions0.variableRenaming = variableRenamingPolicy8;
        com.google.javascript.jscomp.CheckLevel checkLevel10 = compilerOptions0.checkUnreachableCode;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode11 = compilerOptions0.getLanguageOut();
        boolean boolean12 = compilerOptions0.moveFunctionDeclarations;
        byte[] byteArray13 = null;
        compilerOptions0.inputPropertyMapSerialized = byteArray13;
        compilerOptions0.locale = ":/hi!";
        boolean boolean17 = compilerOptions0.inlineLocalFunctions;
        byte[] byteArray18 = compilerOptions0.inputPropertyMapSerialized;
        boolean boolean19 = compilerOptions0.markNoSideEffectCalls;
        compilerOptions0.setDisambiguateProperties(false);
        com.google.javascript.jscomp.DiagnosticType diagnosticType24 = com.google.javascript.jscomp.DiagnosticType.warning("STRING PARAM_LIST 49: hi!", "sun.util.logging.resources.logging");
        com.google.javascript.jscomp.CheckLevel checkLevel25 = diagnosticType24.level;
        compilerOptions0.checkProvides = checkLevel25;
        compilerOptions0.setGatherCssNames(false);
        org.junit.Assert.assertTrue("'" + checkLevel10 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel10.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(languageMode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(diagnosticType24);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.WARNING + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.WARNING));
    }

    @Test
    public void test10937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10937");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.Node node37 = node6.removeFirstChild();
        node37.setIsSyntheticBlock(false);
        node37.addSuppression("/tmp");
        boolean boolean42 = node37.isHook();
        com.google.javascript.rhino.Node node45 = com.google.javascript.rhino.Node.newString((int) (short) 10, ":/hi!");
        int int46 = node45.getLineno();
        com.google.javascript.rhino.Node node50 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean55 = node54.isTry();
        java.lang.String str56 = node54.toString();
        boolean boolean57 = node50.hasChild(node54);
        com.google.javascript.rhino.Node node58 = node50.getLastSibling();
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable59 = node50.getAncestors();
        com.google.javascript.rhino.Node node60 = node45.useSourceInfoFrom(node50);
        int int61 = node45.getType();
        boolean boolean62 = node45.isQuotedString();
        node45.setType(44);
        node37.addChildrenToBack(node45);
        // The following exception was thrown during execution in test generation
        try {
            node45.setSideEffectFlags(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: setIsNoSideEffectsCall only supports CALL and NEW nodes, got TRUE");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "STRING PARAM_LIST 49" + "'", str56, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(ancestorIterable59);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test10938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10938");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        compilerOptions7.optimizeParameters = true;
        compilerOptions7.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions7.checkGlobalNamesLevel;
        compilerOptions0.setReportMissingOverride(checkLevel15);
        java.util.Set<java.lang.String> strSet17 = compilerOptions0.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel19 = compilerOptions18.checkRequires;
        compilerOptions0.setReportMissingOverride(checkLevel19);
        compilerOptions0.setInlineProperties(false);
        compilerOptions0.locale = "STRING PARAM_LIST 49";
        compilerOptions0.setAliasExternals(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + checkLevel19 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel19.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10939");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        compilerOptions0.inlineFunctions = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy10 = compilerOptions7.propertyRenaming;
        java.lang.String[] strArray13 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        compilerOptions7.setStripTypes((java.util.Set<java.lang.String>) strSet14);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode18 = null;
        compilerOptions17.setTracerMode(tracerMode18);
        boolean boolean20 = compilerOptions17.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel21 = compilerOptions17.sourceMapDetailLevel;
        compilerOptions17.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions24.crossModuleMethodMotion = true;
        compilerOptions24.optimizeParameters = true;
        compilerOptions24.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel32 = compilerOptions24.checkGlobalNamesLevel;
        compilerOptions17.setReportMissingOverride(checkLevel32);
        compilerOptions7.setCheckUnreachableCode(checkLevel32);
        byte[] byteArray39 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 1 };
        compilerOptions7.inputVariableMapSerialized = byteArray39;
        compilerOptions0.inputVariableMapSerialized = byteArray39;
        compilerOptions0.syntheticBlockStartMarker = "FINEST";
        com.google.javascript.jscomp.CompilerOptions compilerOptions44 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions44.setLooseTypes(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions47 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel48 = compilerOptions47.checkRequires;
        compilerOptions44.setCheckProvides(checkLevel48);
        compilerOptions0.setCheckProvides(checkLevel48);
        compilerOptions0.coalesceVariableNames = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions53 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions53.crossModuleMethodMotion = true;
        compilerOptions53.optimizeParameters = true;
        compilerOptions53.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions61 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions61.crossModuleMethodMotion = true;
        compilerOptions61.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy66 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions67 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions67.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy70 = compilerOptions67.propertyRenaming;
        compilerOptions61.setRenamingPolicy(variableRenamingPolicy66, propertyRenamingPolicy70);
        com.google.javascript.jscomp.SourceMap.Format format72 = compilerOptions61.sourceMapFormat;
        compilerOptions53.setSourceMapFormat(format72);
        boolean boolean74 = compilerOptions53.shouldColorizeErrorOutput();
        boolean boolean75 = compilerOptions53.removeTryCatchFinally;
        com.google.javascript.jscomp.SourceMap.Format format76 = compilerOptions53.sourceMapFormat;
        com.google.javascript.jscomp.CompilerOptions compilerOptions77 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions77.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions77.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode83 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions77.setTracer(tracerMode83);
        compilerOptions77.setSyntheticBlockStartMarker("");
        java.util.Set<java.lang.String> strSet87 = compilerOptions77.stripTypePrefixes;
        compilerOptions53.setStripNamePrefixes(strSet87);
        compilerOptions0.setReplaceStringsReservedStrings(strSet87);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean91 = strSet87.add("WARNING");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy10 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy10.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(detailLevel21);
        org.junit.Assert.assertTrue("'" + checkLevel32 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel32.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 1, 10, 1]");
        org.junit.Assert.assertTrue("'" + checkLevel48 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel48.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy70 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy70.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(format76);
        org.junit.Assert.assertTrue("'" + tracerMode83 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode83.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertNotNull(strSet87);
    }

    @Test
    public void test10940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10940");
        java.io.File file3 = new java.io.File(":");
        java.io.File file5 = new java.io.File(file3, "FINEST");
        java.io.File file6 = java.io.File.createTempFile("OFF", "", file3);
        java.nio.charset.Charset charset8 = java.nio.charset.Charset.defaultCharset();
        java.lang.String str9 = charset8.name();
        java.util.Locale locale10 = null;
        java.lang.String str11 = charset8.displayName(locale10);
        com.google.javascript.jscomp.JSSourceFile jSSourceFile12 = com.google.javascript.jscomp.JSSourceFile.fromFile("Node tree inequality:\nTree1:\nPARAM_LIST\n    NAME \n\n\nTree2:\nNUMBER -1.0\n\n\nSubtree1: PARAM_LIST\n    NAME \n\n\nSubtree2: NUMBER -1.0\n", charset8);
        java.nio.charset.CharsetEncoder charsetEncoder13 = charset8.newEncoder();
        java.nio.charset.CharsetEncoder charsetEncoder14 = charset8.newEncoder();
        com.google.javascript.jscomp.JSSourceFile jSSourceFile15 = com.google.javascript.jscomp.JSSourceFile.fromFile(file6, charset8);
        java.nio.file.Path path16 = file6.toPath();
        org.junit.Assert.assertNull("file3.getParent() == null", file3.getParent());
        org.junit.Assert.assertEquals(file3.toString(), ":");
        org.junit.Assert.assertEquals(file5.getParent(), ":");
        org.junit.Assert.assertEquals(file5.toString(), ":/FINEST");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), ":");
// flaky:         org.junit.Assert.assertEquals(file6.toString(), ":/OFF2838875944689652441");
        org.junit.Assert.assertNotNull(charset8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "US-ASCII" + "'", str9, "US-ASCII");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "US-ASCII" + "'", str11, "US-ASCII");
        org.junit.Assert.assertNotNull(jSSourceFile12);
        org.junit.Assert.assertNotNull(charsetEncoder13);
        org.junit.Assert.assertNotNull(charsetEncoder14);
        org.junit.Assert.assertNotNull(jSSourceFile15);
        org.junit.Assert.assertNotNull(path16);
    }

    @Test
    public void test10941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10941");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newNumber((double) 4096L, 15, (int) (short) 0);
        int int4 = node3.getChildCount();
        com.google.javascript.rhino.Node node5 = node3.cloneNode();
        boolean boolean6 = node3.isFromExterns();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test10942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10942");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        compilerOptions0.setFoldConstants(true);
        compilerOptions0.flowSensitiveInlineVariables = true;
        compilerOptions0.setTweakToStringLiteral("InputId: *global*", "hi!");
        compilerOptions0.moveFunctionDeclarations = false;
        compilerOptions0.setRuntimeTypeCheckLogFunction("STRING java.io.IOException:  43");
        compilerOptions0.setInlineLocalFunctions(true);
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
    }

    @Test
    public void test10943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10943");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.JSDocInfo jSDocInfo37 = null;
        node19.setJSDocInfo(jSDocInfo37);
        com.google.javascript.rhino.Node node39 = node19.cloneNode();
        boolean boolean40 = node19.isVoid();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test10944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10944");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageOut();
        compilerOptions0.setFoldConstants(true);
        boolean boolean8 = compilerOptions0.generatePseudoNames;
        java.lang.String str9 = compilerOptions0.aliasStringsBlacklist;
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        compilerOptions10.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions19 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions19.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy22 = compilerOptions19.propertyRenaming;
        compilerOptions10.propertyRenaming = propertyRenamingPolicy22;
        com.google.javascript.jscomp.CheckLevel checkLevel24 = compilerOptions10.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions10.checkRequires;
        compilerOptions0.checkMissingReturn = checkLevel25;
        com.google.javascript.jscomp.CodingConvention codingConvention27 = compilerOptions0.getCodingConvention();
        compilerOptions0.setInlineVariables(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(languageMode5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy22 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy22.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel24 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel24.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(codingConvention27);
    }

    @Test
    public void test10945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10945");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        com.google.javascript.rhino.ErrorReporter errorReporter12 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry13 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter12);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray14 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList15 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList15, jSTypeArray14);
        com.google.javascript.rhino.Node node17 = jSTypeRegistry13.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList15);
        com.google.javascript.rhino.jstype.JSType jSType22 = jSTypeRegistry13.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        com.google.javascript.rhino.jstype.JSType jSType33 = jSTypeRegistry24.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray34 = new com.google.javascript.rhino.jstype.JSType[] { jSType33 };
        com.google.javascript.rhino.jstype.FunctionType functionType35 = jSTypeRegistry7.createConstructorTypeWithVarArgs(jSType22, jSTypeArray34);
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray45 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList46 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList46, jSTypeArray45);
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList46);
        com.google.javascript.rhino.jstype.JSType jSType53 = jSTypeRegistry44.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter54 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry55 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter54);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray56 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList57 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList57, jSTypeArray56);
        com.google.javascript.rhino.Node node59 = jSTypeRegistry55.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList57);
        com.google.javascript.rhino.jstype.JSType jSType64 = jSTypeRegistry55.createNamedType(":", "", (int) (byte) 1, 48);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] { jSType64 };
        com.google.javascript.rhino.jstype.FunctionType functionType66 = jSTypeRegistry38.createConstructorTypeWithVarArgs(jSType53, jSTypeArray65);
        boolean boolean67 = jSTypeRegistry7.declareType("", jSType53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray68 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList69 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList69, jSTypeArray68);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray71 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList72 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72, jSTypeArray71);
        boolean boolean74 = jSTypeList69.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList72);
        java.util.Spliterator<com.google.javascript.rhino.jstype.JSType> jSTypeSpliterator75 = jSTypeList69.spliterator();
        com.google.javascript.rhino.jstype.FunctionType functionType76 = jSTypeRegistry1.createFunctionTypeWithVarArgs(jSType53, (java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList69);
        boolean boolean77 = jSTypeRegistry1.shouldTolerateUndefinedValues();
        jSTypeRegistry1.resetForTypeCheck();
        boolean boolean80 = jSTypeRegistry1.isForwardDeclaredType("STRING java.io.IOException:  [length: 8]");
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSTypeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(jSType22);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(jSType33);
        org.junit.Assert.assertNotNull(jSTypeArray34);
        org.junit.Assert.assertNotNull(functionType35);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNotNull(jSTypeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(jSType53);
        org.junit.Assert.assertNotNull(jSTypeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(jSType64);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertNotNull(functionType66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(jSTypeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(jSTypeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(jSTypeSpliterator75);
        org.junit.Assert.assertNotNull(functionType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test10946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10946");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setLabelRenaming(true);
        compilerOptions0.setTweakToDoubleLiteral("/", (double) 43);
        boolean boolean10 = compilerOptions0.removeTryCatchFinally;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY;
        compilerOptions0.setTracer(tracerMode11);
        boolean boolean13 = compilerOptions0.flowSensitiveInlineVariables;
        boolean boolean14 = compilerOptions0.shouldColorizeErrorOutput();
        boolean boolean15 = compilerOptions0.devirtualizePrototypeMethods;
        com.google.javascript.jscomp.CompilerOptions compilerOptions16 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions16.crossModuleMethodMotion = true;
        compilerOptions16.optimizeParameters = true;
        compilerOptions16.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel24 = compilerOptions16.checkGlobalNamesLevel;
        compilerOptions16.setCheckMissingGetCssNameBlacklist("");
        boolean boolean27 = compilerOptions16.removeTryCatchFinally;
        compilerOptions16.setMarkAsCompiled(true);
        compilerOptions16.inlineGetters = false;
        boolean boolean32 = compilerOptions16.inlineFunctions;
        com.google.javascript.jscomp.CheckLevel checkLevel34 = com.google.javascript.jscomp.CheckLevel.ERROR;
        com.google.javascript.jscomp.DiagnosticType diagnosticType36 = com.google.javascript.jscomp.DiagnosticType.make("STRING PARAM_LIST", checkLevel34, "");
        compilerOptions16.setReportUnknownTypes(checkLevel34);
        compilerOptions0.setCheckMissingGetCssNameLevel(checkLevel34);
        boolean boolean39 = compilerOptions0.aliasKeywords;
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + tracerMode11 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY + "'", tracerMode11.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.TIMING_ONLY));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + checkLevel24 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel24.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + checkLevel34 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel34.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertNotNull(diagnosticType36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test10947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10947");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode8 = null;
        compilerOptions7.setTracerMode(tracerMode8);
        boolean boolean10 = compilerOptions7.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel11 = compilerOptions7.sourceMapDetailLevel;
        compilerOptions7.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet14 = compilerOptions7.stripNameSuffixes;
        compilerOptions0.setReplaceStringsReservedStrings(strSet14);
        compilerOptions0.setCrossModuleCodeMotion(false);
        java.lang.String str18 = compilerOptions0.checkMissingGetCssNameBlacklist;
        compilerOptions0.removeUnusedPrototypePropertiesInExterns = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions21.crossModuleMethodMotion = true;
        compilerOptions21.setProtectHiddenSideEffects(true);
        compilerOptions21.setInputDelimiter("PARAM_LIST\n");
        com.google.javascript.jscomp.CssRenamingMap cssRenamingMap28 = null;
        compilerOptions21.cssRenamingMap = cssRenamingMap28;
        com.google.javascript.jscomp.CompilerOptions compilerOptions30 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode31 = null;
        compilerOptions30.setTracerMode(tracerMode31);
        boolean boolean33 = compilerOptions30.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel34 = compilerOptions30.sourceMapDetailLevel;
        compilerOptions30.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet37 = compilerOptions30.stripNameSuffixes;
        strSet37.clear();
        com.google.javascript.jscomp.SourceFile sourceFile41 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int43 = sourceFile41.getLineOfOffset((int) (short) 1);
        java.lang.String str44 = sourceFile41.getName();
        java.lang.String str45 = sourceFile41.getName();
        java.lang.String str46 = sourceFile41.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput48 = new com.google.javascript.jscomp.CompilerInput(sourceFile41, true);
        com.google.javascript.jscomp.SourceAst sourceAst49 = compilerInput48.getAst();
        boolean boolean50 = strSet37.remove((java.lang.Object) sourceAst49);
        compilerOptions21.setExtraAnnotationNames(strSet37);
        compilerOptions21.setCheckControlStructures(true);
        java.util.Set<java.lang.String> strSet54 = compilerOptions21.stripTypePrefixes;
        compilerOptions0.setAliasableStrings(strSet54);
        com.google.javascript.rhino.ErrorReporter errorReporter56 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry57 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter56);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray58 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList59 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList59, jSTypeArray58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray61 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList62 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62, jSTypeArray61);
        boolean boolean64 = jSTypeList59.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList62);
        com.google.javascript.rhino.Node node65 = jSTypeRegistry57.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList59);
        jSTypeRegistry57.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable69 = jSTypeRegistry57.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType74 = jSTypeRegistry57.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter75 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry76 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter75);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray77 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList78 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList78, jSTypeArray77);
        com.google.javascript.rhino.Node node80 = jSTypeRegistry76.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList78);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream81 = jSTypeList78.parallelStream();
        com.google.javascript.rhino.Node node82 = jSTypeRegistry57.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList78);
        java.util.Iterator<com.google.javascript.rhino.jstype.JSType> jSTypeItor83 = jSTypeList78.iterator();
        boolean boolean84 = strSet54.containsAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList78);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(detailLevel11);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(detailLevel34);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(sourceFile41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(sourceAst49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(jSTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(jSTypeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNotNull(jSTypeIterable69);
        org.junit.Assert.assertNotNull(jSType74);
        org.junit.Assert.assertNotNull(jSTypeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertNotNull(jSTypeStream81);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNotNull(jSTypeItor83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test10948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10948");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions0.setRuntimeTypeCheckLogFunction("FINEST");
        compilerOptions0.renamePrefixNamespace = ":/hi!";
        compilerOptions0.setPropertyAffinity(false);
        boolean boolean9 = compilerOptions0.inlineConstantVars;
        java.util.Set<java.lang.String> strSet10 = compilerOptions0.stripNamePrefixes;
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test10949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10949");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("");
        stats1.diff = (byte) 1;
        long long4 = stats1.runtime;
        int int5 = stats1.size;
        int int6 = stats1.runs;
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test10950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10950");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        java.lang.Object obj6 = null;
        com.google.javascript.rhino.Node node7 = strMap4.get(obj6);
        java.util.Set<java.lang.String> strSet8 = strMap4.keySet();
        java.lang.Object obj9 = null;
        com.google.javascript.rhino.Node node10 = strMap4.remove(obj9);
        int int11 = strMap4.size();
        boolean boolean12 = strMap4.isEmpty();
        java.util.Collection<com.google.javascript.rhino.Node> nodeCollection13 = strMap4.values();
        int int14 = strMap4.size();
        int int15 = strMap4.size();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(nodeCollection13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test10951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10951");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode3 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions0.setTracer(tracerMode3);
        compilerOptions0.setFoldConstants(true);
        java.lang.String str7 = compilerOptions0.renamePrefix;
        compilerOptions0.checkSymbols = false;
        compilerOptions0.setTweakToDoubleLiteral("sun.util.logging.resources.logging", (double) 1645456116000L);
        java.util.Map<java.lang.String, com.google.javascript.jscomp.CheckLevel> strMap13 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerOptions0.setPropertyInvalidationErrors(strMap13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + tracerMode3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode3.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test10952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10952");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(false, false);
        boolean boolean8 = file2.setExecutable(false, true);
        boolean boolean11 = file2.setWritable(false, false);
        boolean boolean12 = file2.isDirectory();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test10953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10953");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        compilerOptions0.prettyPrint = false;
        compilerOptions0.setDevirtualizePrototypeMethods(true);
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel34 = compilerOptions0.sourceMapDetailLevel;
        boolean boolean35 = compilerOptions0.inlineVariables;
        compilerOptions0.setPropertyAffinity(true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(detailLevel34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test10954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10954");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("java.io.IOException: ");
        com.google.javascript.jscomp.JSModule jSModule3 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler4 = new com.google.javascript.jscomp.Compiler();
        jSModule3.sortInputsByDeps(compiler4);
        com.google.javascript.jscomp.SourceFile.Builder builder6 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile10 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int12 = sourceFile10.getLineOfOffset((int) (short) 1);
        java.io.Reader reader13 = sourceFile10.getCodeReader();
        int int14 = reader13.read();
        com.google.javascript.jscomp.SourceFile sourceFile15 = builder6.buildFromReader("*global*", reader13);
        jSModule3.add(sourceFile15);
        com.google.javascript.jscomp.JSModule jSModule18 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler19 = new com.google.javascript.jscomp.Compiler();
        jSModule18.sortInputsByDeps(compiler19);
        com.google.javascript.jscomp.SourceFile.Builder builder21 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile25 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int27 = sourceFile25.getLineOfOffset((int) (short) 1);
        java.io.Reader reader28 = sourceFile25.getCodeReader();
        int int29 = reader28.read();
        com.google.javascript.jscomp.SourceFile sourceFile30 = builder21.buildFromReader("*global*", reader28);
        jSModule18.add(sourceFile30);
        boolean boolean33 = jSModule18.removeByName("PARAM_LIST");
        jSModule3.addDependency(jSModule18);
        com.google.javascript.jscomp.SourceFile sourceFile36 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput38 = new com.google.javascript.jscomp.CompilerInput(sourceFile36, true);
        com.google.javascript.rhino.InputId inputId40 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput42 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput38, inputId40, true);
        com.google.javascript.jscomp.CompilerInput compilerInput44 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput42, false);
        jSModule3.addFirst(compilerInput42);
        com.google.javascript.jscomp.CompilerInput compilerInput47 = jSModule3.getByName("");
        com.google.javascript.jscomp.SourceFile sourceFile49 = new com.google.javascript.jscomp.SourceFile("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput51 = new com.google.javascript.jscomp.CompilerInput(sourceFile49, true);
        com.google.javascript.rhino.InputId inputId53 = new com.google.javascript.rhino.InputId("*global*");
        com.google.javascript.jscomp.CompilerInput compilerInput55 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput51, inputId53, true);
        com.google.javascript.jscomp.CompilerInput compilerInput57 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput55, false);
        com.google.javascript.jscomp.JSModule jSModule59 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.Compiler compiler60 = new com.google.javascript.jscomp.Compiler();
        jSModule59.sortInputsByDeps(compiler60);
        java.lang.String str62 = jSModule59.getName();
        compilerInput55.setModule(jSModule59);
        jSModule59.setDepth((int) (byte) 0);
        jSModule3.addDependency(jSModule59);
        com.google.javascript.jscomp.SourceFile sourceFile69 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int71 = sourceFile69.getLineOfOffset((int) (short) 1);
        java.lang.String str72 = sourceFile69.getName();
        java.lang.String str73 = sourceFile69.getName();
        java.lang.String str74 = sourceFile69.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput76 = new com.google.javascript.jscomp.CompilerInput(sourceFile69, true);
        com.google.javascript.jscomp.CompilerInput compilerInput77 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput76);
        com.google.javascript.jscomp.CompilerInput compilerInput79 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput76, false);
        jSModule59.remove(compilerInput76);
        jSModule1.add(compilerInput76);
        int int82 = jSModule1.getDepth();
        java.lang.String str83 = jSModule1.toString();
        java.util.List<java.lang.String> strList84 = jSModule1.getRequires();
        org.junit.Assert.assertNotNull(sourceFile10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(sourceFile15);
        org.junit.Assert.assertNotNull(sourceFile25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(sourceFile30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(compilerInput47);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "STRING PARAM_LIST 49" + "'", str62, "STRING PARAM_LIST 49");
        org.junit.Assert.assertNotNull(sourceFile69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "java.io.IOException: " + "'", str83, "java.io.IOException: ");
        org.junit.Assert.assertNotNull(strList84);
    }

    @Test
    public void test10955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10955");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str1 = compilerOptions0.syntheticBlockStartMarker;
        compilerOptions0.labelRenaming = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions4 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions4.crossModuleMethodMotion = true;
        compilerOptions4.setProtectHiddenSideEffects(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        compilerOptions9.skipAllCompilerPasses();
        compilerOptions9.resetWarningsGuard();
        java.lang.String str14 = compilerOptions9.aliasStringsBlacklist;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy15 = com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy16 = null;
        compilerOptions9.setRenamingPolicy(variableRenamingPolicy15, propertyRenamingPolicy16);
        com.google.javascript.jscomp.CompilerOptions compilerOptions18 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions18.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy21 = compilerOptions18.propertyRenaming;
        compilerOptions4.setRenamingPolicy(variableRenamingPolicy15, propertyRenamingPolicy21);
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy23 = com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC;
        compilerOptions0.setRenamingPolicy(variableRenamingPolicy15, propertyRenamingPolicy23);
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.aliasKeywords = false;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + variableRenamingPolicy15 + "' != '" + com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL + "'", variableRenamingPolicy15.equals(com.google.javascript.jscomp.VariableRenamingPolicy.LOCAL));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy21 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy21.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy23 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC + "'", propertyRenamingPolicy23.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.AGGRESSIVE_HEURISTIC));
    }

    @Test
    public void test10956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10956");
        com.google.javascript.rhino.Node node3 = com.google.javascript.rhino.Node.newString("java.io.IOException: ", 43, (int) '#');
        com.google.javascript.rhino.Node node7 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean8 = node7.isTry();
        java.lang.String str9 = node7.toString();
        boolean boolean10 = node3.hasChild(node7);
        java.lang.String str11 = node7.getSourceFileName();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry14.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        node18.addChildrenToBack(node24);
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry27.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        boolean boolean32 = node31.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        com.google.javascript.rhino.Node node38 = jSTypeRegistry34.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        boolean boolean39 = node38.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        com.google.javascript.rhino.Node node48 = new com.google.javascript.rhino.Node((int) (short) 0, node18, node31, node38, node45, 0, 49);
        com.google.javascript.rhino.Node node53 = com.google.javascript.rhino.Node.newString(46, "", 2, 51);
        boolean boolean54 = node38.isEquivalentToTyped(node53);
        node7.addChildrenToBack(node53);
        node7.setQuotedString();
        boolean boolean57 = node7.isSetterDef();
        boolean boolean58 = node7.isGetterDef();
        boolean boolean59 = node7.isComma();
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "STRING PARAM_LIST 49" + "'", str9, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test10957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10957");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.setSyntheticBlockStartMarker("OFF");
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.setDeadAssignmentElimination(true);
        compilerOptions0.setInferTypes(true);
        compilerOptions0.setAliasableGlobals("java.io.IOException: OFF");
        com.google.javascript.jscomp.CompilerOptions compilerOptions13 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions13.crossModuleMethodMotion = true;
        compilerOptions13.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy18 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions19 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions19.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy22 = compilerOptions19.propertyRenaming;
        compilerOptions13.setRenamingPolicy(variableRenamingPolicy18, propertyRenamingPolicy22);
        boolean boolean24 = compilerOptions13.checkControlStructures;
        compilerOptions13.syntheticBlockEndMarker = "FINEST";
        compilerOptions13.setOptimizeParameters(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions29 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel30 = compilerOptions29.checkRequires;
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode32 = null;
        compilerOptions31.setTracerMode(tracerMode32);
        boolean boolean34 = compilerOptions31.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel35 = compilerOptions31.sourceMapDetailLevel;
        compilerOptions31.setColorizeErrorOutput(true);
        compilerOptions31.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions40 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions40.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy43 = compilerOptions40.propertyRenaming;
        compilerOptions31.propertyRenaming = propertyRenamingPolicy43;
        com.google.javascript.jscomp.CheckLevel checkLevel45 = compilerOptions31.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel46 = compilerOptions31.checkRequires;
        compilerOptions29.setCheckRequires(checkLevel46);
        compilerOptions13.setCheckGlobalNamesLevel(checkLevel46);
        boolean boolean49 = compilerOptions13.devirtualizePrototypeMethods;
        com.google.javascript.jscomp.CompilerOptions compilerOptions50 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode51 = null;
        compilerOptions50.setTracerMode(tracerMode51);
        compilerOptions50.setSmartNameRemoval(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions55 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions55.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy58 = compilerOptions55.propertyRenaming;
        java.lang.String[] strArray61 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet62 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet62, strArray61);
        compilerOptions55.setStripTypes((java.util.Set<java.lang.String>) strSet62);
        com.google.javascript.jscomp.CompilerOptions compilerOptions65 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode66 = null;
        compilerOptions65.setTracerMode(tracerMode66);
        boolean boolean68 = compilerOptions65.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel69 = compilerOptions65.sourceMapDetailLevel;
        compilerOptions65.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions72 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions72.crossModuleMethodMotion = true;
        compilerOptions72.optimizeParameters = true;
        compilerOptions72.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel80 = compilerOptions72.checkGlobalNamesLevel;
        compilerOptions65.setReportMissingOverride(checkLevel80);
        compilerOptions55.setCheckUnreachableCode(checkLevel80);
        compilerOptions55.syntheticBlockStartMarker = "*global*";
        compilerOptions55.prettyPrint = false;
        boolean boolean87 = compilerOptions55.aliasAllStrings;
        com.google.javascript.jscomp.CompilerOptions.Reach reach88 = com.google.javascript.jscomp.CompilerOptions.Reach.NONE;
        compilerOptions55.setInlineVariables(reach88);
        compilerOptions50.setInlineVariables(reach88);
        compilerOptions13.setInlineFunctions(reach88);
        compilerOptions0.setInlineVariables(reach88);
        compilerOptions0.setReportPath(":/Unversioned directory2682289492819239390java.io.IOException: OFF");
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy22 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy22.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + checkLevel30 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel30.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(detailLevel35);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy43 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy43.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel45 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel45.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel46 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel46.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy58 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy58.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(detailLevel69);
        org.junit.Assert.assertTrue("'" + checkLevel80 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel80.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + reach88 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.NONE + "'", reach88.equals(com.google.javascript.jscomp.CompilerOptions.Reach.NONE));
    }

    @Test
    public void test10958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10958");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap4 = compilerOptions0.getTweakReplacements();
        boolean boolean5 = strMap4.isEmpty();
        com.google.javascript.jscomp.CompilerOptions compilerOptions6 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions6.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy9 = compilerOptions6.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap10 = compilerOptions6.getTweakReplacements();
        boolean boolean11 = strMap10.isEmpty();
        strMap10.clear();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry14.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        boolean boolean19 = node18.isIn();
        boolean boolean20 = strMap10.containsValue((java.lang.Object) node18);
        boolean boolean21 = strMap4.containsKey((java.lang.Object) strMap10);
        com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec assertionFunctionSpec24 = new com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec("*global*");
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry27.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        com.google.javascript.rhino.ErrorReporter errorReporter32 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry33 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter32);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray34 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList35 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList35, jSTypeArray34);
        com.google.javascript.rhino.Node node37 = jSTypeRegistry33.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList35);
        node31.addChildrenToBack(node37);
        com.google.javascript.rhino.ErrorReporter errorReporter39 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry40 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter39);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray41 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList42 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList42, jSTypeArray41);
        com.google.javascript.rhino.Node node44 = jSTypeRegistry40.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList42);
        boolean boolean45 = node44.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter46 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry47 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter46);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray48 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList49 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList49, jSTypeArray48);
        com.google.javascript.rhino.Node node51 = jSTypeRegistry47.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList49);
        boolean boolean52 = node51.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry54 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray55 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList56 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56, jSTypeArray55);
        com.google.javascript.rhino.Node node58 = jSTypeRegistry54.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        com.google.javascript.rhino.Node node61 = new com.google.javascript.rhino.Node((int) (short) 0, node31, node44, node51, node58, 0, 49);
        boolean boolean62 = node51.isInc();
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList66 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList66, jSTypeArray65);
        com.google.javascript.rhino.Node node68 = jSTypeRegistry64.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList66);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable70 = jSTypeRegistry64.getTypesWithProperty("");
        com.google.javascript.rhino.jstype.JSType jSType71 = assertionFunctionSpec24.getAssertedType(node51, jSTypeRegistry64);
        com.google.javascript.rhino.Node node74 = com.google.javascript.rhino.Node.newString((int) (short) 10, ":/hi!");
        int int75 = node74.getLineno();
        boolean boolean76 = node74.isThrow();
        com.google.javascript.rhino.Node node77 = assertionFunctionSpec24.getAssertedParam(node74);
        boolean boolean78 = node77.isWith();
        com.google.javascript.rhino.Node node79 = strMap4.put("*global*", node77);
        boolean boolean80 = node77.isName();
        boolean boolean81 = node77.hasOneChild();
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy9 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy9.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(jSTypeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNotNull(jSTypeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jSTypeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(jSTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(jSTypeIterable70);
        org.junit.Assert.assertNull(jSType71);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test10959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10959");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        compilerOptions0.setDefineToBooleanLiteral("", true);
        compilerOptions0.setOutputCharset(":/hi!");
        com.google.javascript.jscomp.WarningsGuard[] warningsGuardArray14 = new com.google.javascript.jscomp.WarningsGuard[] {};
        com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard15 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuardArray14);
        com.google.javascript.jscomp.ComposeWarningsGuard composeWarningsGuard16 = new com.google.javascript.jscomp.ComposeWarningsGuard(warningsGuardArray14);
        compilerOptions0.setWarningsGuard(composeWarningsGuard16);
        byte[] byteArray18 = compilerOptions0.inputVariableMapSerialized;
        boolean boolean19 = compilerOptions0.checkSymbols;
        boolean boolean20 = compilerOptions0.checkSuspiciousCode;
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str22 = compilerOptions21.syntheticBlockStartMarker;
        com.google.javascript.jscomp.CheckLevel checkLevel23 = compilerOptions21.checkRequires;
        compilerOptions21.optimizeArgumentsArray = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions26 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode27 = null;
        compilerOptions26.setTracerMode(tracerMode27);
        boolean boolean29 = compilerOptions26.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel30 = compilerOptions26.sourceMapDetailLevel;
        compilerOptions26.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions33 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions33.crossModuleMethodMotion = true;
        compilerOptions33.optimizeParameters = true;
        compilerOptions33.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel41 = compilerOptions33.checkGlobalNamesLevel;
        compilerOptions26.setReportMissingOverride(checkLevel41);
        java.util.Set<java.lang.String> strSet43 = compilerOptions26.stripTypes;
        compilerOptions26.setTweakToStringLiteral("java.io.IOException: ", "hi!");
        com.google.javascript.jscomp.CompilerOptions compilerOptions47 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions47.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode50 = com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF;
        compilerOptions47.setTracer(tracerMode50);
        com.google.javascript.jscomp.CompilerOptions.Reach reach52 = com.google.javascript.jscomp.CompilerOptions.Reach.NONE;
        compilerOptions47.setInlineVariables(reach52);
        compilerOptions26.setInlineFunctions(reach52);
        compilerOptions21.setInlineVariables(reach52);
        java.util.Set<java.lang.String> strSet56 = compilerOptions21.stripNameSuffixes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions57 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions57.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions57.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode63 = null;
        compilerOptions57.setLanguageOut(languageMode63);
        boolean boolean65 = compilerOptions57.crossModuleMethodMotion;
        compilerOptions57.setRuntimeTypeCheckLogFunction("FINEST");
        boolean boolean68 = compilerOptions57.collapseVariableDeclarations;
        com.google.javascript.jscomp.CompilerOptions compilerOptions69 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions69.crossModuleMethodMotion = true;
        compilerOptions69.skipAllCompilerPasses();
        compilerOptions69.resetWarningsGuard();
        java.lang.String str74 = compilerOptions69.aliasStringsBlacklist;
        com.google.javascript.jscomp.SourceMap.LocationMapping locationMapping77 = new com.google.javascript.jscomp.SourceMap.LocationMapping("/experiment/:/hi!", "PARAM_LIST");
        com.google.javascript.jscomp.SourceMap.LocationMapping locationMapping80 = new com.google.javascript.jscomp.SourceMap.LocationMapping("PARAM_LIST", "STRING PARAM_LIST 49");
        com.google.javascript.jscomp.SourceMap.LocationMapping locationMapping83 = new com.google.javascript.jscomp.SourceMap.LocationMapping("PARAM_LIST", "STRING PARAM_LIST 49");
        com.google.javascript.jscomp.SourceMap.LocationMapping[] locationMappingArray84 = new com.google.javascript.jscomp.SourceMap.LocationMapping[] { locationMapping77, locationMapping80, locationMapping83 };
        java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping> locationMappingList85 = new java.util.ArrayList<com.google.javascript.jscomp.SourceMap.LocationMapping>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList85, locationMappingArray84);
        compilerOptions69.setSourceMapLocationMappings((java.util.List<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList85);
        compilerOptions57.setSourceMapLocationMappings((java.util.List<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList85);
        compilerOptions21.setSourceMapLocationMappings((java.util.List<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList85);
        compilerOptions0.setSourceMapLocationMappings((java.util.List<com.google.javascript.jscomp.SourceMap.LocationMapping>) locationMappingList85);
        boolean boolean91 = compilerOptions0.generatePseudoNames;
        boolean boolean92 = compilerOptions0.deadAssignmentElimination;
        org.junit.Assert.assertNotNull(warningsGuardArray14);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + checkLevel23 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel23.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(detailLevel30);
        org.junit.Assert.assertTrue("'" + checkLevel41 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel41.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + tracerMode50 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF + "'", tracerMode50.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.OFF));
        org.junit.Assert.assertTrue("'" + reach52 + "' != '" + com.google.javascript.jscomp.CompilerOptions.Reach.NONE + "'", reach52.equals(com.google.javascript.jscomp.CompilerOptions.Reach.NONE));
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(locationMappingArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test10960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10960");
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType0 = com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN;
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean5 = node4.isTry();
        java.lang.String str6 = node4.toString();
        boolean boolean7 = node4.isIn();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship12 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType0, node4, node11);
        com.google.javascript.rhino.Node.FileLevelJsDocBuilder fileLevelJsDocBuilder13 = node11.new FileLevelJsDocBuilder();
        boolean boolean14 = node11.isSetterDef();
        com.google.javascript.rhino.ErrorReporter errorReporter15 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry16 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter15);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray17 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList18 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList18, jSTypeArray17);
        com.google.javascript.rhino.Node node20 = jSTypeRegistry16.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList18);
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        node20.addChildrenToBack(node26);
        boolean boolean28 = node26.isAnd();
        com.google.javascript.rhino.Node node29 = node11.copyInformationFromForTree(node26);
        com.google.javascript.rhino.jstype.StaticSourceFile staticSourceFile30 = node29.getStaticSourceFile();
        boolean boolean31 = node29.isQuotedString();
        org.junit.Assert.assertTrue("'" + subclassType0 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN + "'", subclassType0.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN));
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "STRING PARAM_LIST 49" + "'", str6, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(jSTypeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNull(staticSourceFile30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test10961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10961");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.inlineFunctions = false;
        compilerOptions0.setTweakToBooleanLiteral("PARAM_LIST\n    PARAM_LIST\n", true);
        boolean boolean6 = compilerOptions0.optimizeParameters;
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode8 = null;
        compilerOptions7.setTracerMode(tracerMode8);
        boolean boolean10 = compilerOptions7.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel11 = compilerOptions7.sourceMapDetailLevel;
        compilerOptions7.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        compilerOptions14.optimizeParameters = true;
        compilerOptions14.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel22 = compilerOptions14.checkGlobalNamesLevel;
        compilerOptions7.setReportMissingOverride(checkLevel22);
        java.util.Set<java.lang.String> strSet24 = compilerOptions7.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions25 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel26 = compilerOptions25.checkRequires;
        compilerOptions7.setReportMissingOverride(checkLevel26);
        compilerOptions7.setInlineProperties(false);
        compilerOptions7.setLineBreak(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean33 = compilerOptions32.moveFunctionDeclarations;
        boolean boolean34 = compilerOptions32.recordFunctionInformation;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy35 = compilerOptions32.propertyRenaming;
        compilerOptions7.setPropertyRenaming(propertyRenamingPolicy35);
        compilerOptions0.propertyRenaming = propertyRenamingPolicy35;
        compilerOptions0.optimizeArgumentsArray = true;
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(detailLevel11);
        org.junit.Assert.assertTrue("'" + checkLevel22 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel22.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + checkLevel26 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel26.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy35 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy35.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
    }

    @Test
    public void test10962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10962");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setAmbiguateProperties(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions4 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode5 = null;
        compilerOptions4.setTracerMode(tracerMode5);
        boolean boolean7 = compilerOptions4.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel8 = compilerOptions4.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode9 = compilerOptions4.getLanguageOut();
        compilerOptions4.setFoldConstants(true);
        boolean boolean12 = compilerOptions4.generatePseudoNames;
        java.lang.String str13 = compilerOptions4.aliasStringsBlacklist;
        java.lang.String[] strArray20 = new java.lang.String[] { ":/hi!", "DiagnosticGroup<checkProvides>", "// Input %num%", "/experiment/:/hi!", "STRING PARAM_LIST", "InputId: *global*" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        compilerOptions4.setReplaceStringsFunctionDescriptions((java.util.List<java.lang.String>) strList21);
        compilerOptions0.setManageClosureDependencies((java.util.List<java.lang.String>) strList21);
        compilerOptions0.inlineLocalFunctions = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode28 = null;
        compilerOptions27.setTracerMode(tracerMode28);
        boolean boolean30 = compilerOptions27.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel31 = compilerOptions27.sourceMapDetailLevel;
        compilerOptions27.setColorizeErrorOutput(true);
        compilerOptions27.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions36.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy39 = compilerOptions36.propertyRenaming;
        compilerOptions27.propertyRenaming = propertyRenamingPolicy39;
        compilerOptions0.propertyRenaming = propertyRenamingPolicy39;
        compilerOptions0.setColorizeErrorOutput(true);
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(detailLevel8);
        org.junit.Assert.assertNull(languageMode9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(detailLevel31);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy39 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy39.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
    }

    @Test
    public void test10963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10963");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        compilerOptions0.setSkipAllPasses(false);
        compilerOptions0.setRewriteNewDateGoogNow(false);
        compilerOptions0.collapseAnonymousFunctions = false;
        boolean boolean15 = compilerOptions0.flowSensitiveInlineVariables;
        com.google.javascript.jscomp.DiagnosticGroup diagnosticGroup16 = com.google.javascript.jscomp.DiagnosticGroups.FILEOVERVIEW_JSDOC;
        com.google.javascript.jscomp.DiagnosticGroups.FILEOVERVIEW_JSDOC = diagnosticGroup16;
        com.google.javascript.jscomp.DiagnosticGroups.CHECK_REGEXP = diagnosticGroup16;
        com.google.javascript.jscomp.DiagnosticGroups.CHECK_TYPES = diagnosticGroup16;
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode21 = null;
        compilerOptions20.setTracerMode(tracerMode21);
        boolean boolean23 = compilerOptions20.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel24 = compilerOptions20.sourceMapDetailLevel;
        compilerOptions20.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions27.crossModuleMethodMotion = true;
        compilerOptions27.optimizeParameters = true;
        compilerOptions27.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel35 = compilerOptions27.checkGlobalNamesLevel;
        compilerOptions20.setReportMissingOverride(checkLevel35);
        java.util.Set<java.lang.String> strSet37 = compilerOptions20.stripTypes;
        com.google.javascript.jscomp.CompilerOptions compilerOptions38 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel39 = compilerOptions38.checkRequires;
        compilerOptions20.setReportMissingOverride(checkLevel39);
        compilerOptions20.setInlineProperties(false);
        compilerOptions20.setLineBreak(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions45 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean46 = compilerOptions45.moveFunctionDeclarations;
        boolean boolean47 = compilerOptions45.recordFunctionInformation;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy48 = compilerOptions45.propertyRenaming;
        compilerOptions20.setPropertyRenaming(propertyRenamingPolicy48);
        com.google.javascript.jscomp.CheckLevel checkLevel50 = compilerOptions20.brokenClosureRequiresLevel;
        compilerOptions0.setWarningLevel(diagnosticGroup16, checkLevel50);
        compilerOptions0.reserveRawExports = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = null;
        compilerOptions0.setTweakReplacements(strMap54);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertNull(diagnosticGroup16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(detailLevel24);
        org.junit.Assert.assertTrue("'" + checkLevel35 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel35.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + checkLevel39 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel39.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy48 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy48.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel50 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel50.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
    }

    @Test
    public void test10964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10964");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        java.lang.String str1 = compilerOptions0.syntheticBlockStartMarker;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel2 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.TweakProcessing tweakProcessing3 = compilerOptions0.getTweakProcessing();
        compilerOptions0.setOptimizeArgumentsArray(true);
        compilerOptions0.setRemoveUnusedPrototypePropertiesInExterns(true);
        compilerOptions0.setAssumeClosuresOnlyCaptureReferences(false);
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap10 = compilerOptions0.getTweakReplacements();
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry14.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        node18.addChildrenToBack(node24);
        com.google.javascript.rhino.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry27 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter26);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray28 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList29 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList29, jSTypeArray28);
        com.google.javascript.rhino.Node node31 = jSTypeRegistry27.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList29);
        boolean boolean32 = node31.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter33 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry34 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter33);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray35 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList36 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList36, jSTypeArray35);
        com.google.javascript.rhino.Node node38 = jSTypeRegistry34.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList36);
        boolean boolean39 = node38.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry41 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter40);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList43 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList43, jSTypeArray42);
        com.google.javascript.rhino.Node node45 = jSTypeRegistry41.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList43);
        com.google.javascript.rhino.Node node48 = new com.google.javascript.rhino.Node((int) (short) 0, node18, node31, node38, node45, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter50 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry51 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter50);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray52 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList53 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList53, jSTypeArray52);
        com.google.javascript.rhino.Node node55 = jSTypeRegistry51.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList53);
        com.google.javascript.rhino.ErrorReporter errorReporter56 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry57 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter56);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray58 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList59 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList59, jSTypeArray58);
        com.google.javascript.rhino.Node node61 = jSTypeRegistry57.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList59);
        node55.addChildrenToBack(node61);
        com.google.javascript.rhino.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry64 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter63);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray65 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList66 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList66, jSTypeArray65);
        com.google.javascript.rhino.Node node68 = jSTypeRegistry64.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList66);
        boolean boolean69 = node68.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter70 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry71 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter70);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray72 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList73 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList73, jSTypeArray72);
        com.google.javascript.rhino.Node node75 = jSTypeRegistry71.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList73);
        boolean boolean76 = node75.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter77 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry78 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter77);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray79 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList80 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList80, jSTypeArray79);
        com.google.javascript.rhino.Node node82 = jSTypeRegistry78.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList80);
        com.google.javascript.rhino.Node node85 = new com.google.javascript.rhino.Node((int) (short) 0, node55, node68, node75, node82, 0, 49);
        com.google.javascript.rhino.Node node86 = node48.useSourceInfoFrom(node68);
        boolean boolean87 = node86.hasChildren();
        boolean boolean88 = node86.isDefaultCase();
        com.google.javascript.rhino.Node node89 = strMap10.replace("InputId: STRING PARAM_LIST 49", node86);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = node89.isNE();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(detailLevel2);
        org.junit.Assert.assertTrue("'" + tweakProcessing3 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF + "'", tweakProcessing3.equals(com.google.javascript.jscomp.CompilerOptions.TweakProcessing.OFF));
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(jSTypeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(jSTypeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(jSTypeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(jSTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(jSTypeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(jSTypeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(jSTypeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNotNull(node86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(node89);
    }

    @Test
    public void test10965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10965");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.crossModuleCodeMotion = true;
        compilerOptions0.setManageClosureDependencies(false);
        boolean boolean6 = compilerOptions0.exportTestFunctions;
        compilerOptions0.computeFunctionSideEffects = false;
        compilerOptions0.setExportTestFunctions(false);
        compilerOptions0.rewriteFunctionExpressions = true;
        compilerOptions0.jqueryPass = false;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test10966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10966");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.resetWarningsGuard();
        compilerOptions0.setInlineLocalVariables(false);
        compilerOptions0.setIdeMode(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        compilerOptions9.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy14 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions15 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions15.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy18 = compilerOptions15.propertyRenaming;
        compilerOptions9.setRenamingPolicy(variableRenamingPolicy14, propertyRenamingPolicy18);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.skipAllCompilerPasses();
        boolean boolean24 = compilerOptions20.flowSensitiveInlineVariables;
        java.lang.String[] strArray34 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        compilerOptions20.stripTypes = strSet35;
        compilerOptions9.setStripNamePrefixes((java.util.Set<java.lang.String>) strSet35);
        compilerOptions0.setReplaceStringsReservedStrings((java.util.Set<java.lang.String>) strSet35);
        boolean boolean40 = compilerOptions0.generateExports;
        compilerOptions0.setOutputCharset("JSC_OPTIMIZE_LOOP_ERROR. Exceeded max number of code motion iterations: {0} at (unknown source) line (unknown line) : (unknown column)");
        com.google.javascript.jscomp.CompilerOptions compilerOptions43 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions43.crossModuleMethodMotion = true;
        compilerOptions43.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions48 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions48.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy51 = compilerOptions48.propertyRenaming;
        java.lang.String[] strArray54 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet55 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet55, strArray54);
        compilerOptions48.setStripTypes((java.util.Set<java.lang.String>) strSet55);
        compilerOptions43.stripNamePrefixes = strSet55;
        compilerOptions43.setAliasExternals(false);
        java.util.Set<java.lang.String> strSet61 = compilerOptions43.stripNamePrefixes;
        compilerOptions0.aliasableStrings = strSet61;
        boolean boolean63 = compilerOptions0.collapseProperties;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy18 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy18.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy51 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy51.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test10967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10967");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.crossModuleCodeMotion = true;
        compilerOptions0.setManageClosureDependencies(false);
        compilerOptions0.setMoveFunctionDeclarations(true);
        compilerOptions0.checkSymbols = false;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test10968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10968");
        java.io.File file2 = java.io.File.createTempFile("/experiment/:/hi!", "goog.exportProperty");
        boolean boolean5 = file2.setReadable(false, false);
        file2.deleteOnExit();
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file2.toString(), "/tmp/hi!4145669753455227951goog.exportProperty");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test10969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10969");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy3 = compilerOptions0.propertyRenaming;
        java.lang.String[] strArray6 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.jscomp.CompilerOptions compilerOptions10 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode11 = null;
        compilerOptions10.setTracerMode(tracerMode11);
        boolean boolean13 = compilerOptions10.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel14 = compilerOptions10.sourceMapDetailLevel;
        compilerOptions10.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions17.crossModuleMethodMotion = true;
        compilerOptions17.optimizeParameters = true;
        compilerOptions17.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel25 = compilerOptions17.checkGlobalNamesLevel;
        compilerOptions10.setReportMissingOverride(checkLevel25);
        compilerOptions0.setCheckUnreachableCode(checkLevel25);
        compilerOptions0.syntheticBlockStartMarker = "*global*";
        compilerOptions0.prettyPrint = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions32 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions32.crossModuleMethodMotion = true;
        compilerOptions32.optimizeParameters = true;
        compilerOptions32.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel40 = compilerOptions32.checkGlobalNamesLevel;
        compilerOptions0.checkGlobalNamesLevel = checkLevel40;
        compilerOptions0.checkSymbols = false;
        com.google.javascript.jscomp.CodingConvention codingConvention44 = compilerOptions0.getCodingConvention();
        boolean boolean45 = compilerOptions0.flowSensitiveInlineVariables;
        compilerOptions0.setRenamePrefixNamespace(":/hi!");
        compilerOptions0.setCoalesceVariableNames(false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy3 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy3.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(detailLevel14);
        org.junit.Assert.assertTrue("'" + checkLevel25 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel25.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel40 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel40.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNull(codingConvention44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test10970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10970");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.setSyntheticBlockStartMarker("OFF");
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.setDeadAssignmentElimination(true);
        compilerOptions0.setInferTypes(true);
        compilerOptions0.checkControlStructures = true;
        java.lang.Object obj13 = compilerOptions0.clone();
        compilerOptions0.setAppNameStr("");
        compilerOptions0.setGroupVariableDeclarations(false);
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test10971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10971");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode5 = compilerOptions0.getLanguageOut();
        compilerOptions0.setFoldConstants(true);
        boolean boolean8 = compilerOptions0.generatePseudoNames;
        java.lang.String str9 = compilerOptions0.aliasStringsBlacklist;
        compilerOptions0.enableRuntimeTypeCheck("*global*");
        com.google.javascript.jscomp.CompilerOptions.LanguageMode languageMode12 = compilerOptions0.getLanguageIn();
        boolean boolean13 = compilerOptions0.removeDeadCode;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertNull(languageMode5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + languageMode12 + "' != '" + com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3 + "'", languageMode12.equals(com.google.javascript.jscomp.CompilerOptions.LanguageMode.ECMASCRIPT3));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test10972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10972");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode1 = null;
        compilerOptions0.setTracerMode(tracerMode1);
        boolean boolean3 = compilerOptions0.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel4 = compilerOptions0.sourceMapDetailLevel;
        compilerOptions0.setColorizeErrorOutput(true);
        compilerOptions0.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions9 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions9.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy12 = compilerOptions9.propertyRenaming;
        compilerOptions0.propertyRenaming = propertyRenamingPolicy12;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions14.checkRequires;
        com.google.javascript.jscomp.CompilerOptions compilerOptions16 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode17 = null;
        compilerOptions16.setTracerMode(tracerMode17);
        boolean boolean19 = compilerOptions16.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel20 = compilerOptions16.sourceMapDetailLevel;
        compilerOptions16.setColorizeErrorOutput(true);
        compilerOptions16.collapseProperties = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions25 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions25.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy28 = compilerOptions25.propertyRenaming;
        compilerOptions16.propertyRenaming = propertyRenamingPolicy28;
        com.google.javascript.jscomp.CheckLevel checkLevel30 = compilerOptions16.brokenClosureRequiresLevel;
        com.google.javascript.jscomp.CheckLevel checkLevel31 = compilerOptions16.checkRequires;
        compilerOptions14.setCheckRequires(checkLevel31);
        compilerOptions0.setCheckProvides(checkLevel31);
        boolean boolean34 = compilerOptions0.inlineGetters;
        com.google.javascript.jscomp.CompilerOptions compilerOptions35 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions35.crossModuleMethodMotion = true;
        compilerOptions35.skipAllCompilerPasses();
        compilerOptions35.resetWarningsGuard();
        compilerOptions35.setInlineLocalVariables(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions42 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode43 = null;
        compilerOptions42.setTracerMode(tracerMode43);
        boolean boolean45 = compilerOptions42.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel46 = compilerOptions42.sourceMapDetailLevel;
        compilerOptions42.setColorizeErrorOutput(true);
        java.util.Set<java.lang.String> strSet49 = compilerOptions42.stripNameSuffixes;
        compilerOptions35.setReplaceStringsReservedStrings(strSet49);
        boolean boolean51 = strSet49.isEmpty();
        compilerOptions0.stripNameSuffixes = strSet49;
        compilerOptions0.setSpecializeInitialModule(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(detailLevel4);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy12 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy12.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(detailLevel20);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy28 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy28.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel30 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel30.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
        org.junit.Assert.assertTrue("'" + checkLevel31 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel31.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(detailLevel46);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test10973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10973");
        com.google.javascript.jscomp.CodingConvention.SubclassType subclassType0 = com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN;
        com.google.javascript.rhino.Node node4 = com.google.javascript.rhino.Node.newString("PARAM_LIST", 49, 0);
        boolean boolean5 = node4.isTry();
        java.lang.String str6 = node4.toString();
        boolean boolean7 = node4.isIn();
        com.google.javascript.rhino.Node node11 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship12 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType0, node4, node11);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        com.google.javascript.rhino.ErrorReporter errorReporter20 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry21 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter20);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray22 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList23 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList23, jSTypeArray22);
        com.google.javascript.rhino.Node node25 = jSTypeRegistry21.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList23);
        node19.addChildrenToBack(node25);
        com.google.javascript.rhino.ErrorReporter errorReporter27 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry28 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter27);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray29 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList30 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList30, jSTypeArray29);
        com.google.javascript.rhino.Node node32 = jSTypeRegistry28.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList30);
        boolean boolean33 = node32.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter34 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry35 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter34);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray36 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList37 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList37, jSTypeArray36);
        com.google.javascript.rhino.Node node39 = jSTypeRegistry35.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList37);
        boolean boolean40 = node39.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter41 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry42 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter41);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray43 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList44 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList44, jSTypeArray43);
        com.google.javascript.rhino.Node node46 = jSTypeRegistry42.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList44);
        com.google.javascript.rhino.Node node49 = new com.google.javascript.rhino.Node((int) (short) 0, node19, node32, node39, node46, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        com.google.javascript.rhino.ErrorReporter errorReporter57 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry58 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter57);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray59 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList60 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList60, jSTypeArray59);
        com.google.javascript.rhino.Node node62 = jSTypeRegistry58.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList60);
        node56.addChildrenToBack(node62);
        com.google.javascript.rhino.ErrorReporter errorReporter64 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry65 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter64);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray66 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList67 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList67, jSTypeArray66);
        com.google.javascript.rhino.Node node69 = jSTypeRegistry65.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList67);
        boolean boolean70 = node69.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter71 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry72 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter71);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray73 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList74 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList74, jSTypeArray73);
        com.google.javascript.rhino.Node node76 = jSTypeRegistry72.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList74);
        boolean boolean77 = node76.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter78 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry79 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter78);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray80 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList81 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList81, jSTypeArray80);
        com.google.javascript.rhino.Node node83 = jSTypeRegistry79.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList81);
        com.google.javascript.rhino.Node node86 = new com.google.javascript.rhino.Node((int) (short) 0, node56, node69, node76, node83, 0, 49);
        com.google.javascript.rhino.Node node87 = node49.useSourceInfoFrom(node69);
        node49.setSourceEncodedPosition(16);
        boolean boolean90 = node49.hasOneChild();
        int int92 = node49.getIntProp(12);
        com.google.javascript.rhino.Node node94 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node95 = node94.cloneTree();
        com.google.javascript.jscomp.CodingConvention.SubclassRelationship subclassRelationship96 = new com.google.javascript.jscomp.CodingConvention.SubclassRelationship(subclassType0, node49, node94);
        boolean boolean97 = node94.isNoSideEffectsCall();
        org.junit.Assert.assertTrue("'" + subclassType0 + "' != '" + com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN + "'", subclassType0.equals(com.google.javascript.jscomp.CodingConvention.SubclassType.MIXIN));
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "STRING PARAM_LIST 49" + "'", str6, "STRING PARAM_LIST 49");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(jSTypeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(jSTypeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(jSTypeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(jSTypeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(jSTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(jSTypeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(jSTypeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(jSTypeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(node94);
        org.junit.Assert.assertNotNull(node95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test10974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10974");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions5 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions5.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy8 = compilerOptions5.propertyRenaming;
        java.lang.String[] strArray11 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        compilerOptions5.setStripTypes((java.util.Set<java.lang.String>) strSet12);
        compilerOptions0.stripNamePrefixes = strSet12;
        compilerOptions0.checkTypes = false;
        compilerOptions0.setRemoveUnusedPrototypeProperties(true);
        compilerOptions0.setIdeMode(true);
        com.google.javascript.jscomp.CheckLevel checkLevel22 = compilerOptions0.checkGlobalNamesLevel;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy8 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy8.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + checkLevel22 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel22.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10975");
        java.io.IOException iOException1 = new java.io.IOException("/tmp/PARAM_LIST6145687020670090410Unversioned directory");
    }

    @Test
    public void test10976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10976");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.jstype.JSType jSType10 = jSTypeRegistry1.createNamedType(":", "", (int) (byte) 1, 48);
        jSTypeRegistry1.forwardDeclareType("PARAM_LIST");
        com.google.javascript.rhino.ErrorReporter errorReporter13 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry14 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter13);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray15 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList16 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList16, jSTypeArray15);
        com.google.javascript.rhino.Node node18 = jSTypeRegistry14.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList16);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable20 = jSTypeRegistry14.getTypesWithProperty("");
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray26 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList27 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList27, jSTypeArray26);
        boolean boolean29 = jSTypeList24.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList27);
        com.google.javascript.rhino.Node node30 = jSTypeRegistry22.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable32 = jSTypeRegistry22.getTypesWithProperty(":");
        com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode resolveMode33 = com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode.IMMEDIATE;
        jSTypeRegistry22.setResolveMode(resolveMode33);
        jSTypeRegistry14.setResolveMode(resolveMode33);
        jSTypeRegistry14.incrementGeneration();
        com.google.javascript.rhino.Node node41 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        boolean boolean42 = node41.isContinue();
        com.google.javascript.rhino.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry44 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter43);
        jSTypeRegistry44.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSType jSType46 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] { jSType46 };
        com.google.javascript.rhino.Node node48 = jSTypeRegistry44.createParameters(jSTypeArray47);
        int int49 = node41.getIndexOfChild(node48);
        node48.setCharno(51);
        com.google.javascript.rhino.Node node52 = node48.cloneTree();
        com.google.javascript.rhino.ErrorReporter errorReporter53 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry54 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter53);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray55 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList56 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList56, jSTypeArray55);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray58 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList59 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList59, jSTypeArray58);
        boolean boolean61 = jSTypeList56.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList59);
        com.google.javascript.rhino.Node node62 = jSTypeRegistry54.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList56);
        jSTypeRegistry54.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable66 = jSTypeRegistry54.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType71 = jSTypeRegistry54.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray74 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList75 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList75, jSTypeArray74);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray77 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList78 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList78, jSTypeArray77);
        boolean boolean80 = jSTypeList75.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList78);
        com.google.javascript.rhino.Node node81 = jSTypeRegistry73.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList75);
        jSTypeRegistry73.forwardDeclareType("PARAM_LIST");
        jSTypeRegistry73.clearTemplateTypeNames();
        com.google.javascript.rhino.jstype.ObjectType objectType85 = jSTypeRegistry73.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.JSType jSType86 = jSTypeRegistry54.createOptionalNullableType((com.google.javascript.rhino.jstype.JSType) objectType85);
        com.google.javascript.rhino.ErrorReporter errorReporter87 = jSTypeRegistry54.getErrorReporter();
        jSTypeRegistry54.forwardDeclareType("goog.exportProperty");
        com.google.javascript.rhino.ErrorReporter errorReporter90 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry91 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter90);
        com.google.javascript.rhino.jstype.ObjectType objectType92 = jSTypeRegistry91.createAnonymousObjectType();
        com.google.javascript.rhino.jstype.ObjectType objectType93 = jSTypeRegistry54.createObjectType(objectType92);
        com.google.javascript.rhino.jstype.ObjectType objectType94 = jSTypeRegistry14.createObjectType("Node tree inequality:\nTree1:\nNUMBER -1.0\n\n\nTree2:\nPARAM_LIST\n    PARAM_LIST\n\n\nSubtree1: NUMBER -1.0\n\n\nSubtree2: PARAM_LIST\n    PARAM_LIST\n", node48, objectType93);
        com.google.javascript.rhino.jstype.JSType jSType95 = jSTypeRegistry1.createDefaultObjectUnion((com.google.javascript.rhino.jstype.JSType) objectType93);
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSType10);
        org.junit.Assert.assertNotNull(jSTypeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(jSTypeIterable20);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(jSTypeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(jSTypeIterable32);
        org.junit.Assert.assertTrue("'" + resolveMode33 + "' != '" + com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode.IMMEDIATE + "'", resolveMode33.equals(com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode.IMMEDIATE));
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(jSTypeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(jSTypeIterable66);
        org.junit.Assert.assertNotNull(jSType71);
        org.junit.Assert.assertNotNull(jSTypeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(jSTypeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNotNull(objectType85);
        org.junit.Assert.assertNotNull(jSType86);
        org.junit.Assert.assertNull(errorReporter87);
        org.junit.Assert.assertNotNull(objectType92);
        org.junit.Assert.assertNotNull(objectType93);
        org.junit.Assert.assertNotNull(objectType94);
        org.junit.Assert.assertNotNull(jSType95);
    }

    @Test
    public void test10977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10977");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("STRING PARAM_LIST 49");
        com.google.javascript.jscomp.SourceFile sourceFile4 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int6 = sourceFile4.getLineOfOffset((int) (short) 1);
        int int8 = sourceFile4.getColumnOfOffset(49);
        jSModule1.addFirst(sourceFile4);
        boolean boolean11 = jSModule1.removeByName("PARAM_LIST");
        com.google.javascript.jscomp.SourceFile sourceFile14 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int16 = sourceFile14.getLineOfOffset((int) (short) 1);
        java.lang.String str17 = sourceFile14.getName();
        java.lang.String str18 = sourceFile14.getName();
        java.lang.String str19 = sourceFile14.getName();
        jSModule1.addFirst(sourceFile14);
        com.google.javascript.jscomp.SourceFile sourceFile23 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int25 = sourceFile23.getLineOfOffset((int) (short) 1);
        java.lang.String str26 = sourceFile23.getName();
        java.lang.String str27 = sourceFile23.getName();
        java.lang.String str28 = sourceFile23.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput30 = new com.google.javascript.jscomp.CompilerInput(sourceFile23, true);
        com.google.javascript.jscomp.CompilerInput compilerInput31 = new com.google.javascript.jscomp.CompilerInput((com.google.javascript.jscomp.SourceAst) compilerInput30);
        jSModule1.add(compilerInput30);
        jSModule1.removeAll();
        org.junit.Assert.assertNotNull(sourceFile4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 49 + "'", int8 == 49);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(sourceFile14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(sourceFile23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test10978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10978");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        boolean boolean37 = node6.isDelProp();
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        jSTypeRegistry39.clearNamedTypes();
        com.google.javascript.rhino.jstype.JSType jSType41 = null;
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray42 = new com.google.javascript.rhino.jstype.JSType[] { jSType41 };
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParameters(jSTypeArray42);
        com.google.javascript.rhino.ErrorReporter errorReporter45 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry46 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter45);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray47 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList48 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList48, jSTypeArray47);
        com.google.javascript.rhino.Node node50 = jSTypeRegistry46.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList48);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        node50.addChildrenToBack(node56);
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        boolean boolean71 = node70.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter72 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry73 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter72);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray74 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList75 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList75, jSTypeArray74);
        com.google.javascript.rhino.Node node77 = jSTypeRegistry73.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList75);
        com.google.javascript.rhino.Node node80 = new com.google.javascript.rhino.Node((int) (short) 0, node50, node63, node70, node77, 0, 49);
        boolean boolean81 = node50.isDo();
        boolean boolean82 = node50.isWhile();
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable83 = node50.children();
        com.google.javascript.jscomp.CodingConvention.Bind bind84 = new com.google.javascript.jscomp.CodingConvention.Bind(node6, node43, node50);
        com.google.javascript.rhino.Node.AncestorIterable ancestorIterable85 = node6.getAncestors();
        com.google.javascript.rhino.Node node89 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        java.lang.String str90 = node89.getQualifiedName();
        com.google.javascript.rhino.Node node91 = node6.srcref(node89);
        java.lang.Iterable<com.google.javascript.rhino.Node> nodeIterable92 = node6.children();
        boolean boolean93 = node6.isInc();
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(jSTypeArray42);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(jSTypeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(nodeIterable83);
        org.junit.Assert.assertNotNull(ancestorIterable85);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(node91);
        org.junit.Assert.assertNotNull(nodeIterable92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test10979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10979");
        com.google.javascript.rhino.Node node1 = com.google.javascript.rhino.Node.newNumber((double) 4095);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test10980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10980");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.setSyntheticBlockStartMarker("OFF");
        compilerOptions0.skipAllCompilerPasses();
        compilerOptions0.setDeadAssignmentElimination(true);
        compilerOptions0.setInferTypes(true);
        boolean boolean11 = compilerOptions0.optimizeArgumentsArray;
        com.google.javascript.jscomp.CompilerOptions compilerOptions12 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode13 = null;
        compilerOptions12.setTracerMode(tracerMode13);
        boolean boolean15 = compilerOptions12.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel16 = compilerOptions12.sourceMapDetailLevel;
        compilerOptions12.setColorizeErrorOutput(true);
        compilerOptions12.collapseProperties = false;
        compilerOptions12.setSkipAllPasses(false);
        compilerOptions12.setPropertyAffinity(false);
        compilerOptions12.setPropertyAffinity(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions27 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions27.crossModuleMethodMotion = true;
        compilerOptions27.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy32 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions33 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions33.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy36 = compilerOptions33.propertyRenaming;
        compilerOptions27.setRenamingPolicy(variableRenamingPolicy32, propertyRenamingPolicy36);
        com.google.javascript.jscomp.CompilerOptions compilerOptions38 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions38.crossModuleMethodMotion = true;
        compilerOptions38.skipAllCompilerPasses();
        boolean boolean42 = compilerOptions38.flowSensitiveInlineVariables;
        java.lang.String[] strArray52 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet53, strArray52);
        compilerOptions38.stripTypes = strSet53;
        compilerOptions27.setStripNamePrefixes((java.util.Set<java.lang.String>) strSet53);
        compilerOptions12.setReplaceStringsReservedStrings((java.util.Set<java.lang.String>) strSet53);
        compilerOptions0.setStripTypes((java.util.Set<java.lang.String>) strSet53);
        compilerOptions0.markAsCompiled = false;
        com.google.javascript.jscomp.CheckLevel checkLevel61 = compilerOptions0.reportMissingOverride;
        compilerOptions0.generateExports = true;
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(detailLevel16);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy36 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy36.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + checkLevel61 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel61.equals(com.google.javascript.jscomp.CheckLevel.OFF));
    }

    @Test
    public void test10981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10981");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.Node node5 = jSTypeRegistry1.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        com.google.javascript.rhino.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry7 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter6);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray8 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList9 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList9, jSTypeArray8);
        com.google.javascript.rhino.Node node11 = jSTypeRegistry7.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList9);
        node5.addChildrenToBack(node11);
        boolean boolean13 = node11.isSwitch();
        boolean boolean14 = node11.isCall();
        com.google.javascript.rhino.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry18 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter17);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray19 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList20 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList20, jSTypeArray19);
        com.google.javascript.rhino.Node node22 = jSTypeRegistry18.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList20);
        com.google.javascript.rhino.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry24 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter23);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray25 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList26 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList26, jSTypeArray25);
        com.google.javascript.rhino.Node node28 = jSTypeRegistry24.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList26);
        node22.addChildrenToBack(node28);
        com.google.javascript.rhino.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry31 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter30);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray32 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList33 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList33, jSTypeArray32);
        com.google.javascript.rhino.Node node35 = jSTypeRegistry31.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList33);
        boolean boolean36 = node35.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter37 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry38 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter37);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray39 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList40 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList40, jSTypeArray39);
        com.google.javascript.rhino.Node node42 = jSTypeRegistry38.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList40);
        boolean boolean43 = node42.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        com.google.javascript.rhino.Node node52 = new com.google.javascript.rhino.Node((int) (short) 0, node22, node35, node42, node49, 0, 49);
        com.google.javascript.rhino.Node node54 = com.google.javascript.rhino.Node.newString("");
        com.google.javascript.rhino.Node node55 = node52.useSourceInfoIfMissingFrom(node54);
        com.google.javascript.rhino.InputId inputId56 = node55.getInputId();
        com.google.javascript.rhino.ErrorReporter errorReporter57 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry58 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter57);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray59 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList60 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList60, jSTypeArray59);
        com.google.javascript.rhino.Node node62 = jSTypeRegistry58.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList60);
        boolean boolean63 = node62.isIn();
        boolean boolean64 = node62.isGetElem();
        com.google.javascript.rhino.Node node68 = com.google.javascript.rhino.Node.newNumber((double) (-1L), 16, (int) (byte) -1);
        java.lang.String str69 = node68.getQualifiedName();
        com.google.javascript.rhino.Node node70 = node68.getLastChild();
        com.google.javascript.rhino.Node node71 = node68.getLastSibling();
        boolean boolean72 = node71.isFromExterns();
        com.google.javascript.rhino.Node node75 = new com.google.javascript.rhino.Node(9, node55, node62, node71, 300, 11);
        boolean boolean76 = node75.isInc();
        com.google.javascript.rhino.Node node77 = node11.useSourceInfoIfMissingFromForTree(node75);
        boolean boolean78 = node77.isQuotedString();
        com.google.javascript.rhino.Node node79 = node77.cloneNode();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(jSTypeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(jSTypeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(jSTypeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNotNull(jSTypeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(jSTypeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNull(inputId56);
        org.junit.Assert.assertNotNull(jSTypeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(node79);
    }

    @Test
    public void test10982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10982");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.setProtectHiddenSideEffects(true);
        compilerOptions0.moveFunctionDeclarations = true;
        boolean boolean7 = compilerOptions0.inlineConstantVars;
        boolean boolean8 = compilerOptions0.disambiguateProperties;
        com.google.javascript.jscomp.CheckLevel checkLevel9 = compilerOptions0.aggressiveVarCheck;
        compilerOptions0.setExtractPrototypeMemberDeclarations(false);
        boolean boolean12 = compilerOptions0.generatePseudoNames;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + checkLevel9 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel9.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test10983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10983");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        boolean boolean1 = compilerOptions0.moveFunctionDeclarations;
        compilerOptions0.crossModuleCodeMotion = true;
        compilerOptions0.checkSymbols = true;
        compilerOptions0.setExtractPrototypeMemberDeclarations(true);
        compilerOptions0.setExternExports(true);
        compilerOptions0.setInlineGetters(false);
        compilerOptions0.smartNameRemoval = false;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test10984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10984");
        com.google.javascript.jscomp.SourceFile sourceFile2 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int4 = sourceFile2.getLineOfOffset((int) (short) 1);
        java.lang.String str5 = sourceFile2.getName();
        java.lang.String str6 = sourceFile2.getName();
        java.lang.String str7 = sourceFile2.getName();
        com.google.javascript.jscomp.CompilerInput compilerInput9 = new com.google.javascript.jscomp.CompilerInput(sourceFile2, true);
        java.lang.String str11 = compilerInput9.getLine(40);
        com.google.javascript.jscomp.Region region13 = compilerInput9.getRegion(50);
        java.lang.String str14 = compilerInput9.getCode();
        org.junit.Assert.assertNotNull(sourceFile2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(region13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test10985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10985");
        com.google.javascript.jscomp.JSModule jSModule1 = new com.google.javascript.jscomp.JSModule("Node tree inequality:\nTree1:\nTHIS\n    STRING java.io.IOException:  43\n    PARAM_LIST [var_args_name: 1] [opt_arg: 1]\n\n\nTree2:\nSTRING \n\n\nSubtree1: THIS\n    STRING java.io.IOException:  43\n    PARAM_LIST [var_args_name: 1] [opt_arg: 1]\n\n\nSubtree2: STRING \n");
        java.util.List<java.lang.String> strList2 = jSModule1.getProvides();
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test10986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10986");
        com.google.javascript.rhino.Node node4 = new com.google.javascript.rhino.Node((int) (short) 0, 52, (int) (short) -1);
        node4.setLineno(83);
        com.google.javascript.rhino.Node node9 = new com.google.javascript.rhino.Node(300, node4, (int) ' ', (-33));
    }

    @Test
    public void test10987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10987");
        boolean boolean1 = java.nio.charset.Charset.isSupported("SHNE");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test10988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10988");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        jSTypeRegistry1.forwardDeclareType("PARAM_LIST");
        java.lang.Iterable<com.google.javascript.rhino.jstype.JSType> jSTypeIterable13 = jSTypeRegistry1.getTypesWithProperty("*global*");
        com.google.javascript.rhino.jstype.JSType jSType18 = jSTypeRegistry1.createNamedType("PARAM_LIST", "/experiment/:/hi!", 51, 48);
        com.google.javascript.rhino.ErrorReporter errorReporter19 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry20 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter19);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray21 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList22 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList22, jSTypeArray21);
        com.google.javascript.rhino.Node node24 = jSTypeRegistry20.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream25 = jSTypeList22.parallelStream();
        com.google.javascript.rhino.Node node26 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList22);
        boolean boolean27 = node26.isNoSideEffectsCall();
        boolean boolean28 = node26.isRegExp();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(jSTypeIterable13);
        org.junit.Assert.assertNotNull(jSType18);
        org.junit.Assert.assertNotNull(jSTypeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(jSTypeStream25);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test10989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10989");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.setReplaceStringsPlaceholderToken("hi!");
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel3 = com.google.javascript.jscomp.SourceMap.DetailLevel.SYMBOLS;
        compilerOptions0.setSourceMapDetailLevel(detailLevel3);
        compilerOptions0.inlineFunctions = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions7.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy10 = compilerOptions7.propertyRenaming;
        java.lang.String[] strArray13 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        compilerOptions7.setStripTypes((java.util.Set<java.lang.String>) strSet14);
        com.google.javascript.jscomp.CompilerOptions compilerOptions17 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode18 = null;
        compilerOptions17.setTracerMode(tracerMode18);
        boolean boolean20 = compilerOptions17.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel21 = compilerOptions17.sourceMapDetailLevel;
        compilerOptions17.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions24 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions24.crossModuleMethodMotion = true;
        compilerOptions24.optimizeParameters = true;
        compilerOptions24.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel32 = compilerOptions24.checkGlobalNamesLevel;
        compilerOptions17.setReportMissingOverride(checkLevel32);
        compilerOptions7.setCheckUnreachableCode(checkLevel32);
        byte[] byteArray39 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 1 };
        compilerOptions7.inputVariableMapSerialized = byteArray39;
        compilerOptions0.inputVariableMapSerialized = byteArray39;
        compilerOptions0.syntheticBlockStartMarker = "FINEST";
        com.google.javascript.jscomp.CompilerOptions compilerOptions44 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions44.setLooseTypes(false);
        com.google.javascript.jscomp.CompilerOptions compilerOptions47 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel48 = compilerOptions47.checkRequires;
        compilerOptions44.setCheckProvides(checkLevel48);
        compilerOptions0.setCheckProvides(checkLevel48);
        compilerOptions0.coalesceVariableNames = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions53 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions53.crossModuleMethodMotion = true;
        compilerOptions53.optimizeParameters = true;
        compilerOptions53.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions61 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions61.crossModuleMethodMotion = true;
        compilerOptions61.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy66 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions67 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions67.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy70 = compilerOptions67.propertyRenaming;
        compilerOptions61.setRenamingPolicy(variableRenamingPolicy66, propertyRenamingPolicy70);
        com.google.javascript.jscomp.SourceMap.Format format72 = compilerOptions61.sourceMapFormat;
        compilerOptions53.setSourceMapFormat(format72);
        boolean boolean74 = compilerOptions53.shouldColorizeErrorOutput();
        boolean boolean75 = compilerOptions53.removeTryCatchFinally;
        com.google.javascript.jscomp.SourceMap.Format format76 = compilerOptions53.sourceMapFormat;
        com.google.javascript.jscomp.CompilerOptions compilerOptions77 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions77.setReplaceStringsPlaceholderToken("hi!");
        compilerOptions77.setTweakToDoubleLiteral("", (double) (short) 1);
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode83 = com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE;
        compilerOptions77.setTracer(tracerMode83);
        compilerOptions77.setSyntheticBlockStartMarker("");
        java.util.Set<java.lang.String> strSet87 = compilerOptions77.stripTypePrefixes;
        compilerOptions53.setStripNamePrefixes(strSet87);
        compilerOptions0.setReplaceStringsReservedStrings(strSet87);
        boolean boolean90 = compilerOptions0.markNoSideEffectCalls;
        org.junit.Assert.assertNotNull(detailLevel3);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy10 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy10.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(detailLevel21);
        org.junit.Assert.assertTrue("'" + checkLevel32 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel32.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[0, 1, 10, 1]");
        org.junit.Assert.assertTrue("'" + checkLevel48 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel48.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy70 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy70.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(format76);
        org.junit.Assert.assertTrue("'" + tracerMode83 + "' != '" + com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE + "'", tracerMode83.equals(com.google.javascript.jscomp.CompilerOptions.TracerMode.RAW_SIZE));
        org.junit.Assert.assertNotNull(strSet87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test10990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10990");
        com.google.javascript.rhino.ErrorReporter errorReporter0 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry1 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter0);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray2 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList3 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList3, jSTypeArray2);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray5 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList6 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6, jSTypeArray5);
        boolean boolean8 = jSTypeList3.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList6);
        com.google.javascript.rhino.Node node9 = jSTypeRegistry1.createParameters((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList3);
        java.lang.Object obj10 = null;
        boolean boolean11 = jSTypeList3.remove(obj10);
        java.lang.Object obj12 = null;
        int int13 = jSTypeList3.indexOf(obj12);
        com.google.javascript.jscomp.SourceFile sourceFile16 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int18 = sourceFile16.getLineOfOffset((int) (short) 1);
        int int19 = jSTypeList3.indexOf((java.lang.Object) sourceFile16);
        com.google.javascript.jscomp.CompilerOptions compilerOptions20 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions20.crossModuleMethodMotion = true;
        compilerOptions20.optimizeParameters = true;
        com.google.javascript.jscomp.CompilerOptions compilerOptions25 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions25.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy28 = compilerOptions25.propertyRenaming;
        java.lang.String[] strArray31 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        compilerOptions25.setStripTypes((java.util.Set<java.lang.String>) strSet32);
        compilerOptions20.stripNamePrefixes = strSet32;
        com.google.javascript.jscomp.CompilerOptions compilerOptions36 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions36.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy39 = compilerOptions36.propertyRenaming;
        java.util.Map<java.lang.String, com.google.javascript.rhino.Node> strMap40 = compilerOptions36.getTweakReplacements();
        boolean boolean41 = strSet32.remove((java.lang.Object) compilerOptions36);
        com.google.javascript.jscomp.CompilerOptions compilerOptions42 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel43 = compilerOptions42.checkRequires;
        compilerOptions42.setRewriteNewDateGoogNow(true);
        compilerOptions42.setSyntheticBlockStartMarker("OFF");
        compilerOptions42.skipAllCompilerPasses();
        compilerOptions42.jqueryPass = false;
        java.lang.String[] strArray56 = new java.lang.String[] { "PARAM_LIST\n", "/", "STRING PARAM_LIST 49", "hi!", "/" };
        java.util.LinkedHashSet<java.lang.String> strSet57 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet57, strArray56);
        compilerOptions42.stripNameSuffixes = strSet57;
        com.google.javascript.rhino.ErrorReporter errorReporter60 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry61 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter60);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray62 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList63 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63, jSTypeArray62);
        com.google.javascript.rhino.Node node65 = jSTypeRegistry61.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        java.util.stream.Stream<com.google.javascript.rhino.jstype.JSType> jSTypeStream66 = jSTypeList63.parallelStream();
        boolean boolean67 = strSet57.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        boolean boolean68 = strSet32.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        boolean boolean69 = jSTypeList3.retainAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList63);
        jSTypeList63.clear();
        java.lang.Object obj71 = null;
        boolean boolean72 = jSTypeList63.contains(obj71);
        boolean boolean73 = jSTypeList63.isEmpty();
        org.junit.Assert.assertNotNull(jSTypeArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(jSTypeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(sourceFile16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy28 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy28.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy39 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy39.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + checkLevel43 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel43.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(jSTypeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNotNull(jSTypeStream66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test10991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10991");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.skipAllCompilerPasses();
        boolean boolean4 = compilerOptions0.flowSensitiveInlineVariables;
        java.lang.String[] strArray14 = new java.lang.String[] { "*global*", "", "FINEST", "FINEST", "STRING PARAM_LIST 49", "STRING PARAM_LIST 49", "hi!", ":", "FINEST" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        compilerOptions0.stripTypes = strSet15;
        compilerOptions0.optimizeParameters = false;
        compilerOptions0.printInputDelimiter = true;
        compilerOptions0.moveFunctionDeclarations = false;
        compilerOptions0.inlineGetters = false;
        boolean boolean26 = compilerOptions0.smartNameRemoval;
        boolean boolean27 = compilerOptions0.printInputDelimiter;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test10992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10992");
        java.io.File file3 = new java.io.File(":", "hi!");
        boolean boolean6 = file3.setExecutable(false, false);
        java.io.File file7 = file3.getParentFile();
        long long8 = file7.getUsableSpace();
        boolean boolean9 = file7.mkdirs();
        java.nio.charset.Charset charset10 = null;
        com.google.javascript.jscomp.JSSourceFile jSSourceFile11 = com.google.javascript.jscomp.JSSourceFile.fromFile(file7, charset10);
        java.io.File file14 = new java.io.File(":", "hi!");
        boolean boolean17 = file14.setExecutable(true, false);
        boolean boolean19 = file14.setWritable(false);
        boolean boolean20 = file14.canWrite();
        java.net.URI uRI21 = file14.toURI();
        boolean boolean22 = file7.renameTo(file14);
        java.nio.charset.Charset charset23 = java.nio.charset.Charset.defaultCharset();
        com.google.javascript.jscomp.SourceFile sourceFile24 = com.google.javascript.jscomp.SourceFile.fromFile(file7, charset23);
        com.google.javascript.jscomp.SourceFile sourceFile25 = com.google.javascript.jscomp.SourceFile.fromFile("TYPEOF OFF", charset23);
        org.junit.Assert.assertEquals(file3.getParent(), ":");
        org.junit.Assert.assertEquals(file3.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertNull("file7.getParent() == null", file7.getParent());
        org.junit.Assert.assertEquals(file7.toString(), ":");
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 280489140224L + "'", long8 == 280489140224L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(jSSourceFile11);
        org.junit.Assert.assertEquals(file14.getParent(), ":");
        org.junit.Assert.assertEquals(file14.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(uRI21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charset23);
        org.junit.Assert.assertNotNull(sourceFile24);
        org.junit.Assert.assertNotNull(sourceFile25);
    }

    @Test
    public void test10993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10993");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.optimizeParameters = true;
        compilerOptions0.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions8.crossModuleMethodMotion = true;
        compilerOptions8.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy13 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy17 = compilerOptions14.propertyRenaming;
        compilerOptions8.setRenamingPolicy(variableRenamingPolicy13, propertyRenamingPolicy17);
        com.google.javascript.jscomp.SourceMap.Format format19 = compilerOptions8.sourceMapFormat;
        compilerOptions0.setSourceMapFormat(format19);
        boolean boolean21 = compilerOptions0.shouldColorizeErrorOutput();
        boolean boolean22 = compilerOptions0.removeTryCatchFinally;
        compilerOptions0.setLocale(":");
        compilerOptions0.setRemoveTryCatchFinally(false);
        com.google.javascript.jscomp.CheckLevel checkLevel27 = null;
        compilerOptions0.checkUnreachableCode = checkLevel27;
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy17 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy17.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(format19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test10994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10994");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel1 = compilerOptions0.checkRequires;
        compilerOptions0.setRewriteNewDateGoogNow(true);
        compilerOptions0.setSyntheticBlockStartMarker("OFF");
        compilerOptions0.setChainCalls(false);
        com.google.javascript.jscomp.CheckLevel checkLevel8 = compilerOptions0.brokenClosureRequiresLevel;
        compilerOptions0.preferLineBreakAtEndOfFile = false;
        org.junit.Assert.assertTrue("'" + checkLevel1 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel1.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + checkLevel8 + "' != '" + com.google.javascript.jscomp.CheckLevel.ERROR + "'", checkLevel8.equals(com.google.javascript.jscomp.CheckLevel.ERROR));
    }

    @Test
    public void test10995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10995");
        com.google.javascript.jscomp.CompilerOptions compilerOptions0 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions0.crossModuleMethodMotion = true;
        compilerOptions0.syntheticBlockEndMarker = "hi!";
        compilerOptions0.coalesceVariableNames = false;
        com.google.javascript.jscomp.CompilerOptions compilerOptions7 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode8 = null;
        compilerOptions7.setTracerMode(tracerMode8);
        boolean boolean10 = compilerOptions7.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel11 = compilerOptions7.sourceMapDetailLevel;
        compilerOptions7.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions14.crossModuleMethodMotion = true;
        compilerOptions14.optimizeParameters = true;
        compilerOptions14.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel22 = compilerOptions14.checkGlobalNamesLevel;
        compilerOptions7.setReportMissingOverride(checkLevel22);
        java.util.Set<java.lang.String> strSet24 = compilerOptions7.stripNameSuffixes;
        com.google.javascript.jscomp.SourceFile sourceFile27 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int29 = sourceFile27.getLineOfOffset((int) (short) 1);
        java.lang.String str30 = sourceFile27.getName();
        java.lang.String str31 = sourceFile27.getName();
        java.lang.String str32 = sourceFile27.getName();
        int int34 = sourceFile27.getLineOfOffset((-1));
        boolean boolean35 = strSet24.equals((java.lang.Object) int34);
        compilerOptions0.stripNamePrefixes = strSet24;
        compilerOptions0.setRewriteNewDateGoogNow(false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(detailLevel11);
        org.junit.Assert.assertTrue("'" + checkLevel22 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel22.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(sourceFile27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test10996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10996");
        java.io.PrintStream printStream1 = new java.io.PrintStream("*global*.  at *global* line (unknown line) : (unknown column)");
        printStream1.println(false);
        printStream1.println(280490700800L);
        com.google.javascript.jscomp.Compiler compiler6 = new com.google.javascript.jscomp.Compiler(printStream1);
        com.google.javascript.jscomp.Compiler compiler7 = new com.google.javascript.jscomp.Compiler(printStream1);
        com.google.javascript.jscomp.CompilerOptions compilerOptions8 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode9 = null;
        compilerOptions8.setTracerMode(tracerMode9);
        compilerOptions8.aliasExternals = true;
        boolean boolean13 = compilerOptions8.removeUnusedClassProperties;
        com.google.javascript.jscomp.CompilerOptions compilerOptions14 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CheckLevel checkLevel15 = compilerOptions14.checkRequires;
        compilerOptions14.setRewriteNewDateGoogNow(true);
        compilerOptions14.setSyntheticBlockStartMarker("OFF");
        compilerOptions14.skipAllCompilerPasses();
        com.google.javascript.jscomp.CompilerOptions compilerOptions21 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions21.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy24 = compilerOptions21.propertyRenaming;
        java.lang.String[] strArray27 = new java.lang.String[] { "*global*", ":" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        compilerOptions21.setStripTypes((java.util.Set<java.lang.String>) strSet28);
        com.google.javascript.jscomp.CompilerOptions compilerOptions31 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode32 = null;
        compilerOptions31.setTracerMode(tracerMode32);
        boolean boolean34 = compilerOptions31.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel35 = compilerOptions31.sourceMapDetailLevel;
        compilerOptions31.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions38 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions38.crossModuleMethodMotion = true;
        compilerOptions38.optimizeParameters = true;
        compilerOptions38.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel46 = compilerOptions38.checkGlobalNamesLevel;
        compilerOptions31.setReportMissingOverride(checkLevel46);
        compilerOptions21.setCheckUnreachableCode(checkLevel46);
        compilerOptions14.setCheckMissingReturn(checkLevel46);
        compilerOptions8.setCheckMissingReturn(checkLevel46);
        com.google.javascript.jscomp.CompilerOptions compilerOptions51 = new com.google.javascript.jscomp.CompilerOptions();
        com.google.javascript.jscomp.CompilerOptions.TracerMode tracerMode52 = null;
        compilerOptions51.setTracerMode(tracerMode52);
        boolean boolean54 = compilerOptions51.coalesceVariableNames;
        com.google.javascript.jscomp.SourceMap.DetailLevel detailLevel55 = compilerOptions51.sourceMapDetailLevel;
        compilerOptions51.setColorizeErrorOutput(true);
        com.google.javascript.jscomp.CompilerOptions compilerOptions58 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions58.crossModuleMethodMotion = true;
        compilerOptions58.optimizeParameters = true;
        compilerOptions58.setTweakToDoubleLiteral("*global*", (double) (byte) 10);
        com.google.javascript.jscomp.CheckLevel checkLevel66 = compilerOptions58.checkGlobalNamesLevel;
        compilerOptions51.setReportMissingOverride(checkLevel66);
        java.util.Set<java.lang.String> strSet68 = compilerOptions51.stripNameSuffixes;
        boolean boolean69 = compilerOptions51.jqueryPass;
        com.google.javascript.jscomp.CompilerOptions compilerOptions70 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions70.crossModuleMethodMotion = true;
        compilerOptions70.optimizeParameters = true;
        com.google.javascript.jscomp.VariableRenamingPolicy variableRenamingPolicy75 = null;
        com.google.javascript.jscomp.CompilerOptions compilerOptions76 = new com.google.javascript.jscomp.CompilerOptions();
        compilerOptions76.crossModuleMethodMotion = true;
        com.google.javascript.jscomp.PropertyRenamingPolicy propertyRenamingPolicy79 = compilerOptions76.propertyRenaming;
        compilerOptions70.setRenamingPolicy(variableRenamingPolicy75, propertyRenamingPolicy79);
        compilerOptions70.setTransformAMDToCJSModules(true);
        boolean boolean83 = compilerOptions70.exportTestFunctions;
        boolean boolean84 = compilerOptions70.exportTestFunctions;
        boolean boolean85 = compilerOptions70.foldConstants;
        byte[] byteArray86 = new byte[] {};
        compilerOptions70.setInputVariableMapSerialized(byteArray86);
        compilerOptions51.setInputVariableMapSerialized(byteArray86);
        compilerOptions8.inputPropertyMapSerialized = byteArray86;
        // The following exception was thrown during execution in test generation
        try {
            printStream1.write(byteArray86, 192512, 400);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + checkLevel15 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel15.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy24 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy24.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(detailLevel35);
        org.junit.Assert.assertTrue("'" + checkLevel46 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel46.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(detailLevel55);
        org.junit.Assert.assertTrue("'" + checkLevel66 + "' != '" + com.google.javascript.jscomp.CheckLevel.OFF + "'", checkLevel66.equals(com.google.javascript.jscomp.CheckLevel.OFF));
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + propertyRenamingPolicy79 + "' != '" + com.google.javascript.jscomp.PropertyRenamingPolicy.OFF + "'", propertyRenamingPolicy79.equals(com.google.javascript.jscomp.PropertyRenamingPolicy.OFF));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[]");
    }

    @Test
    public void test10997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10997");
        com.google.javascript.rhino.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry2 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter1);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray3 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList4 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList4, jSTypeArray3);
        com.google.javascript.rhino.Node node6 = jSTypeRegistry2.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList4);
        com.google.javascript.rhino.ErrorReporter errorReporter7 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry8 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter7);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray9 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList10 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList10, jSTypeArray9);
        com.google.javascript.rhino.Node node12 = jSTypeRegistry8.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList10);
        node6.addChildrenToBack(node12);
        com.google.javascript.rhino.ErrorReporter errorReporter14 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry15 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter14);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray16 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList17 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList17, jSTypeArray16);
        com.google.javascript.rhino.Node node19 = jSTypeRegistry15.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList17);
        boolean boolean20 = node19.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry22 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter21);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray23 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList24 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList24, jSTypeArray23);
        com.google.javascript.rhino.Node node26 = jSTypeRegistry22.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList24);
        boolean boolean27 = node26.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter28 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry29 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter28);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray30 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList31 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList31, jSTypeArray30);
        com.google.javascript.rhino.Node node33 = jSTypeRegistry29.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList31);
        com.google.javascript.rhino.Node node36 = new com.google.javascript.rhino.Node((int) (short) 0, node6, node19, node26, node33, 0, 49);
        com.google.javascript.rhino.ErrorReporter errorReporter38 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry39 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter38);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray40 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList41 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList41, jSTypeArray40);
        com.google.javascript.rhino.Node node43 = jSTypeRegistry39.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList41);
        com.google.javascript.rhino.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry45 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter44);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray46 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList47 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList47, jSTypeArray46);
        com.google.javascript.rhino.Node node49 = jSTypeRegistry45.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList47);
        node43.addChildrenToBack(node49);
        com.google.javascript.rhino.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry52 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter51);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray53 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList54 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList54, jSTypeArray53);
        com.google.javascript.rhino.Node node56 = jSTypeRegistry52.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList54);
        boolean boolean57 = node56.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter58 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry59 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter58);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray60 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList61 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList61, jSTypeArray60);
        com.google.javascript.rhino.Node node63 = jSTypeRegistry59.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList61);
        boolean boolean64 = node63.isIn();
        com.google.javascript.rhino.ErrorReporter errorReporter65 = null;
        com.google.javascript.rhino.jstype.JSTypeRegistry jSTypeRegistry66 = new com.google.javascript.rhino.jstype.JSTypeRegistry(errorReporter65);
        com.google.javascript.rhino.jstype.JSType[] jSTypeArray67 = new com.google.javascript.rhino.jstype.JSType[] {};
        java.util.ArrayList<com.google.javascript.rhino.jstype.JSType> jSTypeList68 = new java.util.ArrayList<com.google.javascript.rhino.jstype.JSType>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.jstype.JSType>) jSTypeList68, jSTypeArray67);
        com.google.javascript.rhino.Node node70 = jSTypeRegistry66.createParametersWithVarArgs((java.util.List<com.google.javascript.rhino.jstype.JSType>) jSTypeList68);
        com.google.javascript.rhino.Node node73 = new com.google.javascript.rhino.Node((int) (short) 0, node43, node56, node63, node70, 0, 49);
        com.google.javascript.rhino.Node node74 = node36.useSourceInfoFrom(node56);
        boolean boolean75 = node74.hasChildren();
        boolean boolean76 = node74.isArrayLit();
        com.google.javascript.rhino.InputId inputId78 = new com.google.javascript.rhino.InputId("*global*");
        java.lang.String str79 = inputId78.toString();
        node74.setInputId(inputId78);
        java.lang.String str81 = inputId78.getIdName();
        com.google.javascript.jscomp.WarningsGuard.Priority priority82 = com.google.javascript.jscomp.WarningsGuard.Priority.STRICT;
        boolean boolean83 = inputId78.equals((java.lang.Object) priority82);
        org.junit.Assert.assertNotNull(jSTypeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(jSTypeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(jSTypeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jSTypeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(jSTypeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(jSTypeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(jSTypeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(jSTypeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(jSTypeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jSTypeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "InputId: *global*" + "'", str79, "InputId: *global*");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "*global*" + "'", str81, "*global*");
        org.junit.Assert.assertTrue("'" + priority82 + "' != '" + com.google.javascript.jscomp.WarningsGuard.Priority.STRICT + "'", priority82.equals(com.google.javascript.jscomp.WarningsGuard.Priority.STRICT));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test10998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10998");
        com.google.javascript.jscomp.PerformanceTracker.Stats stats1 = new com.google.javascript.jscomp.PerformanceTracker.Stats("");
        stats1.changes = 900;
        int int4 = stats1.diff;
        stats1.diff = 6;
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test10999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test10999");
        java.io.File file2 = new java.io.File(":", "hi!");
        boolean boolean5 = file2.setExecutable(false, false);
        java.io.File file6 = file2.getParentFile();
        long long7 = file6.getUsableSpace();
        boolean boolean8 = file6.mkdirs();
        java.nio.charset.Charset charset9 = null;
        com.google.javascript.jscomp.JSSourceFile jSSourceFile10 = com.google.javascript.jscomp.JSSourceFile.fromFile(file6, charset9);
        java.io.File file13 = new java.io.File(":", "hi!");
        boolean boolean16 = file13.setExecutable(true, false);
        boolean boolean18 = file13.setWritable(false);
        boolean boolean19 = file13.canWrite();
        java.net.URI uRI20 = file13.toURI();
        boolean boolean21 = file6.renameTo(file13);
        long long22 = file13.getFreeSpace();
        boolean boolean23 = file13.exists();
        java.io.File file25 = new java.io.File(file13, "/");
        java.io.File file26 = file13.getParentFile();
        boolean boolean27 = file13.setReadOnly();
        org.junit.Assert.assertEquals(file2.getParent(), ":");
        org.junit.Assert.assertEquals(file2.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertNull("file6.getParent() == null", file6.getParent());
        org.junit.Assert.assertEquals(file6.toString(), ":");
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 280489566208L + "'", long7 == 280489566208L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(jSSourceFile10);
        org.junit.Assert.assertEquals(file13.getParent(), ":");
        org.junit.Assert.assertEquals(file13.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(uRI20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 299088683008L + "'", long22 == 299088683008L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals(file25.getParent(), ":/hi!");
        org.junit.Assert.assertEquals(file25.toString(), ":/hi!/");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertNull("file26.getParent() == null", file26.getParent());
        org.junit.Assert.assertEquals(file26.toString(), ":");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test11000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest21.test11000");
        com.google.javascript.jscomp.SourceFile.Builder builder0 = new com.google.javascript.jscomp.SourceFile.Builder();
        com.google.javascript.jscomp.SourceFile sourceFile4 = com.google.javascript.jscomp.SourceFile.fromCode("hi!", "");
        int int6 = sourceFile4.getLineOfOffset((int) (short) 1);
        java.io.Reader reader7 = sourceFile4.getCodeReader();
        int int8 = reader7.read();
        com.google.javascript.jscomp.SourceFile sourceFile9 = builder0.buildFromReader("*global*", reader7);
        java.nio.charset.Charset charset10 = null;
        com.google.javascript.jscomp.SourceFile.Builder builder11 = builder0.withCharset(charset10);
        java.io.File file14 = new java.io.File(":", "hi!");
        boolean boolean17 = file14.setExecutable(true, false);
        long long18 = file14.lastModified();
        boolean boolean19 = file14.mkdir();
        com.google.javascript.jscomp.SourceFile sourceFile20 = builder0.buildFromFile(file14);
        com.google.javascript.jscomp.SourceFile.Builder builder22 = builder0.withOriginalPath("java.io.IOException: OFF");
        java.io.File file24 = new java.io.File(":");
        java.io.File file26 = new java.io.File(file24, "FINEST");
        boolean boolean27 = file24.setReadOnly();
        java.io.File file30 = new java.io.File(":", "hi!");
        boolean boolean33 = file30.setExecutable(true, false);
        boolean boolean34 = file24.renameTo(file30);
        boolean boolean35 = file30.exists();
        long long36 = file30.getUsableSpace();
        com.google.javascript.jscomp.SourceFile sourceFile37 = builder22.buildFromFile(file30);
        org.junit.Assert.assertNotNull(sourceFile4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(reader7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(sourceFile9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertEquals(file14.getParent(), ":");
        org.junit.Assert.assertEquals(file14.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 280489385000L + "'", long18 == 280489385000L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(sourceFile20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull("file24.getParent() == null", file24.getParent());
        org.junit.Assert.assertEquals(file24.toString(), ":");
        org.junit.Assert.assertEquals(file26.getParent(), ":");
        org.junit.Assert.assertEquals(file26.toString(), ":/FINEST");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals(file30.getParent(), ":");
        org.junit.Assert.assertEquals(file30.toString(), ":/hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long36 + "' != '" + 280489566208L + "'", long36 == 280489566208L);
        org.junit.Assert.assertNotNull(sourceFile37);
    }
}
