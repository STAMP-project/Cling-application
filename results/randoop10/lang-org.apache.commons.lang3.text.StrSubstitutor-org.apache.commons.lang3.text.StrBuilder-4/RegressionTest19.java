import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest19 {

    public static boolean debug = false;

    @Test
    public void test09501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09501");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray11 = strTokenizer10.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendAll((java.lang.Object[]) strArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendAll((java.lang.Object[]) strArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder6.appendln(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', '4');
        java.io.Writer writer36 = strBuilder35.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        char[] charArray48 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendln(charArray48);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray48);
        writer36.write(charArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder28.append(charArray48);
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int56 = strBuilder28.indexOf(strMatcher54, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder3.deleteAll(strMatcher54);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.insert(0, (long) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln((int) (short) 100);
        int int67 = strBuilder64.lastIndexOf(" ", 116);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.appendSeparator("java.io.IOException: {\ntrue\n=1.0}", "97\nhi!StrTokenizer[]");
        int int73 = strBuilder64.indexOf("[]", 93);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test09502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09502");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString(" 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder12.appendln(32);
        java.io.Reader reader17 = strBuilder12.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        char[] charArray32 = strBuilder28.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendln(charArray32);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder18.replaceFirst(strMatcher34, "StrTokenizer[]");
        int int37 = strBuilder12.lastIndexOf(strMatcher34);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer3.setDelimiterMatcher(strMatcher34);
        boolean boolean39 = strTokenizer3.hasPrevious();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test09503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09503");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        char char10 = strBuilder8.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.setNewLineText("\n32.0java.io.IOException: hi!");
        char[] charArray13 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendln(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append((float) 194);
        java.util.stream.IntStream intStream18 = strBuilder17.chars();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + char10 + "' != '" + '#' + "'", char10 == '#');
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#36.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#36.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 3, 6, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(intStream18);
    }

    @Test
    public void test09504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09504");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst('4', 'a');
        boolean boolean46 = properties0.remove((java.lang.Object) strBuilder33, (java.lang.Object) '4');
        java.lang.Object obj47 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("");
        int int52 = strBuilder48.indexOf("");
        int int55 = strBuilder48.lastIndexOf('#', (int) (byte) 0);
        java.io.Reader reader56 = strBuilder48.asReader();
        reader56.reset();
        boolean boolean58 = properties0.containsValue((java.lang.Object) reader56);
        java.util.Properties properties59 = new java.util.Properties();
        int int60 = properties59.size();
        java.lang.Object obj61 = properties59.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties59.keys();
        boolean boolean63 = properties0.containsValue((java.lang.Object) objEnumeration62);
        properties0.clear();
        java.io.InputStream inputStream65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(reader56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "{}");
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test09505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09505");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("java.io.IOException: hi!", "java.io.IOException: java.io.IOException: StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.setLength(30);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test09506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09506");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj4 = properties0.clone();
        java.lang.Object obj5 = properties0.clone();
        java.util.Enumeration<?> wildcardEnumeration6 = properties0.propertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        java.lang.Object obj13 = properties0.remove((java.lang.Object) strBuilder12);
        boolean boolean14 = properties0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray20 = strTokenizer19.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendAll((java.lang.Object[]) strArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.replaceFirst('a', 'a');
        char[] charArray29 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        int int32 = strTokenizer31.size();
        boolean boolean33 = strTokenizer31.hasNext();
        java.util.List<java.lang.String> strList34 = strTokenizer31.getTokenList();
        java.lang.String[] strArray38 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        boolean boolean41 = strList34.addAll((java.util.Collection<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder15.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln((long) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        int int46 = strBuilder45.capacity();
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(stringBuffer47, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder45.setLength(32);
        java.io.Writer writer56 = strBuilder55.asWriter();
        writer56.write((int) (byte) 10);
        writer56.write("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        int int62 = strBuilder61.capacity();
        java.lang.StringBuffer stringBuffer63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder61.appendln(stringBuffer63, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder61.appendln((int) (byte) 0);
        java.io.Writer writer69 = strBuilder68.asWriter();
        java.io.IOException iOException70 = new java.io.IOException();
        java.lang.Throwable[] throwableArray71 = iOException70.getSuppressed();
        java.lang.Throwable[] throwableArray72 = iOException70.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.appendWithSeparators((java.lang.Object[]) throwableArray72, "1");
        java.io.Writer writer75 = writer56.append((java.lang.CharSequence) strBuilder74);
        java.lang.Object obj76 = properties0.putIfAbsent((java.lang.Object) strBuilder44, (java.lang.Object) strBuilder74);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "{}");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(writer56);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 32 + "'", int62 == 32);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(writer69);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(writer75);
        org.junit.Assert.assertNull(obj76);
    }

    @Test
    public void test09507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09507");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst("java.io.IOException: hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replaceFirst("\n32.0java.io.IOException: hi!", "java.io.IOException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence18 = strBuilder5.subSequence(166, 26);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 26");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test09508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09508");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadLeft((int) '4', (-1), ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendln("1");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceAll('t', 'e');
        char[] charArray11 = strBuilder7.toCharArray();
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "1\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "1\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[1, \n]");
    }

    @Test
    public void test09509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09509");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.delete(0, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendSeparator("1", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strBuilder16.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setDelimiterString("100.0\000\000\000\000\000");
        java.lang.String str20 = strTokenizer17.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer17.setQuoteChar('#');
        java.lang.String str23 = strTokenizer17.getContent();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test09510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09510");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean2 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterChar('a');
        int int5 = strTokenizer1.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer1.setIgnoredChar(' ');
        boolean boolean8 = strTokenizer7.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.setEmptyTokenAsNull(false);
        boolean boolean11 = strTokenizer10.hasPrevious();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test09511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09511");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.ensureCapacity((int) (short) 10);
        boolean boolean13 = strBuilder6.equals((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.setNullText("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.insert(1, (double) 32);
        boolean boolean25 = strBuilder16.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder16.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray34 = strTokenizer33.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.appendAll((java.lang.Object[]) strArray34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder29.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer39 = strBuilder38.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder16.append(stringBuffer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder15.append((java.lang.Object) strBuilder16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.insert((int) 't', false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 116");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(stringBuffer39);
        org.junit.Assert.assertEquals(stringBuffer39.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test09512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09512");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        java.io.Writer writer10 = strBuilder5.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln((double) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.append(strBuilder14, (int) (byte) 1, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendSeparator("100.0");
        int int24 = strBuilder21.indexOf('3', 22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.insert(144, (double) 118);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 144");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test09513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09513");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000", "java.io.IOException: \n");
        int int3 = strTokenizer2.previousIndex();
        java.lang.String str4 = strTokenizer2.next();
        java.lang.String str5 = strTokenizer2.getContent();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000" + "'", str4, "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000" + "'", str5, "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
    }

    @Test
    public void test09514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09514");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln('e');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.deleteFirst("[4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln((int) '1');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test09515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09515");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        int int4 = strTokenizer3.previousIndex();
        java.lang.Object obj5 = strTokenizer3.clone();
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test09516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09516");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("35.0\n100.0", ' ', '$');
        java.lang.String str4 = strTokenizer3.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.setDelimiterString("10.0");
        java.lang.String str7 = strTokenizer3.next();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "35.0\n100.0" + "'", str7, "35.0\n100.0");
    }

    @Test
    public void test09517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09517");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, '2');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
    }

    @Test
    public void test09518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09518");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder33.lastIndexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.insert((int) (short) 1, 32);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        boolean boolean42 = properties39.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties39.entrySet();
        java.lang.Object obj44 = properties0.putIfAbsent((java.lang.Object) strBuilder38, (java.lang.Object) objEntrySet43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        int int46 = strBuilder45.capacity();
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(stringBuffer47, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int52 = strBuilder50.lastIndexOf(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.insert((int) (short) 1, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.setNullText("");
        char[] charArray64 = strBuilder63.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.insert(0, true);
        java.io.Writer writer68 = strBuilder63.asWriter();
        boolean boolean69 = properties0.remove((java.lang.Object) "java.io.IOException: hi!", (java.lang.Object) writer68);
        writer68.write((int) (byte) 0);
        writer68.write((int) ' ');
        writer68.close();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(writer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test09519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09519");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('a', '4');
        java.io.Writer writer30 = strBuilder29.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        char[] charArray42 = strBuilder38.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendln(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        writer30.write(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder22.append(charArray42);
        java.util.stream.IntStream intStream47 = strBuilder46.codePoints();
        boolean boolean49 = strBuilder46.contains('6');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(writer30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(intStream47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test09520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09520");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        java.lang.String str34 = strBuilder24.rightString((int) ' ');
        boolean boolean36 = strBuilder24.startsWith("");
        char[] charArray37 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.insert((int) (short) 0, charArray37);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        java.util.Set<java.lang.Object> objSet41 = properties39.keySet();
        java.util.Properties properties42 = new java.util.Properties(properties39);
        java.lang.String str43 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strBuilder22, properties42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder22.appendSeparator("StrTokenizer[4#4]", 41);
        char[] charArray47 = strBuilder46.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, '2', ' ');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n32.0" + "'", str34, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n32.0a" + "'", str43, "\n32.0a");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "\n32.0aStrTokenizer[4#4]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "\n32.0aStrTokenizer[4#4]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[\n, 3, 2, ., 0, a, S, t, r, T, o, k, e, n, i, z, e, r, [, 4, #, 4, ]]");
    }

    @Test
    public void test09521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09521");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("StrTokenizer[]");
        int int16 = strBuilder12.indexOf(" 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln((double) '#');
        boolean boolean32 = strBuilder22.equals(strBuilder31);
        java.util.stream.IntStream intStream33 = strBuilder22.codePoints();
        java.util.Iterator<java.lang.String> strItor34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder22.appendWithSeparators(strItor34, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "");
        char[] charArray47 = strBuilder43.toCharArray();
        char[] charArray48 = strBuilder40.getChars(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47);
        boolean boolean50 = strTokenizer49.hasPrevious();
        java.util.List<java.lang.String> strList51 = strTokenizer49.getTokenList();
        boolean boolean52 = strTokenizer49.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = strTokenizer49.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder36.replaceAll(strMatcher53, "\n32.0java.io.IOException: hi!");
        boolean boolean56 = strBuilder12.equals(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder12.appendPadding(116, 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.ensureCapacity(6);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.delete(117, 25);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test09522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09522");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder2.lastIndexOf("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        int int6 = strBuilder5.capacity();
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(stringBuffer7, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder2.appendFixedWidthPadRight((java.lang.Object) strBuilder14, (int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder2.append('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder2.append((long) 132);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("\n32.0java.io.IOException: hi!116\n\n\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test09523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09523");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        java.io.Writer writer18 = strBuilder0.asWriter();
        writer18.flush();
        writer18.write("");
        writer18.flush();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(writer18);
    }

    @Test
    public void test09524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09524");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("\n32.0", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        char[] charArray8 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln('#');
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append(stringBuffer20, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.deleteFirst("hi!");
        char[] charArray26 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer13.reset(charArray26);
        boolean boolean28 = properties0.replace((java.lang.Object) iOException4, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer13);
        int int29 = properties0.size();
        int int30 = properties0.size();
        java.util.Set<java.lang.Object> objSet31 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln('#');
        char[] charArray49 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        int int52 = strTokenizer51.size();
        boolean boolean53 = strTokenizer51.hasNext();
        java.util.List<java.lang.String> strList54 = strTokenizer51.getTokenList();
        java.lang.String[] strArray58 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        boolean boolean61 = strList54.addAll((java.util.Collection<java.lang.String>) strList59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray64 = strTokenizer63.getTokenArray();
        java.lang.String[] strArray65 = strTokenizer63.getTokenArray();
        boolean boolean66 = strTokenizer63.hasNext();
        int int67 = strTokenizer63.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer63.getQuoteMatcher();
        java.util.List<java.lang.String> strList69 = strTokenizer63.getTokenList();
        boolean boolean70 = strList54.retainAll((java.util.Collection<java.lang.String>) strList69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder42.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList54, "");
        java.lang.Object obj73 = properties0.getOrDefault((java.lang.Object) (short) 0, (java.lang.Object) strList54);
        int int74 = properties0.size();
        java.util.Set<java.lang.String> strSet75 = properties0.stringPropertyNames();
        java.io.PrintStream printStream76 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(strSet75);
    }

    @Test
    public void test09525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09525");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("35.0\n4");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = strTokenizer1.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test09526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09526");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.insert(1, (double) 32);
        boolean boolean34 = strBuilder25.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder25.appendSeparator('a', ' ');
        boolean boolean38 = strBuilder37.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray44 = strTokenizer43.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.appendAll((java.lang.Object[]) strArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln('#');
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.append(stringBuffer54, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder51.appendSeparator("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder45.append((java.lang.CharSequence) strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder37.append((java.lang.CharSequence) strBuilder45);
        boolean boolean67 = properties0.containsValue((java.lang.Object) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder37.replaceFirst('s', 't');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test09527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09527");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        char[] charArray16 = strBuilder8.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        char[] charArray18 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean21 = strTokenizer20.hasNext();
        java.lang.String[] strArray22 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder0.appendWithSeparators((java.lang.Object[]) strArray22, "\n-1.0");
        java.util.stream.IntStream intStream25 = strBuilder24.chars();
        java.lang.String str28 = strBuilder24.midString((int) '4', 32);
        java.io.Reader reader29 = strBuilder24.asReader();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(intStream25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(reader29);
    }

    @Test
    public void test09528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09528");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("3");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test09529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09529");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer15.reset();
        java.lang.String str17 = strTokenizer16.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.reset("-1");
        java.lang.String str20 = strTokenizer19.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.reset("0");
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#" + "'", str17, "#");
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strTokenizer22);
    }

    @Test
    public void test09530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09530");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        char[] charArray9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.append(charArray9, 10, (int) '$');
        int int13 = strBuilder12.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray16 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendSeparator("32.0");
        boolean boolean19 = strBuilder12.equals((java.lang.Object) strBuilder18);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder12.appendFixedWidthPadLeft(101, 33, '#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test09531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09531");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.insert(1, (double) 32);
        java.lang.String str26 = strBuilder16.rightString((int) ' ');
        boolean boolean28 = strBuilder16.startsWith("");
        char[] charArray29 = strBuilder16.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray29);
        writer11.write(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        java.lang.String str35 = strTokenizer34.getContent();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer34.set("{StrTokenizer[not tokenized yet]=\n-1.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n32.0" + "'", str26, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n32.0" + "'", str35, "\n32.0");
    }

    @Test
    public void test09532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09532");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.appendln(charArray7, (int) (short) 1, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(0, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendPadding((int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.replaceFirst("#\n4#44#443.0", "{\ntrue\n=1.0}");
        int int23 = strBuilder13.lastIndexOf('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder13.appendNull();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test09533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09533");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        java.lang.String str34 = strBuilder24.rightString((int) ' ');
        boolean boolean36 = strBuilder24.startsWith("");
        char[] charArray37 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.insert((int) (short) 0, charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("l");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "");
        char[] charArray45 = strBuilder41.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, "");
        boolean boolean48 = strTokenizer47.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer47.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray37, strMatcher40, strMatcher49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray37);
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray37);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n32.0" + "'", str34, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strMatcher52);
    }

    @Test
    public void test09534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09534");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        boolean boolean20 = strList9.add("\n");
        boolean boolean22 = strList9.add("\n2.0");
        java.util.Spliterator<java.lang.String> strSpliterator23 = strList9.spliterator();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strSpliterator23);
    }

    @Test
    public void test09535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09535");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.replaceFirst("StrTokenizer[not tokenized yet]", "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.insert((int) (short) 1, (float) (-1));
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder17.append(stringBuffer21, (-1), 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator("{}3.0", "1001\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.setCharAt(0, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder24.appendln(strBuilder39);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        int int43 = strBuilder39.lastIndexOf(strMatcher42);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.append((java.lang.Object) "110.0true{");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray51 = strTokenizer50.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendAll((java.lang.Object[]) strArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray61 = strTokenizer60.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendAll((java.lang.Object[]) strArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder46.appendln(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder62.appendSeparator("hi!", "");
        java.lang.String str70 = strBuilder68.rightString((int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder45.append(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "97\nhi!" + "'", str70, "97\nhi!");
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test09536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09536");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder2.lastIndexOf("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        int int6 = strBuilder5.capacity();
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(stringBuffer7, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder2.appendFixedWidthPadRight((java.lang.Object) strBuilder14, (int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder2.appendSeparator("", "0");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.ensureCapacity(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder24.minimizeCapacity();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = strBuilder25.substring((int) (short) 100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test09537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09537");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        java.lang.Object obj2 = strTokenizer1.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer1.getIgnoredMatcher();
        int int4 = strTokenizer1.size();
        java.lang.Object obj5 = strTokenizer1.clone();
        boolean boolean6 = strTokenizer1.hasNext();
        java.lang.String str7 = strTokenizer1.nextToken();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "StrTokenizer[]" + "'", str7, "StrTokenizer[]");
    }

    @Test
    public void test09538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09538");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        writer9.write(32);
        writer9.flush();
        java.lang.Class<?> wildcardClass15 = writer9.getClass();
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test09539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09539");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder0.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder0.appendln(' ');
        char[] charArray26 = strBuilder25.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, strMatcher27);
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray26);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "\n32.0true\n \n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "\n32.0true\n \n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[\n, 3, 2, ., 0, t, r, u, e, \n,  , \n]");
        org.junit.Assert.assertNotNull(strMatcher29);
    }

    @Test
    public void test09540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09540");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        int int24 = strBuilder23.capacity();
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(stringBuffer25, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.insert(1, (double) 32);
        java.lang.String str33 = strBuilder23.rightString((int) ' ');
        boolean boolean35 = strBuilder23.startsWith("");
        char[] charArray36 = strBuilder23.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray36);
        boolean boolean38 = strBuilder22.contains(strMatcher37);
        int int41 = strBuilder22.indexOf('t', (int) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder22.appendSeparator('$');
        java.io.Reader reader44 = strBuilder22.asReader();
        reader44.close();
        reader44.mark(32);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\n32.0" + "'", str33, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(reader44);
    }

    @Test
    public void test09541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09541");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        long long23 = reader9.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst('a', '4');
        java.io.Writer writer31 = strBuilder30.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("", "");
        char[] charArray43 = strBuilder39.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.appendln(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray43);
        writer31.write(charArray43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, '4', '$');
        int int50 = reader9.read(charArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst("", "");
        char[] charArray58 = strBuilder54.toCharArray();
        char[] charArray59 = strBuilder51.getChars(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58);
        boolean boolean61 = strTokenizer60.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst("", "");
        char[] charArray75 = strBuilder71.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendln(charArray75);
        int int80 = strMatcher63.isMatch(charArray75, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer60.reset(charArray75);
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray75);
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray75);
        int int85 = reader9.read(charArray75);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray75);
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(writer31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(strTokenizer82);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
    }

    @Test
    public void test09542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09542");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst("java.io.IOException: hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder5.replaceFirst("\n32.0java.io.IOException: hi!", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteAll('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setNewLineText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.minimizeCapacity();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('a', '4');
        java.io.Writer writer30 = strBuilder29.asWriter();
        properties22.store(writer30, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "");
        java.io.Reader reader37 = strBuilder33.asReader();
        properties22.load(reader37);
        java.util.Collection<java.lang.Object> objCollection39 = properties22.values();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst("", "");
        char[] charArray53 = strBuilder49.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.appendln(charArray53);
        int int58 = strMatcher41.isMatch(charArray53, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray53);
        char[] charArray65 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray65, ' ');
        int int68 = strTokenizer67.size();
        boolean boolean69 = strTokenizer67.hasNext();
        java.util.List<java.lang.String> strList70 = strTokenizer67.getTokenList();
        java.lang.String[] strArray74 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        boolean boolean77 = strList70.addAll((java.util.Collection<java.lang.String>) strList75);
        java.util.Spliterator<java.lang.String> strSpliterator78 = strList75.spliterator();
        int int79 = strList75.size();
        java.lang.String str81 = strList75.remove((int) (byte) 0);
        java.util.stream.Stream<java.lang.String> strStream82 = strList75.parallelStream();
        boolean boolean83 = properties22.remove((java.lang.Object) strTokenizer60, (java.lang.Object) strList75);
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties22.keys();
        properties22.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder20.appendFixedWidthPadLeft((java.lang.Object) properties22, 26, '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder20.append("3362.01StrTokenizer[ 4#4]\na");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(writer30);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(reader37);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strSpliterator78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 3 + "'", int79 == 3);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "\n32.0" + "'", str81, "\n32.0");
        org.junit.Assert.assertNotNull(strStream82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objEnumeration84);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test09543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09543");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        int int22 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendAll((java.lang.Object[]) strArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.ensureCapacity((int) (short) 10);
        boolean boolean36 = strBuilder29.equals((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.setNullText("java.io.IOException");
        java.io.Writer writer39 = strBuilder35.asWriter();
        char[] charArray42 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        java.lang.String str46 = strTokenizer43.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer43.setDelimiterString("StrTokenizer[ 4#4]");
        int int49 = strTokenizer48.nextIndex();
        java.lang.Object obj50 = properties0.put((java.lang.Object) writer39, (java.lang.Object) strTokenizer48);
        java.util.Properties properties51 = new java.util.Properties(properties0);
        java.io.OutputStream outputStream52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties51.store(outputStream52, "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0000.0");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(writer39);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "a4" + "'", str46, "a4");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNull(obj50);
    }

    @Test
    public void test09544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09544");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        java.lang.String str26 = strBuilder6.substring(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder6.appendSeparator("StrTokenizer[]", 11);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.append(false);
        int int33 = strBuilder29.indexOf("\ntrue\ntrue\n##############################true#####4\n");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "#\n" + "'", str26, "#\n");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test09545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09545");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((double) 100L);
        java.util.stream.IntStream intStream45 = strBuilder3.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder3.append((double) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder3.replaceFirst("java.io.IOException: ########", "l");
        boolean boolean52 = strBuilder3.contains('4');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(intStream45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test09546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09546");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean27 = strTokenizer26.hasNext();
        java.lang.String[] strArray28 = strTokenizer26.getTokenArray();
        java.lang.String str29 = strTokenizer26.toString();
        boolean boolean30 = properties0.equals((java.lang.Object) strTokenizer26);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder37.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder31.appendFixedWidthPadRight((java.lang.Object) strBuilder40, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.setLength(3);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strBuilder47.asTokenizer();
        java.util.Properties properties49 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray56 = strTokenizer55.getTokenArray();
        java.lang.String[] strArray57 = strTokenizer55.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendWithSeparators((java.lang.Object[]) strArray57, "4#4");
        char[] charArray62 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray62);
        java.lang.Object obj64 = properties49.getOrDefault((java.lang.Object) strBuilder53, (java.lang.Object) strTokenizer63);
        java.util.Enumeration<?> wildcardEnumeration65 = properties49.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties49.elements();
        java.util.Collection<java.lang.Object> objCollection67 = properties49.values();
        java.lang.Object obj68 = properties0.getOrDefault((java.lang.Object) strBuilder47, (java.lang.Object) properties49);
        java.io.InputStream inputStream69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties49.loadFromXML(inputStream69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "StrTokenizer[]" + "'", str29, "StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objCollection67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "{}");
    }

    @Test
    public void test09547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09547");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        int int27 = strBuilder9.lastIndexOf("4#4", (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder9.appendSeparator("a4", 53);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendPadding(169, '6');
        char[] charArray39 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        int int42 = strTokenizer41.size();
        boolean boolean43 = strTokenizer41.hasNext();
        java.util.List<java.lang.String> strList44 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        char[] charArray49 = strBuilder45.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        boolean boolean53 = strList44.equals((java.lang.Object) charArray49);
        boolean boolean55 = strList44.add("\n");
        boolean boolean57 = strList44.add("\n2.0");
        java.util.ListIterator<java.lang.String> strItor58 = strList44.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder31.appendAll((java.util.Iterator<java.lang.String>) strItor58);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder31.appendFixedWidthPadLeft((int) '9', 74, 'a');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strItor58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test09548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09548");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.setCharAt((int) (byte) 1, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.append((long) 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        char[] charArray33 = strBuilder29.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder26.append(charArray33, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray44 = strTokenizer43.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.appendAll((java.lang.Object[]) strArray44);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder39.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray54 = strTokenizer53.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendAll((java.lang.Object[]) strArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder39.appendln(strBuilder55);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "");
        char[] charArray68 = strBuilder64.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder63.appendln(charArray68);
        boolean boolean70 = strBuilder39.equals((java.lang.Object) strBuilder63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getDelimiterMatcher();
        int int75 = strBuilder39.indexOf(strMatcher74);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, strMatcher74);
        int int78 = strBuilder11.indexOf(strMatcher74, 2);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder11.appendSeparator("true\n##############################true#####4", "########");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strBuilder81.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strTokenizer82);
    }

    @Test
    public void test09549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09549");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder12.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        java.lang.String str20 = strBuilder16.getNewLineText();
        java.util.stream.IntStream intStream21 = strBuilder16.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.append((java.lang.CharSequence) strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder0.replaceAll("\n", "[\n32.0, , , StrTokenizer[]]");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder0.append(8);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln((double) '#');
        char[] charArray36 = strBuilder33.toCharArray();
        java.lang.String str37 = org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties((java.lang.Object) charArray36);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder0.insert((-1), charArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "35.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "35.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[3, 5, ., 0, \n]");
    }

    @Test
    public void test09550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09550");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.deleteAll('4');
        int int15 = strBuilder13.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        char[] charArray20 = strBuilder16.toCharArray();
        char[] charArray21 = strBuilder13.getChars(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder5.appendln(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer28, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer28.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer33.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer35.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder5.deleteFirst(strMatcher36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strBuilder5.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setDelimiterChar('g');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer40.setDelimiterChar('2');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strTokenizer42);
    }

    @Test
    public void test09551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09551");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder33.lastIndexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.insert((int) (short) 1, 32);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        boolean boolean42 = properties39.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties39.entrySet();
        java.lang.Object obj44 = properties0.putIfAbsent((java.lang.Object) strBuilder38, (java.lang.Object) objEntrySet43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        int int46 = strBuilder45.capacity();
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(stringBuffer47, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int52 = strBuilder50.lastIndexOf(strMatcher51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.insert((int) (short) 1, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteAll("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.setNullText("");
        char[] charArray64 = strBuilder63.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder63.insert(0, true);
        java.io.Writer writer68 = strBuilder63.asWriter();
        boolean boolean69 = properties0.remove((java.lang.Object) "java.io.IOException: hi!", (java.lang.Object) writer68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties0.keys();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(writer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
    }

    @Test
    public void test09552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09552");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln('#');
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.append(stringBuffer15, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder12.appendSeparator("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder6.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder6.replaceFirst("#", "[4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder6.append((long) 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.insert(0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder34.ensureCapacity(43);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder34.setCharAt(41, '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 41");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test09553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09553");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendAll((java.lang.Object[]) strArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray31 = strTokenizer30.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendAll((java.lang.Object[]) strArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder16.appendln(strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst('a', '4');
        java.io.Writer writer46 = strBuilder45.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst("", "");
        char[] charArray58 = strBuilder54.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendln(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray58);
        writer46.write(charArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder38.append(charArray58);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder15.replaceFirst(strMatcher63, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.appendln((double) 1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strBuilder65.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln('#');
        java.lang.StringBuffer stringBuffer75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder72.append(stringBuffer75, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder72.deleteFirst("hi!");
        char[] charArray81 = strBuilder72.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = null;
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer84 = new org.apache.commons.lang3.text.StrTokenizer(charArray81, strMatcher82, strMatcher83);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder65.appendAll((java.util.Iterator<java.lang.String>) strTokenizer84);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder65.appendln(101);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder65.replaceFirst("\n32.010\n\000\000\000\000\000\000\000100", "\n32.0a\n\na32\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(writer46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[]");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, \n]");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test09554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09554");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(14);
    }

    @Test
    public void test09555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09555");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(' ', ' ');
        java.io.Writer writer23 = strBuilder22.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer29.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder24.setLength((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.insert((int) '4', (double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder22.append(strBuilder37, 32, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('a', '4');
        char[] charArray52 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer(charArray52, ' ');
        int int55 = strTokenizer54.size();
        boolean boolean56 = strTokenizer54.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer54.setIgnoredMatcher(strMatcher57);
        int int60 = strBuilder44.indexOf(strMatcher57, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder40.deleteAll(strMatcher57);
        java.lang.String str63 = strBuilder61.substring((int) '$');
        int int65 = strBuilder61.indexOf('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder61.appendFixedWidthPadRight((int) (byte) 1, 3, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder61.appendln(50);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.setLength(74);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder77.appendln('#');
        java.lang.StringBuffer stringBuffer80 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder77.append(stringBuffer80, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder77.deleteFirst("hi!");
        char[] charArray86 = strBuilder77.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray86);
        int int88 = strBuilder73.indexOf(strMatcher87);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(writer23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "####\000\000\000\000\000\000\000\000\000\000" + "'", str63, "####\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[#, \n]");
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 4 + "'", int88 == 4);
    }

    @Test
    public void test09556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09556");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        int int8 = strTokenizer6.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = strTokenizer6.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test09557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09557");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        boolean boolean4 = properties0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray10 = strTokenizer9.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.appendAll((java.lang.Object[]) strArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder14.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.ensureCapacity((int) (short) 10);
        boolean boolean18 = strBuilder11.equals((java.lang.Object) strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.setNullText("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        int int22 = strBuilder21.capacity();
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(stringBuffer23, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.insert(1, (double) 32);
        boolean boolean30 = strBuilder21.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder21.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray39 = strTokenizer38.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendAll((java.lang.Object[]) strArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder34.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer44 = strBuilder43.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder21.append(stringBuffer44);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder20.append((java.lang.Object) strBuilder21);
        java.lang.Object obj47 = properties0.get((java.lang.Object) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder20.append("java.io.IOException");
        java.io.IOException iOException51 = new java.io.IOException("rg.apache.");
        java.io.IOException iOException53 = new java.io.IOException("hi!");
        java.io.IOException iOException55 = new java.io.IOException("hi!");
        iOException53.addSuppressed((java.lang.Throwable) iOException55);
        java.io.IOException iOException58 = new java.io.IOException("hi!");
        java.io.IOException iOException60 = new java.io.IOException("hi!");
        iOException58.addSuppressed((java.lang.Throwable) iOException60);
        iOException55.addSuppressed((java.lang.Throwable) iOException60);
        java.lang.Throwable[] throwableArray63 = iOException55.getSuppressed();
        iOException51.addSuppressed((java.lang.Throwable) iOException55);
        java.lang.Throwable[] throwableArray65 = iOException55.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder20.appendAll((java.lang.Object[]) throwableArray65);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder20.appendln((float) 53);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 32 + "'", int22 == 32);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(stringBuffer44);
        org.junit.Assert.assertEquals(stringBuffer44.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test09558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09558");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray2 = strBuilder1.toCharArray();
        java.io.Writer writer3 = strBuilder1.asWriter();
        java.io.Writer writer4 = strBuilder1.asWriter();
        writer4.flush();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(writer3);
        org.junit.Assert.assertNotNull(writer4);
    }

    @Test
    public void test09559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09559");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray3 = strTokenizer2.getTokenArray();
        java.lang.String[] strArray4 = strTokenizer2.getTokenArray();
        boolean boolean5 = strTokenizer2.hasNext();
        int int6 = strTokenizer2.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer2.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher7);
        java.util.List<java.lang.String> strList9 = strTokenizer8.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getIgnoredMatcher();
        java.lang.Object obj11 = strTokenizer8.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer8.setDelimiterString("true\n###################################3\n");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer13.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strMatcher14);
    }

    @Test
    public void test09560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09560");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.appendAll((java.lang.Object[]) strArray7);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        char[] charArray17 = strBuilder9.getChars(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16);
        char[] charArray19 = strBuilder1.getChars(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = strTokenizer21.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher25 = strTokenizer21.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("10.0", strMatcher25);
        java.lang.String str28 = strTokenizer27.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer27.setDelimiterChar('4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setIgnoredChar('t');
        java.util.List<java.lang.String> strList35 = strTokenizer32.getTokenList();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strMatcher25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "10.0" + "'", str28, "10.0");
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strList35);
    }

    @Test
    public void test09561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09561");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.append(charArray16, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray16);
        boolean boolean23 = strTokenizer22.hasNext();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test09562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09562");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        char[] charArray78 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        int int81 = strTokenizer80.size();
        int int82 = strTokenizer80.previousIndex();
        boolean boolean83 = strList9.equals((java.lang.Object) strTokenizer80);
        java.lang.String str84 = strTokenizer80.next();
        java.lang.String str85 = strTokenizer80.previousToken();
        java.lang.String str86 = strTokenizer80.nextToken();
        java.lang.String str87 = strTokenizer80.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer80.setIgnoredChar('7');
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4#4" + "'", str84, "4#4");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "4#4" + "'", str85, "4#4");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "4#4" + "'", str86, "4#4");
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(strTokenizer89);
    }

    @Test
    public void test09563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09563");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.deleteAll('4');
        boolean boolean51 = strBuilder3.equalsIgnoreCase(strBuilder50);
        java.io.Reader reader52 = strBuilder50.asReader();
        boolean boolean53 = reader52.markSupported();
        int int54 = reader52.read();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(reader52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    }

    @Test
    public void test09564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09564");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        int int2 = strBuilder1.capacity();
        java.lang.StringBuffer stringBuffer3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln(stringBuffer3, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        boolean boolean13 = strSubstitutor0.replaceIn(strBuilder10, (int) '$', 0);
        int int16 = strBuilder10.indexOf(" #\n", (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.insert(5, (float) (byte) 0);
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties25 = new java.util.Properties();
        int int26 = properties25.size();
        boolean boolean28 = properties25.containsKey((java.lang.Object) (-1.0f));
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.util.Collection<java.lang.Object> objCollection30 = properties21.values();
        java.util.Set<java.lang.Object> objSet31 = properties21.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder19.insert(4, (java.lang.Object) objSet31);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader42 = strBuilder38.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray48 = strTokenizer47.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendAll((java.lang.Object[]) strArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream53 = strBuilder43.codePoints();
        java.lang.Object obj54 = properties33.replace((java.lang.Object) reader42, (java.lang.Object) intStream53);
        long long56 = reader42.skip(0L);
        boolean boolean57 = reader42.ready();
        reader42.close();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst("", "");
        char[] charArray72 = strBuilder68.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder67.appendln(charArray72);
        int int77 = strMatcher60.isMatch(charArray72, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray72);
        int int80 = reader42.read(charArray72);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder19.appendln(charArray72);
        java.lang.String[] strArray83 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList84 = new java.util.ArrayList<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        java.lang.Object obj86 = null;
        boolean boolean87 = strList84.contains(obj86);
        java.util.Iterator<java.lang.String> strItor88 = strList84.iterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder81.appendWithSeparators(strItor88, "#36.0");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 32 + "'", int2 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(intStream53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[]");
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strItor88);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test09565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09565");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int7 = strBuilder5.lastIndexOf(strMatcher6);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.insert(1, " #\n");
        char[] charArray11 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        char[] charArray20 = strBuilder12.getChars(charArray19);
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray19);
        int int22 = strBuilder5.indexOf(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder5.appendNewLine();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder23.appendln("\n#32.0", (int) '4', 68);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "\n #\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "\n #\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[\n,  , #, \n]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test09566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09566");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        java.util.Collection<java.lang.Object> objCollection18 = properties1.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst('a', '4');
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        java.io.Writer writer35 = strBuilder34.asWriter();
        properties27.store(writer35, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        java.io.Reader reader42 = strBuilder38.asReader();
        properties27.load(reader42);
        boolean boolean44 = reader42.ready();
        int int45 = reader42.read();
        java.lang.Object obj46 = properties1.getOrDefault((java.lang.Object) 'a', (java.lang.Object) int45);
        java.lang.String str48 = properties1.getProperty("");
        boolean boolean49 = properties1.isEmpty();
        java.util.Properties properties50 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray57 = strTokenizer56.getTokenArray();
        java.lang.String[] strArray58 = strTokenizer56.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendWithSeparators((java.lang.Object[]) strArray58, "4#4");
        char[] charArray63 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray63);
        java.lang.Object obj65 = properties50.getOrDefault((java.lang.Object) strBuilder54, (java.lang.Object) strTokenizer64);
        java.util.Collection<java.lang.Object> objCollection66 = properties50.values();
        boolean boolean67 = properties50.isEmpty();
        boolean boolean68 = properties1.containsValue((java.lang.Object) boolean67);
        java.util.Set<java.lang.Object> objSet69 = properties1.keySet();
        java.util.Set<java.lang.Object> objSet70 = properties1.keySet();
        java.lang.String str72 = properties1.getProperty("1\n-1.0\n{}32\n");
        boolean boolean73 = properties1.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(writer35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(reader42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (-1) + "'", obj46, (-1));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objSet69);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test09567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09567");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties0.entrySet();
        java.lang.Object obj5 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder(" 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendSeparator('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "");
        char[] charArray21 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln(charArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.appendln((double) '$');
        char[] charArray29 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        int int32 = strTokenizer31.size();
        boolean boolean33 = strTokenizer31.hasNext();
        java.util.List<java.lang.String> strList34 = strTokenizer31.getTokenList();
        java.lang.String[] strArray38 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        boolean boolean41 = strList34.addAll((java.util.Collection<java.lang.String>) strList39);
        java.lang.String str43 = strList39.remove(0);
        char[] charArray48 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        int int51 = strTokenizer50.size();
        boolean boolean52 = strTokenizer50.hasNext();
        java.util.List<java.lang.String> strList53 = strTokenizer50.getTokenList();
        java.lang.String[] strArray57 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        boolean boolean60 = strList53.addAll((java.util.Collection<java.lang.String>) strList58);
        boolean boolean61 = strList39.addAll((java.util.Collection<java.lang.String>) strList58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder16.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("");
        int int67 = strBuilder63.indexOf("");
        int int70 = strBuilder63.lastIndexOf('#', (int) (byte) 0);
        boolean boolean72 = strBuilder63.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder63.appendAll((java.util.Iterator<java.lang.String>) strTokenizer73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray77 = strTokenizer76.getTokenArray();
        java.lang.String[] strArray78 = strTokenizer76.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder63.appendWithSeparators((java.lang.Object[]) strArray78, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder62.appendln((java.lang.Object) "");
        java.lang.Object obj82 = properties0.getOrDefault((java.lang.Object) strBuilder9, (java.lang.Object) "");
        boolean boolean83 = properties0.isEmpty();
        java.lang.String str85 = properties0.getProperty("#\n4#44#443.0");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n32.0" + "'", str43, "\n32.0");
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "" + "'", obj82, "");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test09568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09568");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendln(32);
        java.io.Reader reader11 = strBuilder6.asReader();
        reader11.mark((int) ' ');
        reader11.mark(9);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(reader11);
    }

    @Test
    public void test09569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09569");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader13 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray19 = strTokenizer18.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendAll((java.lang.Object[]) strArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream24 = strBuilder14.codePoints();
        java.lang.Object obj25 = properties4.replace((java.lang.Object) reader13, (java.lang.Object) intStream24);
        long long27 = reader13.skip(0L);
        boolean boolean28 = reader13.markSupported();
        properties3.load(reader13);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties3.entrySet();
        boolean boolean31 = properties3.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test09570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09570");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Collection<java.lang.Object> objCollection16 = properties0.values();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) strBuilder30, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder21.lastIndexOf(strMatcher34);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setIgnoredMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder21.deleteFirst(strMatcher45);
        java.lang.Object obj48 = properties0.getOrDefault((java.lang.Object) strTokenizer20, (java.lang.Object) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst("", "");
        char[] charArray60 = strBuilder56.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder55.appendln(charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.appendln((double) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteAll('a');
        char[] charArray68 = strBuilder63.toCharArray((int) (byte) 1, 53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer20.reset(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer71.setIgnoredChar('$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = strTokenizer73.setDelimiterString(" 4#4not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "36.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "36.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[3, 6, ., 0, \n]");
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertNotNull(strTokenizer75);
    }

    @Test
    public void test09571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09571");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.reset("");
        java.lang.Object obj5 = strTokenizer1.clone();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer1.setEmptyTokenAsNull(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer7.add("java.io.IOException: java.io.IOException: java.io.IOException: \n32.0");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strTokenizer7);
    }

    @Test
    public void test09572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09572");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        strList14.clear();
        java.util.ListIterator<java.lang.String> strItor24 = strList14.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        char[] charArray32 = strBuilder28.toCharArray();
        char[] charArray33 = strBuilder25.getChars(charArray32);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32);
        boolean boolean35 = strTokenizer34.hasPrevious();
        java.util.List<java.lang.String> strList36 = strTokenizer34.getTokenList();
        strList36.clear();
        boolean boolean38 = strList14.retainAll((java.util.Collection<java.lang.String>) strList36);
        boolean boolean40 = strList36.add("10.0StrTokenizer[ 4#4]\n10.0\n");
        boolean boolean42 = strList36.add("StrTokenizer[a4]");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[]");
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test09573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09573");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.append((long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln("100.0\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setNullText("");
        char[] charArray21 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder20.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append(100);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        char[] charArray41 = strBuilder37.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendln(charArray41);
        java.lang.String str43 = strBuilder42.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.appendln(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.appendln('#');
        java.lang.StringBuffer stringBuffer54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.append(stringBuffer54, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.deleteFirst("hi!");
        char[] charArray60 = strBuilder51.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer47.reset(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer61.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer62.reset();
        java.lang.String[] strArray64 = strTokenizer63.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder42.appendAll((java.lang.Object[]) strArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder29.appendWithSeparators((java.lang.Object[]) strArray64, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder14.appendWithSeparators((java.lang.Object[]) strArray64, "{\n36.0\n=StrTokenizer[not tokenized yet]}");
        char[] charArray70 = strBuilder69.toCharArray();
        boolean boolean72 = strBuilder69.contains("#\nfalse\n\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "0.23\n-1100.0\000\000\000\000\000\n#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "0.23\n-1100.0\000\000\000\000\000\n#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[0, ., 2, 3, \n, -, 1, 1, 0, 0, ., 0, \000, \000, \000, \000, \000, \n, #]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test09574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09574");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor24 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln(true);
        boolean boolean37 = strSubstitutor24.replaceIn(strBuilder34, (int) '$', 0);
        boolean boolean38 = strList23.equals((java.lang.Object) '$');
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        java.util.Set<java.lang.Object> objSet41 = properties39.keySet();
        java.util.Properties properties44 = new java.util.Properties();
        int int45 = properties44.size();
        boolean boolean47 = properties44.containsKey((java.lang.Object) (-1.0f));
        boolean boolean48 = properties39.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray53 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        int int56 = strTokenizer55.size();
        boolean boolean57 = strTokenizer55.hasNext();
        java.util.List<java.lang.String> strList58 = strTokenizer55.getTokenList();
        java.lang.String[] strArray62 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        boolean boolean65 = strList58.addAll((java.util.Collection<java.lang.String>) strList63);
        java.util.Spliterator<java.lang.String> strSpliterator66 = strList63.spliterator();
        int int67 = strList63.size();
        boolean boolean69 = strList63.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream70 = strList63.stream();
        boolean boolean71 = properties39.containsKey((java.lang.Object) strList63);
        boolean boolean72 = strList23.retainAll((java.util.Collection<java.lang.String>) strList63);
        boolean boolean74 = strList23.add("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        java.util.stream.Stream<java.lang.String> strStream75 = strList23.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList78 = strList23.subList((int) 'e', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(101) > toIndex(0)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strSpliterator66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 3 + "'", int67 == 3);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strStream70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strStream75);
    }

    @Test
    public void test09575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09575");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        int int5 = strBuilder4.capacity();
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(stringBuffer6, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int11 = strBuilder9.lastIndexOf(strMatcher10);
        boolean boolean12 = strBuilder2.equalsIgnoreCase(strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder2.insert((int) (byte) 0, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder2.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder2.replaceFirst('\n', '1');
        int int21 = strBuilder2.lastIndexOf('\000');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test09576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09576");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "");
        boolean boolean9 = strBuilder7.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln('#');
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.append(stringBuffer18, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.deleteFirst("hi!");
        char[] charArray24 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer11.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        char[] charArray27 = strBuilder7.getChars(charArray24);
        java.lang.Object obj28 = properties0.remove((java.lang.Object) charArray27);
        java.lang.String str30 = properties0.getProperty("\n32.0");
        java.util.Properties properties31 = new java.util.Properties();
        int int32 = properties31.size();
        java.util.Set<java.lang.Object> objSet33 = properties31.keySet();
        java.util.Properties properties34 = new java.util.Properties(properties31);
        boolean boolean35 = properties0.containsKey((java.lang.Object) properties34);
        boolean boolean36 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties34.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder46.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.setNullText("");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.replaceAll(strMatcher51, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder43.replaceFirst(strMatcher51, "########a4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder43.appendPadding((int) (short) 0, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder43.appendSeparator("StrTokenizer[]", (int) (short) 10);
        int int62 = strBuilder61.capacity();
        boolean boolean63 = properties34.contains((java.lang.Object) int62);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, \n]");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 28 + "'", int62 == 28);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test09577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09577");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.appendSeparator("java.io.IOException: java.io.IOException: \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendAll((java.lang.Object[]) strArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.replaceFirst('a', 'a');
        char[] charArray35 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        int int38 = strTokenizer37.size();
        boolean boolean39 = strTokenizer37.hasNext();
        java.util.List<java.lang.String> strList40 = strTokenizer37.getTokenList();
        java.lang.String[] strArray44 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        boolean boolean47 = strList40.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder21.appendAll((java.lang.Iterable<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor49 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        int int51 = strBuilder50.capacity();
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(stringBuffer52, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder50.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln(true);
        boolean boolean62 = strSubstitutor49.replaceIn(strBuilder59, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder21.append((java.lang.CharSequence) strBuilder59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = strBuilder59.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer64.setDelimiterString("-1");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setQuoteChar('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder17.appendln((java.lang.Object) strTokenizer66);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 32 + "'", int51 == 32);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test09578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09578");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder3.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        int int15 = strBuilder14.capacity();
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(stringBuffer16, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.insert(1, (double) 32);
        java.util.Properties properties23 = new java.util.Properties();
        int int24 = properties23.size();
        boolean boolean26 = properties23.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        boolean boolean32 = properties23.containsValue((java.lang.Object) charArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder14.append(charArray31, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder14.delete(1, (int) (byte) 1);
        int int39 = strBuilder14.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder14.append("StrTokenizer[ 4#4]", (int) (byte) 0, 5);
        boolean boolean44 = strBuilder3.equalsIgnoreCase(strBuilder14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder3.insert((int) (short) 100, (float) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 100");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test09579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09579");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("StrTokenizer[]");
        int int16 = strBuilder12.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray23 = strTokenizer22.getTokenArray();
        java.lang.String[] strArray24 = strTokenizer22.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendWithSeparators((java.lang.Object[]) strArray24, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.delete(0, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder20.appendSeparator("1", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder20.append((double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder12.appendln(strBuilder20);
        java.lang.String str36 = strBuilder20.getNullText();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test09580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09580");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.insert(1, (double) 32);
        java.lang.String str26 = strBuilder16.rightString((int) ' ');
        boolean boolean28 = strBuilder16.startsWith("");
        char[] charArray29 = strBuilder16.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray29);
        writer11.write(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        java.lang.String str35 = strTokenizer34.getContent();
        int int36 = strTokenizer34.previousIndex();
        int int37 = strTokenizer34.size();
        boolean boolean38 = strTokenizer34.hasNext();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n32.0" + "'", str26, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n32.0" + "'", str35, "\n32.0");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test09581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09581");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('a', '4');
        java.io.Writer writer34 = strBuilder33.asWriter();
        properties26.store(writer34, "");
        java.util.Properties properties37 = new java.util.Properties();
        int int38 = properties37.size();
        boolean boolean40 = properties37.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties41 = new java.util.Properties();
        int int42 = properties41.size();
        boolean boolean44 = properties41.containsKey((java.lang.Object) (-1.0f));
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.keys();
        boolean boolean47 = properties26.containsValue((java.lang.Object) objEnumeration46);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties49 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = properties49.entrySet();
        java.lang.Object obj53 = properties49.setProperty(" #java.io.IOException: {\ntrue\n=1.0}", "StrTokenizer[true]");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertNull(obj53);
    }

    @Test
    public void test09582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09582");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.deleteAll("StrTokenizer[]");
        int int28 = strBuilder26.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        int int33 = strBuilder29.indexOf("");
        int int36 = strBuilder29.lastIndexOf('#', (int) (byte) 0);
        boolean boolean38 = strBuilder29.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder29.appendAll((java.util.Iterator<java.lang.String>) strTokenizer39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder29.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder26.append(strBuilder44, 1, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendSeparator('9');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test09583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09583");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln('#');
        char[] charArray44 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        int int47 = strTokenizer46.size();
        boolean boolean48 = strTokenizer46.hasNext();
        java.util.List<java.lang.String> strList49 = strTokenizer46.getTokenList();
        java.lang.String[] strArray53 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        boolean boolean56 = strList49.addAll((java.util.Collection<java.lang.String>) strList54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray59 = strTokenizer58.getTokenArray();
        java.lang.String[] strArray60 = strTokenizer58.getTokenArray();
        boolean boolean61 = strTokenizer58.hasNext();
        int int62 = strTokenizer58.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer58.getQuoteMatcher();
        java.util.List<java.lang.String> strList64 = strTokenizer58.getTokenList();
        boolean boolean65 = strList49.retainAll((java.util.Collection<java.lang.String>) strList64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder37.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList49, "");
        java.lang.Object obj68 = properties0.remove((java.lang.Object) strList49);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder75.appendln(32);
        java.io.Reader reader80 = strBuilder75.asReader();
        properties0.load(reader80);
        java.lang.Object obj82 = properties0.clone();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(reader80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "{}");
    }

    @Test
    public void test09584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09584");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.util.Set<java.lang.Object> objSet25 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.append('a');
        int int34 = strBuilder27.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        int int36 = strBuilder35.capacity();
        java.lang.StringBuffer stringBuffer37 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendln(stringBuffer37, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.insert(1, (double) 32);
        boolean boolean44 = strBuilder35.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder35.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.clear();
        int int47 = strBuilder46.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder27.append(strBuilder46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder51.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.setNullText("");
        java.lang.Object obj55 = properties0.getOrDefault((java.lang.Object) strBuilder46, (java.lang.Object) strBuilder52);
        java.lang.Object obj58 = properties0.setProperty("java.io.IOException: java.io.IOException", "\n32.0java.io.IOException: hi!###");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 32 + "'", int36 == 32);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "");
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test09585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09585");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray18 = strTokenizer17.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendAll((java.lang.Object[]) strArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer23 = strBuilder22.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder0.append(stringBuffer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder24.deleteCharAt(2);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(stringBuffer23);
        org.junit.Assert.assertEquals(stringBuffer23.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test09586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09586");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder2.lastIndexOf("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        int int6 = strBuilder5.capacity();
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(stringBuffer7, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder2.appendFixedWidthPadRight((java.lang.Object) strBuilder14, (int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder2.appendSeparator("", "0");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.ensureCapacity(2);
        boolean boolean25 = strBuilder24.isEmpty();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("{}");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        int int29 = strBuilder24.indexOf(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test09587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09587");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        char[] charArray78 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        int int81 = strTokenizer80.size();
        int int82 = strTokenizer80.previousIndex();
        boolean boolean83 = strList9.equals((java.lang.Object) strTokenizer80);
        java.lang.String str84 = strTokenizer80.next();
        java.lang.String str85 = strTokenizer80.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer80.setEmptyTokenAsNull(true);
        boolean boolean88 = strTokenizer80.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer80.setDelimiterString(" ");
        java.lang.Object obj91 = strTokenizer80.clone();
        java.lang.String str92 = strTokenizer80.nextToken();
        boolean boolean93 = strTokenizer80.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = strTokenizer80.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4#4" + "'", str84, "4#4");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "4#4" + "'", str85, "4#4");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "4#4" + "'", str92, "4#4");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(strTokenizer95);
    }

    @Test
    public void test09588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09588");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties4.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties4.keys();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader20 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendAll((java.lang.Object[]) strArray26);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder21.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream31 = strBuilder21.codePoints();
        java.lang.Object obj32 = properties11.replace((java.lang.Object) reader20, (java.lang.Object) intStream31);
        boolean boolean33 = reader20.ready();
        boolean boolean34 = properties4.containsValue((java.lang.Object) reader20);
        boolean boolean35 = reader20.markSupported();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((float) '$');
        char char46 = strBuilder44.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder44.setNewLineText("\n32.0java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst("", "");
        char[] charArray56 = strBuilder52.toCharArray();
        char[] charArray57 = strBuilder49.getChars(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray56);
        char[] charArray59 = strBuilder48.getChars(charArray56);
        int int60 = reader20.read(charArray56);
        long long62 = reader20.skip((long) (-1));
        int int63 = reader20.read();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(intStream31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + char46 + "' != '" + '#' + "'", char46 == '#');
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[]");
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[]");
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "#36.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "#36.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[#, 3, 6, ., 0]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 35 + "'", int63 == 35);
    }

    @Test
    public void test09589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09589");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendln(charArray31);
        int int36 = strMatcher19.isMatch(charArray31, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher17, strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder9.appendln(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        int int42 = strBuilder41.capacity();
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(stringBuffer43, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder41.setLength(32);
        java.io.Writer writer52 = strBuilder51.asWriter();
        writer52.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        int int58 = strBuilder57.capacity();
        java.lang.StringBuffer stringBuffer59 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(stringBuffer59, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder57.insert(1, (double) 32);
        java.lang.String str67 = strBuilder57.rightString((int) ' ');
        boolean boolean69 = strBuilder57.startsWith("");
        char[] charArray70 = strBuilder57.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        writer52.write(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, 'a');
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        org.apache.commons.lang3.text.StrMatcher strMatcher76 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer40.setTrimmerMatcher(strMatcher76);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = strTokenizer77.setEmptyTokenAsNull(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer79.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 32 + "'", int42 == 32);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(writer52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 32 + "'", int58 == 32);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\n32.0" + "'", str67, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strMatcher76);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertNotNull(strTokenizer79);
    }

    @Test
    public void test09590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09590");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("not tokenized yet]", "StrTokenizer[32.0]");
        int int3 = strTokenizer2.nextIndex();
        java.util.List<java.lang.String> strList4 = strTokenizer2.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream5 = strList4.stream();
        boolean boolean7 = strList4.add("\n0\n32.0\n97\nhi!");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test09591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09591");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("36.0\n");
        int int2 = strTokenizer1.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.add(" 52 \n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: add() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test09592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09592");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.clear();
        java.util.Properties properties19 = new java.util.Properties();
        int int20 = properties19.size();
        boolean boolean22 = properties19.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties23 = new java.util.Properties();
        int int24 = properties23.size();
        boolean boolean26 = properties23.containsKey((java.lang.Object) (-1.0f));
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.lang.String str29 = properties23.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration30 = properties23.propertyNames();
        int int31 = properties23.size();
        java.util.Properties properties33 = new java.util.Properties();
        int int34 = properties33.size();
        boolean boolean36 = properties33.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        boolean boolean42 = strBuilder40.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.appendln('#');
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.append(stringBuffer51, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder48.deleteFirst("hi!");
        char[] charArray57 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer44.reset(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        char[] charArray60 = strBuilder40.getChars(charArray57);
        java.lang.Object obj61 = properties33.remove((java.lang.Object) charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray60);
        java.lang.Object obj63 = properties23.put((java.lang.Object) 74, (java.lang.Object) charArray60);
        char[] charArray64 = strBuilder18.getChars(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray60);
        int int66 = strTokenizer65.nextIndex();
        boolean boolean67 = strTokenizer65.hasNext();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[#, \n]");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test09593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09593");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("\nt\n\n");
    }

    @Test
    public void test09594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09594");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        char char10 = strBuilder8.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.replaceAll('$', '#');
        char[] charArray19 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer20.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        int int24 = strBuilder23.capacity();
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(stringBuffer25, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.insert(1, (double) 32);
        java.lang.String str33 = strBuilder23.rightString((int) ' ');
        boolean boolean35 = strBuilder23.startsWith("");
        char[] charArray36 = strBuilder23.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer22.setDelimiterMatcher(strMatcher37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder8.replaceAll(strMatcher37, "a}3.0$");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder8.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder8.appendSeparator("StrTokenizer[ 4#4]", "\n32.0java.io.IOException: i!");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + char10 + "' != '" + '#' + "'", char10 == '#');
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\n32.0" + "'", str33, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test09595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09595");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        java.lang.String str22 = strBuilder21.toString();
        char[] charArray27 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        java.lang.String str30 = strTokenizer29.next();
        int int31 = strTokenizer29.previousIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder21.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder21.deleteCharAt((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln("\n32.0java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.deleteAll('9');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll('\n', 'o');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\n32.0" + "'", str22, "\n32.0");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ , 4, #, 4]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4#4" + "'", str30, "4#4");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test09596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09596");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        int int21 = strBuilder17.indexOf("");
        int int24 = strBuilder17.lastIndexOf('#', (int) (byte) 0);
        boolean boolean26 = strBuilder17.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder17.appendAll((java.util.Iterator<java.lang.String>) strTokenizer27);
        boolean boolean29 = strTokenizer27.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer27.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("");
        int int38 = strBuilder34.indexOf("");
        int int41 = strBuilder34.lastIndexOf('#', (int) (byte) 0);
        boolean boolean43 = strBuilder34.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder34.appendAll((java.util.Iterator<java.lang.String>) strTokenizer44);
        boolean boolean46 = strTokenizer44.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer44.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher50 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst("", "");
        char[] charArray62 = strBuilder58.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder57.appendln(charArray62);
        int int67 = strMatcher50.isMatch(charArray62, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer48.setTrimmerMatcher(strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = strTokenizer33.setTrimmerMatcher(strMatcher50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, strMatcher50);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        int int72 = strBuilder71.capacity();
        java.lang.StringBuffer stringBuffer73 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.appendln(stringBuffer73, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder71.insert(1, (double) 32);
        java.lang.String str81 = strBuilder71.rightString((int) ' ');
        boolean boolean83 = strBuilder71.startsWith("");
        char[] charArray84 = strBuilder71.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray84);
        int int89 = strMatcher50.isMatch(charArray84, 13, 12, 103);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray84);
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(strMatcher50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[]");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertNotNull(strTokenizer69);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 32 + "'", int72 == 32);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "\n32.0" + "'", str81, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(strMatcher90);
    }

    @Test
    public void test09597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09597");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln((int) (byte) 100);
        java.io.IOException iOException20 = new java.io.IOException("hi!");
        java.io.IOException iOException22 = new java.io.IOException("hi!");
        iOException20.addSuppressed((java.lang.Throwable) iOException22);
        java.io.IOException iOException24 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException22);
        java.lang.Throwable[] throwableArray25 = iOException24.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.appendAll((java.lang.Object[]) throwableArray25);
        java.util.Properties properties27 = new java.util.Properties();
        int int28 = properties27.size();
        char[] charArray33 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer(charArray33, ' ');
        int int36 = strTokenizer35.size();
        boolean boolean37 = strTokenizer35.hasNext();
        java.util.List<java.lang.String> strList38 = strTokenizer35.getTokenList();
        java.lang.String[] strArray42 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        boolean boolean45 = strList38.addAll((java.util.Collection<java.lang.String>) strList43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray48 = strTokenizer47.getTokenArray();
        java.lang.String[] strArray49 = strTokenizer47.getTokenArray();
        boolean boolean50 = strTokenizer47.hasNext();
        int int51 = strTokenizer47.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher52 = strTokenizer47.getQuoteMatcher();
        java.util.List<java.lang.String> strList53 = strTokenizer47.getTokenList();
        boolean boolean54 = strList38.retainAll((java.util.Collection<java.lang.String>) strList53);
        strList38.clear();
        java.lang.Object obj56 = properties27.remove((java.lang.Object) strList38);
        java.util.Iterator<java.lang.String> strItor57 = strList38.iterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder26.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList38, "\n32.0afalse");
        java.lang.String str60 = strBuilder26.getNullText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(strMatcher52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strItor57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test09598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09598");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[35.0]");
        boolean boolean2 = strTokenizer1.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer1.getDelimiterMatcher();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strMatcher3);
    }

    @Test
    public void test09599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09599");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("{}", "[4#4]");
    }

    @Test
    public void test09600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09600");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader10 = strBuilder6.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray16 = strTokenizer15.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendAll((java.lang.Object[]) strArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream21 = strBuilder11.codePoints();
        java.lang.Object obj22 = properties1.replace((java.lang.Object) reader10, (java.lang.Object) intStream21);
        reader10.reset();
        properties0.load(reader10);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder25.insert(1, (double) 32);
        boolean boolean34 = strBuilder25.isEmpty();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('a', '4');
        java.io.Writer writer44 = strBuilder43.asWriter();
        properties36.store(writer44, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst("", "");
        java.io.Reader reader51 = strBuilder47.asReader();
        properties36.load(reader51);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        int int54 = strBuilder53.capacity();
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendln(stringBuffer55, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder53.insert(1, (double) 32);
        java.util.Properties properties62 = new java.util.Properties();
        int int63 = properties62.size();
        boolean boolean65 = properties62.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst("", "");
        char[] charArray70 = strBuilder66.toCharArray();
        boolean boolean71 = properties62.containsValue((java.lang.Object) charArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder53.append(charArray70, (int) (byte) 0, 0);
        int int75 = reader51.read(charArray70);
        reader51.mark((int) '#');
        reader51.reset();
        boolean boolean79 = properties0.remove((java.lang.Object) boolean34, (java.lang.Object) reader51);
        boolean boolean80 = properties0.isEmpty();
        java.util.Collection<java.lang.Object> objCollection81 = properties0.values();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(writer44);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(reader51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 32 + "'", int54 == 32);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(objCollection81);
    }

    @Test
    public void test09601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09601");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        java.lang.String str34 = strBuilder24.rightString((int) ' ');
        boolean boolean36 = strBuilder24.startsWith("");
        char[] charArray37 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.insert((int) (short) 0, charArray37);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        java.util.Set<java.lang.Object> objSet41 = properties39.keySet();
        java.util.Properties properties42 = new java.util.Properties(properties39);
        java.lang.String str43 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strBuilder22, properties42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder22.appendNewLine();
        java.io.Writer writer45 = strBuilder22.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder22.append("\na32");
        java.lang.String str48 = strBuilder22.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder22.appendSeparator('u', 169);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n32.0" + "'", str34, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n32.0a" + "'", str43, "\n32.0a");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test09602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09602");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        java.util.Spliterator<java.lang.String> strSpliterator27 = strList24.spliterator();
        int int28 = strList24.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int32 = strList24.lastIndexOf((java.lang.Object) strTokenizer31);
        strList24.clear();
        java.util.ListIterator<java.lang.String> strItor34 = strList24.listIterator();
        java.lang.Object obj35 = null;
        boolean boolean36 = strList24.contains(obj35);
        java.util.ListIterator<java.lang.String> strItor37 = strList24.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendSeparator("36.0", 14);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.append((double) 93);
        java.lang.Object obj44 = null;
        boolean boolean45 = strBuilder38.equals(obj44);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSpliterator27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strItor34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strItor37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test09603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09603");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(5);
        java.io.Reader reader2 = strBuilder1.asReader();
        int int3 = reader2.read();
        org.junit.Assert.assertNotNull(reader2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test09604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09604");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer6, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append("true\n");
        int int12 = strBuilder9.length();
        int int15 = strBuilder9.lastIndexOf('9', (int) '1');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test09605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09605");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.ensureCapacity((int) (byte) 1);
        boolean boolean19 = strBuilder17.startsWith("10.0StrTokenizer[ 4#4]\n10.0\n");
        char[] charArray22 = strBuilder17.toCharArray((int) (byte) 0, 53);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "");
        char[] charArray37 = strBuilder33.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.appendln(charArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        int int42 = strBuilder41.capacity();
        java.lang.StringBuffer stringBuffer43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.appendln(stringBuffer43, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder41.insert(1, (double) 32);
        java.lang.String str51 = strBuilder41.rightString((int) ' ');
        boolean boolean53 = strBuilder41.startsWith("");
        char[] charArray54 = strBuilder41.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray54);
        int int57 = strBuilder38.lastIndexOf(strMatcher55, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder38.appendln("100.0\000\000\000\000\000", (int) (short) 1, 4);
        boolean boolean62 = properties24.containsKey((java.lang.Object) strBuilder38);
        boolean boolean63 = strBuilder17.equals(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "35.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "35.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[3, 5, ., 0, \n]");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 32 + "'", int42 == 32);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\n32.0" + "'", str51, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test09606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09606");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        java.lang.String str10 = strBuilder6.getNewLineText();
        java.util.stream.IntStream intStream11 = strBuilder6.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.append((java.lang.CharSequence) strBuilder6);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.appendFixedWidthPadLeft((int) (byte) 1, 32, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln("\n36.0\n\n32.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.appendln(true);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(intStream11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test09607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09607");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        java.lang.String str4 = strBuilder0.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendln((float) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.setNullText(" ");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.append((float) (byte) -1);
        java.util.Properties properties11 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray18 = strTokenizer17.getTokenArray();
        java.lang.String[] strArray19 = strTokenizer17.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendWithSeparators((java.lang.Object[]) strArray19, "4#4");
        char[] charArray24 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray24);
        java.lang.Object obj26 = properties11.getOrDefault((java.lang.Object) strBuilder15, (java.lang.Object) strTokenizer25);
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder15.appendln(stringBuffer27, 1, (int) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteCharAt((int) (short) 1);
        java.lang.String str37 = strBuilder34.midString(40, 6);
        boolean boolean38 = strBuilder8.equals(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test09608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09608");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('a', '4');
        java.io.Writer writer34 = strBuilder33.asWriter();
        properties26.store(writer34, "");
        java.util.Properties properties37 = new java.util.Properties();
        int int38 = properties37.size();
        boolean boolean40 = properties37.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties41 = new java.util.Properties();
        int int42 = properties41.size();
        boolean boolean44 = properties41.containsKey((java.lang.Object) (-1.0f));
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.keys();
        boolean boolean47 = properties26.containsValue((java.lang.Object) objEnumeration46);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Collection<java.lang.Object> objCollection49 = properties26.values();
        java.util.Properties properties50 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray57 = strTokenizer56.getTokenArray();
        java.lang.String[] strArray58 = strTokenizer56.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendWithSeparators((java.lang.Object[]) strArray58, "4#4");
        char[] charArray63 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray63);
        java.lang.Object obj65 = properties50.getOrDefault((java.lang.Object) strBuilder54, (java.lang.Object) strTokenizer64);
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        boolean boolean70 = properties26.containsKey((java.lang.Object) strTokenizer68);
        boolean boolean71 = strTokenizer68.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer68.reset();
        java.lang.String str73 = strTokenizer72.previousToken();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test09609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09609");
        char[] charArray3 = new char[] { 'a', '$', '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray3, '$');
        java.util.List<java.lang.String> strList6 = strTokenizer5.getTokenList();
        char[] charArray11 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        int int14 = strTokenizer13.size();
        boolean boolean15 = strTokenizer13.hasNext();
        java.util.List<java.lang.String> strList16 = strTokenizer13.getTokenList();
        java.lang.String[] strArray20 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        boolean boolean23 = strList16.addAll((java.util.Collection<java.lang.String>) strList21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        java.lang.String[] strArray27 = strTokenizer25.getTokenArray();
        boolean boolean28 = strTokenizer25.hasNext();
        int int29 = strTokenizer25.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = strTokenizer25.getQuoteMatcher();
        java.util.List<java.lang.String> strList31 = strTokenizer25.getTokenList();
        boolean boolean32 = strList16.retainAll((java.util.Collection<java.lang.String>) strList31);
        boolean boolean33 = strList6.addAll((java.util.Collection<java.lang.String>) strList31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray39 = strTokenizer38.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendAll((java.lang.Object[]) strArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder34.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray49 = strTokenizer48.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.appendAll((java.lang.Object[]) strArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder34.appendln(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        int int56 = strBuilder52.indexOf("");
        int int59 = strBuilder52.lastIndexOf('#', (int) (byte) 0);
        boolean boolean61 = strBuilder52.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder52.appendAll((java.util.Iterator<java.lang.String>) strTokenizer62);
        boolean boolean64 = strTokenizer62.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer62.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = strTokenizer66.setIgnoreEmptyTokens(false);
        boolean boolean69 = strBuilder34.equals((java.lang.Object) strTokenizer66);
        int int70 = strList6.lastIndexOf((java.lang.Object) boolean69);
        java.util.ListIterator<java.lang.String> strItor72 = strList6.listIterator((int) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder79.replaceFirst("", "");
        java.lang.String str83 = strBuilder79.getNewLineText();
        java.util.stream.IntStream intStream84 = strBuilder79.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder76.append((java.lang.CharSequence) strBuilder79);
        java.io.Writer writer86 = strBuilder79.asWriter();
        java.io.Writer writer88 = writer86.append('a');
        int int89 = strList6.indexOf((java.lang.Object) writer88);
        org.junit.Assert.assertNotNull(charArray3);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a$$");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a$$");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, $, $]");
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strItor72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(intStream84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(writer86);
        org.junit.Assert.assertNotNull(writer88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test09610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09610");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("\n");
        java.io.Reader reader15 = strBuilder14.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.replaceFirst("\n36.0\n\n32.0", "true\n###################################a4\n");
        java.lang.String str19 = strBuilder18.getNewLineText();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\n" + "'", str19, "\n");
    }

    @Test
    public void test09611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09611");
        java.util.Properties properties1 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray8 = strTokenizer7.getTokenArray();
        java.lang.String[] strArray9 = strTokenizer7.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.appendWithSeparators((java.lang.Object[]) strArray9, "4#4");
        char[] charArray14 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        java.lang.Object obj16 = properties1.getOrDefault((java.lang.Object) strBuilder5, (java.lang.Object) strTokenizer15);
        int int17 = properties1.size();
        int int18 = properties1.size();
        java.io.IOException iOException19 = new java.io.IOException();
        java.lang.Throwable[] throwableArray20 = iOException19.getSuppressed();
        boolean boolean21 = properties1.equals((java.lang.Object) iOException19);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.io.IOException iOException23 = new java.io.IOException("java.io.IOException: hi!", (java.lang.Throwable) iOException22);
        java.io.IOException iOException25 = new java.io.IOException("true\n###################################3\n");
        java.lang.Throwable[] throwableArray26 = iOException25.getSuppressed();
        iOException23.addSuppressed((java.lang.Throwable) iOException25);
        java.lang.String str28 = iOException25.toString();
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "java.io.IOException: true\n###################################3\n" + "'", str28, "java.io.IOException: true\n###################################3\n");
    }

    @Test
    public void test09612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09612");
        java.io.IOException iOException4 = new java.io.IOException("hi!");
        java.io.IOException iOException6 = new java.io.IOException("hi!");
        iOException4.addSuppressed((java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException6);
        java.lang.Throwable throwable11 = null;
        java.io.IOException iOException12 = new java.io.IOException("{}", throwable11);
        java.lang.Throwable[] throwableArray13 = iOException12.getSuppressed();
        java.io.IOException iOException14 = new java.io.IOException("\n", (java.lang.Throwable) iOException12);
        iOException8.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException16 = new java.io.IOException("\n32.0a", (java.lang.Throwable) iOException8);
        java.io.IOException iOException17 = new java.io.IOException((java.lang.Throwable) iOException16);
        java.io.IOException iOException18 = new java.io.IOException("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000", (java.lang.Throwable) iOException16);
        java.io.IOException iOException22 = new java.io.IOException();
        java.lang.Throwable[] throwableArray23 = iOException22.getSuppressed();
        java.lang.Throwable[] throwableArray24 = iOException22.getSuppressed();
        java.io.IOException iOException25 = new java.io.IOException("########", (java.lang.Throwable) iOException22);
        java.io.IOException iOException26 = new java.io.IOException((java.lang.Throwable) iOException22);
        java.io.IOException iOException27 = new java.io.IOException((java.lang.Throwable) iOException22);
        java.io.IOException iOException28 = new java.io.IOException("####\000\000\000\000\000\000\000\000\000\000", (java.lang.Throwable) iOException22);
        java.io.IOException iOException30 = new java.io.IOException("{\ntrue\n=1.0}");
        java.io.IOException iOException33 = new java.io.IOException("hi!");
        java.io.IOException iOException35 = new java.io.IOException("hi!");
        iOException33.addSuppressed((java.lang.Throwable) iOException35);
        java.io.IOException iOException38 = new java.io.IOException("hi!");
        java.io.IOException iOException40 = new java.io.IOException("hi!");
        iOException38.addSuppressed((java.lang.Throwable) iOException40);
        iOException35.addSuppressed((java.lang.Throwable) iOException40);
        java.io.IOException iOException44 = new java.io.IOException("hi!");
        iOException35.addSuppressed((java.lang.Throwable) iOException44);
        java.lang.Throwable[] throwableArray46 = iOException44.getSuppressed();
        java.io.IOException iOException47 = new java.io.IOException("\n32.0-1.0", (java.lang.Throwable) iOException44);
        java.io.IOException iOException48 = new java.io.IOException((java.lang.Throwable) iOException47);
        iOException30.addSuppressed((java.lang.Throwable) iOException47);
        iOException22.addSuppressed((java.lang.Throwable) iOException30);
        java.io.IOException iOException51 = new java.io.IOException("\n32.0java.io.IOException: hi!StrTokenizer[4#4]\ntrue\n", (java.lang.Throwable) iOException22);
        iOException18.addSuppressed((java.lang.Throwable) iOException22);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray46);
    }

    @Test
    public void test09613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09613");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(" 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("-1", "100.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("not tokenized yet]", "java.io.IOException: false");
        java.io.Reader reader8 = strBuilder7.asReader();
        java.io.Reader reader9 = strBuilder7.asReader();
        long long11 = reader9.skip(0L);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test09614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09614");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        int int22 = properties0.size();
        java.lang.String str24 = properties0.getProperty("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.deleteAll(strMatcher42);
        boolean boolean44 = strBuilder31.contains(strMatcher42);
        char[] charArray49 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        int int52 = strTokenizer51.size();
        boolean boolean53 = strTokenizer51.hasNext();
        java.util.List<java.lang.String> strList54 = strTokenizer51.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        int int56 = strBuilder55.capacity();
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(stringBuffer57, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.insert(1, (double) 32);
        java.lang.String str65 = strBuilder55.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder55.insert(1, '#');
        boolean boolean69 = strList54.equals((java.lang.Object) strBuilder55);
        java.lang.Throwable throwable71 = null;
        java.io.IOException iOException72 = new java.io.IOException("{}", throwable71);
        java.lang.Throwable[] throwableArray73 = iOException72.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder55.appendWithSeparators((java.lang.Object[]) throwableArray73, "10.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder55.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln("a4");
        java.lang.Object obj79 = properties0.getOrDefault((java.lang.Object) strBuilder31, (java.lang.Object) "a4");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet80 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet81 = properties0.stringPropertyNames();
        java.io.OutputStream outputStream82 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream82, "[32.0]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 32 + "'", int56 == 32);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\n32.0" + "'", str65, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "a4" + "'", obj79, "a4");
        org.junit.Assert.assertNotNull(objEntrySet80);
        org.junit.Assert.assertNotNull(strSet81);
    }

    @Test
    public void test09615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09615");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.append((float) '4');
        int int14 = strBuilder9.indexOf("", (int) (short) 10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean17 = strTokenizer16.hasNext();
        java.lang.String[] strArray18 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.appendWithSeparators((java.lang.Object[]) strArray18, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "");
        java.lang.String str27 = strBuilder23.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendln((float) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.setNullText(" ");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendSeparator(' ', 53);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln((float) 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder20.append((java.lang.CharSequence) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray43 = strTokenizer42.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.appendAll((java.lang.Object[]) strArray43);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder38.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray53 = strTokenizer52.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.appendAll((java.lang.Object[]) strArray53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder38.appendln(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendSeparator("hi!", "");
        boolean boolean61 = strBuilder37.equalsIgnoreCase(strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder37.trim();
        boolean boolean64 = strBuilder37.contains(" 4## ");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder37.deleteFirst('#');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test09616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09616");
        java.util.Properties properties1 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray8 = strTokenizer7.getTokenArray();
        java.lang.String[] strArray9 = strTokenizer7.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.appendWithSeparators((java.lang.Object[]) strArray9, "4#4");
        char[] charArray14 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        java.lang.Object obj16 = properties1.getOrDefault((java.lang.Object) strBuilder5, (java.lang.Object) strTokenizer15);
        int int17 = properties1.size();
        int int18 = properties1.size();
        java.io.IOException iOException19 = new java.io.IOException();
        java.lang.Throwable[] throwableArray20 = iOException19.getSuppressed();
        boolean boolean21 = properties1.equals((java.lang.Object) iOException19);
        java.io.IOException iOException22 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException19);
        java.io.IOException iOException24 = new java.io.IOException("#\n4#44#443.0", (java.lang.Throwable) iOException19);
        java.lang.Throwable throwable25 = null;
        // The following exception was thrown during execution in test generation
        try {
            iOException19.addSuppressed(throwable25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test09617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09617");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        int int11 = strBuilder10.capacity();
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(stringBuffer12, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.insert(1, (double) 32);
        java.lang.String str20 = strBuilder10.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.insert(1, '#');
        boolean boolean24 = strList9.equals((java.lang.Object) strBuilder10);
        java.lang.Throwable throwable26 = null;
        java.io.IOException iOException27 = new java.io.IOException("{}", throwable26);
        java.lang.Throwable[] throwableArray28 = iOException27.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder10.appendWithSeparators((java.lang.Object[]) throwableArray28, "10.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder10.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("a4");
        boolean boolean35 = strBuilder33.contains("java.io.IOException: {\ntrue\n=1.0}");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder33.appendln(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strBuilder37.asTokenizer();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strTokenizer38);
    }

    @Test
    public void test09618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09618");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("\n32.0afalse", 'g');
    }

    @Test
    public void test09619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09619");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        java.util.ListIterator<java.lang.String> strItor24 = strList14.listIterator((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst("", "");
        java.lang.String str29 = strBuilder25.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.appendln((float) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.setNullText(" ");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendSeparator(' ', 53);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln((float) 't');
        int int39 = strList14.lastIndexOf((java.lang.Object) 't');
        java.util.stream.Stream<java.lang.String> strStream40 = strList14.parallelStream();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator41 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList14.replaceAll(strUnaryOperator41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strStream40);
    }

    @Test
    public void test09620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09620");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(" 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("-1", "100.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder1.appendSeparator("not tokenized yet]", "java.io.IOException: false");
        java.io.Reader reader8 = strBuilder7.asReader();
        java.lang.String str10 = strBuilder7.rightString(7);
        int int12 = strBuilder7.indexOf('s');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ed yet]" + "'", str10, "ed yet]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test09621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09621");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("{\n36.0\n=StrTokenizer[not tokenized yet]}");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.appendPadding(151, '9');
        int int6 = strBuilder1.lastIndexOf("{h={}}");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test09622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09622");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.appendSeparator('e', 8);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceAll('a', '\000');
        java.lang.CharSequence charSequence17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.append(charSequence17);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test09623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09623");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        java.io.Writer writer7 = strBuilder6.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendln(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray19);
        writer7.write(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4', '$');
        int int26 = strTokenizer25.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher27 = strTokenizer25.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("");
        int int32 = strBuilder28.indexOf("");
        int int35 = strBuilder28.lastIndexOf('#', (int) (byte) 0);
        boolean boolean37 = strBuilder28.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.appendAll((java.util.Iterator<java.lang.String>) strTokenizer38);
        boolean boolean40 = strTokenizer38.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer38.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst("", "");
        char[] charArray56 = strBuilder52.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.appendln(charArray56);
        int int61 = strMatcher44.isMatch(charArray56, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer42.setTrimmerMatcher(strMatcher44);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer25.setDelimiterMatcher(strMatcher44);
        int int64 = strTokenizer63.nextIndex();
        boolean boolean65 = strTokenizer63.hasPrevious();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(writer7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strMatcher27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[]");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test09624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09624");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        char[] charArray5 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray5);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer6.setDelimiterString("hi!");
        boolean boolean9 = strTokenizer6.hasNext();
        boolean boolean10 = strTokenizer6.hasNext();
        java.lang.Object obj11 = properties0.remove((java.lang.Object) boolean10);
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test09625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09625");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceAll("#", "true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator('#', 51);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.lang.String str27 = properties21.getProperty("h");
        boolean boolean28 = properties21.isEmpty();
        properties21.clear();
        boolean boolean30 = strBuilder13.equals((java.lang.Object) properties21);
        java.lang.Object obj33 = properties21.setProperty("{\ntrue\n=1.0}", " -1.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray41 = strTokenizer40.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.appendAll((java.lang.Object[]) strArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "");
        char[] charArray50 = strBuilder46.toCharArray();
        char[] charArray51 = strBuilder43.getChars(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50);
        char[] charArray53 = strBuilder35.getChars(charArray50);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = strTokenizer55.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = strTokenizer55.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = strTokenizer55.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer("10.0", strMatcher59);
        java.lang.String str62 = strTokenizer61.next();
        java.util.List<java.lang.String> strList63 = strTokenizer61.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray69 = strTokenizer68.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.appendAll((java.lang.Object[]) strArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder70.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln('#');
        java.lang.StringBuffer stringBuffer79 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder76.append(stringBuffer79, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder76.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder76.appendSeparator("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder76.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder70.append((java.lang.CharSequence) strBuilder89);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder70.replaceFirst("#", "[4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder93.minimizeCapacity();
        int int95 = strList63.indexOf((java.lang.Object) strBuilder94);
        boolean boolean96 = properties21.containsKey((java.lang.Object) int95);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[]");
        org.junit.Assert.assertNotNull(charArray51);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]");
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[]");
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "10.0" + "'", str62, "10.0");
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test09626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09626");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        boolean boolean10 = strTokenizer9.hasPrevious();
        java.lang.String[] strArray11 = strTokenizer9.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer9.reset();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer12.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strTokenizer12);
    }

    @Test
    public void test09627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09627");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Set<java.lang.Object> objSet10 = properties4.keySet();
        properties4.clear();
        int int12 = properties4.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        int int14 = strBuilder13.capacity();
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(stringBuffer15, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.setLength(32);
        java.io.Writer writer24 = strBuilder23.asWriter();
        writer24.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.append((float) '4');
        java.io.Writer writer41 = writer24.append((java.lang.CharSequence) strBuilder38);
        writer41.write((int) '4');
        writer41.flush();
        writer41.write(0);
        properties4.store(writer41, "00.0\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst("", "");
        char[] charArray53 = strBuilder49.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, "");
        boolean boolean56 = strTokenizer55.hasNext();
        boolean boolean57 = strTokenizer55.hasNext();
        boolean boolean58 = strTokenizer55.hasNext();
        java.lang.Object obj59 = null;
        java.lang.Object obj60 = properties4.getOrDefault((java.lang.Object) boolean58, obj59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray67 = strTokenizer66.getTokenArray();
        java.lang.String[] strArray68 = strTokenizer66.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.appendWithSeparators((java.lang.Object[]) strArray68, "4#4");
        int int73 = strBuilder64.lastIndexOf(' ', (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder64.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder64.deleteFirst(" #\n");
        boolean boolean79 = properties4.equals((java.lang.Object) strBuilder78);
        int int81 = strBuilder78.lastIndexOf('9');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(writer24);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(writer41);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test09628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09628");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        int int8 = strBuilder7.capacity();
        java.lang.StringBuffer stringBuffer9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(stringBuffer9, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int14 = strBuilder12.lastIndexOf(strMatcher13);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.replaceFirst(strMatcher13, "hi!");
        char[] charArray19 = strBuilder16.toCharArray(0, (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.deleteAll("\n32.0java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.appendSeparator('4', ' ');
        char[] charArray25 = strBuilder16.toCharArray();
        int int28 = strBuilder16.indexOf(' ', 27);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "4#44");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "4#44");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[4, #, 4, 4]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test09629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09629");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        java.io.Reader reader16 = strBuilder12.asReader();
        properties1.load(reader16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst("", "");
        char[] charArray29 = strBuilder25.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendln(charArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.appendln((double) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteAll('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        char[] charArray39 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "");
        char[] charArray54 = strBuilder50.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendln(charArray54);
        int int59 = strMatcher42.isMatch(charArray54, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, strMatcher40, strMatcher42);
        java.lang.Object obj61 = properties1.put((java.lang.Object) strBuilder34, (java.lang.Object) strTokenizer60);
        boolean boolean62 = properties1.isEmpty();
        java.lang.Object obj65 = properties1.setProperty("#36.0StrTokenizer[not tokenized yet]", "97\nhi!");
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(reader16);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj65);
    }

    @Test
    public void test09630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09630");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int14 = strBuilder0.lastIndexOf(strMatcher13);
        char[] charArray19 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        int int22 = strTokenizer21.size();
        boolean boolean23 = strTokenizer21.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer21.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder0.deleteFirst(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder0.appendln((double) 200);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder0.insert(57, true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 57");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test09631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09631");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray3 = strTokenizer2.getTokenArray();
        java.lang.String[] strArray4 = strTokenizer2.getTokenArray();
        boolean boolean5 = strTokenizer2.hasNext();
        int int6 = strTokenizer2.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer2.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher7);
        java.util.List<java.lang.String> strList9 = strTokenizer8.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getIgnoredMatcher();
        java.lang.String[] strArray11 = strTokenizer8.getTokenArray();
        java.lang.Object obj12 = strTokenizer8.clone();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test09632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09632");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "h");
        int int37 = strTokenizer33.nextIndex();
        boolean boolean38 = properties0.containsValue((java.lang.Object) strTokenizer33);
        java.util.Set<java.lang.Object> objSet39 = properties0.keySet();
        java.util.Collection<java.lang.Object> objCollection40 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties0.keys();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNotNull(objEnumeration41);
    }

    @Test
    public void test09633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09633");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        int int2 = properties1.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.keys();
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.util.Set<java.lang.Object> objSet6 = properties1.keySet();
        java.io.OutputStream outputStream7 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream7, "\n32.00.0\n", "true\njava.io.IOException: hi!false");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objSet6);
    }

    @Test
    public void test09634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09634");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('a', '4');
        java.io.Writer writer30 = strBuilder29.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        char[] charArray42 = strBuilder38.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendln(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        writer30.write(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder22.append(charArray42);
        int int48 = strBuilder46.lastIndexOf("1");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.append((float) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.deleteFirst('g');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator("####\000\000\000\000\000\000\000\000\000\000", (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.insert(3, (long) 59);
        int int59 = strBuilder58.size();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(writer30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 26 + "'", int59 == 26);
    }

    @Test
    public void test09635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09635");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Set<java.lang.Object> objSet10 = properties4.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        java.lang.String[] strArray18 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendWithSeparators((java.lang.Object[]) strArray18, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray31 = strTokenizer30.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendAll((java.lang.Object[]) strArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.replaceFirst('a', 'a');
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        java.lang.String[] strArray49 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        boolean boolean52 = strList45.addAll((java.util.Collection<java.lang.String>) strList50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder26.appendAll((java.lang.Iterable<java.lang.String>) strList50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder20.appendAll((java.lang.Iterable<java.lang.String>) strList50);
        boolean boolean55 = properties4.containsValue((java.lang.Object) strList50);
        java.util.Collection<java.lang.Object> objCollection56 = properties4.values();
        java.lang.Object obj57 = properties4.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties4.elements();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "{}");
        org.junit.Assert.assertNotNull(objEnumeration58);
    }

    @Test
    public void test09636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09636");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append((double) 10L);
        java.lang.Object obj6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendFixedWidthPadLeft(obj6, (int) (byte) -1, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln("StrTokenizer[ 4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.appendln((float) (short) 10);
        boolean boolean15 = strBuilder11.contains('\000');
        boolean boolean16 = strBuilder11.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test09637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09637");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) '4');
        java.io.Writer writer28 = writer11.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll("");
        java.io.Writer writer38 = writer11.append((java.lang.CharSequence) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.appendSeparator('9');
        java.lang.String str42 = strBuilder40.rightString(112);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(writer38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "4#49" + "'", str42, "4#49");
    }

    @Test
    public void test09638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09638");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        int int12 = properties4.size();
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader22 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendAll((java.lang.Object[]) strArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream33 = strBuilder23.codePoints();
        java.lang.Object obj34 = properties13.replace((java.lang.Object) reader22, (java.lang.Object) intStream33);
        long long36 = reader22.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('a', '4');
        java.io.Writer writer44 = strBuilder43.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst("", "");
        char[] charArray56 = strBuilder52.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.appendln(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray56);
        writer44.write(charArray56);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray56, '4', '$');
        int int63 = reader22.read(charArray56);
        reader22.close();
        int int65 = reader22.read();
        int int66 = reader22.read();
        boolean boolean67 = properties4.containsKey((java.lang.Object) reader22);
        reader22.close();
        boolean boolean69 = reader22.ready();
        reader22.reset();
        boolean boolean71 = reader22.ready();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(intStream33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(writer44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[]");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strTokenizer58);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 35 + "'", int65 == 35);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test09639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09639");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer5, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength((int) (byte) 100);
        java.lang.String str12 = strBuilder10.substring(35);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.append(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("{}");
        int int18 = strBuilder14.indexOf(strMatcher16, 62);
        java.lang.StringBuffer stringBuffer19 = strBuilder14.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder14.replaceAll(' ', '$');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000" + "'", str12, "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer19);
        org.junit.Assert.assertEquals(stringBuffer19.toString(), "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000false");
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test09640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09640");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("java.io.IOException");
        int int2 = strTokenizer1.previousIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test09641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09641");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        boolean boolean10 = strTokenizer6.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer6.getQuoteMatcher();
        java.lang.String str12 = strTokenizer6.next();
        java.util.List<java.lang.String> strList13 = strTokenizer6.getTokenList();
        char[] charArray18 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        int int21 = strTokenizer20.size();
        boolean boolean22 = strTokenizer20.hasNext();
        java.util.List<java.lang.String> strList23 = strTokenizer20.getTokenList();
        java.lang.String[] strArray27 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        boolean boolean30 = strList23.addAll((java.util.Collection<java.lang.String>) strList28);
        java.util.Properties properties31 = new java.util.Properties();
        int int32 = properties31.size();
        java.lang.Object obj33 = properties31.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder38.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder40.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder34.appendFixedWidthPadRight((java.lang.Object) strBuilder43, (int) (byte) -1, '#');
        java.lang.Object obj47 = properties31.get((java.lang.Object) strBuilder34);
        java.util.Properties properties48 = new java.util.Properties();
        int int49 = properties48.size();
        boolean boolean51 = properties48.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties52 = new java.util.Properties();
        int int53 = properties52.size();
        boolean boolean55 = properties52.containsKey((java.lang.Object) (-1.0f));
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        char[] charArray61 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        int int64 = strTokenizer63.size();
        boolean boolean65 = strTokenizer63.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer63.setIgnoredMatcher(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst("", "");
        java.lang.Object obj72 = properties48.putIfAbsent((java.lang.Object) strMatcher66, (java.lang.Object) strBuilder68);
        boolean boolean73 = strBuilder34.equals(obj72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder34.appendln((double) 100L);
        java.util.stream.IntStream intStream76 = strBuilder34.chars();
        boolean boolean78 = strBuilder34.contains('$');
        boolean boolean79 = strList28.equals((java.lang.Object) strBuilder34);
        java.util.ListIterator<java.lang.String> strItor80 = strList28.listIterator();
        boolean boolean81 = strList13.addAll((java.util.Collection<java.lang.String>) strList28);
        java.util.stream.Stream<java.lang.String> strStream82 = strList28.parallelStream();
        java.lang.String str84 = strList28.get((int) (short) 0);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4#4" + "'", str12, "4#4");
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(intStream76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strItor80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strStream82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "\n32.0" + "'", str84, "\n32.0");
    }

    @Test
    public void test09642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09642");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("\n32.0", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        char[] charArray8 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln('#');
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append(stringBuffer20, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.deleteFirst("hi!");
        char[] charArray26 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer13.reset(charArray26);
        boolean boolean28 = properties0.replace((java.lang.Object) iOException4, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer13);
        java.util.Set<java.lang.Object> objSet29 = properties0.keySet();
        char[] charArray34 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        int int37 = strTokenizer36.size();
        boolean boolean38 = strTokenizer36.hasNext();
        java.util.List<java.lang.String> strList39 = strTokenizer36.getTokenList();
        java.lang.String[] strArray43 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        boolean boolean46 = strList39.addAll((java.util.Collection<java.lang.String>) strList44);
        java.util.Spliterator<java.lang.String> strSpliterator47 = strList44.spliterator();
        int int48 = strList44.size();
        java.lang.String str50 = strList44.remove((int) (byte) 0);
        boolean boolean52 = strList44.add("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray58 = strTokenizer57.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder53.appendAll((java.lang.Object[]) strArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder53.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray68 = strTokenizer67.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder63.appendAll((java.lang.Object[]) strArray68);
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder53.appendln(strBuilder69);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceFirst("", "");
        char[] charArray82 = strBuilder78.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder77.appendln(charArray82);
        boolean boolean84 = strBuilder53.equals((java.lang.Object) strBuilder77);
        boolean boolean85 = strList44.remove((java.lang.Object) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder53.replaceAll("{}", "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder53.appendNewLine();
        boolean boolean91 = strBuilder53.endsWith("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder53.setNullText("0.0true");
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder53.setNullText("\n-1.0");
        boolean boolean97 = strBuilder95.startsWith("00.0\000\000\000\000\000");
        boolean boolean98 = properties0.contains((java.lang.Object) "00.0\000\000\000\000\000");
        java.util.Enumeration<java.lang.Object> objEnumeration99 = properties0.keys();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strSpliterator47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3 + "'", int48 == 3);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\n32.0" + "'", str50, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(objEnumeration99);
    }

    @Test
    public void test09643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09643");
        char[] charArray2 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray2);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray2);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strMatcher6);
    }

    @Test
    public void test09644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09644");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder33.lastIndexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.insert((int) (short) 1, 32);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        boolean boolean42 = properties39.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties39.entrySet();
        java.lang.Object obj44 = properties0.putIfAbsent((java.lang.Object) strBuilder38, (java.lang.Object) objEntrySet43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        int int46 = strBuilder45.capacity();
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(stringBuffer47, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.insert(1, (double) 32);
        java.lang.String str55 = strBuilder45.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder45.replaceAll("", "hi!");
        boolean boolean59 = properties0.contains((java.lang.Object) "");
        java.util.Properties properties60 = new java.util.Properties(properties0);
        java.lang.String str61 = properties0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\n32.0" + "'", str55, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test09645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09645");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.String> strSet2 = properties0.stringPropertyNames();
        java.util.Properties properties3 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray10 = strTokenizer9.getTokenArray();
        java.lang.String[] strArray11 = strTokenizer9.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendWithSeparators((java.lang.Object[]) strArray11, "4#4");
        char[] charArray16 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray16);
        java.lang.Object obj18 = properties3.getOrDefault((java.lang.Object) strBuilder7, (java.lang.Object) strTokenizer17);
        java.util.Collection<java.lang.Object> objCollection19 = properties3.values();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder24.appendFixedWidthPadRight((java.lang.Object) strBuilder33, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int38 = strBuilder24.lastIndexOf(strMatcher37);
        char[] charArray43 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        int int46 = strTokenizer45.size();
        boolean boolean47 = strTokenizer45.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer45.setIgnoredMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder24.deleteFirst(strMatcher48);
        java.lang.Object obj51 = properties3.getOrDefault((java.lang.Object) strTokenizer23, (java.lang.Object) strBuilder50);
        java.util.Collection<java.lang.Object> objCollection52 = properties3.values();
        java.lang.String str53 = properties3.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln((double) '#');
        boolean boolean69 = strBuilder59.equals(strBuilder68);
        java.util.stream.IntStream intStream70 = strBuilder59.codePoints();
        java.util.Iterator<java.lang.String> strItor71 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder59.appendWithSeparators(strItor71, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst(' ', ' ');
        int int78 = strBuilder76.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.insert((int) '$', '$');
        java.lang.Class<?> wildcardClass82 = strBuilder81.getClass();
        boolean boolean83 = properties3.equals((java.lang.Object) strBuilder81);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = new org.apache.commons.lang3.text.StrBuilder("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        java.lang.Object obj87 = properties3.get((java.lang.Object) strBuilder86);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder86.appendSeparator("StrTokenizer[35.0]");
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder86.appendln('3');
        int int93 = strBuilder86.lastIndexOf('t');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "");
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "{}" + "'", str53, "{}");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(intStream70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 33 + "'", int93 == 33);
    }

    @Test
    public void test09646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09646");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher4 = strTokenizer3.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.reset("");
        java.lang.String str7 = strTokenizer6.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer6.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer6.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrMatcher strMatcher11 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer1.setDelimiterMatcher(strMatcher11);
        java.util.List<java.lang.String> strList13 = strTokenizer12.getTokenList();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strMatcher4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertNotNull(strMatcher11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strList13);
    }

    @Test
    public void test09647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09647");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.append('a');
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteAll(strMatcher10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendPadding(4, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.append((float) 52);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test09648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09648");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        char[] charArray17 = strBuilder9.getChars(charArray16);
        java.io.Reader reader18 = strBuilder9.asReader();
        java.lang.Object obj19 = properties0.remove((java.lang.Object) strBuilder9);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader29 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream40 = strBuilder30.codePoints();
        java.lang.Object obj41 = properties20.replace((java.lang.Object) reader29, (java.lang.Object) intStream40);
        reader29.reset();
        properties0.load(reader29);
        boolean boolean44 = reader29.markSupported();
        reader29.mark((int) (byte) -1);
        boolean boolean47 = reader29.ready();
        reader29.reset();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertNotNull(reader18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test09649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09649");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append('#');
        int int16 = strBuilder13.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.deleteFirst("###");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteAll('#');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = strBuilder20.substring(194);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test09650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09650");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceAll("#", "true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator("StrTokenizer[not tokenized yet]", 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        int int21 = strBuilder19.lastIndexOf("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        int int23 = strBuilder22.capacity();
        java.lang.StringBuffer stringBuffer24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(stringBuffer24, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.append((float) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder19.appendFixedWidthPadRight((java.lang.Object) strBuilder31, (int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder19.appendSeparator("", "0");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder13.append((java.lang.Object) strBuilder19);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader50 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray56 = strTokenizer55.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.appendAll((java.lang.Object[]) strArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder51.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream61 = strBuilder51.codePoints();
        java.lang.Object obj62 = properties41.replace((java.lang.Object) reader50, (java.lang.Object) intStream61);
        long long64 = reader50.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.replaceFirst('a', '4');
        java.io.Writer writer72 = strBuilder71.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder80.replaceFirst("", "");
        char[] charArray84 = strBuilder80.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.appendln(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray84);
        writer72.write(charArray84);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, '4', '$');
        int int91 = reader50.read(charArray84);
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder19.appendFixedWidthPadLeft((java.lang.Object) reader50, 100, '3');
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder19.insert(41, 200);
        int int99 = strBuilder19.indexOf('$');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(intStream61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(writer72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[]");
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 78 + "'", int99 == 78);
    }

    @Test
    public void test09651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09651");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.lang.String str18 = strList14.remove(0);
        java.util.Properties properties19 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray26 = strTokenizer25.getTokenArray();
        java.lang.String[] strArray27 = strTokenizer25.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendWithSeparators((java.lang.Object[]) strArray27, "4#4");
        char[] charArray32 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray32);
        java.lang.Object obj34 = properties19.getOrDefault((java.lang.Object) strBuilder23, (java.lang.Object) strTokenizer33);
        int int35 = properties19.size();
        java.util.Properties properties36 = new java.util.Properties();
        int int37 = properties36.size();
        boolean boolean39 = properties36.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties40 = new java.util.Properties();
        int int41 = properties40.size();
        boolean boolean43 = properties40.containsKey((java.lang.Object) (-1.0f));
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Set<java.lang.Object> objSet45 = properties40.keySet();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        boolean boolean47 = strList14.equals((java.lang.Object) properties40);
        java.util.Set<java.lang.Object> objSet48 = properties40.keySet();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\n32.0" + "'", str18, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objSet48);
    }

    @Test
    public void test09652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09652");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        boolean boolean9 = properties0.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        java.util.Spliterator<java.lang.String> strSpliterator27 = strList24.spliterator();
        int int28 = strList24.size();
        boolean boolean30 = strList24.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream31 = strList24.stream();
        boolean boolean32 = properties0.containsKey((java.lang.Object) strList24);
        int int33 = strList24.size();
        java.io.IOException iOException36 = new java.io.IOException("hi!");
        java.io.IOException iOException38 = new java.io.IOException("hi!");
        iOException36.addSuppressed((java.lang.Throwable) iOException38);
        java.io.IOException iOException40 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException38);
        java.lang.Throwable throwable42 = null;
        java.io.IOException iOException43 = new java.io.IOException("\n32.0", throwable42);
        iOException40.addSuppressed((java.lang.Throwable) iOException43);
        boolean boolean45 = strList24.contains((java.lang.Object) iOException40);
        java.lang.Object[] objArray46 = strList24.toArray();
        java.util.ListIterator<java.lang.String> strItor47 = strList24.listIterator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSpliterator27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[\n32.0, , , StrTokenizer[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[\n32.0, , , StrTokenizer[]]");
        org.junit.Assert.assertNotNull(strItor47);
    }

    @Test
    public void test09653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09653");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.insert(1, (double) 32);
        java.lang.String str26 = strBuilder16.rightString((int) ' ');
        boolean boolean28 = strBuilder16.startsWith("");
        char[] charArray29 = strBuilder16.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray29);
        writer11.write(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        java.lang.String str35 = strTokenizer34.getContent();
        int int36 = strTokenizer34.nextIndex();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n32.0" + "'", str26, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n32.0" + "'", str35, "\n32.0");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test09654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09654");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "h");
        int int37 = strTokenizer33.nextIndex();
        boolean boolean38 = properties0.containsValue((java.lang.Object) strTokenizer33);
        char[] charArray43 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        int int46 = strTokenizer45.size();
        boolean boolean47 = strTokenizer45.hasNext();
        java.util.List<java.lang.String> strList48 = strTokenizer45.getTokenList();
        java.lang.String[] strArray52 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        boolean boolean55 = strList48.addAll((java.util.Collection<java.lang.String>) strList53);
        java.lang.String str57 = strList53.remove(0);
        char[] charArray62 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        int int65 = strTokenizer64.size();
        boolean boolean66 = strTokenizer64.hasNext();
        java.util.List<java.lang.String> strList67 = strTokenizer64.getTokenList();
        java.lang.String[] strArray71 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        boolean boolean74 = strList67.addAll((java.util.Collection<java.lang.String>) strList72);
        boolean boolean75 = strList53.addAll((java.util.Collection<java.lang.String>) strList72);
        java.lang.Object obj76 = properties0.remove((java.lang.Object) strList72);
        char[] charArray79 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray79);
        boolean boolean82 = properties0.equals((java.lang.Object) charArray79);
        java.lang.Object obj83 = properties0.clone();
        java.io.InputStream inputStream84 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\n32.0" + "'", str57, "\n32.0");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test09655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09655");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(36);
    }

    @Test
    public void test09656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09656");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        boolean boolean8 = strBuilder3.endsWith("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.deleteAll(' ');
        boolean boolean12 = strBuilder10.endsWith("[ 4#4]");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test09657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09657");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.String> strSet2 = properties0.stringPropertyNames();
        java.util.Properties properties3 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray10 = strTokenizer9.getTokenArray();
        java.lang.String[] strArray11 = strTokenizer9.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendWithSeparators((java.lang.Object[]) strArray11, "4#4");
        char[] charArray16 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray16);
        java.lang.Object obj18 = properties3.getOrDefault((java.lang.Object) strBuilder7, (java.lang.Object) strTokenizer17);
        java.util.Collection<java.lang.Object> objCollection19 = properties3.values();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher22 = strTokenizer21.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder24.appendFixedWidthPadRight((java.lang.Object) strBuilder33, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher37 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int38 = strBuilder24.lastIndexOf(strMatcher37);
        char[] charArray43 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer(charArray43, ' ');
        int int46 = strTokenizer45.size();
        boolean boolean47 = strTokenizer45.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer45.setIgnoredMatcher(strMatcher48);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder24.deleteFirst(strMatcher48);
        java.lang.Object obj51 = properties3.getOrDefault((java.lang.Object) strTokenizer23, (java.lang.Object) strBuilder50);
        java.util.Collection<java.lang.Object> objCollection52 = properties3.values();
        java.lang.String str53 = properties3.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder65.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln((double) '#');
        boolean boolean69 = strBuilder59.equals(strBuilder68);
        java.util.stream.IntStream intStream70 = strBuilder59.codePoints();
        java.util.Iterator<java.lang.String> strItor71 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder59.appendWithSeparators(strItor71, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst(' ', ' ');
        int int78 = strBuilder76.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.insert((int) '$', '$');
        java.lang.Class<?> wildcardClass82 = strBuilder81.getClass();
        boolean boolean83 = properties3.equals((java.lang.Object) strBuilder81);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        int int85 = properties3.size();
        java.io.InputStream inputStream86 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.loadFromXML(inputStream86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(strMatcher22);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(charArray43);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray43), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray43), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "");
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "{}" + "'", str53, "{}");
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(intStream70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
    }

    @Test
    public void test09658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09658");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln('#');
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.append(stringBuffer15, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder12.appendSeparator("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder6.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder6.replaceFirst("#", "[4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.insert(1, true);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        int int34 = strBuilder32.indexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.reverse();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test09659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09659");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int7 = strBuilder5.lastIndexOf(strMatcher6);
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = strList10.contains(obj12);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.appendAll((java.lang.Iterable<java.lang.String>) strList10);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append('a');
        int int23 = strBuilder16.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        boolean boolean33 = strBuilder24.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder24.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder24.clear();
        int int36 = strBuilder35.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder16.append(strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        int int40 = strBuilder39.capacity();
        java.lang.StringBuffer stringBuffer41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(stringBuffer41, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.insert(1, (double) 32);
        java.lang.String str49 = strBuilder39.rightString((int) ' ');
        boolean boolean51 = strBuilder39.startsWith("");
        char[] charArray52 = strBuilder39.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder37.insert((int) (short) 0, charArray52);
        boolean boolean54 = strList10.contains((java.lang.Object) strBuilder37);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder37.minimizeCapacity();
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties56.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader65 = strBuilder61.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray71 = strTokenizer70.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.appendAll((java.lang.Object[]) strArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder66.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream76 = strBuilder66.codePoints();
        java.lang.Object obj77 = properties56.replace((java.lang.Object) reader65, (java.lang.Object) intStream76);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.appendln('#');
        java.lang.StringBuffer stringBuffer84 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder81.append(stringBuffer84, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder81.deleteFirst("hi!");
        char[] charArray90 = strBuilder81.toCharArray();
        int int91 = reader65.read(charArray90);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder37.append(charArray90);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = new org.apache.commons.lang3.text.StrTokenizer(charArray90, 'a');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 32 + "'", int36 == 32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\n32.0" + "'", str49, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(reader65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(intStream76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(charArray90);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray90), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray90), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray90), "[#, \n]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test09660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09660");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        java.lang.String str64 = strList9.get(0);
        java.util.Iterator<java.lang.String> strItor65 = strList9.iterator();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "4#4" + "'", str64, "4#4");
        org.junit.Assert.assertNotNull(strItor65);
    }

    @Test
    public void test09661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09661");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        java.lang.String str7 = strBuilder3.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.appendFixedWidthPadLeft((int) (byte) 0, (int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder8.appendSeparator('\000', (int) '#');
        boolean boolean16 = strBuilder3.equalsIgnoreCase(strBuilder8);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder3.appendSeparator('#', '\000');
        java.util.Properties properties20 = new java.util.Properties();
        int int21 = properties20.size();
        java.util.Set<java.lang.Object> objSet22 = properties20.keySet();
        java.util.Properties properties25 = new java.util.Properties();
        int int26 = properties25.size();
        boolean boolean28 = properties25.containsKey((java.lang.Object) (-1.0f));
        boolean boolean29 = properties20.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray34 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        int int37 = strTokenizer36.size();
        boolean boolean38 = strTokenizer36.hasNext();
        java.util.List<java.lang.String> strList39 = strTokenizer36.getTokenList();
        java.lang.String[] strArray43 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        boolean boolean46 = strList39.addAll((java.util.Collection<java.lang.String>) strList44);
        java.util.Spliterator<java.lang.String> strSpliterator47 = strList44.spliterator();
        int int48 = strList44.size();
        boolean boolean50 = strList44.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream51 = strList44.stream();
        boolean boolean52 = properties20.containsKey((java.lang.Object) strList44);
        int int53 = strList44.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst("", "");
        char[] charArray62 = strBuilder58.toCharArray();
        char[] charArray63 = strBuilder55.getChars(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        boolean boolean65 = strTokenizer64.hasPrevious();
        java.util.List<java.lang.String> strList66 = strTokenizer64.getTokenList();
        java.lang.Object[] objArray67 = strList66.toArray();
        java.util.ListIterator<java.lang.String> strItor68 = strList66.listIterator();
        boolean boolean69 = strList44.addAll(0, (java.util.Collection<java.lang.String>) strList66);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = new org.apache.commons.lang3.text.StrTokenizer("0", "true");
        boolean boolean73 = strList44.remove((java.lang.Object) "true");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder19.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList44, "\n-1.0");
        // The following exception was thrown during execution in test generation
        try {
            strList44.add(40, "\n50\nttt");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 40, Size: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strSpliterator47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3 + "'", int48 == 3);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strStream51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[]");
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(strItor68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test09662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09662");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendSeparator("{}");
        java.io.Writer writer8 = strBuilder5.asWriter();
        writer8.close();
        writer8.write("100.0\000\000\000\000\000", (int) (byte) 0, 0);
        writer8.flush();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln('#');
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.append(stringBuffer21, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.appendSeparator("StrTokenizer[not tokenized yet]", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        int int34 = strBuilder33.capacity();
        java.lang.StringBuffer stringBuffer35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(stringBuffer35, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder33.insert(1, (double) 32);
        boolean boolean42 = strBuilder33.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder33.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceAll("#", "true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder18.appendFixedWidthPadLeft((java.lang.Object) "#", 100, 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder18.trim();
        java.io.Writer writer51 = writer8.append((java.lang.CharSequence) strBuilder18);
        writer51.write("java.io.IOException: java.io.IOException: {}");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer8);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 32 + "'", int34 == 32);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(writer51);
    }

    @Test
    public void test09663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09663");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.append('a');
        boolean boolean23 = strBuilder21.endsWith("100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder21.append('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.append((double) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder27.setNewLineText("#\nfalse\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder12.appendFixedWidthPadRight((java.lang.Object) "#\nfalse\n", 33, 't');
        java.lang.String str36 = strBuilder12.substring((int) '#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tttt" + "'", str36, "tttt");
    }

    @Test
    public void test09664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09664");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.append(charArray16, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        char[] charArray39 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendln(charArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("StrTokenizer[]");
        java.util.Iterator<java.lang.String> strItor43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendWithSeparators(strItor43, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder47.appendFixedWidthPadRight((java.lang.Object) strBuilder56, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int61 = strBuilder47.lastIndexOf(strMatcher60);
        char[] charArray66 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, ' ');
        int int69 = strTokenizer68.size();
        boolean boolean70 = strTokenizer68.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer68.setIgnoredMatcher(strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder47.deleteFirst(strMatcher71);
        int int74 = strBuilder45.lastIndexOf(strMatcher71);
        int int75 = strBuilder22.indexOf(strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder78.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.setNullText("");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.replaceAll(strMatcher83, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher71, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer86.setEmptyTokenAsNull(true);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strTokenizer88);
    }

    @Test
    public void test09665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09665");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        boolean boolean8 = strBuilder6.endsWith("100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.insert((int) (short) 0, "-1");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder6.deleteFirst('3');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append('#');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test09666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09666");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceAll("#", "true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendSeparator("StrTokenizer[not tokenized yet]", 0);
        java.io.Reader reader17 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        int int19 = strBuilder18.capacity();
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(stringBuffer20, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder18.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder36.deleteAll(strMatcher40);
        boolean boolean42 = strBuilder28.equalsIgnoreCase(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.appendSeparator(" #\n", (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder13.append(strBuilder36);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder36.appendln((float) 15);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(reader17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test09667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09667");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.ensureCapacity((int) (short) 10);
        boolean boolean13 = strBuilder6.equals((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.setNullText("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.minimizeCapacity();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test09668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09668");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder1.appendNewLine();
        java.lang.String str3 = strBuilder2.getNewLineText();
        char[] charArray4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendln(charArray4, 7, 0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("#\n", 'g', 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendAll((java.util.Iterator<java.lang.String>) strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test09669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09669");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.noneMatcher();
        boolean boolean20 = strBuilder16.contains(strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("hi!", strMatcher19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder5.replaceFirst(strMatcher19, "true\n###################################");
        int int24 = strBuilder5.length();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
    }

    @Test
    public void test09670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09670");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((double) 100L);
        java.util.stream.IntStream intStream45 = strBuilder3.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder3.appendFixedWidthPadLeft(0, (int) (byte) -1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "");
        java.io.Reader reader54 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.appendSeparator('4');
        int int59 = strBuilder56.indexOf("10.0", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder3.appendln((java.lang.Object) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendFixedWidthPadLeft(6, (int) (short) 100, 'g');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray68 = strTokenizer67.getTokenArray();
        java.lang.String[] strArray69 = strTokenizer67.getTokenArray();
        boolean boolean70 = strTokenizer67.hasNext();
        int int71 = strTokenizer67.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer67.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher72);
        java.util.List<java.lang.String> strList74 = strTokenizer73.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer73.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = strTokenizer73.setIgnoredChar('4');
        boolean boolean78 = strTokenizer77.hasNext();
        java.lang.String str79 = strTokenizer77.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer77.setQuoteChar('e');
        boolean boolean82 = strBuilder64.equals((java.lang.Object) strTokenizer81);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(intStream45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertNotNull(strTokenizer77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "h" + "'", str79, "h");
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test09671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09671");
        char[] charArray0 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean3 = strTokenizer2.hasNext();
        java.lang.String[] strArray4 = strTokenizer2.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = strTokenizer2.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray9 = strTokenizer8.getTokenArray();
        java.lang.String[] strArray10 = strTokenizer8.getTokenArray();
        boolean boolean11 = strTokenizer8.hasNext();
        int int12 = strTokenizer8.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = strTokenizer8.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher13);
        java.util.List<java.lang.String> strList15 = strTokenizer14.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer14.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray0, strMatcher5, strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setDelimiterString("\ntrue\n");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer19.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer19);
    }

    @Test
    public void test09672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09672");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceAll("", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.setLength(53);
        java.io.Writer writer12 = strBuilder11.asWriter();
        writer12.close();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(writer12);
    }

    @Test
    public void test09673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09673");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator('a', ' ');
        boolean boolean13 = strBuilder12.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.reset("");
        java.lang.String str23 = strTokenizer22.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer22.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer22.getDelimiterMatcher();
        int int28 = strBuilder15.indexOf(strMatcher26, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder15.appendSeparator('e', 0);
        java.lang.Object obj32 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder15.appendln(obj32);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test09674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09674");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor24 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.appendln(true);
        boolean boolean37 = strSubstitutor24.replaceIn(strBuilder34, (int) '$', 0);
        boolean boolean38 = strList23.equals((java.lang.Object) '$');
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        java.util.Set<java.lang.Object> objSet41 = properties39.keySet();
        java.util.Properties properties44 = new java.util.Properties();
        int int45 = properties44.size();
        boolean boolean47 = properties44.containsKey((java.lang.Object) (-1.0f));
        boolean boolean48 = properties39.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray53 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, ' ');
        int int56 = strTokenizer55.size();
        boolean boolean57 = strTokenizer55.hasNext();
        java.util.List<java.lang.String> strList58 = strTokenizer55.getTokenList();
        java.lang.String[] strArray62 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        boolean boolean65 = strList58.addAll((java.util.Collection<java.lang.String>) strList63);
        java.util.Spliterator<java.lang.String> strSpliterator66 = strList63.spliterator();
        int int67 = strList63.size();
        boolean boolean69 = strList63.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream70 = strList63.stream();
        boolean boolean71 = properties39.containsKey((java.lang.Object) strList63);
        boolean boolean72 = strList23.retainAll((java.util.Collection<java.lang.String>) strList63);
        boolean boolean73 = strList63.isEmpty();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strSpliterator66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 3 + "'", int67 == 3);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strStream70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test09675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09675");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.deleteFirst("");
        int int22 = strBuilder18.indexOf("");
        int int25 = strBuilder18.lastIndexOf('#', (int) (byte) 0);
        boolean boolean27 = strBuilder18.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder18.appendAll((java.util.Iterator<java.lang.String>) strTokenizer28);
        boolean boolean30 = strTokenizer28.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer28.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.setIgnoreEmptyTokens(false);
        boolean boolean35 = strBuilder0.equals((java.lang.Object) strTokenizer32);
        org.apache.commons.lang3.text.StrMatcher strMatcher36 = strTokenizer32.getQuoteMatcher();
        java.lang.String str37 = strTokenizer32.toString();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMatcher36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "StrTokenizer[]" + "'", str37, "StrTokenizer[]");
    }

    @Test
    public void test09676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09676");
        java.lang.Throwable throwable4 = null;
        java.io.IOException iOException5 = new java.io.IOException("\n32.0", throwable4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        java.util.Properties properties7 = new java.util.Properties();
        int int8 = properties7.size();
        boolean boolean10 = properties7.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties11 = new java.util.Properties();
        int int12 = properties11.size();
        boolean boolean14 = properties11.containsKey((java.lang.Object) (-1.0f));
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.String str17 = properties11.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration18 = properties11.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties11.entrySet();
        java.io.IOException iOException20 = new java.io.IOException();
        java.lang.Throwable[] throwableArray21 = iOException20.getSuppressed();
        java.lang.Throwable[] throwableArray22 = iOException20.getSuppressed();
        java.io.IOException iOException23 = new java.io.IOException((java.lang.Throwable) iOException20);
        boolean boolean24 = properties11.containsValue((java.lang.Object) iOException23);
        iOException6.addSuppressed((java.lang.Throwable) iOException23);
        java.io.IOException iOException26 = new java.io.IOException("\000\000\000\000\000\000\000\000\000\000\n", (java.lang.Throwable) iOException23);
        java.io.IOException iOException27 = new java.io.IOException("t", (java.lang.Throwable) iOException23);
        java.io.IOException iOException28 = new java.io.IOException("\n32.0java.io.IOException: hi!116\n\n\n", (java.lang.Throwable) iOException23);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(wildcardEnumeration18);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test09677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09677");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        java.util.Spliterator<java.lang.String> strSpliterator19 = strList9.spliterator();
        char[] charArray24 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        int int27 = strTokenizer26.size();
        boolean boolean28 = strTokenizer26.hasNext();
        java.util.List<java.lang.String> strList29 = strTokenizer26.getTokenList();
        java.lang.String[] strArray33 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        boolean boolean36 = strList29.addAll((java.util.Collection<java.lang.String>) strList34);
        java.util.Spliterator<java.lang.String> strSpliterator37 = strList34.spliterator();
        int int38 = strList34.size();
        java.lang.String str40 = strList34.remove((int) (byte) 0);
        java.util.stream.Stream<java.lang.String> strStream41 = strList34.parallelStream();
        java.lang.Object[] objArray42 = strList34.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "");
        char[] charArray59 = strBuilder55.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder52.append(charArray59, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        int int66 = strBuilder65.capacity();
        java.lang.StringBuffer stringBuffer67 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.appendln(stringBuffer67, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder65.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder65.appendSeparator("java.io.IOException: hi!");
        boolean boolean76 = strBuilder52.equals((java.lang.Object) strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.setNewLineText("hi!");
        boolean boolean79 = strList34.contains((java.lang.Object) "hi!");
        boolean boolean80 = strList9.contains((java.lang.Object) strList34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = strList34.get(30);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 30, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSpliterator19);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strSpliterator37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3 + "'", int38 == 3);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\n32.0" + "'", str40, "\n32.0");
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[, ]");
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 32 + "'", int66 == 32);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test09678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09678");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.appendln((double) '$');
        char[] charArray19 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        int int22 = strTokenizer21.size();
        boolean boolean23 = strTokenizer21.hasNext();
        java.util.List<java.lang.String> strList24 = strTokenizer21.getTokenList();
        java.lang.String[] strArray28 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        boolean boolean31 = strList24.addAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.String str33 = strList29.remove(0);
        char[] charArray38 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        int int41 = strTokenizer40.size();
        boolean boolean42 = strTokenizer40.hasNext();
        java.util.List<java.lang.String> strList43 = strTokenizer40.getTokenList();
        java.lang.String[] strArray47 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        boolean boolean50 = strList43.addAll((java.util.Collection<java.lang.String>) strList48);
        boolean boolean51 = strList29.addAll((java.util.Collection<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder6.appendAll((java.lang.Iterable<java.lang.String>) strList29);
        java.util.Iterator<java.lang.String> strItor53 = strList29.iterator();
        java.util.stream.Stream<java.lang.String> strStream54 = strList29.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = strList29.remove(68);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 68, Size: 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\n32.0" + "'", str33, "\n32.0");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strItor53);
        org.junit.Assert.assertNotNull(strStream54);
    }

    @Test
    public void test09679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09679");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding(44, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceAll('$', 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.clear();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test09680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09680");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.reset("{\ntrue\n=1.0}");
        java.lang.String str13 = strTokenizer12.toString();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str13, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test09681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09681");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.deleteAll('4');
        boolean boolean51 = strBuilder3.equalsIgnoreCase(strBuilder50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder3.appendSeparator('e', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendSeparator("java.io.IOException: {");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test09682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09682");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.appendln((float) '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceAll("true\na4\n", "\n-1.0100.0\n");
        int int7 = strBuilder3.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        int int9 = strBuilder8.capacity();
        java.lang.StringBuffer stringBuffer10 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.appendln(stringBuffer10, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder8.insert(1, (double) 32);
        boolean boolean17 = strBuilder8.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder8.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder22.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder22.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder18.append((java.lang.Object) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder18.appendln((float) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder18.appendSeparator("\naaaa100", ".0");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder18.replaceFirst("\000\000\000\000\000\000\000\000\000\000\000\000\000", "#\ntrue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder3.append(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 101 + "'", int7 == 101);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test09683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09683");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 10);
        java.lang.String str12 = strBuilder10.rightString((int) 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        java.lang.String[] strArray18 = strTokenizer16.getTokenArray();
        boolean boolean19 = strTokenizer16.hasNext();
        int int20 = strTokenizer16.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer16.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher21);
        java.util.List<java.lang.String> strList23 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer22.getIgnoredMatcher();
        int int25 = strBuilder13.lastIndexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder13.append(true);
        boolean boolean29 = strBuilder13.endsWith("\nt\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder13.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        int int32 = strBuilder31.capacity();
        java.lang.StringBuffer stringBuffer33 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.appendln(stringBuffer33, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder31.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder31.setLength(32);
        java.io.Writer writer42 = strBuilder41.asWriter();
        writer42.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        int int48 = strBuilder47.capacity();
        java.lang.StringBuffer stringBuffer49 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder47.appendln(stringBuffer49, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder47.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.append((float) '4');
        java.io.Writer writer59 = writer42.append((java.lang.CharSequence) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder62.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteAll("");
        java.io.Writer writer69 = writer42.append((java.lang.CharSequence) strBuilder66);
        boolean boolean71 = strBuilder66.contains('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder30.append((java.lang.CharSequence) strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "100.0\000\000\000\000\000" + "'", str12, "100.0\000\000\000\000\000");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(writer42);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 32 + "'", int48 == 32);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(writer59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(writer69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test09684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09684");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 10);
        java.lang.String str12 = strBuilder10.rightString((int) 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        java.lang.String[] strArray18 = strTokenizer16.getTokenArray();
        boolean boolean19 = strTokenizer16.hasNext();
        int int20 = strTokenizer16.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer16.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher21);
        java.util.List<java.lang.String> strList23 = strTokenizer22.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = strTokenizer22.getIgnoredMatcher();
        int int25 = strBuilder13.lastIndexOf(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder28.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        java.lang.String str36 = strBuilder32.getNewLineText();
        java.util.stream.IntStream intStream37 = strBuilder32.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder29.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder29.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder29.appendFixedWidthPadLeft((int) (byte) 1, 32, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.appendSeparator("100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder46.appendFixedWidthPadRight(14, (int) 't', '#');
        boolean boolean51 = strBuilder13.equalsIgnoreCase(strBuilder50);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln("\n36E", 286, 106);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "100.0\000\000\000\000\000" + "'", str12, "100.0\000\000\000\000\000");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test09685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09685");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.insert(1, (double) 32);
        java.lang.String str26 = strBuilder16.rightString((int) ' ');
        boolean boolean28 = strBuilder16.startsWith("");
        char[] charArray29 = strBuilder16.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray29);
        writer11.write(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray29);
        boolean boolean33 = strTokenizer32.isEmptyTokenAsNull();
        int int34 = strTokenizer32.previousIndex();
        boolean boolean35 = strTokenizer32.hasNext();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n32.0" + "'", str26, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test09686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09686");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, "");
        boolean boolean7 = strTokenizer6.hasNext();
        int int8 = strTokenizer6.nextIndex();
        boolean boolean9 = strTokenizer6.hasNext();
        boolean boolean10 = strTokenizer6.hasPrevious();
        boolean boolean11 = strTokenizer6.hasNext();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test09687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09687");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append((long) 'a');
        boolean boolean11 = strBuilder9.contains('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        int int13 = strBuilder12.capacity();
        java.lang.StringBuffer stringBuffer14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendln(stringBuffer14, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendln((int) (byte) 0);
        java.io.Writer writer20 = strBuilder19.asWriter();
        java.io.IOException iOException21 = new java.io.IOException();
        java.lang.Throwable[] throwableArray22 = iOException21.getSuppressed();
        java.lang.Throwable[] throwableArray23 = iOException21.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendWithSeparators((java.lang.Object[]) throwableArray23, "1");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.append((java.lang.Object) "1");
        int int27 = strBuilder9.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder9.append('#');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(writer20);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test09688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09688");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor28 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(true);
        boolean boolean41 = strSubstitutor28.replaceIn(strBuilder38, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder0.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strBuilder38.asTokenizer();
        char[] charArray48 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer(charArray48, ' ');
        int int51 = strTokenizer50.size();
        boolean boolean52 = strTokenizer50.hasNext();
        java.util.List<java.lang.String> strList53 = strTokenizer50.getTokenList();
        java.lang.String[] strArray57 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        boolean boolean60 = strList53.addAll((java.util.Collection<java.lang.String>) strList58);
        java.util.Spliterator<java.lang.String> strSpliterator61 = strList58.spliterator();
        int int62 = strList58.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int66 = strList58.lastIndexOf((java.lang.Object) strTokenizer65);
        strList58.clear();
        java.util.Spliterator<java.lang.String> strSpliterator68 = strList58.spliterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder38.appendAll((java.lang.Iterable<java.lang.String>) strList58);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder38.delete(4, 7);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray75 = strBuilder72.toCharArray(151, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(charArray48);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strSpliterator61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test09689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09689");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        boolean boolean20 = strList9.add("\n");
        char[] charArray24 = new char[] { 'a', '$', '$' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, '$');
        java.util.List<java.lang.String> strList27 = strTokenizer26.getTokenList();
        char[] charArray32 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray32, ' ');
        int int35 = strTokenizer34.size();
        boolean boolean36 = strTokenizer34.hasNext();
        java.util.List<java.lang.String> strList37 = strTokenizer34.getTokenList();
        java.lang.String[] strArray41 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        boolean boolean44 = strList37.addAll((java.util.Collection<java.lang.String>) strList42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray47 = strTokenizer46.getTokenArray();
        java.lang.String[] strArray48 = strTokenizer46.getTokenArray();
        boolean boolean49 = strTokenizer46.hasNext();
        int int50 = strTokenizer46.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer46.getQuoteMatcher();
        java.util.List<java.lang.String> strList52 = strTokenizer46.getTokenList();
        boolean boolean53 = strList37.retainAll((java.util.Collection<java.lang.String>) strList52);
        boolean boolean54 = strList27.addAll((java.util.Collection<java.lang.String>) strList52);
        java.util.Iterator<java.lang.String> strItor55 = strList27.iterator();
        java.lang.Object[] objArray56 = strList27.toArray();
        boolean boolean57 = strList27.isEmpty();
        boolean boolean58 = strList9.containsAll((java.util.Collection<java.lang.String>) strList27);
        boolean boolean60 = strList27.add("#36.0");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a$$");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a$$");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, $, $]");
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strItor55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[a]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test09690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09690");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties4.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer20 = strBuilder19.toStringBuffer();
        char[] charArray25 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        int int28 = strTokenizer27.size();
        boolean boolean29 = strTokenizer27.hasNext();
        java.util.List<java.lang.String> strList30 = strTokenizer27.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        char[] charArray35 = strBuilder31.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray35);
        boolean boolean39 = strList30.equals((java.lang.Object) charArray35);
        char[] charArray44 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        int int47 = strTokenizer46.size();
        boolean boolean48 = strTokenizer46.hasNext();
        java.util.List<java.lang.String> strList49 = strTokenizer46.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        int int51 = strBuilder50.capacity();
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(stringBuffer52, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder50.insert(1, (double) 32);
        java.lang.String str60 = strBuilder50.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder50.insert(1, '#');
        boolean boolean64 = strList49.equals((java.lang.Object) strBuilder50);
        boolean boolean65 = strList30.containsAll((java.util.Collection<java.lang.String>) strList49);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder19.appendAll((java.lang.Iterable<java.lang.String>) strList49);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.deleteAll('4');
        int int74 = strBuilder72.indexOf('a');
        java.lang.String str77 = strBuilder72.midString((int) (byte) 10, 32);
        java.lang.Object obj78 = properties4.getOrDefault((java.lang.Object) strBuilder19, (java.lang.Object) str77);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder19.appendln(false);
        int int82 = strBuilder80.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder80.appendln('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder80.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder85.insert(0, (int) 'g');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder85.insert(93, (long) 33);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 93");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(stringBuffer20);
        org.junit.Assert.assertEquals(stringBuffer20.toString(), "");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 32 + "'", int51 == 32);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "\n32.0" + "'", str60, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "" + "'", obj78, "");
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 4 + "'", int82 == 4);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test09691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09691");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.insert(1, (double) 32);
        java.util.Properties properties25 = new java.util.Properties();
        int int26 = properties25.size();
        boolean boolean28 = properties25.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        char[] charArray33 = strBuilder29.toCharArray();
        boolean boolean34 = properties25.containsValue((java.lang.Object) charArray33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder16.append(charArray33, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder16.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder0.append((java.lang.Object) true);
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder0.replaceAll(strMatcher42, "{\ntrue\n=1.0}");
        java.lang.String str46 = strBuilder0.rightString((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder0.appendSeparator("{", "#\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.insert(0, (long) 11);
        java.lang.String str54 = strBuilder49.rightString(26);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder49.replaceAll('$', 'g');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "0.0true" + "'", str46, "0.0true");
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "110.0true{" + "'", str54, "110.0true{");
        org.junit.Assert.assertNotNull(strBuilder57);
    }

    @Test
    public void test09692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09692");
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("{}", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        java.io.IOException iOException8 = new java.io.IOException("hi!");
        java.io.IOException iOException10 = new java.io.IOException("hi!");
        iOException8.addSuppressed((java.lang.Throwable) iOException10);
        java.io.IOException iOException12 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException10);
        java.lang.Throwable throwable14 = null;
        java.io.IOException iOException15 = new java.io.IOException("\n32.0", throwable14);
        iOException12.addSuppressed((java.lang.Throwable) iOException15);
        iOException5.addSuppressed((java.lang.Throwable) iOException12);
        java.io.IOException iOException18 = new java.io.IOException(" ", (java.lang.Throwable) iOException12);
        java.io.IOException iOException19 = new java.io.IOException("", (java.lang.Throwable) iOException18);
        java.lang.Throwable[] throwableArray20 = iOException19.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test09693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09693");
        char[] charArray2 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        java.lang.String[] strArray4 = strTokenizer3.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer3.reset("l");
        boolean boolean7 = strTokenizer6.hasPrevious();
        int int8 = strTokenizer6.nextIndex();
        int int9 = strTokenizer6.size();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test09694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09694");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst('4', 'a');
        boolean boolean46 = properties0.remove((java.lang.Object) strBuilder33, (java.lang.Object) '4');
        java.lang.Object obj47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder33.appendFixedWidthPadRight(obj47, (int) 'a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray59 = strTokenizer58.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder53.appendAll((java.lang.Object[]) strArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "");
        char[] charArray68 = strBuilder64.toCharArray();
        char[] charArray69 = strBuilder61.getChars(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68);
        char[] charArray71 = strBuilder53.getChars(charArray68);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = strTokenizer73.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = strTokenizer73.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer73.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, strMatcher77);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray68);
        org.apache.commons.lang3.text.StrMatcher strMatcher80 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = strTokenizer79.setDelimiterMatcher(strMatcher80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = strTokenizer79.setQuoteChar('$');
        java.lang.String str84 = strTokenizer79.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher85 = strTokenizer79.getQuoteMatcher();
        int int87 = strBuilder50.indexOf(strMatcher85, 50);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[]");
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[]");
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[]");
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strTokenizer76);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertNotNull(strTokenizer79);
        org.junit.Assert.assertNotNull(strTokenizer81);
        org.junit.Assert.assertNotNull(strTokenizer83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(strMatcher85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test09695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09695");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        boolean boolean9 = properties0.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties0.elements();
        int int11 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst('a', '4');
        char[] charArray24 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, ' ');
        int int27 = strTokenizer26.size();
        boolean boolean28 = strTokenizer26.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer26.setIgnoredMatcher(strMatcher29);
        int int32 = strBuilder16.indexOf(strMatcher29, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder16.deleteFirst("StrTokenizer[32.0]");
        char[] charArray39 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, ' ');
        int int42 = strTokenizer41.size();
        boolean boolean43 = strTokenizer41.hasNext();
        java.util.List<java.lang.String> strList44 = strTokenizer41.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        char[] charArray49 = strBuilder45.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray49);
        boolean boolean53 = strList44.equals((java.lang.Object) charArray49);
        boolean boolean55 = strList44.add("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder34.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList44, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.append(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder57.appendln((int) 't');
        java.lang.Object obj62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj63 = properties0.replace((java.lang.Object) strBuilder57, obj62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test09696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09696");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Collection<java.lang.Object> objCollection16 = properties0.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        int int18 = strBuilder17.capacity();
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(stringBuffer19, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.insert(1, (double) 32);
        java.lang.String str27 = strBuilder17.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder17.replaceAll("", "hi!");
        java.lang.Object obj31 = properties0.remove((java.lang.Object) "");
        java.util.Set<java.lang.Object> objSet32 = properties0.keySet();
        boolean boolean33 = properties0.isEmpty();
        int int34 = properties0.size();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 32 + "'", int18 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\n32.0" + "'", str27, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test09697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09697");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("-1.0ttt", 'o', '2');
    }

    @Test
    public void test09698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09698");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        java.lang.String[] strArray30 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        boolean boolean33 = strList26.addAll((java.util.Collection<java.lang.String>) strList31);
        java.util.Spliterator<java.lang.String> strSpliterator34 = strList31.spliterator();
        int int35 = strList31.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int39 = strList31.lastIndexOf((java.lang.Object) strTokenizer38);
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        int int43 = strBuilder42.capacity();
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(stringBuffer44, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(true);
        boolean boolean54 = strSubstitutor41.replaceIn(strBuilder51, (int) '$', 0);
        boolean boolean55 = strList40.equals((java.lang.Object) '$');
        boolean boolean56 = strList9.retainAll((java.util.Collection<java.lang.String>) strList40);
        java.lang.Object[] objArray57 = strList9.toArray();
        java.lang.Object[] objArray58 = strList9.toArray();
        java.util.Iterator<java.lang.String> strItor59 = strList9.iterator();
        java.util.Properties properties60 = new java.util.Properties();
        int int61 = properties60.size();
        java.util.Set<java.lang.Object> objSet62 = properties60.keySet();
        java.util.Properties properties65 = new java.util.Properties();
        int int66 = properties65.size();
        boolean boolean68 = properties65.containsKey((java.lang.Object) (-1.0f));
        boolean boolean69 = properties60.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray74 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, ' ');
        int int77 = strTokenizer76.size();
        boolean boolean78 = strTokenizer76.hasNext();
        java.util.List<java.lang.String> strList79 = strTokenizer76.getTokenList();
        java.lang.String[] strArray83 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList84 = new java.util.ArrayList<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        boolean boolean86 = strList79.addAll((java.util.Collection<java.lang.String>) strList84);
        java.util.Spliterator<java.lang.String> strSpliterator87 = strList84.spliterator();
        int int88 = strList84.size();
        boolean boolean90 = strList84.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream91 = strList84.stream();
        boolean boolean92 = properties60.containsKey((java.lang.Object) strList84);
        int int93 = strList84.size();
        java.util.Spliterator<java.lang.String> strSpliterator94 = strList84.spliterator();
        java.util.stream.Stream<java.lang.String> strStream95 = strList84.parallelStream();
        boolean boolean96 = strList9.containsAll((java.util.Collection<java.lang.String>) strList84);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str98 = strList9.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strSpliterator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(strItor59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strSpliterator87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 3 + "'", int88 == 3);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(strStream91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 4 + "'", int93 == 4);
        org.junit.Assert.assertNotNull(strSpliterator94);
        org.junit.Assert.assertNotNull(strStream95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test09699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09699");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray3 = strTokenizer2.getTokenArray();
        java.lang.String[] strArray4 = strTokenizer2.getTokenArray();
        boolean boolean5 = strTokenizer2.hasNext();
        int int6 = strTokenizer2.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer2.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher7);
        java.util.List<java.lang.String> strList9 = strTokenizer8.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = strTokenizer8.getIgnoredMatcher();
        int int11 = strTokenizer8.nextIndex();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test09700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09700");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        java.lang.String str22 = strBuilder21.toString();
        char[] charArray27 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        java.lang.String str30 = strTokenizer29.next();
        int int31 = strTokenizer29.previousIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder21.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer40, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer40.reset("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder55, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int60 = strBuilder46.lastIndexOf(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer40.setQuoteMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder21.appendFixedWidthPadLeft((java.lang.Object) strTokenizer40, (int) '$', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder21.insert(12, (float) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder21.trim();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\n32.0" + "'", str22, "\n32.0");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ , 4, #, 4]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4#4" + "'", str30, "4#4");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test09701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09701");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        java.lang.String str10 = strBuilder6.getNewLineText();
        java.util.stream.IntStream intStream11 = strBuilder6.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.append((java.lang.CharSequence) strBuilder6);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder3.appendFixedWidthPadLeft((int) (byte) 1, 32, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder3.setNullText("32.0");
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties21.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        int int29 = strBuilder25.indexOf("");
        int int32 = strBuilder25.lastIndexOf('#', (int) (byte) 0);
        boolean boolean34 = strBuilder25.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder25.appendAll((java.util.Iterator<java.lang.String>) strTokenizer35);
        boolean boolean37 = strTokenizer35.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("{}");
        java.lang.Object obj41 = properties21.replace((java.lang.Object) strTokenizer35, (java.lang.Object) "{}");
        org.apache.commons.lang3.text.StrMatcher strMatcher42 = strTokenizer35.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder20.append((java.lang.Object) strTokenizer35);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder20.append((double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.append('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder45.appendln('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder50.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteFirst("-1");
        java.io.Reader reader57 = strBuilder56.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder49.appendln((java.lang.Object) strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(intStream11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(strMatcher42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test09702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09702");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray14);
        java.lang.String str17 = strTokenizer16.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getTrimmerMatcher();
        int int19 = strTokenizer16.nextIndex();
        boolean boolean20 = strTokenizer16.hasNext();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#" + "'", str17, "#");
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09703");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        java.lang.String str8 = strTokenizer7.toString();
        java.lang.String str9 = strTokenizer7.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer7.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setIgnoredChar('t');
        java.util.Properties properties14 = new java.util.Properties();
        int int15 = properties14.size();
        java.lang.Object obj16 = properties14.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder23.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder17.appendFixedWidthPadRight((java.lang.Object) strBuilder26, (int) (byte) -1, '#');
        java.lang.Object obj30 = properties14.get((java.lang.Object) strBuilder17);
        java.util.Properties properties31 = new java.util.Properties();
        int int32 = properties31.size();
        boolean boolean34 = properties31.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties35 = new java.util.Properties();
        int int36 = properties35.size();
        boolean boolean38 = properties35.containsKey((java.lang.Object) (-1.0f));
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        char[] charArray44 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        int int47 = strTokenizer46.size();
        boolean boolean48 = strTokenizer46.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = strTokenizer46.setIgnoredMatcher(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "");
        java.lang.Object obj55 = properties31.putIfAbsent((java.lang.Object) strMatcher49, (java.lang.Object) strBuilder51);
        boolean boolean56 = strBuilder17.equals(obj55);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder17.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.appendln((float) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        int int65 = strBuilder64.capacity();
        java.lang.StringBuffer stringBuffer66 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder64.appendln(stringBuffer66, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder64.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.append((float) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder63.appendln(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = new org.apache.commons.lang3.text.StrBuilder(116);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.appendFixedWidthPadRight((int) ' ', (int) 't', '\000');
        org.apache.commons.lang3.text.StrMatcher strMatcher84 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("");
        int int86 = strBuilder82.lastIndexOf(strMatcher84, 116);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder63.replaceAll(strMatcher84, "[4#4]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer89 = strTokenizer13.setDelimiterMatcher(strMatcher84);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = strTokenizer13.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str8, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 32 + "'", int65 == 32);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strMatcher84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strTokenizer89);
        org.junit.Assert.assertNotNull(strMatcher90);
    }

    @Test
    public void test09704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09704");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("l n");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test09705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09705");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder5.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.ensureCapacity(53);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder5.ensureCapacity((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder5.insert(113, 68);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 113");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test09706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09706");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("java.io.IOException: ");
    }

    @Test
    public void test09707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09707");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        int int11 = strBuilder10.capacity();
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(stringBuffer12, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.insert(1, (double) 32);
        java.lang.String str20 = strBuilder10.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.insert(1, '#');
        boolean boolean24 = strList9.equals((java.lang.Object) strBuilder10);
        java.lang.Throwable throwable26 = null;
        java.io.IOException iOException27 = new java.io.IOException("{}", throwable26);
        java.lang.Throwable[] throwableArray28 = iOException27.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder10.appendWithSeparators((java.lang.Object[]) throwableArray28, "10.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendSeparator('$', '$');
        int int34 = strBuilder30.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendln(0);
        java.lang.Throwable throwable39 = null;
        java.io.IOException iOException40 = new java.io.IOException("\n32.0", throwable39);
        java.io.IOException iOException41 = new java.io.IOException((java.lang.Throwable) iOException40);
        java.util.Properties properties42 = new java.util.Properties();
        int int43 = properties42.size();
        boolean boolean45 = properties42.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties46 = new java.util.Properties();
        int int47 = properties46.size();
        boolean boolean49 = properties46.containsKey((java.lang.Object) (-1.0f));
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.lang.String str52 = properties46.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration53 = properties46.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties46.entrySet();
        java.io.IOException iOException55 = new java.io.IOException();
        java.lang.Throwable[] throwableArray56 = iOException55.getSuppressed();
        java.lang.Throwable[] throwableArray57 = iOException55.getSuppressed();
        java.io.IOException iOException58 = new java.io.IOException((java.lang.Throwable) iOException55);
        boolean boolean59 = properties46.containsValue((java.lang.Object) iOException58);
        iOException41.addSuppressed((java.lang.Throwable) iOException58);
        java.io.IOException iOException63 = new java.io.IOException("StrTokenizer[]");
        java.io.IOException iOException64 = new java.io.IOException((java.lang.Throwable) iOException63);
        java.io.IOException iOException65 = new java.io.IOException("false", (java.lang.Throwable) iOException64);
        iOException41.addSuppressed((java.lang.Throwable) iOException65);
        java.io.IOException iOException68 = new java.io.IOException("hi!");
        java.io.IOException iOException70 = new java.io.IOException("hi!");
        iOException68.addSuppressed((java.lang.Throwable) iOException70);
        java.io.IOException iOException73 = new java.io.IOException("hi!");
        java.io.IOException iOException75 = new java.io.IOException("hi!");
        iOException73.addSuppressed((java.lang.Throwable) iOException75);
        iOException70.addSuppressed((java.lang.Throwable) iOException75);
        iOException41.addSuppressed((java.lang.Throwable) iOException75);
        java.io.IOException iOException79 = new java.io.IOException("[4#4]", (java.lang.Throwable) iOException75);
        java.lang.Throwable[] throwableArray80 = iOException75.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder30.appendWithSeparators((java.lang.Object[]) throwableArray80, "i!");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 7 + "'", int34 == 7);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(wildcardEnumeration53);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test09708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09708");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        char[] charArray10 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.append('a');
        int int19 = strBuilder12.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        int int21 = strBuilder20.capacity();
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(stringBuffer22, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.insert(1, (double) 32);
        boolean boolean29 = strBuilder20.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder20.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder20.clear();
        int int32 = strBuilder31.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder12.append(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder12.appendNewLine();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strBuilder12.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder5.append(strBuilder12);
        int int38 = strBuilder12.indexOf("3");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strBuilder12.asTokenizer();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = strTokenizer39.getQuoteMatcher();
        boolean boolean41 = strTokenizer39.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer39.setDelimiterChar('a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray10);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "true");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "true");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[t, r, u, e]");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strTokenizer43);
    }

    @Test
    public void test09709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09709");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        reader9.reset();
        long long24 = reader9.skip((long) (short) 0);
        reader9.mark(8);
        int int27 = reader9.read();
        reader9.close();
        reader9.mark(28);
        java.nio.CharBuffer charBuffer31 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int32 = reader9.read(charBuffer31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 35 + "'", int27 == 35);
    }

    @Test
    public void test09710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09710");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        boolean boolean11 = properties4.isEmpty();
        properties4.clear();
        int int13 = properties4.size();
        java.lang.Object obj14 = properties4.clone();
        java.io.IOException iOException16 = new java.io.IOException("hi!");
        java.io.IOException iOException18 = new java.io.IOException("hi!");
        iOException16.addSuppressed((java.lang.Throwable) iOException18);
        java.io.IOException iOException21 = new java.io.IOException("hi!");
        java.io.IOException iOException23 = new java.io.IOException("hi!");
        iOException21.addSuppressed((java.lang.Throwable) iOException23);
        iOException18.addSuppressed((java.lang.Throwable) iOException23);
        java.io.IOException iOException26 = new java.io.IOException();
        iOException18.addSuppressed((java.lang.Throwable) iOException26);
        java.lang.Throwable[] throwableArray28 = iOException18.getSuppressed();
        java.lang.Throwable[] throwableArray29 = iOException18.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder31.append('a');
        java.util.stream.IntStream intStream37 = strBuilder36.codePoints();
        java.io.Writer writer38 = strBuilder36.asWriter();
        java.lang.Object obj39 = properties4.replace((java.lang.Object) throwableArray29, (java.lang.Object) writer38);
        properties4.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(writer38);
        org.junit.Assert.assertNull(obj39);
    }

    @Test
    public void test09711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09711");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator('a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray18 = strTokenizer17.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendAll((java.lang.Object[]) strArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer23 = strBuilder22.toStringBuffer();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder0.append(stringBuffer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln((float) (-1));
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceAll("a", "\n32.0a");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader38 = strBuilder34.asReader();
        long long40 = reader38.skip((long) '#');
        reader38.mark((int) (short) 10);
        reader38.mark(3);
        boolean boolean45 = reader38.ready();
        int int46 = reader38.read();
        boolean boolean47 = reader38.ready();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder29.insert((int) (short) 0, (java.lang.Object) boolean47);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = strBuilder48.substring(105);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(stringBuffer23);
        org.junit.Assert.assertEquals(stringBuffer23.toString(), "");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(reader38);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test09712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09712");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder0.delete(1, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder33.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.setNullText("");
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.replaceAll(strMatcher38, "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder30.replaceFirst(strMatcher38, "########a4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder0.replaceAll(strMatcher38, "java.io.IOException: hi!false");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher51 = strTokenizer50.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer50, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = strTokenizer50.reset("\n32.0");
        java.lang.String[] strArray56 = strTokenizer50.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder0.appendAll((java.lang.Object[]) strArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder60.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.setNullText("");
        char[] charArray64 = strBuilder63.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, "true\n###################################3\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder57.append(charArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder57.deleteFirst(' ');
        java.util.stream.IntStream intStream72 = strBuilder57.chars();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(intStream72);
    }

    @Test
    public void test09713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09713");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher2 = strTokenizer1.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString(" 4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer5.reset();
        int int9 = strTokenizer5.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = strTokenizer5.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMatcher2);
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test09714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09714");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(53);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadLeft((java.lang.Object) "\naaaa100", 103, 'a');
        java.util.Properties properties6 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        int int18 = strBuilder17.capacity();
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(stringBuffer19, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int24 = strBuilder22.lastIndexOf(strMatcher23);
        boolean boolean25 = strBuilder15.equalsIgnoreCase(strBuilder22);
        char[] charArray28 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray28);
        boolean boolean30 = properties6.replace((java.lang.Object) strBuilder12, (java.lang.Object) strBuilder15, (java.lang.Object) strTokenizer29);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder15.deleteAll("StrTokenizer[]");
        int int34 = strBuilder32.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("");
        int int39 = strBuilder35.indexOf("");
        int int42 = strBuilder35.lastIndexOf('#', (int) (byte) 0);
        boolean boolean44 = strBuilder35.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.appendAll((java.util.Iterator<java.lang.String>) strTokenizer45);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder35.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder35.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder32.append(strBuilder50, 1, 0);
        java.lang.Iterable<java.lang.String> strIterable54 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder32.appendAll(strIterable54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder58.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.setNullText("");
        char[] charArray62 = strBuilder61.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, "true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder32.append(charArray62);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder5.appendln(charArray62, 28, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 32 + "'", int18 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[]");
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test09715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09715");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.insert((int) (short) 0, (long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder11.appendFixedWidthPadRight(0, 100, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.appendSeparator('e');
        int int22 = strBuilder20.lastIndexOf("aaa\nfalse0\n32.0\ntrue\n\n0true\n###################################\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.setLength(20);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test09716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09716");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendSeparator(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendSeparator("\n2.0", "java.io.IOException: {}");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendSeparator('1', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.appendln(49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = strBuilder7.substring((int) 't', 6);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test09717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09717");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.appendln(charArray7, (int) (short) 1, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(0, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        char[] charArray18 = strBuilder14.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        char[] charArray33 = strBuilder29.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.appendln(charArray33);
        int int38 = strMatcher21.isMatch(charArray33, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, strMatcher19, strMatcher21);
        java.lang.Object obj40 = strTokenizer39.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        char[] charArray52 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendln(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray52);
        java.lang.String str55 = strTokenizer54.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer54.setQuoteChar('4');
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer54.getDelimiterMatcher();
        int int59 = strTokenizer54.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = strTokenizer54.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer39.setDelimiterMatcher(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder13.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer61, "");
        java.lang.String str65 = strBuilder63.leftString(132);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1\n" + "'", str65, "1\n");
    }

    @Test
    public void test09718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09718");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("\n32.0");
        int int17 = strBuilder14.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replace((int) (byte) 1, (int) (byte) 1, "35.0\n100.0");
        int int22 = strBuilder14.length();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 11 + "'", int22 == 11);
    }

    @Test
    public void test09719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09719");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, "");
        boolean boolean7 = strTokenizer6.hasNext();
        int int8 = strTokenizer6.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean12 = strTokenizer11.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer11.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray20 = strTokenizer19.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendAll((java.lang.Object[]) strArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray30 = strTokenizer29.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.appendAll((java.lang.Object[]) strArray30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder15.appendln(strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst('a', '4');
        java.io.Writer writer45 = strBuilder44.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("", "");
        char[] charArray57 = strBuilder53.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendln(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray57);
        writer45.write(charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder37.append(charArray57);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = strTokenizer14.reset(charArray57);
        int int64 = strMatcher9.isMatch(charArray57, 84);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strTokenizer59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strTokenizer62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test09720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09720");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln('#');
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.append(stringBuffer15, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder12.appendSeparator("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder6.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) 116);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteCharAt(22);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 22");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test09721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09721");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder0.delete(1, (int) (byte) 1);
        int int25 = strBuilder0.size();
        int int26 = strBuilder0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder0.minimizeCapacity();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test09722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09722");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.setNullText("");
        java.lang.Object obj33 = properties0.get((java.lang.Object) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.append((long) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll('#');
        int int40 = strBuilder35.indexOf(' ', 43);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.append("########a4\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder42.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.setNewLineText("eeeeeeeeeeeeeeeeeeeeeeeeee");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.appendSeparator(' ', 117);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test09723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09723");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer5, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer5.reset("\n32.0");
        java.lang.String[] strArray11 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charMatcher('\000');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer5.setIgnoredMatcher(strMatcher13);
        int int15 = strTokenizer5.nextIndex();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test09724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09724");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        int int5 = strBuilder4.capacity();
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(stringBuffer6, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int11 = strBuilder9.lastIndexOf(strMatcher10);
        boolean boolean12 = strBuilder2.equalsIgnoreCase(strBuilder9);
        int int13 = strBuilder9.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.replaceAll("true\n#####", "\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test09725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09725");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        java.lang.String str14 = strTokenizer13.nextToken();
        java.lang.String str15 = strTokenizer13.toString();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer13.setDelimiterChar('a');
        java.util.List<java.lang.String> strList18 = strTokenizer17.getTokenList();
        java.lang.Object[] objArray19 = strList18.toArray();
        java.util.function.UnaryOperator<java.lang.String> strUnaryOperator20 = null;
        // The following exception was thrown during execution in test generation
        try {
            strList18.replaceAll(strUnaryOperator20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "StrTokenizer[]" + "'", str15, "StrTokenizer[]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
    }

    @Test
    public void test09726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09726");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        java.lang.String[] strArray30 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        boolean boolean33 = strList26.addAll((java.util.Collection<java.lang.String>) strList31);
        java.util.Spliterator<java.lang.String> strSpliterator34 = strList31.spliterator();
        int int35 = strList31.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int39 = strList31.lastIndexOf((java.lang.Object) strTokenizer38);
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        int int43 = strBuilder42.capacity();
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(stringBuffer44, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(true);
        boolean boolean54 = strSubstitutor41.replaceIn(strBuilder51, (int) '$', 0);
        boolean boolean55 = strList40.equals((java.lang.Object) '$');
        boolean boolean56 = strList9.retainAll((java.util.Collection<java.lang.String>) strList40);
        char[] charArray61 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        int int64 = strTokenizer63.size();
        boolean boolean65 = strTokenizer63.hasNext();
        java.util.List<java.lang.String> strList66 = strTokenizer63.getTokenList();
        java.lang.String[] strArray70 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        boolean boolean73 = strList66.addAll((java.util.Collection<java.lang.String>) strList71);
        java.lang.String str75 = strList71.remove(0);
        java.util.stream.Stream<java.lang.String> strStream76 = strList71.stream();
        boolean boolean77 = strList40.addAll((java.util.Collection<java.lang.String>) strList71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str79 = strList71.get(80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 80, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strSpliterator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "\n32.0" + "'", str75, "\n32.0");
        org.junit.Assert.assertNotNull(strStream76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test09727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09727");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
    }

    @Test
    public void test09728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09728");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, "true\n###################################3\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer(charArray6, ' ', ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray6);
        boolean boolean13 = strTokenizer12.hasPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = strTokenizer12.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test09729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09729");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder6.appendln(32);
        boolean boolean12 = strBuilder6.endsWith("a4");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.deleteAll("35\n");
        java.util.Properties properties15 = new java.util.Properties();
        int int16 = properties15.size();
        boolean boolean18 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties19 = new java.util.Properties();
        int int20 = properties19.size();
        boolean boolean22 = properties19.containsKey((java.lang.Object) (-1.0f));
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        char[] charArray28 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        int int31 = strTokenizer30.size();
        boolean boolean32 = strTokenizer30.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer30.setIgnoredMatcher(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        java.lang.Object obj39 = properties15.putIfAbsent((java.lang.Object) strMatcher33, (java.lang.Object) strBuilder35);
        java.lang.Object obj42 = properties15.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        int int44 = strBuilder43.capacity();
        java.lang.StringBuffer stringBuffer45 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder43.appendln(stringBuffer45, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int50 = strBuilder48.lastIndexOf(strMatcher49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.insert((int) (short) 1, 32);
        java.util.Properties properties54 = new java.util.Properties();
        int int55 = properties54.size();
        boolean boolean57 = properties54.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties54.entrySet();
        java.lang.Object obj59 = properties15.putIfAbsent((java.lang.Object) strBuilder53, (java.lang.Object) objEntrySet58);
        java.lang.String str60 = strBuilder53.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder53.appendSeparator("", " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder63.setNewLineText("100.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder63.appendFixedWidthPadLeft((java.lang.Object) "a4", 45, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder14.append((java.lang.CharSequence) "a4");
        boolean boolean72 = strBuilder14.startsWith("4");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder14.setLength((int) '#');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 32 + "'", int44 == 32);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test09730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09730");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Set<java.lang.String> strSet17 = properties0.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "");
        java.io.Reader reader22 = strBuilder18.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder18.replaceFirst(' ', '4');
        java.io.Reader reader28 = strBuilder27.asReader();
        boolean boolean29 = reader28.markSupported();
        int int30 = reader28.read();
        properties0.load(reader28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln('#');
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.append(stringBuffer38, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder35.appendSeparator('$', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder35.append((float) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder35.deleteAll("t");
        int int55 = strBuilder53.indexOf("tue");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendSeparator('e', (int) (byte) 0);
        java.lang.Object obj59 = properties0.remove((java.lang.Object) strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder53.replaceAll("StrTokenizer[35.0, 4]", "true\n");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(reader22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test09731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09731");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("1", 'a', 't');
        java.util.List<java.lang.String> strList4 = strTokenizer3.getTokenList();
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties9.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray20 = strTokenizer19.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendAll((java.lang.Object[]) strArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder15.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer25 = strBuilder24.toStringBuffer();
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        java.util.List<java.lang.String> strList35 = strTokenizer32.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "");
        char[] charArray40 = strBuilder36.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = new org.apache.commons.lang3.text.StrTokenizer(charArray40);
        boolean boolean44 = strList35.equals((java.lang.Object) charArray40);
        char[] charArray49 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        int int52 = strTokenizer51.size();
        boolean boolean53 = strTokenizer51.hasNext();
        java.util.List<java.lang.String> strList54 = strTokenizer51.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        int int56 = strBuilder55.capacity();
        java.lang.StringBuffer stringBuffer57 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.appendln(stringBuffer57, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder55.insert(1, (double) 32);
        java.lang.String str65 = strBuilder55.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder55.insert(1, '#');
        boolean boolean69 = strList54.equals((java.lang.Object) strBuilder55);
        boolean boolean70 = strList35.containsAll((java.util.Collection<java.lang.String>) strList54);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder24.appendAll((java.lang.Iterable<java.lang.String>) strList54);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder72.deleteAll('4');
        int int79 = strBuilder77.indexOf('a');
        java.lang.String str82 = strBuilder77.midString((int) (byte) 10, 32);
        java.lang.Object obj83 = properties9.getOrDefault((java.lang.Object) strBuilder24, (java.lang.Object) str82);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder24.minimizeCapacity();
        int int85 = strList4.indexOf((java.lang.Object) strBuilder84);
        boolean boolean87 = strList4.add("fa");
        strList4.clear();
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(stringBuffer25);
        org.junit.Assert.assertEquals(stringBuffer25.toString(), "");
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 32 + "'", int56 == 32);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\n32.0" + "'", str65, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "" + "'", obj83, "");
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test09732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09732");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln('#');
        char[] charArray44 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray44, ' ');
        int int47 = strTokenizer46.size();
        boolean boolean48 = strTokenizer46.hasNext();
        java.util.List<java.lang.String> strList49 = strTokenizer46.getTokenList();
        java.lang.String[] strArray53 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        boolean boolean56 = strList49.addAll((java.util.Collection<java.lang.String>) strList54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray59 = strTokenizer58.getTokenArray();
        java.lang.String[] strArray60 = strTokenizer58.getTokenArray();
        boolean boolean61 = strTokenizer58.hasNext();
        int int62 = strTokenizer58.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = strTokenizer58.getQuoteMatcher();
        java.util.List<java.lang.String> strList64 = strTokenizer58.getTokenList();
        boolean boolean65 = strList49.retainAll((java.util.Collection<java.lang.String>) strList64);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder37.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList49, "");
        java.lang.Object obj68 = properties0.remove((java.lang.Object) strList49);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder75.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder75.appendln(32);
        java.io.Reader reader80 = strBuilder75.asReader();
        properties0.load(reader80);
        boolean boolean82 = reader80.markSupported();
        int int83 = reader80.read();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(reader80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
    }

    @Test
    public void test09733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09733");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray13 = strTokenizer12.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendAll((java.lang.Object[]) strArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "");
        char[] charArray22 = strBuilder18.toCharArray();
        char[] charArray23 = strBuilder15.getChars(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        char[] charArray25 = strBuilder7.getChars(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = strTokenizer27.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer27.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = strTokenizer27.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray22, strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer6.setTrimmerMatcher(strMatcher31);
        boolean boolean34 = strTokenizer33.hasPrevious();
        boolean boolean35 = strTokenizer33.hasNext();
        java.lang.String str36 = strTokenizer33.next();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4#4" + "'", str36, "4#4");
    }

    @Test
    public void test09734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09734");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("true\n###################################a4\n", '2', 't');
        java.lang.String str4 = strTokenizer3.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str4, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test09735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09735");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        int int8 = strTokenizer6.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer6.setDelimiterChar('a');
        java.lang.String str11 = strTokenizer10.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer10.setEmptyTokenAsNull(false);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer13.set("36.0");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " 4#4" + "'", str11, " 4#4");
        org.junit.Assert.assertNotNull(strTokenizer13);
    }

    @Test
    public void test09736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09736");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("\n32.0", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        char[] charArray8 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln('#');
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append(stringBuffer20, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.deleteFirst("hi!");
        char[] charArray26 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer13.reset(charArray26);
        boolean boolean28 = properties0.replace((java.lang.Object) iOException4, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer13);
        int int29 = properties0.size();
        int int30 = properties0.size();
        java.util.Set<java.lang.Object> objSet31 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln('#');
        char[] charArray49 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        int int52 = strTokenizer51.size();
        boolean boolean53 = strTokenizer51.hasNext();
        java.util.List<java.lang.String> strList54 = strTokenizer51.getTokenList();
        java.lang.String[] strArray58 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        boolean boolean61 = strList54.addAll((java.util.Collection<java.lang.String>) strList59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray64 = strTokenizer63.getTokenArray();
        java.lang.String[] strArray65 = strTokenizer63.getTokenArray();
        boolean boolean66 = strTokenizer63.hasNext();
        int int67 = strTokenizer63.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer63.getQuoteMatcher();
        java.util.List<java.lang.String> strList69 = strTokenizer63.getTokenList();
        boolean boolean70 = strList54.retainAll((java.util.Collection<java.lang.String>) strList69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder42.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList54, "");
        java.lang.Object obj73 = properties0.getOrDefault((java.lang.Object) (short) 0, (java.lang.Object) strList54);
        java.util.Properties properties74 = new java.util.Properties(properties0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
    }

    @Test
    public void test09737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09737");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        boolean boolean24 = strTokenizer21.isIgnoreEmptyTokens();
        int int25 = strTokenizer21.previousIndex();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test09738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09738");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        boolean boolean9 = properties0.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        java.util.Spliterator<java.lang.String> strSpliterator27 = strList24.spliterator();
        int int28 = strList24.size();
        boolean boolean30 = strList24.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream31 = strList24.stream();
        boolean boolean32 = properties0.containsKey((java.lang.Object) strList24);
        java.util.stream.Stream<java.lang.String> strStream33 = strList24.parallelStream();
        char[] charArray38 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        int int41 = strTokenizer40.size();
        boolean boolean42 = strTokenizer40.hasNext();
        java.util.List<java.lang.String> strList43 = strTokenizer40.getTokenList();
        java.lang.String[] strArray47 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        boolean boolean50 = strList43.addAll((java.util.Collection<java.lang.String>) strList48);
        java.util.Spliterator<java.lang.String> strSpliterator51 = strList48.spliterator();
        int int52 = strList48.size();
        boolean boolean54 = strList48.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream55 = strList48.stream();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray61 = strTokenizer60.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendAll((java.lang.Object[]) strArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.append((double) (short) 100);
        java.lang.String str67 = strBuilder62.substring(0, (int) (short) 0);
        boolean boolean68 = strList48.equals((java.lang.Object) 0);
        boolean boolean69 = strList24.retainAll((java.util.Collection<java.lang.String>) strList48);
        strList48.clear();
        java.util.ListIterator<java.lang.String> strItor71 = strList48.listIterator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSpliterator27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strSpliterator51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 3 + "'", int52 == 3);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strStream55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strItor71);
    }

    @Test
    public void test09739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09739");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException: true", 'a', '3');
    }

    @Test
    public void test09740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09740");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader10 = strBuilder6.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray16 = strTokenizer15.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendAll((java.lang.Object[]) strArray16);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream21 = strBuilder11.codePoints();
        java.lang.Object obj22 = properties1.replace((java.lang.Object) reader10, (java.lang.Object) intStream21);
        reader10.reset();
        properties0.load(reader10);
        java.util.Properties properties25 = new java.util.Properties();
        int int26 = properties25.size();
        boolean boolean28 = properties25.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties25.entrySet();
        boolean boolean30 = properties25.isEmpty();
        java.util.Properties properties31 = new java.util.Properties(properties25);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        int int33 = strBuilder32.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln(true);
        int int39 = strBuilder35.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder35.replaceAll("10.0", "java.io.IOException: {}");
        boolean boolean43 = properties25.equals((java.lang.Object) strBuilder42);
        java.util.Properties properties44 = new java.util.Properties(properties25);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        java.io.Reader reader49 = strBuilder45.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder45.replaceFirst(' ', '4');
        java.io.Reader reader55 = strBuilder54.asReader();
        boolean boolean56 = reader55.markSupported();
        int int57 = reader55.read();
        boolean boolean58 = reader55.ready();
        reader55.mark((int) (byte) -1);
        properties25.load(reader55);
        boolean boolean62 = properties0.equals((java.lang.Object) properties25);
        java.util.Set<java.lang.Object> objSet63 = properties25.keySet();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 32 + "'", int33 == 32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(reader49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(reader55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objSet63);
    }

    @Test
    public void test09741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09741");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        char[] charArray18 = strBuilder14.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "");
        boolean boolean21 = strTokenizer20.hasNext();
        boolean boolean22 = strTokenizer20.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder13.append("0");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder13.deleteAll("true\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test09742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09742");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        int int18 = strBuilder17.capacity();
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(stringBuffer19, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder17.setLength(32);
        java.io.Writer writer28 = strBuilder27.asWriter();
        writer28.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        writer28.write((-1));
        java.io.Writer writer36 = writer28.append(' ');
        java.lang.Object obj37 = properties0.remove((java.lang.Object) ' ');
        char[] charArray42 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer(charArray42, ' ');
        int int45 = strTokenizer44.size();
        boolean boolean46 = strTokenizer44.hasNext();
        java.util.List<java.lang.String> strList47 = strTokenizer44.getTokenList();
        java.lang.String[] strArray51 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        boolean boolean54 = strList47.addAll((java.util.Collection<java.lang.String>) strList52);
        java.lang.String str56 = strList52.remove(0);
        char[] charArray61 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        int int64 = strTokenizer63.size();
        boolean boolean65 = strTokenizer63.hasNext();
        java.util.List<java.lang.String> strList66 = strTokenizer63.getTokenList();
        java.lang.String[] strArray70 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        boolean boolean73 = strList66.addAll((java.util.Collection<java.lang.String>) strList71);
        boolean boolean74 = strList52.addAll((java.util.Collection<java.lang.String>) strList71);
        java.util.stream.Stream<java.lang.String> strStream75 = strList71.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder78.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.append((double) 10L);
        java.lang.Object obj82 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.appendFixedWidthPadLeft(obj82, (int) (byte) -1, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.appendln("StrTokenizer[ 4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder87.deleteAll("\n");
        boolean boolean90 = strList71.contains((java.lang.Object) strBuilder89);
        java.lang.String str91 = strBuilder89.getNullText();
        java.lang.Object obj92 = properties0.remove((java.lang.Object) strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 32 + "'", int18 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(writer36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strStream75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test09743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09743");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        java.util.Properties properties12 = new java.util.Properties();
        int int13 = properties12.size();
        boolean boolean15 = properties12.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties16 = new java.util.Properties();
        int int17 = properties16.size();
        boolean boolean19 = properties16.containsKey((java.lang.Object) (-1.0f));
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        char[] charArray25 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, ' ');
        int int28 = strTokenizer27.size();
        boolean boolean29 = strTokenizer27.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer27.setIgnoredMatcher(strMatcher30);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        java.lang.Object obj36 = properties12.putIfAbsent((java.lang.Object) strMatcher30, (java.lang.Object) strBuilder32);
        java.util.stream.IntStream intStream37 = strBuilder32.codePoints();
        java.io.Writer writer38 = writer11.append((java.lang.CharSequence) strBuilder32);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        int int40 = strBuilder39.capacity();
        java.lang.StringBuffer stringBuffer41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(stringBuffer41, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.insert(1, (double) 32);
        java.lang.String str49 = strBuilder39.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder39.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("", "");
        char[] charArray57 = strBuilder53.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer59 = new org.apache.commons.lang3.text.StrTokenizer(charArray57, "");
        boolean boolean60 = strTokenizer59.hasNext();
        boolean boolean61 = strTokenizer59.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder52.appendAll((java.util.Iterator<java.lang.String>) strTokenizer59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.append(' ');
        java.lang.StringBuffer stringBuffer65 = strBuilder62.toStringBuffer();
        java.io.Writer writer66 = writer38.append((java.lang.CharSequence) strBuilder62);
        int int68 = strBuilder62.indexOf("StrTokenizer[35.0\n100.0]");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(intStream37);
        org.junit.Assert.assertNotNull(writer38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\n32.0" + "'", str49, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(stringBuffer65);
        org.junit.Assert.assertEquals(stringBuffer65.toString(), "\n32.0 ");
        org.junit.Assert.assertNotNull(writer66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test09744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09744");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        java.lang.String str20 = strList14.remove((int) (byte) 0);
        boolean boolean22 = strList14.add("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendAll((java.lang.Object[]) strArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendAll((java.lang.Object[]) strArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.appendln(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        char[] charArray52 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendln(charArray52);
        boolean boolean54 = strBuilder23.equals((java.lang.Object) strBuilder47);
        boolean boolean55 = strList14.remove((java.lang.Object) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder23.replaceAll("{}", "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder23.appendNewLine();
        boolean boolean61 = strBuilder23.endsWith("StrTokenizer[not tokenized yet]");
        char[] charArray62 = strBuilder23.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder23.append(strBuilder63);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[\n, \n]");
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test09745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09745");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        int int22 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendAll((java.lang.Object[]) strArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder32.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.ensureCapacity((int) (short) 10);
        boolean boolean36 = strBuilder29.equals((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.setNullText("java.io.IOException");
        java.io.Writer writer39 = strBuilder35.asWriter();
        char[] charArray42 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer43.setDelimiterString("hi!");
        java.lang.String str46 = strTokenizer43.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer43.setDelimiterString("StrTokenizer[ 4#4]");
        int int49 = strTokenizer48.nextIndex();
        java.lang.Object obj50 = properties0.put((java.lang.Object) writer39, (java.lang.Object) strTokenizer48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "");
        char[] charArray55 = strBuilder51.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, 'a', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setIgnoredChar('e');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "");
        char[] charArray68 = strBuilder64.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, "");
        boolean boolean71 = strTokenizer70.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer70.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = strTokenizer63.setDelimiterMatcher(strMatcher72);
        boolean boolean74 = properties0.containsValue((java.lang.Object) strMatcher72);
        properties0.clear();
        java.lang.String str76 = properties0.toString();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(writer39);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "a4" + "'", str46, "a4");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertNotNull(strTokenizer73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{}" + "'", str76, "{}");
    }

    @Test
    public void test09746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09746");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("\n32.0", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        char[] charArray8 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln('#');
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append(stringBuffer20, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.deleteFirst("hi!");
        char[] charArray26 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer13.reset(charArray26);
        boolean boolean28 = properties0.replace((java.lang.Object) iOException4, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer13);
        int int29 = properties0.size();
        int int30 = properties0.size();
        java.util.Set<java.lang.Object> objSet31 = properties0.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.appendln('#');
        char[] charArray49 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, ' ');
        int int52 = strTokenizer51.size();
        boolean boolean53 = strTokenizer51.hasNext();
        java.util.List<java.lang.String> strList54 = strTokenizer51.getTokenList();
        java.lang.String[] strArray58 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        boolean boolean61 = strList54.addAll((java.util.Collection<java.lang.String>) strList59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray64 = strTokenizer63.getTokenArray();
        java.lang.String[] strArray65 = strTokenizer63.getTokenArray();
        boolean boolean66 = strTokenizer63.hasNext();
        int int67 = strTokenizer63.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer63.getQuoteMatcher();
        java.util.List<java.lang.String> strList69 = strTokenizer63.getTokenList();
        boolean boolean70 = strList54.retainAll((java.util.Collection<java.lang.String>) strList69);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder42.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList54, "");
        java.lang.Object obj73 = properties0.getOrDefault((java.lang.Object) (short) 0, (java.lang.Object) strList54);
        java.util.stream.Stream<java.lang.String> strStream74 = strList54.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder84.appendln('#');
        boolean boolean87 = strList54.contains((java.lang.Object) strBuilder86);
        int int88 = strList54.size();
        java.util.Spliterator<java.lang.String> strSpliterator89 = strList54.spliterator();
        boolean boolean90 = strList54.isEmpty();
        boolean boolean91 = strList54.isEmpty();
        strList54.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertNotNull(strStream74);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(strSpliterator89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test09747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09747");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray19 = strTokenizer18.getTokenArray();
        java.lang.String[] strArray20 = strTokenizer18.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendWithSeparators((java.lang.Object[]) strArray20, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteAll(strMatcher23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder12.appendFixedWidthPadRight((java.lang.Object) strBuilder27, 0, '#');
        java.lang.String str31 = strBuilder27.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.appendFixedWidthPadRight((int) '#', (-1), 'g');
        java.io.Reader reader36 = strBuilder27.asReader();
        java.io.Writer writer37 = strBuilder27.asWriter();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(reader36);
        org.junit.Assert.assertNotNull(writer37);
    }

    @Test
    public void test09748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09748");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer5.reset("l");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = strTokenizer5.setQuoteChar('e');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertNotNull(strTokenizer9);
    }

    @Test
    public void test09749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09749");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Enumeration<?> wildcardEnumeration16 = properties0.propertyNames();
        int int17 = properties0.size();
        java.util.Properties properties18 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray27 = strTokenizer26.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder21.appendAll((java.lang.Object[]) strArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        char[] charArray36 = strBuilder32.toCharArray();
        char[] charArray37 = strBuilder29.getChars(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        char[] charArray39 = strBuilder21.getChars(charArray36);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer20.reset(charArray36);
        java.lang.String str41 = strTokenizer20.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("true\n###################################3\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = strTokenizer20.setDelimiterMatcher(strMatcher43);
        int int45 = strTokenizer44.nextIndex();
        java.lang.Object obj46 = properties18.get((java.lang.Object) strTokenizer44);
        java.io.OutputStream outputStream47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.save(outputStream47, "\n36.0\n\n32.0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(wildcardEnumeration16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]");
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[]");
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(obj46);
    }

    @Test
    public void test09750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09750");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        int int21 = strBuilder5.indexOf('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder5.minimizeCapacity();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test09751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09751");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray2 = strBuilder1.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.appendSeparator("32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append(10);
        char[] charArray8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.insert(0, charArray8);
        java.io.Writer writer10 = strBuilder6.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder17.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder11.appendFixedWidthPadRight((java.lang.Object) strBuilder20, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.replaceFirst("StrTokenizer[not tokenized yet]", "{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("\ntrue0.0\n");
        java.io.Writer writer31 = writer10.append((java.lang.CharSequence) strBuilder28);
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(writer10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(writer31);
    }

    @Test
    public void test09752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09752");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        char[] charArray78 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        int int81 = strTokenizer80.size();
        int int82 = strTokenizer80.previousIndex();
        boolean boolean83 = strList9.equals((java.lang.Object) strTokenizer80);
        java.lang.String str84 = strTokenizer80.next();
        java.lang.String str85 = strTokenizer80.previousToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer80.getIgnoredMatcher();
        char[] charArray89 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray89);
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray89);
        int int93 = strMatcher86.isMatch(charArray89, (int) ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer95 = new org.apache.commons.lang3.text.StrTokenizer(charArray89, "{}");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer98 = new org.apache.commons.lang3.text.StrTokenizer(charArray89, '7', 'e');
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4#4" + "'", str84, "4#4");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "4#4" + "'", str85, "4#4");
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(charArray89);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray89), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray89), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray89), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test09753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09753");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("4#4");
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer1.set("aaa\nfalse0\n32.0\ntrue\n\n0true\n###################################\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test09754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09754");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.appendln((double) '$');
        char[] charArray19 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        int int22 = strTokenizer21.size();
        boolean boolean23 = strTokenizer21.hasNext();
        java.util.List<java.lang.String> strList24 = strTokenizer21.getTokenList();
        java.lang.String[] strArray28 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        boolean boolean31 = strList24.addAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.String str33 = strList29.remove(0);
        char[] charArray38 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        int int41 = strTokenizer40.size();
        boolean boolean42 = strTokenizer40.hasNext();
        java.util.List<java.lang.String> strList43 = strTokenizer40.getTokenList();
        java.lang.String[] strArray47 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        boolean boolean50 = strList43.addAll((java.util.Collection<java.lang.String>) strList48);
        boolean boolean51 = strList29.addAll((java.util.Collection<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder6.appendAll((java.lang.Iterable<java.lang.String>) strList29);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("");
        int int57 = strBuilder53.indexOf("");
        int int60 = strBuilder53.lastIndexOf('#', (int) (byte) 0);
        boolean boolean62 = strBuilder53.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder53.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray67 = strTokenizer66.getTokenArray();
        java.lang.String[] strArray68 = strTokenizer66.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder53.appendWithSeparators((java.lang.Object[]) strArray68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder52.appendln((java.lang.Object) "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder52.replaceFirst("100.0", "java.io.IOException: \n");
        int int75 = strBuilder52.length();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder52.reverse();
        java.lang.String str77 = strBuilder52.getNullText();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\n32.0" + "'", str33, "\n32.0");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 12 + "'", int75 == 12);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test09755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09755");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("\n");
        java.io.Reader reader15 = strBuilder14.asReader();
        java.io.Writer writer16 = strBuilder14.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.deleteAll('#');
        java.io.Writer writer19 = strBuilder14.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.appendSeparator("\n36.0\n\n32.0");
        java.util.stream.IntStream intStream22 = strBuilder14.codePoints();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder14.replace(204, 40, "true52\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(writer16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(writer19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(intStream22);
    }

    @Test
    public void test09756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09756");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("100.0\n 116.0\n");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.insert(39, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 39");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09757");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Enumeration<?> wildcardEnumeration16 = properties0.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection18 = properties0.values();
        boolean boolean19 = properties0.isEmpty();
        java.io.OutputStream outputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream20, "java.io.IOException: java.io.IOException:", "StrTokenizer[ 4#4]");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(wildcardEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test09758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09758");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties0.entrySet();
        boolean boolean5 = properties0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray12 = strTokenizer11.getTokenArray();
        java.lang.String[] strArray13 = strTokenizer11.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.appendWithSeparators((java.lang.Object[]) strArray13, "4#4");
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader25 = strBuilder21.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray31 = strTokenizer30.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendAll((java.lang.Object[]) strArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream36 = strBuilder26.codePoints();
        java.lang.Object obj37 = properties16.replace((java.lang.Object) reader25, (java.lang.Object) intStream36);
        long long39 = reader25.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray45 = strTokenizer44.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder40.appendAll((java.lang.Object[]) strArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder40.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream50 = strBuilder40.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "");
        char[] charArray55 = strBuilder51.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder40.appendln(charArray55);
        int int59 = reader25.read(charArray55);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder9.append(charArray55);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder66.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrMatcher strMatcher73 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_SUFFIX;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.deleteAll(strMatcher73);
        java.lang.Object obj75 = properties0.put((java.lang.Object) charArray55, (java.lang.Object) strBuilder69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, '$', '$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer81 = new org.apache.commons.lang3.text.StrTokenizer(charArray55, '1', 'a');
        java.lang.String str82 = strTokenizer81.toString();
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = strTokenizer81.getQuoteMatcher();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(reader25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(intStream36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(intStream50);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMatcher73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str82, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher83);
    }

    @Test
    public void test09759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09759");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        java.io.Writer writer7 = strBuilder6.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendln(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray19);
        writer7.write(charArray19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, '4', '$');
        boolean boolean26 = strTokenizer25.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer25.setIgnoreEmptyTokens(true);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(writer7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strTokenizer28);
    }

    @Test
    public void test09760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09760");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        java.lang.String str34 = strBuilder24.rightString((int) ' ');
        boolean boolean36 = strBuilder24.startsWith("");
        char[] charArray37 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.insert((int) (short) 0, charArray37);
        java.lang.String str39 = strBuilder38.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((double) 9);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.appendSeparator("\n\n1.0\n", 78);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n32.0" + "'", str34, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test09761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09761");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendln('#');
        java.lang.StringBuffer stringBuffer8 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.append(stringBuffer8, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder5.deleteFirst("hi!");
        char[] charArray14 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = strTokenizer1.reset(charArray14);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer15.reset();
        int int17 = strTokenizer16.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer16.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer16.reset();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer19.setDelimiterString("\ntrue\n52.0");
        int int24 = strTokenizer23.size();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test09762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09762");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("\n100.0\n", '3');
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer2.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09763");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        int int5 = strBuilder4.capacity();
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder4.appendln(stringBuffer6, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher10 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int11 = strBuilder9.lastIndexOf(strMatcher10);
        boolean boolean12 = strBuilder2.equalsIgnoreCase(strBuilder9);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray18 = strTokenizer17.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendAll((java.lang.Object[]) strArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer23 = strBuilder22.toStringBuffer();
        char[] charArray28 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        int int31 = strTokenizer30.size();
        boolean boolean32 = strTokenizer30.hasNext();
        java.util.List<java.lang.String> strList33 = strTokenizer30.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "");
        char[] charArray38 = strBuilder34.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        boolean boolean42 = strList33.equals((java.lang.Object) charArray38);
        char[] charArray47 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        int int50 = strTokenizer49.size();
        boolean boolean51 = strTokenizer49.hasNext();
        java.util.List<java.lang.String> strList52 = strTokenizer49.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        int int54 = strBuilder53.capacity();
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendln(stringBuffer55, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder53.insert(1, (double) 32);
        java.lang.String str63 = strBuilder53.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder53.insert(1, '#');
        boolean boolean67 = strList52.equals((java.lang.Object) strBuilder53);
        boolean boolean68 = strList33.containsAll((java.util.Collection<java.lang.String>) strList52);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder22.appendAll((java.lang.Iterable<java.lang.String>) strList52);
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        int int72 = strList52.lastIndexOf((java.lang.Object) "hi!");
        java.util.Iterator<java.lang.String> strItor73 = strList52.iterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder2.appendAll((java.lang.Iterable<java.lang.String>) strList52);
        java.lang.Object obj75 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder74.appendFixedWidthPadLeft(obj75, 0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder78.appendSeparator('#', (int) (byte) 1);
        boolean boolean83 = strBuilder81.endsWith("[4#4]");
        java.lang.String str84 = strBuilder81.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder81.appendSeparator('3', '7');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMatcher10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(stringBuffer23);
        org.junit.Assert.assertEquals(stringBuffer23.toString(), "");
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 32 + "'", int54 == 32);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\n32.0" + "'", str63, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strItor73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4#4#" + "'", str84, "4#4#");
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test09764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09764");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceAll("#", "true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendPadding((int) 'a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceAll('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.deleteAll("-1.0ttt");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "");
        java.lang.String str35 = strBuilder31.getNewLineText();
        java.util.stream.IntStream intStream36 = strBuilder31.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder28.append((java.lang.CharSequence) strBuilder31);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder28.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder28.appendFixedWidthPadLeft((int) (byte) 1, 32, '$');
        boolean boolean45 = strBuilder28.contains('e');
        boolean boolean46 = strBuilder16.equals(strBuilder28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray50 = strTokenizer49.getTokenArray();
        java.lang.String[] strArray51 = strTokenizer49.getTokenArray();
        boolean boolean52 = strTokenizer49.hasNext();
        int int53 = strTokenizer49.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher54 = strTokenizer49.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher54);
        java.util.List<java.lang.String> strList56 = strTokenizer55.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher57 = strTokenizer55.getIgnoredMatcher();
        int int59 = strBuilder16.indexOf(strMatcher57, (int) 'a');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(intStream36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strMatcher54);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strMatcher57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    }

    @Test
    public void test09765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09765");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("true\njava.io.IOException: hi!false", '$', '9');
    }

    @Test
    public void test09766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09766");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.trim();
        java.util.Properties properties11 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray18 = strTokenizer17.getTokenArray();
        java.lang.String[] strArray19 = strTokenizer17.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendWithSeparators((java.lang.Object[]) strArray19, "4#4");
        char[] charArray24 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray24);
        java.lang.Object obj26 = properties11.getOrDefault((java.lang.Object) strBuilder15, (java.lang.Object) strTokenizer25);
        java.util.Collection<java.lang.Object> objCollection27 = properties11.values();
        boolean boolean28 = properties11.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "");
        char[] charArray40 = strBuilder36.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.appendln(charArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.appendln((double) '$');
        java.lang.Object obj44 = properties11.get((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder10.append((java.lang.Object) strBuilder35);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst("", "");
        char[] charArray60 = strBuilder56.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder55.appendln(charArray60);
        org.apache.commons.lang3.text.StrMatcher strMatcher62 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray60);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder46.replaceFirst(strMatcher62, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder64.reverse();
        boolean boolean66 = strBuilder10.equals(strBuilder64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder10.append((float) 28);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test09767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09767");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        java.lang.Object obj4 = properties0.setProperty("h", "{}");
        java.io.PrintWriter printWriter5 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNull(obj4);
    }

    @Test
    public void test09768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09768");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "");
        boolean boolean9 = strBuilder7.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln('#');
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.append(stringBuffer18, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.deleteFirst("hi!");
        char[] charArray24 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer11.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        char[] charArray27 = strBuilder7.getChars(charArray24);
        java.lang.Object obj28 = properties0.remove((java.lang.Object) charArray27);
        java.lang.String str30 = properties0.getProperty("\n32.0");
        java.util.Properties properties31 = new java.util.Properties();
        int int32 = properties31.size();
        java.util.Set<java.lang.Object> objSet33 = properties31.keySet();
        java.util.Properties properties34 = new java.util.Properties(properties31);
        boolean boolean35 = properties0.containsKey((java.lang.Object) properties34);
        java.io.OutputStream outputStream36 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.save(outputStream36, "\n32.0a#\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, \n]");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test09769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09769");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Enumeration<?> wildcardEnumeration16 = properties0.propertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        int int18 = strBuilder17.capacity();
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(stringBuffer19, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder17.setLength(32);
        java.io.Writer writer28 = strBuilder27.asWriter();
        writer28.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        int int34 = strBuilder33.capacity();
        java.lang.StringBuffer stringBuffer35 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.appendln(stringBuffer35, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder33.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.append((float) '4');
        java.io.Writer writer45 = writer28.append((java.lang.CharSequence) strBuilder42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteAll("");
        java.io.Writer writer55 = writer28.append((java.lang.CharSequence) strBuilder52);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder52.deleteFirst(" #\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        int int59 = strBuilder58.capacity();
        java.lang.StringBuffer stringBuffer60 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder58.appendln(stringBuffer60, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder58.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder58.setLength(32);
        java.io.Writer writer69 = strBuilder68.asWriter();
        writer69.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        int int75 = strBuilder74.capacity();
        java.lang.StringBuffer stringBuffer76 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder74.appendln(stringBuffer76, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder74.insert(1, (double) 32);
        java.lang.String str84 = strBuilder74.rightString((int) ' ');
        boolean boolean86 = strBuilder74.startsWith("");
        char[] charArray87 = strBuilder74.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray87);
        writer69.write(charArray87);
        java.lang.Object obj90 = properties0.put((java.lang.Object) " #\n", (java.lang.Object) writer69);
        writer69.flush();
        writer69.write(93);
        writer69.write("eeeeeeeeeeeeeeeeeeeeeeeeee");
        java.io.Writer writer97 = writer69.append('#');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(wildcardEnumeration16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 32 + "'", int18 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 32 + "'", int34 == 32);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(writer55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 32 + "'", int59 == 32);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(writer69);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 32 + "'", int75 == 32);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "\n32.0" + "'", str84, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(writer97);
    }

    @Test
    public void test09770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09770");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("97\n                                                                                                 ", 'o', 'g');
    }

    @Test
    public void test09771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09771");
        java.io.IOException iOException1 = new java.io.IOException("i!");
    }

    @Test
    public void test09772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09772");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "");
        char[] charArray13 = strBuilder9.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder8.appendln(charArray13);
        int int18 = strMatcher1.isMatch(charArray13, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer(charArray13);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        boolean boolean21 = strTokenizer20.hasPrevious();
        boolean boolean22 = strTokenizer20.hasNext();
        int int23 = strTokenizer20.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer20.reset("{\ntrue\n=1.0}");
        org.junit.Assert.assertNotNull(strMatcher1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]");
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer25);
    }

    @Test
    public void test09773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09773");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder3.appendln(stringBuffer4, (int) (byte) 1, 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder8.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendln((long) (-1));
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strBuilder8.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer12.setQuoteChar('2');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer14.setEmptyTokenAsNull(false);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strTokenizer16);
    }

    @Test
    public void test09774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09774");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((int) (byte) 0);
        java.io.Writer writer8 = strBuilder7.asWriter();
        java.io.IOException iOException9 = new java.io.IOException();
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.lang.Throwable[] throwableArray11 = iOException9.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendWithSeparators((java.lang.Object[]) throwableArray11, "1");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer8);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test09775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09775");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder3.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.deleteAll('\000');
        java.io.Writer writer48 = strBuilder47.asWriter();
        writer48.write((int) (short) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(writer48);
    }

    @Test
    public void test09776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09776");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        java.lang.Object obj30 = properties0.setProperty("hi!", "hi!");
        boolean boolean31 = properties0.isEmpty();
        properties0.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("h", '4', '$');
        boolean boolean37 = strTokenizer36.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setDelimiterMatcher(strMatcher38);
        java.lang.String[] strArray40 = strTokenizer36.getTokenArray();
        boolean boolean41 = properties0.containsValue((java.lang.Object) strTokenizer36);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties0.keys();
        properties0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration42);
    }

    @Test
    public void test09777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09777");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst('a', '4');
        java.io.Writer writer47 = strBuilder46.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "");
        char[] charArray59 = strBuilder55.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendln(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray59);
        writer47.write(charArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder39.append(charArray59);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int67 = strBuilder39.indexOf(strMatcher65, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder14.deleteAll(strMatcher65);
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.insert(0, (long) 10);
        java.io.Writer writer72 = strBuilder68.asWriter();
        writer72.close();
        properties4.store(writer72, "\n32.0a\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        int int77 = strBuilder76.capacity();
        java.lang.StringBuffer stringBuffer78 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder76.appendln(stringBuffer78, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher82 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int83 = strBuilder81.lastIndexOf(strMatcher82);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder81.insert(1, " #\n");
        char[] charArray87 = strBuilder81.toCharArray();
        java.lang.String str88 = strBuilder81.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder81.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder90.insert(1, true);
        java.lang.Object obj94 = properties4.get((java.lang.Object) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(writer47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(writer72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 32 + "'", int77 == 32);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strMatcher82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(charArray87);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), "\n #\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), "\n #\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[\n,  , #, \n]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "\n #\n" + "'", str88, "\n #\n");
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNull(obj94);
    }

    @Test
    public void test09778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09778");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties5 = new java.util.Properties();
        int int6 = properties5.size();
        boolean boolean8 = properties5.containsKey((java.lang.Object) (-1.0f));
        boolean boolean9 = properties0.replace((java.lang.Object) (byte) 1, (java.lang.Object) true, (java.lang.Object) (-1.0f));
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        java.util.Spliterator<java.lang.String> strSpliterator27 = strList24.spliterator();
        int int28 = strList24.size();
        boolean boolean30 = strList24.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream31 = strList24.stream();
        boolean boolean32 = properties0.containsKey((java.lang.Object) strList24);
        java.util.stream.Stream<java.lang.String> strStream33 = strList24.parallelStream();
        char[] charArray38 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        int int41 = strTokenizer40.size();
        boolean boolean42 = strTokenizer40.hasNext();
        java.util.List<java.lang.String> strList43 = strTokenizer40.getTokenList();
        java.lang.String[] strArray47 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        boolean boolean50 = strList43.addAll((java.util.Collection<java.lang.String>) strList48);
        java.util.Spliterator<java.lang.String> strSpliterator51 = strList48.spliterator();
        int int52 = strList48.size();
        boolean boolean54 = strList48.add("StrTokenizer[]");
        java.util.stream.Stream<java.lang.String> strStream55 = strList48.stream();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray61 = strTokenizer60.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendAll((java.lang.Object[]) strArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.append((double) (short) 100);
        java.lang.String str67 = strBuilder62.substring(0, (int) (short) 0);
        boolean boolean68 = strList48.equals((java.lang.Object) 0);
        boolean boolean69 = strList24.retainAll((java.util.Collection<java.lang.String>) strList48);
        java.util.ListIterator<java.lang.String> strItor70 = strList24.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList73 = strList24.subList(166, 47);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 47");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSpliterator27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strStream33);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strSpliterator51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 3 + "'", int52 == 3);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strStream55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strItor70);
    }

    @Test
    public void test09779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09779");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder33.lastIndexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.insert((int) (short) 1, 32);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        boolean boolean42 = properties39.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties39.entrySet();
        java.lang.Object obj44 = properties0.putIfAbsent((java.lang.Object) strBuilder38, (java.lang.Object) objEntrySet43);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        int int46 = strBuilder45.capacity();
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(stringBuffer47, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.insert(1, (double) 32);
        java.lang.String str55 = strBuilder45.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder45.replaceAll("", "hi!");
        boolean boolean59 = properties0.contains((java.lang.Object) "");
        java.util.Properties properties60 = new java.util.Properties(properties0);
        properties60.clear();
        java.util.Set<java.lang.Object> objSet62 = properties60.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        java.util.Set<java.lang.String> strSet64 = properties60.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        int int66 = strBuilder65.capacity();
        java.lang.StringBuffer stringBuffer67 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder65.appendln(stringBuffer67, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder65.appendln((int) (byte) 0);
        java.io.Writer writer73 = strBuilder72.asWriter();
        java.io.IOException iOException74 = new java.io.IOException();
        java.lang.Throwable[] throwableArray75 = iOException74.getSuppressed();
        java.lang.Throwable[] throwableArray76 = iOException74.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder72.appendWithSeparators((java.lang.Object[]) throwableArray76, "1");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder72.setNullText("97\nhi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder72.appendln("32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder72.setNewLineText("########a4\n");
        java.lang.Object obj85 = properties60.remove((java.lang.Object) strBuilder72);
        int int86 = properties60.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\n32.0" + "'", str55, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 32 + "'", int66 == 32);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(writer73);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    }

    @Test
    public void test09780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09780");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.deleteAll('4');
        int int15 = strBuilder13.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        char[] charArray20 = strBuilder16.toCharArray();
        char[] charArray21 = strBuilder13.getChars(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder5.appendln(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray21);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strTokenizer24);
    }

    @Test
    public void test09781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09781");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst('a', '4');
        java.io.Writer writer30 = strBuilder29.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "");
        char[] charArray42 = strBuilder38.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendln(charArray42);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray42);
        writer30.write(charArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder22.append(charArray42);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int50 = strBuilder22.indexOf(strMatcher48, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder22.deleteAll('e');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.append((float) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendSeparator("63\n");
        java.util.stream.IntStream intStream57 = strBuilder56.codePoints();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(writer30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[]");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(intStream57);
    }

    @Test
    public void test09782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09782");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((double) 100L);
        java.util.stream.IntStream intStream45 = strBuilder3.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder3.appendFixedWidthPadLeft(0, (int) (byte) -1, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "");
        java.io.Reader reader54 = strBuilder50.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder50.appendSeparator('4');
        int int59 = strBuilder56.indexOf("10.0", 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder3.appendln((java.lang.Object) strBuilder56);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.appendFixedWidthPadLeft(6, (int) (short) 100, 'g');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append(33);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln(105);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(intStream45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(reader54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test09783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09783");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        boolean boolean10 = strTokenizer9.hasPrevious();
        java.util.List<java.lang.String> strList11 = strTokenizer9.getTokenList();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = strTokenizer9.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.deleteAll('4');
        int int20 = strBuilder18.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "");
        char[] charArray25 = strBuilder21.toCharArray();
        char[] charArray26 = strBuilder18.getChars(charArray25);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, '#', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer9.reset(charArray26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = strTokenizer9.reset();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]");
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer32);
    }

    @Test
    public void test09784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09784");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor28 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(true);
        boolean boolean41 = strSubstitutor28.replaceIn(strBuilder38, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder0.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strBuilder42.asTokenizer();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray50 = strTokenizer49.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder44.appendAll((java.lang.Object[]) strArray50);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "");
        char[] charArray59 = strBuilder55.toCharArray();
        char[] charArray60 = strBuilder52.getChars(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59);
        char[] charArray62 = strBuilder44.getChars(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        char[] charArray72 = strBuilder42.getChars(charArray62);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[]");
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "\n32.0\ntrue\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "\n32.0\ntrue\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[\n, 3, 2, ., 0, \n, t, r, u, e, \n]");
    }

    @Test
    public void test09785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09785");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.ensureCapacity((int) (short) 10);
        boolean boolean13 = strBuilder6.equals((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.setNullText("java.io.IOException");
        java.lang.String str16 = strBuilder12.getNullText();
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.lang.String str27 = properties21.getProperty("h");
        boolean boolean28 = properties21.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder12.appendFixedWidthPadRight((java.lang.Object) properties21, (int) '4', '$');
        int int32 = properties21.size();
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("{}", throwable34);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException35);
        java.lang.Throwable[] throwableArray37 = iOException36.getSuppressed();
        java.io.IOException iOException39 = new java.io.IOException("java.io.IOException: ########");
        iOException36.addSuppressed((java.lang.Throwable) iOException39);
        boolean boolean41 = properties21.contains((java.lang.Object) iOException36);
        java.util.Properties properties42 = new java.util.Properties();
        int int43 = properties42.size();
        boolean boolean45 = properties42.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties46 = new java.util.Properties();
        int int47 = properties46.size();
        boolean boolean49 = properties46.containsKey((java.lang.Object) (-1.0f));
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.lang.String str52 = properties46.getProperty("h");
        boolean boolean53 = properties46.isEmpty();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.lang.Object obj55 = properties46.clone();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "java.io.IOException" + "'", str16, "java.io.IOException");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{}");
    }

    @Test
    public void test09786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09786");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        java.util.Iterator<java.lang.String> strItor17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.appendWithSeparators(strItor17, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst(' ', ' ');
        int int24 = strBuilder22.lastIndexOf(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.insert((int) '$', '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.insert((int) (short) 0, 53);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray37 = strTokenizer36.getTokenArray();
        java.lang.String[] strArray38 = strTokenizer36.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendWithSeparators((java.lang.Object[]) strArray38, "4#4");
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader50 = strBuilder46.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray56 = strTokenizer55.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder51.appendAll((java.lang.Object[]) strArray56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder51.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream61 = strBuilder51.codePoints();
        java.lang.Object obj62 = properties41.replace((java.lang.Object) reader50, (java.lang.Object) intStream61);
        long long64 = reader50.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder65.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer69 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray70 = strTokenizer69.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder65.appendAll((java.lang.Object[]) strArray70);
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder65.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream75 = strBuilder65.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst("", "");
        char[] charArray80 = strBuilder76.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder65.appendln(charArray80);
        int int84 = reader50.read(charArray80);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder34.append(charArray80);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = new org.apache.commons.lang3.text.StrTokenizer(charArray80, 't', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder22.appendAll((java.util.Iterator<java.lang.String>) strTokenizer88);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder89.appendSeparator("StrTokenizer[35.0, 4]", "1\n\n10\n");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(reader50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(intStream61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(intStream75);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[]");
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test09787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09787");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("\n");
        java.io.Reader reader15 = strBuilder14.asReader();
        java.io.Writer writer16 = strBuilder14.asWriter();
        java.io.Writer writer18 = writer16.append('t');
        writer16.flush();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(writer16);
        org.junit.Assert.assertNotNull(writer18);
    }

    @Test
    public void test09788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09788");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        int int17 = properties0.size();
        java.io.IOException iOException18 = new java.io.IOException();
        java.lang.Throwable[] throwableArray19 = iOException18.getSuppressed();
        boolean boolean20 = properties0.equals((java.lang.Object) iOException18);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        int int22 = strBuilder21.capacity();
        java.lang.StringBuffer stringBuffer23 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder21.appendln(stringBuffer23, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder21.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder21.setLength(32);
        java.io.Writer writer32 = strBuilder31.asWriter();
        writer32.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        char[] charArray37 = null;
        writer32.write(charArray37);
        writer32.write("\n32.0-1.0", (int) (short) 0, 0);
        properties0.store(writer32, "32.0");
        writer32.write("true\n##############################true#####4");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 32 + "'", int22 == 32);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(writer32);
    }

    @Test
    public void test09789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09789");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder2.lastIndexOf("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        int int6 = strBuilder5.capacity();
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(stringBuffer7, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder2.appendFixedWidthPadRight((java.lang.Object) strBuilder14, (int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder2.appendSeparator("", "0");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        int int27 = strBuilder23.indexOf("");
        int int30 = strBuilder23.lastIndexOf('#', (int) (byte) 0);
        boolean boolean32 = strBuilder23.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder23.appendAll((java.util.Iterator<java.lang.String>) strTokenizer33);
        boolean boolean35 = strTokenizer33.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer33.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer37.setIgnoreEmptyTokens(false);
        boolean boolean40 = strBuilder2.equals((java.lang.Object) strTokenizer37);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder2.append((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.setLength((int) (short) 0);
        int int47 = strBuilder42.lastIndexOf("java.io.IOException: \000\000\000\000\000\000\000\000\000\000\n", 116);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test09790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09790");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        char[] charArray18 = strBuilder14.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "");
        boolean boolean21 = strTokenizer20.hasNext();
        boolean boolean22 = strTokenizer20.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator("hi!", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.setNullText("0.0100\n");
        java.io.IOException iOException31 = new java.io.IOException("hi!");
        java.io.IOException iOException33 = new java.io.IOException("hi!");
        iOException31.addSuppressed((java.lang.Throwable) iOException33);
        java.io.IOException iOException35 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException33);
        java.lang.Throwable[] throwableArray36 = iOException35.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder23.appendWithSeparators((java.lang.Object[]) throwableArray36, "\n32.0java.io.IOException: hi!116\n\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder38.appendNewLine();
        int int41 = strBuilder39.lastIndexOf(" -1.0\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    }

    @Test
    public void test09791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09791");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder1.deleteAll(strMatcher9);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder1.append('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder1.replaceAll("java.io.IOException: {}", "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000true\n");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test09792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09792");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher5 = org.apache.commons.lang3.text.StrSubstitutor.DEFAULT_PREFIX;
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendln(charArray19);
        int int24 = strMatcher7.isMatch(charArray19, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, strMatcher5, strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, "32.01#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray4);
        java.lang.String str30 = strTokenizer29.toString();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertNotNull(strMatcher5);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str30, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test09793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09793");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        java.lang.String str34 = strBuilder24.rightString((int) ' ');
        boolean boolean36 = strBuilder24.startsWith("");
        char[] charArray37 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.insert((int) (short) 0, charArray37);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        java.util.Set<java.lang.Object> objSet41 = properties39.keySet();
        java.util.Properties properties42 = new java.util.Properties(properties39);
        java.lang.String str43 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strBuilder22, properties42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder22.appendNewLine();
        java.io.Writer writer45 = strBuilder22.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder22.append("\na32");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendSeparator('\n', 200);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteAll('1');
        java.lang.StringBuffer stringBuffer53 = strBuilder52.toStringBuffer();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n32.0" + "'", str34, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n32.0a" + "'", str43, "\n32.0a");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(writer45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(stringBuffer53);
        org.junit.Assert.assertEquals(stringBuffer53.toString(), "\n32.0a\n\na32\n");
    }

    @Test
    public void test09794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09794");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int14 = strBuilder0.lastIndexOf(strMatcher13);
        char[] charArray19 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        int int22 = strTokenizer21.size();
        boolean boolean23 = strTokenizer21.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer21.setIgnoredMatcher(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder0.deleteFirst(strMatcher24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder0.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendFixedWidthPadLeft(10, (-1), 'a');
        int int34 = strBuilder27.length();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test09795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09795");
        java.io.IOException iOException2 = new java.io.IOException("hi!");
        java.io.IOException iOException4 = new java.io.IOException("hi!");
        iOException2.addSuppressed((java.lang.Throwable) iOException4);
        java.io.IOException iOException7 = new java.io.IOException("hi!");
        java.io.IOException iOException9 = new java.io.IOException("hi!");
        iOException7.addSuppressed((java.lang.Throwable) iOException9);
        iOException4.addSuppressed((java.lang.Throwable) iOException9);
        java.io.IOException iOException12 = new java.io.IOException("hi!", (java.lang.Throwable) iOException9);
        java.io.IOException iOException15 = new java.io.IOException("hi!");
        java.io.IOException iOException17 = new java.io.IOException("hi!");
        iOException15.addSuppressed((java.lang.Throwable) iOException17);
        java.io.IOException iOException19 = new java.io.IOException("StrTokenizer[]", (java.lang.Throwable) iOException17);
        iOException9.addSuppressed((java.lang.Throwable) iOException17);
        java.util.Properties properties21 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        java.lang.String[] strArray29 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder25.appendWithSeparators((java.lang.Object[]) strArray29, "4#4");
        char[] charArray34 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray34);
        java.lang.Object obj36 = properties21.getOrDefault((java.lang.Object) strBuilder25, (java.lang.Object) strTokenizer35);
        int int37 = properties21.size();
        int int38 = properties21.size();
        java.io.IOException iOException39 = new java.io.IOException();
        java.lang.Throwable[] throwableArray40 = iOException39.getSuppressed();
        boolean boolean41 = properties21.equals((java.lang.Object) iOException39);
        java.io.IOException iOException42 = new java.io.IOException((java.lang.Throwable) iOException39);
        java.io.IOException iOException43 = new java.io.IOException((java.lang.Throwable) iOException39);
        iOException9.addSuppressed((java.lang.Throwable) iOException43);
        java.io.IOException iOException47 = new java.io.IOException();
        java.lang.Throwable[] throwableArray48 = iOException47.getSuppressed();
        java.lang.Throwable[] throwableArray49 = iOException47.getSuppressed();
        java.io.IOException iOException50 = new java.io.IOException("########", (java.lang.Throwable) iOException47);
        java.io.IOException iOException51 = new java.io.IOException((java.lang.Throwable) iOException47);
        java.io.IOException iOException52 = new java.io.IOException((java.lang.Throwable) iOException47);
        java.io.IOException iOException53 = new java.io.IOException("####\000\000\000\000\000\000\000\000\000\000", (java.lang.Throwable) iOException47);
        iOException43.addSuppressed((java.lang.Throwable) iOException53);
        java.lang.Throwable[] throwableArray55 = iOException43.getSuppressed();
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray55);
    }

    @Test
    public void test09796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09796");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean2 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = strTokenizer1.setQuoteChar('$');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer1.setIgnoredChar('s');
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strTokenizer8);
    }

    @Test
    public void test09797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09797");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        java.lang.String str18 = strBuilder14.getNewLineText();
        java.util.stream.IntStream intStream19 = strBuilder14.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder11.append((java.lang.CharSequence) strBuilder14);
        char[] charArray23 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray23);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer24.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        int int28 = strBuilder27.capacity();
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(stringBuffer29, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder27.insert(1, (double) 32);
        java.lang.String str37 = strBuilder27.rightString((int) ' ');
        boolean boolean39 = strBuilder27.startsWith("");
        char[] charArray40 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray40);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = strTokenizer26.setDelimiterMatcher(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder11.deleteFirst(strMatcher41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder0.appendln((java.lang.Object) strBuilder11);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll("3362.01StrTokenizer[ 4#4]\na");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(intStream19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer24);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 32 + "'", int28 == 32);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\n32.0" + "'", str37, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strTokenizer42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
    }

    @Test
    public void test09798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09798");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        java.lang.String str20 = strList14.remove((int) (byte) 0);
        boolean boolean22 = strList14.add("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendAll((java.lang.Object[]) strArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendAll((java.lang.Object[]) strArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.appendln(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        char[] charArray52 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendln(charArray52);
        boolean boolean54 = strBuilder23.equals((java.lang.Object) strBuilder47);
        boolean boolean55 = strList14.remove((java.lang.Object) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder23.replaceAll("{}", "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder23.appendNewLine();
        boolean boolean61 = strBuilder23.endsWith("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder23.setNullText("0.0true");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder23.setNullText("\n-1.0");
        boolean boolean67 = strBuilder65.startsWith("00.0\000\000\000\000\000");
        char[] charArray70 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray70, '#', 'e');
        char[] charArray76 = strBuilder65.getChars(charArray70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer77 = new org.apache.commons.lang3.text.StrTokenizer(charArray70);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charArray70);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray70), "\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray70), "\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray70), "[\n, \n]");
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(charArray76);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray76), "\n\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray76), "\n\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray76), "[\n, \n]");
    }

    @Test
    public void test09799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09799");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder8.deleteAll('4');
        int int15 = strBuilder13.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst("", "");
        char[] charArray20 = strBuilder16.toCharArray();
        char[] charArray21 = strBuilder13.getChars(charArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder5.appendln(charArray21);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, "35\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, '9', '#');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]");
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test09800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09800");
        org.apache.commons.lang3.text.StrMatcher strMatcher1 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("StrTokenizer[35.0]");
        org.junit.Assert.assertNotNull(strMatcher1);
    }

    @Test
    public void test09801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09801");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Collection<java.lang.Object> objCollection16 = properties0.values();
        boolean boolean17 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        java.util.Collection<java.lang.Object> objCollection19 = properties0.values();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objCollection19);
    }

    @Test
    public void test09802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09802");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((int) (byte) 0);
        java.io.Writer writer8 = strBuilder7.asWriter();
        java.io.IOException iOException9 = new java.io.IOException();
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.lang.Throwable[] throwableArray11 = iOException9.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendWithSeparators((java.lang.Object[]) throwableArray11, "1");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.setNullText("97\nhi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst('\000', '1');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln((long) (short) 100);
        java.lang.CharSequence charSequence21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder18.append(charSequence21);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer8);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test09803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09803");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        java.lang.String[] strArray30 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        boolean boolean33 = strList26.addAll((java.util.Collection<java.lang.String>) strList31);
        java.util.Spliterator<java.lang.String> strSpliterator34 = strList31.spliterator();
        int int35 = strList31.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int39 = strList31.lastIndexOf((java.lang.Object) strTokenizer38);
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        int int43 = strBuilder42.capacity();
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(stringBuffer44, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(true);
        boolean boolean54 = strSubstitutor41.replaceIn(strBuilder51, (int) '$', 0);
        boolean boolean55 = strList40.equals((java.lang.Object) '$');
        boolean boolean56 = strList9.retainAll((java.util.Collection<java.lang.String>) strList40);
        java.util.Iterator<java.lang.String> strItor57 = strList40.iterator();
        java.util.stream.Stream<java.lang.String> strStream58 = strList40.stream();
        java.util.stream.Stream<java.lang.String> strStream59 = strList40.parallelStream();
        java.util.stream.Stream<java.lang.String> strStream60 = strList40.parallelStream();
        java.lang.Object[] objArray61 = strList40.toArray();
        boolean boolean63 = strList40.add("truetrue\n");
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strSpliterator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strItor57);
        org.junit.Assert.assertNotNull(strStream58);
        org.junit.Assert.assertNotNull(strStream59);
        org.junit.Assert.assertNotNull(strStream60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[ 4#4]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[ 4#4]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test09804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09804");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder2.lastIndexOf("4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        int int6 = strBuilder5.capacity();
        java.lang.StringBuffer stringBuffer7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendln(stringBuffer7, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.append((float) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder2.appendFixedWidthPadRight((java.lang.Object) strBuilder14, (int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.append((float) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder26.appendln(58);
        org.apache.commons.lang3.text.StrMatcher strMatcher32 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("00.0\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.deleteFirst(strMatcher32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder19.appendFixedWidthPadLeft((java.lang.Object) strBuilder30, 59, 'a');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test09805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09805");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("\n32.0", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        char[] charArray8 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln('#');
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append(stringBuffer20, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.deleteFirst("hi!");
        char[] charArray26 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer13.reset(charArray26);
        boolean boolean28 = properties0.replace((java.lang.Object) iOException4, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer13);
        java.util.Properties properties29 = new java.util.Properties(properties0);
        java.lang.String str30 = properties0.toString();
        java.util.Properties properties31 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder32.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray37 = strTokenizer36.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder32.appendAll((java.lang.Object[]) strArray37);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder32.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray47 = strTokenizer46.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendAll((java.lang.Object[]) strArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder32.appendln(strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = org.apache.commons.lang3.text.StrMatcher.spaceMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.deleteAll(strMatcher55);
        java.io.Reader reader57 = strBuilder56.asReader();
        reader57.mark(0);
        boolean boolean60 = reader57.ready();
        long long62 = reader57.skip((long) 194);
        properties31.load(reader57);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{}" + "'", str30, "{}");
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(reader57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 6L + "'", long62 == 6L);
    }

    @Test
    public void test09806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09806");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties0.entrySet();
        boolean boolean5 = properties0.isEmpty();
        java.util.Properties properties6 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(objCollection7);
    }

    @Test
    public void test09807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09807");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        boolean boolean10 = strTokenizer9.hasPrevious();
        java.util.List<java.lang.String> strList11 = strTokenizer9.getTokenList();
        boolean boolean13 = strList11.add("StrTokenizer[not tokenized yet]");
        java.util.ListIterator<java.lang.String> strItor14 = strList11.listIterator();
        org.apache.commons.lang3.text.StrLookup<java.lang.String> strStrLookup15 = org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup();
        int int16 = strList11.lastIndexOf((java.lang.Object) strStrLookup15);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        java.lang.Object obj44 = properties17.setProperty(" 4#4", "\n32.0");
        properties17.clear();
        char[] charArray50 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = new org.apache.commons.lang3.text.StrTokenizer(charArray50, ' ');
        int int53 = strTokenizer52.size();
        boolean boolean54 = strTokenizer52.hasNext();
        java.util.List<java.lang.String> strList55 = strTokenizer52.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst("", "");
        char[] charArray60 = strBuilder56.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer62 = new org.apache.commons.lang3.text.StrTokenizer(charArray60, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray60);
        boolean boolean64 = strList55.equals((java.lang.Object) charArray60);
        java.util.Spliterator<java.lang.String> strSpliterator65 = strList55.spliterator();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = strTokenizer67.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = strTokenizer67.reset("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer70.reset("4#4");
        int int73 = strList55.indexOf((java.lang.Object) "4#4");
        java.util.ListIterator<java.lang.String> strItor74 = strList55.listIterator();
        java.lang.Object obj75 = properties17.remove((java.lang.Object) strList55);
        boolean boolean76 = strList11.removeAll((java.util.Collection<java.lang.String>) strList55);
        java.util.stream.Stream<java.lang.String> strStream77 = strList11.parallelStream();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strItor14);
        org.junit.Assert.assertNotNull(strStrLookup15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(charArray50);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strSpliterator65);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strTokenizer70);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(strItor74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strStream77);
    }

    @Test
    public void test09808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09808");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) '4');
        java.io.Writer writer28 = writer11.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder31.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.appendSeparator("hi!", "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteAll("");
        java.io.Writer writer38 = writer11.append((java.lang.CharSequence) strBuilder35);
        boolean boolean40 = strBuilder35.contains('4');
        java.lang.String str41 = strBuilder35.getNewLineText();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray45 = strTokenizer44.getTokenArray();
        java.lang.String[] strArray46 = strTokenizer44.getTokenArray();
        boolean boolean47 = strTokenizer44.hasNext();
        int int48 = strTokenizer44.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher49 = strTokenizer44.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("h", strMatcher49);
        int int52 = strBuilder35.indexOf(strMatcher49, 74);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder35.appendln("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(writer38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strMatcher49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
    }

    @Test
    public void test09809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09809");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        java.io.Reader reader8 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.appendSeparator("{}");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("{StrTokenizer[not tokenized yet]=}");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "");
        java.lang.String str23 = strBuilder19.getNewLineText();
        java.util.stream.IntStream intStream24 = strBuilder19.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.append((java.lang.CharSequence) strBuilder19);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder16.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder30.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "");
        java.lang.String str38 = strBuilder34.getNewLineText();
        java.util.stream.IntStream intStream39 = strBuilder34.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder31.append((java.lang.CharSequence) strBuilder34);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder31.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder27.append(strBuilder31, 2, (int) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder52.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder54.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder48.appendFixedWidthPadRight((java.lang.Object) strBuilder57, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder60.append("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder65.appendFixedWidthPadRight((java.lang.Object) strBuilder74, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int79 = strBuilder65.lastIndexOf(strMatcher78);
        char[] charArray84 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray84, ' ');
        int int87 = strTokenizer86.size();
        boolean boolean88 = strTokenizer86.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer86.setIgnoredMatcher(strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder65.deleteFirst(strMatcher89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder62.deleteFirst(strMatcher89);
        boolean boolean93 = strBuilder47.contains(strMatcher89);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer12.setQuoteMatcher(strMatcher89);
        boolean boolean95 = strBuilder0.equals((java.lang.Object) strTokenizer94);
        java.util.List<java.lang.String> strList96 = strTokenizer94.getTokenList();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(intStream39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(strList96);
    }

    @Test
    public void test09810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09810");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('4', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder47.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.append("l n");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder48.appendSeparator("hi!", 44);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder48.appendln('o');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test09811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09811");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("\n32.0java.io.IOException: hi!116\n\n\n");
    }

    @Test
    public void test09812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09812");
        char[] charArray5 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray5, ' ');
        int int8 = strTokenizer7.size();
        boolean boolean9 = strTokenizer7.hasNext();
        java.util.List<java.lang.String> strList10 = strTokenizer7.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        boolean boolean19 = strList10.equals((java.lang.Object) charArray15);
        boolean boolean21 = strList10.add("\n");
        boolean boolean23 = strList10.add("\n2.0");
        java.util.ListIterator<java.lang.String> strItor24 = strList10.listIterator();
        char[] charArray29 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, ' ');
        int int32 = strTokenizer31.size();
        boolean boolean33 = strTokenizer31.hasNext();
        java.util.List<java.lang.String> strList34 = strTokenizer31.getTokenList();
        java.lang.String[] strArray38 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        boolean boolean41 = strList34.addAll((java.util.Collection<java.lang.String>) strList39);
        java.lang.String str43 = strList39.remove(0);
        java.util.stream.Stream<java.lang.String> strStream44 = strList39.stream();
        java.util.Iterator<java.lang.String> strItor45 = strList39.iterator();
        java.lang.Object obj46 = null;
        boolean boolean47 = strList39.contains(obj46);
        int int48 = strList39.size();
        boolean boolean49 = strList10.retainAll((java.util.Collection<java.lang.String>) strList39);
        char[] charArray54 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        int int57 = strTokenizer56.size();
        boolean boolean58 = strTokenizer56.hasNext();
        java.util.List<java.lang.String> strList59 = strTokenizer56.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst("", "");
        char[] charArray64 = strBuilder60.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = new org.apache.commons.lang3.text.StrTokenizer(charArray64);
        boolean boolean68 = strList59.equals((java.lang.Object) charArray64);
        java.util.Spliterator<java.lang.String> strSpliterator69 = strList59.spliterator();
        strList59.add((int) (short) 1, "a4");
        boolean boolean73 = strList39.addAll((java.util.Collection<java.lang.String>) strList59);
        java.io.IOException iOException76 = new java.io.IOException("StrTokenizer[]");
        java.io.IOException iOException77 = new java.io.IOException((java.lang.Throwable) iOException76);
        java.io.IOException iOException78 = new java.io.IOException("false", (java.lang.Throwable) iOException77);
        java.io.IOException iOException79 = new java.io.IOException((java.lang.Throwable) iOException78);
        boolean boolean80 = strList59.equals((java.lang.Object) iOException78);
        java.io.IOException iOException81 = new java.io.IOException("10.0", (java.lang.Throwable) iOException78);
        org.junit.Assert.assertNotNull(charArray5);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n32.0" + "'", str43, "\n32.0");
        org.junit.Assert.assertNotNull(strStream44);
        org.junit.Assert.assertNotNull(strItor45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strSpliterator69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test09813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09813");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "");
        boolean boolean9 = strBuilder7.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln('#');
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.append(stringBuffer18, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.deleteFirst("hi!");
        char[] charArray24 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer11.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        char[] charArray27 = strBuilder7.getChars(charArray24);
        java.lang.Object obj28 = properties0.remove((java.lang.Object) charArray27);
        java.lang.String str30 = properties0.getProperty("\n32.0");
        java.util.Properties properties31 = new java.util.Properties();
        int int32 = properties31.size();
        java.util.Set<java.lang.Object> objSet33 = properties31.keySet();
        java.util.Properties properties34 = new java.util.Properties(properties31);
        boolean boolean35 = properties0.containsKey((java.lang.Object) properties34);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder("");
        java.lang.Object obj38 = properties34.get((java.lang.Object) "");
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.keys();
        java.io.InputStream inputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties39.loadFromXML(inputStream41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, \n]");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration40);
    }

    @Test
    public void test09814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09814");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        strList14.clear();
        java.util.ListIterator<java.lang.String> strItor24 = strList14.listIterator();
        java.lang.Object obj25 = null;
        boolean boolean26 = strList14.contains(obj25);
        java.util.ListIterator<java.lang.String> strItor27 = strList14.listIterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = strTokenizer33.reset("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer38.setEmptyTokenAsNull(true);
        java.util.List<java.lang.String> strList41 = strTokenizer38.getTokenList();
        java.util.stream.Stream<java.lang.String> strStream42 = strList41.parallelStream();
        boolean boolean43 = strList14.removeAll((java.util.Collection<java.lang.String>) strList41);
        strList14.clear();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strItor24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strItor27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strTokenizer38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test09815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09815");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("\n#####");
    }

    @Test
    public void test09816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09816");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        boolean boolean3 = strTokenizer2.hasNext();
        boolean boolean4 = strTokenizer2.hasNext();
        boolean boolean5 = strTokenizer2.isIgnoreEmptyTokens();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader15 = strBuilder11.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendAll((java.lang.Object[]) strArray21);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder16.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream26 = strBuilder16.codePoints();
        java.lang.Object obj27 = properties6.replace((java.lang.Object) reader15, (java.lang.Object) intStream26);
        long long29 = reader15.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst('a', '4');
        java.io.Writer writer37 = strBuilder36.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        char[] charArray49 = strBuilder45.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.appendln(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray49);
        writer37.write(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, '4', '$');
        int int56 = reader15.read(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder57.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder60.replaceFirst("", "");
        char[] charArray64 = strBuilder60.toCharArray();
        char[] charArray65 = strBuilder57.getChars(charArray64);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer(charArray64);
        boolean boolean67 = strTokenizer66.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceFirst("", "");
        char[] charArray81 = strBuilder77.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder76.appendln(charArray81);
        int int86 = strMatcher69.isMatch(charArray81, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = new org.apache.commons.lang3.text.StrTokenizer(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer66.reset(charArray81);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray81);
        org.apache.commons.lang3.text.StrMatcher strMatcher90 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray81);
        int int91 = reader15.read(charArray81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer2.reset(charArray81);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(writer37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(charArray64);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray64), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray64), "[]");
        org.junit.Assert.assertNotNull(charArray65);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray65), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray65), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertNotNull(strMatcher90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(strTokenizer92);
    }

    @Test
    public void test09817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09817");
        java.io.IOException iOException1 = new java.io.IOException("StrTokenizer[]");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
        java.io.IOException iOException3 = new java.io.IOException((java.lang.Throwable) iOException2);
        java.io.IOException iOException4 = new java.io.IOException((java.lang.Throwable) iOException3);
    }

    @Test
    public void test09818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09818");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.clear();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln('e');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder10.append("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000", 286, 166);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test09819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09819");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("\n");
        java.io.Reader reader15 = strBuilder14.asReader();
        java.io.Writer writer16 = strBuilder14.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder14.deleteAll('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendln(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.append((float) '$');
        char char31 = strBuilder29.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.appendln(106);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder20.appendFixedWidthPadLeft((java.lang.Object) strBuilder36, 117, 't');
        java.util.stream.IntStream intStream40 = strBuilder39.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.deleteAll("\ntrtrueue\n###################################");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(writer16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + char31 + "' != '" + '#' + "'", char31 == '#');
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test09820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09820");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.replaceFirst('a', ' ');
        int int15 = strBuilder6.indexOf("java.io.IOException: \000\000\000\000\000\000\000\000\000\000\n", (int) 'a');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test09821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09821");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("100.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = strTokenizer1.setEmptyTokenAsNull(true);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer3.set("97\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer3);
    }

    @Test
    public void test09822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09822");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        java.lang.String[] strArray30 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        boolean boolean33 = strList26.addAll((java.util.Collection<java.lang.String>) strList31);
        java.util.Spliterator<java.lang.String> strSpliterator34 = strList31.spliterator();
        int int35 = strList31.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int39 = strList31.lastIndexOf((java.lang.Object) strTokenizer38);
        java.util.List<java.lang.String> strList40 = strTokenizer38.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor41 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        int int43 = strBuilder42.capacity();
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(stringBuffer44, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder42.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.appendln(true);
        boolean boolean54 = strSubstitutor41.replaceIn(strBuilder51, (int) '$', 0);
        boolean boolean55 = strList40.equals((java.lang.Object) '$');
        boolean boolean56 = strList9.retainAll((java.util.Collection<java.lang.String>) strList40);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = new org.apache.commons.lang3.text.StrBuilder();
        int int58 = strBuilder57.capacity();
        java.lang.StringBuffer stringBuffer59 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder57.appendln(stringBuffer59, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder57.insert(1, (double) 32);
        boolean boolean66 = strBuilder57.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder57.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder57.clear();
        int int69 = strBuilder68.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder73.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader77 = strBuilder73.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder68.appendln(strBuilder73);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder68.replaceFirst("\n32.0", "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder68.appendSeparator("#\n4#44#443.0", "#");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("\n\n");
        java.lang.String str87 = strTokenizer86.nextToken();
        java.util.List<java.lang.String> strList88 = strTokenizer86.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder89 = strBuilder68.appendAll((java.lang.Iterable<java.lang.String>) strList88);
        boolean boolean90 = strList9.addAll((java.util.Collection<java.lang.String>) strList88);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strSpliterator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 32 + "'", int58 == 32);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 32 + "'", int69 == 32);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(reader77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test09823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09823");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        char[] charArray16 = strBuilder8.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        char[] charArray18 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ', '4');
        java.util.List<java.lang.String> strList22 = strTokenizer21.getTokenList();
        boolean boolean24 = strList22.add("");
        strList22.clear();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader35 = strBuilder31.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray41 = strTokenizer40.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendAll((java.lang.Object[]) strArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder36.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream46 = strBuilder36.codePoints();
        java.lang.Object obj47 = properties26.replace((java.lang.Object) reader35, (java.lang.Object) intStream46);
        reader35.reset();
        long long50 = reader35.skip((long) (short) 0);
        reader35.mark(8);
        int int53 = reader35.read();
        reader35.close();
        reader35.mark(28);
        boolean boolean57 = strList22.contains((java.lang.Object) 28);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(intStream46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 35 + "'", int53 == 35);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test09824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09824");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.appendln(charArray7, (int) (short) 1, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(0, (int) (short) 1);
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst(strMatcher14, "100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.setNewLineText(" -1.0\n");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test09825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09825");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.setNewLineText("\n");
        java.io.Reader reader15 = strBuilder14.asReader();
        java.io.Writer writer16 = strBuilder14.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.deleteFirst("");
        int int39 = strBuilder35.indexOf("");
        int int42 = strBuilder35.lastIndexOf('#', (int) (byte) 0);
        boolean boolean44 = strBuilder35.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder35.appendAll((java.util.Iterator<java.lang.String>) strTokenizer45);
        boolean boolean47 = strTokenizer45.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer45.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer49.setIgnoreEmptyTokens(false);
        boolean boolean52 = strBuilder17.equals((java.lang.Object) strTokenizer49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher55 = strTokenizer54.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer54.reset("");
        org.apache.commons.lang3.text.StrMatcher strMatcher58 = strTokenizer54.getIgnoredMatcher();
        java.lang.String[] strArray59 = strTokenizer54.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder17.appendAll((java.lang.Object[]) strArray59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder14.appendAll((java.lang.Object[]) strArray59);
        org.apache.commons.lang3.text.StrMatcher strMatcher63 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.deleteFirst(strMatcher63);
        org.apache.commons.lang3.text.StrMatcher strMatcher66 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("0\n");
        int int67 = strBuilder61.indexOf(strMatcher66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder61.ensureCapacity((int) '7');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(reader15);
        org.junit.Assert.assertNotNull(writer16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMatcher55);
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertNotNull(strMatcher58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMatcher63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMatcher66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test09826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09826");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        java.lang.String str34 = strBuilder24.rightString((int) ' ');
        boolean boolean36 = strBuilder24.startsWith("");
        char[] charArray37 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.insert((int) (short) 0, charArray37);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        java.util.Set<java.lang.Object> objSet41 = properties39.keySet();
        java.util.Properties properties42 = new java.util.Properties(properties39);
        java.lang.String str43 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strBuilder22, properties42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray50 = strTokenizer49.getTokenArray();
        java.lang.String[] strArray51 = strTokenizer49.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendWithSeparators((java.lang.Object[]) strArray51, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder47.delete(0, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder47.appendSeparator("1", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder47.append((double) (short) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder22.appendln(strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder22.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.appendln((double) '#');
        boolean boolean79 = strBuilder69.equals(strBuilder78);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.appendSeparator('4', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.append(36);
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder82.replaceAll('\000', '9');
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder63.append((java.lang.CharSequence) strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n32.0" + "'", str34, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\n32.0a" + "'", str43, "\n32.0a");
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test09827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09827");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        long long23 = reader9.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray29 = strTokenizer28.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendAll((java.lang.Object[]) strArray29);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder24.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream34 = strBuilder24.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        char[] charArray39 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray39, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder24.appendln(charArray39);
        int int43 = reader9.read(charArray39);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray39);
        java.lang.String str45 = strTokenizer44.getContent();
        java.lang.String str46 = strTokenizer44.nextToken();
        org.apache.commons.lang3.text.StrMatcher strMatcher47 = strTokenizer44.getIgnoredMatcher();
        int int48 = strTokenizer44.nextIndex();
        boolean boolean49 = strTokenizer44.hasPrevious();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(intStream34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strTokenizer44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strMatcher47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test09828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09828");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "");
        boolean boolean9 = strBuilder7.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln('#');
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.append(stringBuffer18, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.deleteFirst("hi!");
        char[] charArray24 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer11.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        char[] charArray27 = strBuilder7.getChars(charArray24);
        java.lang.Object obj28 = properties0.remove((java.lang.Object) charArray27);
        java.lang.String str30 = properties0.getProperty("\n32.0");
        java.lang.String str31 = properties0.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        int int33 = strBuilder32.capacity();
        java.lang.StringBuffer stringBuffer34 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.appendln(stringBuffer34, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder32.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder32.setLength(32);
        java.io.Writer writer43 = strBuilder42.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        int int45 = strBuilder44.capacity();
        java.lang.StringBuffer stringBuffer46 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder44.appendln(stringBuffer46, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder44.insert(1, (double) 32);
        java.lang.String str54 = strBuilder44.rightString((int) ' ');
        boolean boolean56 = strBuilder44.startsWith("");
        char[] charArray57 = strBuilder44.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray64 = strTokenizer63.getTokenArray();
        java.lang.String[] strArray65 = strTokenizer63.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.appendWithSeparators((java.lang.Object[]) strArray65, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher68 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.deleteAll(strMatcher68);
        int int70 = strBuilder44.lastIndexOf(strMatcher68);
        boolean boolean72 = strBuilder44.startsWith("StrTokenizer[not tokenized yet]");
        java.io.Writer writer73 = writer43.append((java.lang.CharSequence) "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder74.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder77.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceFirst("", "");
        char[] charArray85 = strBuilder81.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder80.appendln(charArray85);
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder86.setNewLineText("\n");
        java.lang.Object obj89 = properties0.replace((java.lang.Object) writer43, (java.lang.Object) strBuilder88);
        java.io.InputStream inputStream90 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, \n]");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 32 + "'", int33 == 32);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(writer43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 32 + "'", int45 == 32);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\n32.0" + "'", str54, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(writer73);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(charArray85);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray85), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray85), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray85), "[]");
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNull(obj89);
    }

    @Test
    public void test09829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09829");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        char[] charArray78 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        int int81 = strTokenizer80.size();
        int int82 = strTokenizer80.previousIndex();
        boolean boolean83 = strList9.equals((java.lang.Object) strTokenizer80);
        java.lang.String str84 = strTokenizer80.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer80.setDelimiterString("{}");
        boolean boolean87 = strTokenizer86.hasNext();
        java.lang.String str88 = strTokenizer86.previousToken();
        boolean boolean89 = strTokenizer86.hasPrevious();
        boolean boolean90 = strTokenizer86.isIgnoreEmptyTokens();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4#4" + "'", str84, "4#4");
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "4#4" + "'", str88, "4#4");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test09830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09830");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer6, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendFixedWidthPadRight(32, (int) 't', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("\n1.0\n52");
        int int20 = strBuilder15.lastIndexOf("-1", 104);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test09831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09831");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "");
        boolean boolean9 = strBuilder7.endsWith("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln('#');
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.append(stringBuffer18, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.deleteFirst("hi!");
        char[] charArray24 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer11.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        char[] charArray27 = strBuilder7.getChars(charArray24);
        java.lang.Object obj28 = properties0.remove((java.lang.Object) charArray27);
        java.lang.String str30 = properties0.getProperty("\n32.0");
        java.io.OutputStream outputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream31, "eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, \n]");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test09832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09832");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        int int13 = strBuilder10.indexOf(' ', 2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray16 = strTokenizer15.getTokenArray();
        java.lang.String[] strArray17 = strTokenizer15.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer15.setIgnoredChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer15, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.reverse();
        char[] charArray25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder10.appendln(charArray25, 78, (int) (short) 1);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test09833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09833");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln('#');
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.append(stringBuffer16, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder13.replaceFirst('a', '4');
        boolean boolean25 = strBuilder9.equals(strBuilder13);
        int int28 = strBuilder13.lastIndexOf("StrTokenizer[]", (int) '4');
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder13.appendln(stringBuffer29, (int) (byte) 1, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder13.deleteFirst("\naaaa100");
        java.io.Reader reader35 = strBuilder13.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder13.deleteAll("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.insert((int) (byte) -1, "\n032.0");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(reader35);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test09834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09834");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("[\n32.0, , , StrTokenizer[]]");
        boolean boolean2 = strTokenizer1.hasPrevious();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test09835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09835");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        java.io.Reader reader5 = strBuilder4.asReader();
        java.nio.CharBuffer charBuffer6 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int7 = reader5.read(charBuffer6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(reader5);
    }

    @Test
    public void test09836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09836");
        java.util.Properties properties1 = new java.util.Properties();
        int int2 = properties1.size();
        java.lang.Throwable throwable4 = null;
        java.io.IOException iOException5 = new java.io.IOException("\n32.0", throwable4);
        java.io.IOException iOException6 = new java.io.IOException((java.lang.Throwable) iOException5);
        char[] charArray9 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray9);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = strTokenizer10.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder18.appendln('#');
        java.lang.StringBuffer stringBuffer21 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.append(stringBuffer21, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.deleteFirst("hi!");
        char[] charArray27 = strBuilder18.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = strTokenizer14.reset(charArray27);
        boolean boolean29 = properties1.replace((java.lang.Object) iOException5, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer14);
        java.io.IOException iOException31 = new java.io.IOException("{");
        iOException5.addSuppressed((java.lang.Throwable) iOException31);
        java.io.IOException iOException33 = new java.io.IOException((java.lang.Throwable) iOException31);
        java.io.IOException iOException34 = new java.io.IOException("####\000\000\000\000\000\000\000\000\000\000", (java.lang.Throwable) iOException33);
        java.lang.String str35 = iOException33.toString();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strTokenizer12);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "java.io.IOException: java.io.IOException: {" + "'", str35, "java.io.IOException: java.io.IOException: {");
    }

    @Test
    public void test09837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09837");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        int int11 = strBuilder10.capacity();
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(stringBuffer12, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.insert(1, (double) 32);
        java.lang.String str20 = strBuilder10.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.insert(1, '#');
        boolean boolean24 = strList9.equals((java.lang.Object) strBuilder10);
        java.lang.Throwable throwable26 = null;
        java.io.IOException iOException27 = new java.io.IOException("{}", throwable26);
        java.lang.Throwable[] throwableArray28 = iOException27.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder10.appendWithSeparators((java.lang.Object[]) throwableArray28, "10.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder10.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.appendln("a4");
        int int34 = strBuilder31.capacity();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 32 + "'", int34 == 32);
    }

    @Test
    public void test09838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09838");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder1.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder4.replaceFirst("", "");
        char[] charArray8 = strBuilder4.toCharArray();
        char[] charArray9 = strBuilder1.getChars(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = new org.apache.commons.lang3.text.StrTokenizer(charArray8);
        boolean boolean11 = strTokenizer10.hasPrevious();
        java.util.List<java.lang.String> strList12 = strTokenizer10.getTokenList();
        boolean boolean13 = strTokenizer10.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = strTokenizer10.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        int int16 = strBuilder15.capacity();
        java.lang.StringBuffer stringBuffer17 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.appendln(stringBuffer17, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.insert(1, (double) 32);
        boolean boolean24 = strBuilder15.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder15.appendSeparator('a', ' ');
        boolean boolean28 = strBuilder27.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.append(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.append(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer34.reset("");
        java.lang.String str38 = strTokenizer37.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = strTokenizer37.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer37.getDelimiterMatcher();
        int int43 = strBuilder30.indexOf(strMatcher41, 4);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer44 = new org.apache.commons.lang3.text.StrTokenizer("#\n$", strMatcher14, strMatcher41);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer44.setEmptyTokenAsNull(false);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertNotNull(charArray9);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer46);
    }

    @Test
    public void test09839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09839");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        int int5 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.append((int) (short) 0);
        boolean boolean9 = strBuilder7.contains('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.deleteAll("java.io.IOException: hi!");
        char[] charArray16 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        int int19 = strTokenizer18.size();
        boolean boolean20 = strTokenizer18.hasNext();
        java.util.List<java.lang.String> strList21 = strTokenizer18.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        int int23 = strBuilder22.capacity();
        java.lang.StringBuffer stringBuffer24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(stringBuffer24, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.insert(1, (double) 32);
        java.lang.String str32 = strBuilder22.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder22.insert(1, '#');
        boolean boolean36 = strList21.equals((java.lang.Object) strBuilder22);
        java.lang.Throwable throwable38 = null;
        java.io.IOException iOException39 = new java.io.IOException("{}", throwable38);
        java.lang.Throwable[] throwableArray40 = iOException39.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder22.appendWithSeparators((java.lang.Object[]) throwableArray40, "10.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder7.appendAll((java.lang.Object[]) throwableArray40);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder48.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder49.setNullText("");
        int int53 = strBuilder49.indexOf("#");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.append((long) 8);
        char[] charArray61 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer(charArray61, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder49.insert((int) '\000', charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder43.append(charArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder43.delete(0, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray72 = strBuilder43.toCharArray(169, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\n32.0" + "'", str32, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[ , 4, #, 4]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test09840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09840");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.appendln((double) '$');
        char[] charArray19 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        int int22 = strTokenizer21.size();
        boolean boolean23 = strTokenizer21.hasNext();
        java.util.List<java.lang.String> strList24 = strTokenizer21.getTokenList();
        java.lang.String[] strArray28 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        boolean boolean31 = strList24.addAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.String str33 = strList29.remove(0);
        char[] charArray38 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        int int41 = strTokenizer40.size();
        boolean boolean42 = strTokenizer40.hasNext();
        java.util.List<java.lang.String> strList43 = strTokenizer40.getTokenList();
        java.lang.String[] strArray47 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        boolean boolean50 = strList43.addAll((java.util.Collection<java.lang.String>) strList48);
        boolean boolean51 = strList29.addAll((java.util.Collection<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder6.appendAll((java.lang.Iterable<java.lang.String>) strList29);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("");
        int int57 = strBuilder53.indexOf("");
        int int60 = strBuilder53.lastIndexOf('#', (int) (byte) 0);
        boolean boolean62 = strBuilder53.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder53.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray67 = strTokenizer66.getTokenArray();
        java.lang.String[] strArray68 = strTokenizer66.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder53.appendWithSeparators((java.lang.Object[]) strArray68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder52.appendln((java.lang.Object) "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder52.replaceFirst("100.0", "java.io.IOException: \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder52.replaceFirst('#', 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder52.appendSeparator('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder52.trim();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\n32.0" + "'", str33, "\n32.0");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test09841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09841");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Set<java.lang.Object> objSet10 = properties4.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        java.lang.String[] strArray18 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendWithSeparators((java.lang.Object[]) strArray18, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteAll(strMatcher21);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder26.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray31 = strTokenizer30.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder26.appendAll((java.lang.Object[]) strArray31);
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.replaceFirst('a', 'a');
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        java.lang.String[] strArray49 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        boolean boolean52 = strList45.addAll((java.util.Collection<java.lang.String>) strList50);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder26.appendAll((java.lang.Iterable<java.lang.String>) strList50);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder20.appendAll((java.lang.Iterable<java.lang.String>) strList50);
        boolean boolean55 = properties4.containsValue((java.lang.Object) strList50);
        java.util.Collection<java.lang.Object> objCollection56 = properties4.values();
        java.util.Properties properties57 = new java.util.Properties(properties4);
        java.util.Collection<java.lang.Object> objCollection58 = properties4.values();
        java.lang.Object obj61 = properties4.setProperty(" ", "{}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test09842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09842");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrMatcher strMatcher13 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, 't');
        java.lang.String str16 = strTokenizer15.previousToken();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher13);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test09843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09843");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        java.io.Reader reader9 = strBuilder0.asReader();
        boolean boolean10 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        int int15 = strBuilder11.indexOf("");
        int int18 = strBuilder11.lastIndexOf('#', (int) (byte) 0);
        boolean boolean20 = strBuilder11.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder11.appendAll((java.util.Iterator<java.lang.String>) strTokenizer21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder11.appendSeparator("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder11.append((double) 0.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder11.appendln((int) (byte) 100);
        char[] charArray29 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer(charArray29, '#');
        char[] charArray32 = strBuilder0.getChars(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray32);
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("#\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer33.setDelimiterMatcher(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(charArray32);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "0.0100\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "0.0100\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[0, ., 0, 1, 0, 0, \n]");
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
    }

    @Test
    public void test09844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09844");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder6.appendln((double) '$');
        char[] charArray19 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray19, ' ');
        int int22 = strTokenizer21.size();
        boolean boolean23 = strTokenizer21.hasNext();
        java.util.List<java.lang.String> strList24 = strTokenizer21.getTokenList();
        java.lang.String[] strArray28 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        boolean boolean31 = strList24.addAll((java.util.Collection<java.lang.String>) strList29);
        java.lang.String str33 = strList29.remove(0);
        char[] charArray38 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        int int41 = strTokenizer40.size();
        boolean boolean42 = strTokenizer40.hasNext();
        java.util.List<java.lang.String> strList43 = strTokenizer40.getTokenList();
        java.lang.String[] strArray47 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        boolean boolean50 = strList43.addAll((java.util.Collection<java.lang.String>) strList48);
        boolean boolean51 = strList29.addAll((java.util.Collection<java.lang.String>) strList48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder6.appendAll((java.lang.Iterable<java.lang.String>) strList29);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.deleteFirst("");
        int int57 = strBuilder53.indexOf("");
        int int60 = strBuilder53.lastIndexOf('#', (int) (byte) 0);
        boolean boolean62 = strBuilder53.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder53.appendAll((java.util.Iterator<java.lang.String>) strTokenizer63);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray67 = strTokenizer66.getTokenArray();
        java.lang.String[] strArray68 = strTokenizer66.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder53.appendWithSeparators((java.lang.Object[]) strArray68, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder52.appendln((java.lang.Object) "");
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder52.replaceFirst("100.0", "java.io.IOException: \n");
        boolean boolean76 = strBuilder52.contains(' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder52.setLength(10);
        int int80 = strBuilder52.lastIndexOf('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder52.append((float) 1);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\n32.0" + "'", str33, "\n32.0");
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test09845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09845");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer6, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder3.appendSeparator('$', '$');
        java.lang.StringBuffer stringBuffer18 = strBuilder17.toStringBuffer();
        java.lang.String str20 = strBuilder17.leftString(45);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.append(24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = strBuilder22.substring((int) '3', (int) '1');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(stringBuffer18);
        org.junit.Assert.assertEquals(stringBuffer18.toString(), "#\n$");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#\n$" + "'", str20, "#\n$");
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test09846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09846");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        char[] charArray78 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        int int81 = strTokenizer80.size();
        int int82 = strTokenizer80.previousIndex();
        boolean boolean83 = strList9.equals((java.lang.Object) strTokenizer80);
        java.lang.String str84 = strTokenizer80.next();
        java.lang.String str85 = strTokenizer80.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer87 = strTokenizer80.setEmptyTokenAsNull(true);
        boolean boolean88 = strTokenizer80.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer80.setDelimiterString(" ");
        java.lang.Object obj91 = strTokenizer80.clone();
        java.lang.String str92 = strTokenizer80.nextToken();
        java.lang.String[] strArray93 = strTokenizer80.getTokenArray();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4#4" + "'", str84, "4#4");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "4#4" + "'", str85, "4#4");
        org.junit.Assert.assertNotNull(strTokenizer87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "4#4" + "'", str92, "4#4");
        org.junit.Assert.assertNotNull(strArray93);
    }

    @Test
    public void test09847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09847");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder10.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.append('#');
        int int16 = strBuilder13.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.deleteFirst("###");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder13.append((double) 58);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendSeparator('2', 53);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        java.lang.String str28 = strBuilder24.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendln((float) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder31.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray36 = strTokenizer35.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.appendAll((java.lang.Object[]) strArray36);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder31.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray46 = strTokenizer45.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder41.appendAll((java.lang.Object[]) strArray46);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder31.appendln(strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst('a', '4');
        java.io.Writer writer61 = strBuilder60.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder69.replaceFirst("", "");
        char[] charArray73 = strBuilder69.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder68.appendln(charArray73);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray73);
        writer61.write(charArray73);
        org.apache.commons.lang3.text.StrBuilder strBuilder77 = strBuilder53.append(charArray73);
        org.apache.commons.lang3.text.StrMatcher strMatcher79 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int81 = strBuilder53.indexOf(strMatcher79, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder24.deleteAll(strMatcher79);
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder23.replaceFirst(strMatcher79, "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder23.deleteFirst("StrTokenizer[#]");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(writer61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[]");
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strTokenizer75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMatcher79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test09848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09848");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.util.Set<java.lang.String> strSet17 = properties0.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst('a', '4');
        java.io.Writer writer28 = strBuilder27.asWriter();
        properties20.store(writer28, "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.lang.String str33 = properties20.getProperty("#");
        java.lang.String str34 = properties20.toString();
        java.lang.String str36 = properties20.getProperty("\000\n\n-1.0100.0\n");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test09849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09849");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln('#');
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.append(stringBuffer16, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder13.replaceFirst('a', '4');
        boolean boolean25 = strBuilder9.equals(strBuilder13);
        int int28 = strBuilder13.lastIndexOf("StrTokenizer[]", (int) '4');
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder13.appendln(stringBuffer29, (int) (byte) 1, (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder13.deleteFirst("\naaaa100");
        java.lang.StringBuffer stringBuffer35 = strBuilder13.toStringBuffer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(stringBuffer35);
        org.junit.Assert.assertEquals(stringBuffer35.toString(), "#\n\n");
    }

    @Test
    public void test09850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09850");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "");
        char[] charArray7 = strBuilder3.toCharArray();
        char[] charArray8 = strBuilder0.getChars(charArray7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer(charArray7);
        boolean boolean10 = strTokenizer9.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher12 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        char[] charArray24 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendln(charArray24);
        int int29 = strMatcher12.isMatch(charArray24, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer9.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer31.setQuoteChar('#');
        java.util.List<java.lang.String> strList34 = strTokenizer31.getTokenList();
        boolean boolean35 = strTokenizer31.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = strTokenizer31.setDelimiterString("java.io.IOException: ");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer31.setQuoteChar('e');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray7);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]");
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMatcher12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[]");
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strTokenizer37);
        org.junit.Assert.assertNotNull(strTokenizer39);
    }

    @Test
    public void test09851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09851");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator('a', ' ');
        boolean boolean13 = strBuilder12.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = strTokenizer19.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer19.reset("");
        java.lang.String str23 = strTokenizer22.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer22.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer22.getDelimiterMatcher();
        int int28 = strBuilder15.indexOf(strMatcher26, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder15.appendSeparator('e', 0);
        char char33 = strBuilder15.charAt((int) (short) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + char33 + "' != '" + '\n' + "'", char33 == '\n');
    }

    @Test
    public void test09852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09852");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("\n2.0");
        java.lang.String str2 = strTokenizer1.nextToken();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "2.0" + "'", str2, "2.0");
    }

    @Test
    public void test09853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09853");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        int int17 = properties0.size();
        java.io.IOException iOException18 = new java.io.IOException();
        java.lang.Throwable[] throwableArray19 = iOException18.getSuppressed();
        boolean boolean20 = properties0.equals((java.lang.Object) iOException18);
        boolean boolean22 = properties0.containsKey((java.lang.Object) " #\n");
        java.util.Set<java.lang.String> strSet23 = properties0.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties0.entrySet();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(objEntrySet24);
    }

    @Test
    public void test09854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09854");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer5.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer5, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert((int) '4', (double) (byte) 1);
        char[] charArray16 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        int int21 = strBuilder20.capacity();
        java.lang.StringBuffer stringBuffer22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder20.appendln(stringBuffer22, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder20.insert(1, (double) 32);
        java.lang.String str30 = strBuilder20.rightString((int) ' ');
        boolean boolean32 = strBuilder20.startsWith("");
        char[] charArray33 = strBuilder20.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray33);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer35 = strTokenizer19.setDelimiterMatcher(strMatcher34);
        int int36 = strBuilder10.indexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder10.appendSeparator("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder10.insert(52, 0.0f);
        java.util.stream.IntStream intStream44 = strBuilder43.chars();
        java.lang.String str47 = strBuilder43.midString(35, 9);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strMatcher6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "\n32.0" + "'", str30, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charArray33);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strTokenizer35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 53 + "'", int36 == 53);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "\000\000\000\000\000\000\000\000\000" + "'", str47, "\000\000\000\000\000\000\000\000\000");
    }

    @Test
    public void test09855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09855");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray18 = strTokenizer17.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendAll((java.lang.Object[]) strArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream23 = strBuilder13.codePoints();
        java.lang.String str24 = strBuilder13.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.appendFixedWidthPadRight((int) (short) 10, 5, ' ');
        int int30 = strBuilder13.indexOf("StrTokenizer[4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder3.appendln(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder13.append(strBuilder41);
        // The following exception was thrown during execution in test generation
        try {
            char[] charArray45 = strBuilder42.toCharArray((int) '2', 75);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test09856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09856");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        java.util.Properties properties22 = new java.util.Properties();
        int int23 = properties22.size();
        boolean boolean25 = properties22.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties26 = new java.util.Properties();
        int int27 = properties26.size();
        boolean boolean29 = properties26.containsKey((java.lang.Object) (-1.0f));
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        char[] charArray35 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        int int38 = strTokenizer37.size();
        boolean boolean39 = strTokenizer37.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer37.setIgnoredMatcher(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst("", "");
        java.lang.Object obj46 = properties22.putIfAbsent((java.lang.Object) strMatcher40, (java.lang.Object) strBuilder42);
        java.lang.Object obj49 = properties22.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        int int51 = strBuilder50.capacity();
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(stringBuffer52, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int57 = strBuilder55.lastIndexOf(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.insert((int) (short) 1, 32);
        java.util.Properties properties61 = new java.util.Properties();
        int int62 = properties61.size();
        boolean boolean64 = properties61.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties61.entrySet();
        java.lang.Object obj66 = properties22.putIfAbsent((java.lang.Object) strBuilder60, (java.lang.Object) objEntrySet65);
        java.lang.String str67 = strBuilder60.getNewLineText();
        boolean boolean68 = properties0.equals((java.lang.Object) strBuilder60);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder60.appendFixedWidthPadRight(0, 43, 'e');
        boolean boolean74 = strBuilder60.contains('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder60.setNullText("97\nhi!");
        int int78 = strBuilder60.indexOf("java.io.IOException: \n");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder60.appendln(strBuilder79);
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 32 + "'", int51 == 32);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(strBuilder80);
    }

    @Test
    public void test09857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09857");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder1.appendFixedWidthPadLeft((int) '4', (-1), ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        int int7 = strBuilder6.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray17 = strTokenizer16.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendAll((java.lang.Object[]) strArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder12.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray27 = strTokenizer26.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder22.appendAll((java.lang.Object[]) strArray27);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder12.appendln(strBuilder28);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder28.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.replaceFirst('a', '4');
        java.io.Writer writer42 = strBuilder41.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "");
        char[] charArray54 = strBuilder50.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder49.appendln(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray54);
        writer42.write(charArray54);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder34.append(charArray54);
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.charMatcher('#');
        int int62 = strBuilder34.indexOf(strMatcher60, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder9.deleteAll(strMatcher60);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder1.replaceFirst(strMatcher60, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder1.appendln((float) 120);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 32 + "'", int7 == 32);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(writer42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[]");
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test09858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09858");
        char[] charArray2 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray2);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer3.setDelimiterString("hi!");
        java.lang.String str6 = strTokenizer3.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer3.setDelimiterString("StrTokenizer[ 4#4]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        java.lang.String str11 = strTokenizer10.next();
        boolean boolean12 = strTokenizer10.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer("\n32.0", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = strTokenizer15.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer10.setIgnoredMatcher(strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = strTokenizer3.setQuoteMatcher(strMatcher16);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer3.setIgnoredChar('g');
        org.apache.commons.lang3.text.StrMatcher strMatcher21 = strTokenizer20.getQuoteMatcher();
        boolean boolean22 = strTokenizer20.hasNext();
        org.junit.Assert.assertNotNull(charArray2);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "a4" + "'", str6, "a4");
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "StrTokenizer[]" + "'", str11, "StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer18);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strMatcher21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test09859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09859");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        java.io.Reader reader4 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst(' ', '4');
        java.io.Reader reader10 = strBuilder9.asReader();
        boolean boolean11 = reader10.markSupported();
        int int12 = reader10.read();
        reader10.close();
        boolean boolean14 = reader10.ready();
        reader10.reset();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09860");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray2 = strTokenizer1.getTokenArray();
        java.lang.String[] strArray3 = strTokenizer1.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer1.setIgnoreEmptyTokens(true);
        boolean boolean6 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        int int8 = strBuilder7.capacity();
        java.lang.StringBuffer stringBuffer9 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.appendln(stringBuffer9, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.insert(1, (double) 32);
        java.lang.String str17 = strBuilder7.rightString((int) ' ');
        boolean boolean19 = strBuilder7.startsWith("");
        char[] charArray20 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray27 = strTokenizer26.getTokenArray();
        java.lang.String[] strArray28 = strTokenizer26.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder24.appendWithSeparators((java.lang.Object[]) strArray28, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher31 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteAll(strMatcher31);
        int int33 = strBuilder7.lastIndexOf(strMatcher31);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer1.setTrimmerMatcher(strMatcher31);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst('a', '4');
        java.io.Writer writer44 = strBuilder43.asWriter();
        properties36.store(writer44, "");
        java.util.Properties properties47 = new java.util.Properties();
        int int48 = properties47.size();
        boolean boolean50 = properties47.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties51 = new java.util.Properties();
        int int52 = properties51.size();
        boolean boolean54 = properties51.containsKey((java.lang.Object) (-1.0f));
        properties47.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties51.keys();
        boolean boolean57 = properties36.containsValue((java.lang.Object) objEnumeration56);
        java.util.Set<java.lang.Object> objSet58 = properties36.keySet();
        java.util.Collection<java.lang.Object> objCollection59 = properties36.values();
        java.lang.String str60 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strMatcher31, properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties36.elements();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\n32.0" + "'", str17, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMatcher31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(writer44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertNotNull(objEnumeration61);
    }

    @Test
    public void test09861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09861");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("0.0100\n", 't');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setEmptyTokenAsNull(false);
        org.junit.Assert.assertNotNull(strTokenizer4);
    }

    @Test
    public void test09862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09862");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader19 = strBuilder15.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray25 = strTokenizer24.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.appendAll((java.lang.Object[]) strArray25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder20.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream30 = strBuilder20.codePoints();
        java.lang.Object obj31 = properties10.replace((java.lang.Object) reader19, (java.lang.Object) intStream30);
        long long33 = reader19.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray39 = strTokenizer38.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendAll((java.lang.Object[]) strArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder34.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream44 = strBuilder34.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst("", "");
        char[] charArray49 = strBuilder45.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer(charArray49, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder34.appendln(charArray49);
        int int53 = reader19.read(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder3.append(charArray49);
        java.util.Properties properties55 = new java.util.Properties();
        int int56 = properties55.size();
        boolean boolean58 = properties55.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties59 = new java.util.Properties();
        int int60 = properties59.size();
        boolean boolean62 = properties59.containsKey((java.lang.Object) (-1.0f));
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst("", "");
        char[] charArray71 = strBuilder67.toCharArray();
        char[] charArray72 = strBuilder64.getChars(charArray71);
        java.io.Reader reader73 = strBuilder64.asReader();
        java.lang.Object obj74 = properties55.remove((java.lang.Object) strBuilder64);
        java.io.Writer writer75 = strBuilder64.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder3.append((java.lang.Object) writer75);
        char[] charArray77 = strBuilder3.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder3.deleteFirst("a4");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(reader19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(intStream30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(intStream44);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[]");
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(charArray71);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray71), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray71), "[]");
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[]");
        org.junit.Assert.assertNotNull(reader73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(writer75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(charArray77);
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[o, r, g, ., a, p, a, c, h, e, ., c, o, m, m, o, n, s, ., l, a, n, g, 3, ., t, e, x, t, ., S, t, r, B, u, i, l, d, e, r, $, S, t, r, B, u, i, l, d, e, r, W, r, i, t, e, r, @, e, d, d, 2, 5, c, b]");
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test09863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09863");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder7.setNullText("[\n32.0, , , StrTokenizer[]]");
        org.apache.commons.lang3.text.StrMatcher strMatcher14 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.deleteFirst(strMatcher14);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder7.appendFixedWidthPadRight(30, 4, 'a');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMatcher14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test09864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09864");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        java.lang.String str2 = strTokenizer1.next();
        boolean boolean3 = strTokenizer1.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("\n32.0", '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher7 = strTokenizer6.getDelimiterMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer8 = strTokenizer1.setIgnoredMatcher(strMatcher7);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer8.setDelimiterString(" #\n");
        java.lang.Object obj11 = strTokenizer10.clone();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "StrTokenizer[]" + "'", str2, "StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strMatcher7);
        org.junit.Assert.assertNotNull(strTokenizer8);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test09865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09865");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln('#');
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.append(stringBuffer15, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder12.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder12.appendSeparator("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder12.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder6.append((java.lang.CharSequence) strBuilder25);
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder6.replaceFirst("#", "[4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder6.append((long) 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.insert(0, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder34.appendln(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("###", 'a', 'e');
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder36.replaceAll(strMatcher41, "-1.0ttt");
        java.util.Properties properties44 = new java.util.Properties();
        int int45 = properties44.size();
        java.lang.String str46 = org.apache.commons.lang3.text.StrSubstitutor.replace((java.lang.Object) strBuilder43, properties44);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + " 100.0[4#4]\n4#4116true\n" + "'", str46, " 100.0[4#4]\n4#4116true\n");
    }

    @Test
    public void test09866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09866");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendln((int) (byte) 0);
        java.io.Writer writer8 = strBuilder7.asWriter();
        java.io.IOException iOException9 = new java.io.IOException();
        java.lang.Throwable[] throwableArray10 = iOException9.getSuppressed();
        java.lang.Throwable[] throwableArray11 = iOException9.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.appendWithSeparators((java.lang.Object[]) throwableArray11, "1");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder7.setNullText("97\nhi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder7.replaceAll('a', 'a');
        java.lang.StringBuffer stringBuffer19 = strBuilder7.toStringBuffer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strBuilder7.asTokenizer();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(writer8);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(stringBuffer19);
        org.junit.Assert.assertEquals(stringBuffer19.toString(), "\n0\n");
        org.junit.Assert.assertNotNull(strTokenizer20);
    }

    @Test
    public void test09867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09867");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.ensureCapacity((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("true\n###################################");
        java.lang.String str22 = strBuilder17.midString((int) ' ', 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst("####\000\000\000\000\000\000\000\000\000\000", "3.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "");
        char[] charArray38 = strBuilder34.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendln(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        java.lang.String str41 = strTokenizer40.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strTokenizer40.setQuoteChar('4');
        boolean boolean44 = strTokenizer43.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("\n32.0-1.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer43.setQuoteMatcher(strMatcher46);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder17.replaceAll(strMatcher46, ".0\n");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test09868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09868");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        java.lang.Object obj2 = strTokenizer1.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher3 = strTokenizer1.getIgnoredMatcher();
        int int4 = strTokenizer1.size();
        java.lang.Object obj5 = strTokenizer1.clone();
        org.apache.commons.lang3.text.StrMatcher strMatcher6 = strTokenizer1.getTrimmerMatcher();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(strMatcher6);
    }

    @Test
    public void test09869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09869");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        int int2 = strBuilder1.capacity();
        java.lang.StringBuffer stringBuffer3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln(stringBuffer3, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        boolean boolean13 = strSubstitutor0.replaceIn(strBuilder10, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.ensureCapacity((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.String str24 = strBuilder20.getNewLineText();
        java.util.stream.IntStream intStream25 = strBuilder20.chars();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.append((java.lang.CharSequence) strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder17.setLength((int) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder17.appendFixedWidthPadLeft((int) (byte) 1, 32, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder10.appendln(strBuilder17);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder17.insert((int) (short) 0, 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder17.appendSeparator(' ', '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder17.appendSeparator("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder45.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder48.replaceFirst('a', ' ');
        java.lang.String str55 = strBuilder48.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder48.appendln(' ');
        char[] charArray60 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray60);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.setDelimiterString("hi!");
        java.lang.String str64 = strTokenizer61.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer61.setDelimiterString("StrTokenizer[ 4#4]");
        int int67 = strTokenizer66.nextIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder48.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer66, "0.0true");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder41.appendln(strBuilder48);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceAll("\nt\n\n", "[\n32.0, , , StrTokenizer[]]");
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder70.append((int) 'a');
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 32 + "'", int2 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(intStream25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray60);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "a4" + "'", str64, "a4");
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test09870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09870");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        boolean boolean12 = strBuilder0.startsWith("");
        char[] charArray13 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder0.insert(1, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder0.append(53);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.appendSeparator("#", 32);
        boolean boolean23 = strBuilder18.endsWith("StrTokenizer[]");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test09871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09871");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties0.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder16.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln((double) '#');
        boolean boolean20 = strBuilder10.equals(strBuilder19);
        java.util.stream.IntStream intStream21 = strBuilder10.codePoints();
        java.util.Iterator<java.lang.String> strItor22 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.appendWithSeparators(strItor22, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst(' ', ' ');
        java.io.Writer writer28 = strBuilder27.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder29.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer34.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer34, "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder29.setLength((int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.insert((int) '4', (double) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder27.append(strBuilder42, 32, (int) (byte) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder55.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder57.replaceFirst(' ', '4');
        boolean boolean61 = properties0.remove((java.lang.Object) strBuilder45, (java.lang.Object) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder45.delete(43, 50);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder45.replace((int) (short) -1, 169, "0.0100\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intStream21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test09872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09872");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder6.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendFixedWidthPadRight((java.lang.Object) strBuilder9, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.append((long) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.insert(12, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 12");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test09873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09873");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst('4', 'a');
        boolean boolean46 = properties0.remove((java.lang.Object) strBuilder33, (java.lang.Object) '4');
        java.lang.Object obj47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder33.appendFixedWidthPadRight(obj47, (int) 'a', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.append((int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.appendSeparator('a', 49);
        int int58 = strBuilder52.indexOf("java.io.IOException: StrTokenizer[]", 35);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test09874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09874");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Set<java.lang.Object> objSet2 = properties0.keySet();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader13 = strBuilder9.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray19 = strTokenizer18.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder14.appendAll((java.lang.Object[]) strArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream24 = strBuilder14.codePoints();
        java.lang.Object obj25 = properties4.replace((java.lang.Object) reader13, (java.lang.Object) intStream24);
        long long27 = reader13.skip(0L);
        boolean boolean28 = reader13.markSupported();
        properties3.load(reader13);
        reader13.close();
        int int31 = reader13.read();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objSet2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(reader13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(intStream24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test09875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09875");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Collection<java.lang.Object> objCollection16 = properties0.values();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) strBuilder30, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder21.lastIndexOf(strMatcher34);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setIgnoredMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder21.deleteFirst(strMatcher45);
        java.lang.Object obj48 = properties0.getOrDefault((java.lang.Object) strTokenizer20, (java.lang.Object) strBuilder47);
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.append((float) 14);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendSeparator('#', 0);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "14.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "14.0");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "14.0");
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
    }

    @Test
    public void test09876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09876");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = strTokenizer33.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer33, "h");
        int int37 = strTokenizer33.nextIndex();
        boolean boolean38 = properties0.containsValue((java.lang.Object) strTokenizer33);
        java.util.Properties properties39 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder40.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray46 = strTokenizer45.getTokenArray();
        java.lang.String[] strArray47 = strTokenizer45.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendWithSeparators((java.lang.Object[]) strArray47, "4#4");
        char[] charArray52 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer53 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray52);
        java.lang.Object obj54 = properties39.getOrDefault((java.lang.Object) strBuilder43, (java.lang.Object) strTokenizer53);
        int int55 = properties39.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray61 = strTokenizer60.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendAll((java.lang.Object[]) strArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder56.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray71 = strTokenizer70.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.appendAll((java.lang.Object[]) strArray71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder56.appendln(strBuilder72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder72.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder78.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder79.replaceFirst('4', 'a');
        boolean boolean85 = properties39.remove((java.lang.Object) strBuilder72, (java.lang.Object) '4');
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Collection<java.lang.Object> objCollection87 = properties0.values();
        java.util.Set<java.lang.Object> objSet88 = properties0.keySet();
        java.io.InputStream inputStream89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objCollection87);
        org.junit.Assert.assertNotNull(objSet88);
    }

    @Test
    public void test09877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09877");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream10 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder0.appendln(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, "\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer("h", '4', '$');
        java.lang.String str25 = strTokenizer24.next();
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer24.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer20.setIgnoredMatcher(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "h" + "'", str25, "h");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strTokenizer27);
    }

    @Test
    public void test09878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09878");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        java.io.Reader reader4 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst(' ', '4');
        java.io.Reader reader10 = strBuilder9.asReader();
        boolean boolean11 = reader10.markSupported();
        int int12 = reader10.read();
        long long14 = reader10.skip((long) '$');
        boolean boolean15 = reader10.ready();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(reader4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(reader10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test09879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09879");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        char[] charArray78 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        int int81 = strTokenizer80.size();
        int int82 = strTokenizer80.previousIndex();
        boolean boolean83 = strList9.equals((java.lang.Object) strTokenizer80);
        java.lang.String str84 = strTokenizer80.next();
        java.lang.String str85 = strTokenizer80.previous();
        org.apache.commons.lang3.text.StrMatcher strMatcher86 = strTokenizer80.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer80.reset("java.io.IOException");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer80.setDelimiterString("\ntrue\n\000\000\000\000{}");
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = strTokenizer80.getQuoteMatcher();
        java.lang.String str92 = strTokenizer80.next();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4#4" + "'", str84, "4#4");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "4#4" + "'", str85, "4#4");
        org.junit.Assert.assertNotNull(strMatcher86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "java.io.IOException" + "'", str92, "java.io.IOException");
    }

    @Test
    public void test09880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09880");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator('a', ' ');
        boolean boolean13 = strBuilder12.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.append(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendSeparator(' ', (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder12.appendNull();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = strBuilder12.substring((int) 'u');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: end < start");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test09881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09881");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('a', '4');
        java.io.Writer writer34 = strBuilder33.asWriter();
        properties26.store(writer34, "");
        java.util.Properties properties37 = new java.util.Properties();
        int int38 = properties37.size();
        boolean boolean40 = properties37.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties41 = new java.util.Properties();
        int int42 = properties41.size();
        boolean boolean44 = properties41.containsKey((java.lang.Object) (-1.0f));
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.keys();
        boolean boolean47 = properties26.containsValue((java.lang.Object) objEnumeration46);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Collection<java.lang.Object> objCollection49 = properties26.values();
        java.util.Properties properties50 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray57 = strTokenizer56.getTokenArray();
        java.lang.String[] strArray58 = strTokenizer56.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendWithSeparators((java.lang.Object[]) strArray58, "4#4");
        char[] charArray63 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray63);
        java.lang.Object obj65 = properties50.getOrDefault((java.lang.Object) strBuilder54, (java.lang.Object) strTokenizer64);
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        boolean boolean67 = properties50.isEmpty();
        java.util.Collection<java.lang.Object> objCollection68 = properties50.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet69 = properties50.entrySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objCollection68);
        org.junit.Assert.assertNotNull(objEntrySet69);
    }

    @Test
    public void test09882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09882");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("35.0\n");
        java.lang.String str2 = strTokenizer1.next();
        java.lang.String[] strArray3 = strTokenizer1.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer1.setDelimiterString("4#4");
        int int6 = strTokenizer5.nextIndex();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "35.0" + "'", str2, "35.0");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test09883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09883");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder(286);
    }

    @Test
    public void test09884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09884");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        int int7 = strBuilder5.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.replaceFirst("java.io.IOException: hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.setNullText("");
        char[] charArray14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.insert((int) (byte) 1, charArray14, (int) (short) 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test09885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09885");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray18 = strTokenizer17.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.appendAll((java.lang.Object[]) strArray18);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder13.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream23 = strBuilder13.codePoints();
        java.lang.String str24 = strBuilder13.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder13.appendFixedWidthPadRight((int) (short) 10, 5, ' ');
        int int30 = strBuilder13.indexOf("StrTokenizer[4#4]");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder3.appendln(strBuilder13);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst("true\n###################################a4\n", "\n#\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder31.appendSeparator("\n32.0java.io.IOException: hi!###", "a}3.0$");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder31.trim();
        boolean boolean40 = strBuilder38.contains("##");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test09886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09886");
        java.lang.String[] strArray1 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = strList2.contains(obj4);
        java.util.ArrayList[] arrayListArray7 = new java.util.ArrayList[0];
        @SuppressWarnings("unchecked")
        java.util.ArrayList<java.lang.String>[] strListArray8 = (java.util.ArrayList<java.lang.String>[]) arrayListArray7;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.String>[] strListArray9 = strList2.toArray(strListArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(arrayListArray7);
        org.junit.Assert.assertNotNull(strListArray8);
    }

    @Test
    public void test09887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09887");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        boolean boolean10 = properties4.isEmpty();
        boolean boolean11 = properties4.isEmpty();
        java.lang.String str12 = properties4.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        int int14 = strBuilder13.capacity();
        java.lang.StringBuffer stringBuffer15 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.appendln(stringBuffer15, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder13.insert(1, (double) 32);
        boolean boolean22 = strBuilder13.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder26.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder27.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder23.append((java.lang.Object) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder23.appendln((float) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder23.appendFixedWidthPadRight((int) (short) 10, 39, '\n');
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee");
        boolean boolean47 = properties4.containsKey((java.lang.Object) strBuilder46);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test09888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09888");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        strList45.clear();
        strList45.clear();
        java.lang.Object[] objArray65 = strList45.toArray();
        strList45.clear();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
    }

    @Test
    public void test09889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09889");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer6, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.appendSeparator("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder3.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator("false", (int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.replaceFirst('e', 'a');
        boolean boolean23 = strBuilder22.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.appendln((double) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator("97\nhi!101.0\n", 45);
        int int31 = strBuilder25.indexOf('o', 0);
        boolean boolean33 = strBuilder25.contains('a');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test09890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09890");
        java.io.IOException iOException1 = new java.io.IOException("0.01.0");
        java.io.IOException iOException2 = new java.io.IOException((java.lang.Throwable) iOException1);
    }

    @Test
    public void test09891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09891");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder33.lastIndexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.insert((int) (short) 1, 32);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        boolean boolean42 = properties39.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties39.entrySet();
        java.lang.Object obj44 = properties0.putIfAbsent((java.lang.Object) strBuilder38, (java.lang.Object) objEntrySet43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder38.appendln((double) 100.0f);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray52 = strBuilder51.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder51.appendSeparator("32.0");
        boolean boolean55 = strBuilder46.equals(strBuilder54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.appendNull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
    }

    @Test
    public void test09892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09892");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder19.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.deleteCharAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        int int24 = strBuilder23.capacity();
        java.lang.StringBuffer stringBuffer25 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.appendln(stringBuffer25, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder23.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder23.setLength(32);
        java.io.Writer writer34 = strBuilder33.asWriter();
        writer34.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        int int40 = strBuilder39.capacity();
        java.lang.StringBuffer stringBuffer41 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder39.appendln(stringBuffer41, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder39.insert(1, (double) 32);
        java.lang.String str49 = strBuilder39.rightString((int) ' ');
        boolean boolean51 = strBuilder39.startsWith("");
        char[] charArray52 = strBuilder39.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher53 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray52);
        writer34.write(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray52);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder22.appendAll((java.util.Iterator<java.lang.String>) strTokenizer56);
        int int59 = strBuilder57.indexOf('#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strBuilder57.asTokenizer();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(writer34);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\n32.0" + "'", str49, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher53);
        org.junit.Assert.assertNotNull(strTokenizer55);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer60);
    }

    @Test
    public void test09893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09893");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties4.entrySet();
        java.io.IOException iOException13 = new java.io.IOException();
        java.lang.Throwable[] throwableArray14 = iOException13.getSuppressed();
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException13);
        boolean boolean17 = properties4.containsValue((java.lang.Object) iOException16);
        char[] charArray23 = new char[] { ' ', '4', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray27 = strBuilder26.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst('a', 'a');
        java.lang.String str41 = strBuilder39.rightString((int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.deleteFirst('$');
        java.lang.Object obj46 = properties4.put((java.lang.Object) strTokenizer29, (java.lang.Object) strBuilder45);
        char[] charArray49 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        int int52 = strBuilder51.capacity();
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(stringBuffer53, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.appendln((int) (byte) 0);
        java.io.Writer writer59 = strBuilder58.asWriter();
        java.io.IOException iOException60 = new java.io.IOException();
        java.lang.Throwable[] throwableArray61 = iOException60.getSuppressed();
        java.lang.Throwable[] throwableArray62 = iOException60.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.appendWithSeparators((java.lang.Object[]) throwableArray62, "1");
        java.lang.Object obj65 = properties4.getOrDefault((java.lang.Object) charArray49, (java.lang.Object) throwableArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray49);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray49);
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer67.set("truetrue\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 32 + "'", int52 == 32);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(writer59);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertNotNull(strTokenizer67);
    }

    @Test
    public void test09894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09894");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer6, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder3.appendSeparator("StrTokenizer[not tokenized yet]", (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        int int19 = strBuilder18.capacity();
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder18.appendln(stringBuffer20, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder18.insert(1, (double) 32);
        boolean boolean27 = strBuilder18.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder18.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceAll("#", "true\n###################################3\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder3.appendFixedWidthPadLeft((java.lang.Object) "#", 100, 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder3.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.appendSeparator('\000', 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder35.append(false);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteAll('1');
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.insert((int) 'u', (double) 19);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
    }

    @Test
    public void test09895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09895");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder3.append("");
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("\n32.0");
        int int17 = strBuilder14.indexOf(strMatcher16);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.replace((int) (byte) 1, (int) (byte) 1, "35.0\n100.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder21.append((double) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.setNullText("tre\ntrue\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder23.insert(0, (double) 51);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test09896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09896");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        int int7 = strBuilder3.lastIndexOf('$');
        java.lang.String str8 = strBuilder3.toString();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "#\n" + "'", str8, "#\n");
    }

    @Test
    public void test09897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09897");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.appendSeparator('#', (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((float) '$');
        char char10 = strBuilder8.charAt(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder8.setNewLineText("\n32.0java.io.IOException: hi!");
        char[] charArray13 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendln(false);
        java.lang.String str16 = strBuilder12.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder12.appendNull();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + char10 + "' != '" + '#' + "'", char10 == '#');
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "#36.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "#36.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[#, 3, 6, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\n32.0java.io.IOException: hi!" + "'", str16, "\n32.0java.io.IOException: hi!");
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test09898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09898");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.append((long) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceAll("", "\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln(35);
        int int20 = strBuilder15.lastIndexOf('a', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder15.ensureCapacity(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test09899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09899");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray14 = strTokenizer13.getTokenArray();
        java.lang.String[] strArray15 = strTokenizer13.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendWithSeparators((java.lang.Object[]) strArray15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln("\n2.0");
        java.lang.String str20 = strBuilder19.getNullText();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test09900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09900");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.ensureCapacity((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("true\n###################################");
        java.util.Properties properties20 = new java.util.Properties();
        int int21 = properties20.size();
        java.lang.Throwable throwable23 = null;
        java.io.IOException iOException24 = new java.io.IOException("\n32.0", throwable23);
        java.io.IOException iOException25 = new java.io.IOException((java.lang.Throwable) iOException24);
        char[] charArray28 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer29.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.appendln('#');
        java.lang.StringBuffer stringBuffer40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.append(stringBuffer40, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder37.deleteFirst("hi!");
        char[] charArray46 = strBuilder37.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer33.reset(charArray46);
        boolean boolean48 = properties20.replace((java.lang.Object) iOException24, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer33);
        int int49 = properties20.size();
        int int50 = properties20.size();
        java.util.Set<java.lang.Object> objSet51 = properties20.keySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder56.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder59.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder62.appendln('#');
        char[] charArray69 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer(charArray69, ' ');
        int int72 = strTokenizer71.size();
        boolean boolean73 = strTokenizer71.hasNext();
        java.util.List<java.lang.String> strList74 = strTokenizer71.getTokenList();
        java.lang.String[] strArray78 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        boolean boolean81 = strList74.addAll((java.util.Collection<java.lang.String>) strList79);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray84 = strTokenizer83.getTokenArray();
        java.lang.String[] strArray85 = strTokenizer83.getTokenArray();
        boolean boolean86 = strTokenizer83.hasNext();
        int int87 = strTokenizer83.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher88 = strTokenizer83.getQuoteMatcher();
        java.util.List<java.lang.String> strList89 = strTokenizer83.getTokenList();
        boolean boolean90 = strList74.retainAll((java.util.Collection<java.lang.String>) strList89);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder62.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList74, "");
        java.lang.Object obj93 = properties20.getOrDefault((java.lang.Object) (short) 0, (java.lang.Object) strList74);
        java.util.stream.Stream<java.lang.String> strStream94 = strList74.parallelStream();
        org.apache.commons.lang3.text.StrBuilder strBuilder95 = strBuilder19.appendAll((java.lang.Iterable<java.lang.String>) strList74);
        org.apache.commons.lang3.text.StrBuilder strBuilder97 = strBuilder19.deleteFirst('t');
        boolean boolean98 = strBuilder97.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(strMatcher88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "[]");
        org.junit.Assert.assertNotNull(strStream94);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test09901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09901");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.clear();
        int int12 = strBuilder11.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.append("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder24.append(charArray31, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray42 = strTokenizer41.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendAll((java.lang.Object[]) strArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder37.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray52 = strTokenizer51.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendAll((java.lang.Object[]) strArray52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder37.appendln(strBuilder53);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst("", "");
        char[] charArray66 = strBuilder62.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder61.appendln(charArray66);
        boolean boolean68 = strBuilder37.equals((java.lang.Object) strBuilder61);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher72 = strTokenizer71.getDelimiterMatcher();
        int int73 = strBuilder37.indexOf(strMatcher72);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, strMatcher72);
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder11.append((java.lang.Object) strMatcher72);
        java.lang.String str76 = strBuilder75.getNullText();
        boolean boolean78 = strBuilder75.endsWith("");
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder75.replaceFirst("10.0true\n######################", "100.0[4#4]\n4#4116");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[]");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strMatcher72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test09902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09902");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        int int13 = strBuilder10.indexOf(' ', 2);
        int int16 = strBuilder10.indexOf("true\njava.io.IOException: hi!false", 151);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test09903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09903");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        java.lang.String str4 = strBuilder0.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendln((float) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.setNullText(" ");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder6.appendSeparator('1', 'g');
        int int14 = strBuilder6.indexOf('#', 119);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test09904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09904");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("java.io.IOException: \n32.0a");
    }

    @Test
    public void test09905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09905");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        char[] charArray16 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        int int19 = strTokenizer18.size();
        boolean boolean20 = strTokenizer18.hasNext();
        java.util.List<java.lang.String> strList21 = strTokenizer18.getTokenList();
        java.lang.String[] strArray25 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        boolean boolean28 = strList21.addAll((java.util.Collection<java.lang.String>) strList26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray31 = strTokenizer30.getTokenArray();
        java.lang.String[] strArray32 = strTokenizer30.getTokenArray();
        boolean boolean33 = strTokenizer30.hasNext();
        int int34 = strTokenizer30.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer30.getQuoteMatcher();
        java.util.List<java.lang.String> strList36 = strTokenizer30.getTokenList();
        boolean boolean37 = strList21.retainAll((java.util.Collection<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder9.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList21, "");
        java.lang.Object[] objArray40 = strList21.toArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder41.deleteAll('4');
        int int48 = strBuilder46.indexOf('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst("", "");
        char[] charArray53 = strBuilder49.toCharArray();
        char[] charArray54 = strBuilder46.getChars(charArray53);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(charArray54);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer58 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, '#', '#');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = strTokenizer61.reset("true");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = strTokenizer63.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer67 = strTokenizer63.setIgnoreEmptyTokens(false);
        boolean boolean68 = strList21.remove((java.lang.Object) false);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        int int70 = strBuilder69.capacity();
        java.lang.StringBuffer stringBuffer71 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder69.appendln(stringBuffer71, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int76 = strBuilder74.lastIndexOf(strMatcher75);
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.lang.Object obj81 = null;
        boolean boolean82 = strList79.contains(obj81);
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder74.appendAll((java.lang.Iterable<java.lang.String>) strList79);
        boolean boolean84 = strList21.containsAll((java.util.Collection<java.lang.String>) strList79);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[]");
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strTokenizer65);
        org.junit.Assert.assertNotNull(strTokenizer67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 32 + "'", int70 == 32);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test09906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09906");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        boolean boolean12 = strBuilder0.startsWith("");
        char[] charArray13 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder0.ensureCapacity((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendSeparator('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder15.replaceAll("java.io.IOException: {}", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder20.appendln('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder20.appendSeparator('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder20.setNewLineText("tue");
        boolean boolean28 = strBuilder26.endsWith(" #\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test09907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09907");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer2 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer2.setDelimiterString("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        int int9 = strBuilder5.indexOf("");
        int int12 = strBuilder5.lastIndexOf('#', (int) (byte) 0);
        boolean boolean14 = strBuilder5.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder5.appendAll((java.util.Iterator<java.lang.String>) strTokenizer15);
        boolean boolean17 = strTokenizer15.hasPrevious();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = strTokenizer15.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer2.setIgnoredMatcher(strMatcher18);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder25.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader29 = strBuilder25.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream40 = strBuilder30.codePoints();
        java.lang.Object obj41 = properties20.replace((java.lang.Object) reader29, (java.lang.Object) intStream40);
        long long43 = reader29.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray49 = strTokenizer48.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder44.appendAll((java.lang.Object[]) strArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder44.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream54 = strBuilder44.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder55.replaceFirst("", "");
        char[] charArray59 = strBuilder55.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = new org.apache.commons.lang3.text.StrTokenizer(charArray59, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder44.appendln(charArray59);
        int int63 = reader29.read(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray59);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer66 = strTokenizer19.setIgnoredMatcher(strMatcher65);
        int int67 = strTokenizer66.nextIndex();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer66.set("1\n\n10\n");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: set() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strTokenizer15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(intStream40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(intStream54);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(charArray59);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]");
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(strTokenizer64);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertNotNull(strTokenizer66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    }

    @Test
    public void test09908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09908");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int22 = strList14.lastIndexOf((java.lang.Object) strTokenizer21);
        java.util.List<java.lang.String> strList23 = strTokenizer21.getTokenList();
        java.util.Spliterator<java.lang.String> strSpliterator24 = strList23.spliterator();
        java.lang.Object[] objArray25 = strList23.toArray();
        boolean boolean26 = strList23.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            strList23.add(10, "\000\000\000\000\000\000\000\000\000");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strSpliterator24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[ 4#4]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[ 4#4]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test09909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09909");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder29.insert(1, (double) 32);
        java.lang.String str39 = strBuilder29.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder29.insert(1, '#');
        boolean boolean43 = strList28.equals((java.lang.Object) strBuilder29);
        boolean boolean44 = strList9.containsAll((java.util.Collection<java.lang.String>) strList28);
        java.util.stream.Stream<java.lang.String> strStream45 = strList9.stream();
        org.apache.commons.lang3.text.StrMatcher strMatcher46 = org.apache.commons.lang3.text.StrMatcher.trimMatcher();
        int int47 = strList9.indexOf((java.lang.Object) strMatcher46);
        int int48 = strList9.size();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\n32.0" + "'", str39, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strStream45);
        org.junit.Assert.assertNotNull(strMatcher46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
    }

    @Test
    public void test09910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09910");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Object obj2 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendFixedWidthPadRight((java.lang.Object) strBuilder12, (int) (byte) -1, '#');
        java.lang.Object obj16 = properties0.get((java.lang.Object) strBuilder3);
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        char[] charArray30 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(charArray30, ' ');
        int int33 = strTokenizer32.size();
        boolean boolean34 = strTokenizer32.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = strTokenizer32.setIgnoredMatcher(strMatcher35);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        java.lang.Object obj41 = properties17.putIfAbsent((java.lang.Object) strMatcher35, (java.lang.Object) strBuilder37);
        boolean boolean42 = strBuilder3.equals(obj41);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder3.appendln((double) 100L);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder3.replaceAll('$', '#');
        int int50 = strBuilder3.indexOf('a', (int) (byte) -1);
        int int52 = strBuilder3.lastIndexOf("{\ntrue\n=1.0}");
        char[] charArray53 = strBuilder3.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray53, '3', 'o');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "{}");
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strTokenizer36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "100.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "100.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[1, 0, 0, ., 0, \n]");
    }

    @Test
    public void test09911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09911");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "");
        char[] charArray21 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendln(charArray21);
        int int26 = strMatcher9.isMatch(charArray21, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder27.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray42 = strTokenizer41.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder37.appendAll((java.lang.Object[]) strArray42);
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder27.appendln(strBuilder43);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder50.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst('a', '4');
        java.io.Writer writer57 = strBuilder56.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder65.replaceFirst("", "");
        char[] charArray69 = strBuilder65.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder64.appendln(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray69);
        writer57.write(charArray69);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder49.append(charArray69);
        org.apache.commons.lang3.text.StrMatcher strMatcher74 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", strMatcher9, strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder0.appendln((java.lang.Object) strMatcher74);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder0.appendSeparator('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder0.replaceAll(' ', '\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder83 = strBuilder81.append((java.lang.Object) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder86 = strBuilder83.appendSeparator('a', '1');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(writer57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[]");
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMatcher74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test09912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09912");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder0.appendln('t');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.append("\n #\ntrue\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test09913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09913");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("\n32.0", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        char[] charArray8 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln('#');
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append(stringBuffer20, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.deleteFirst("hi!");
        char[] charArray26 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer13.reset(charArray26);
        boolean boolean28 = properties0.replace((java.lang.Object) iOException4, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer13);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties0.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties0.entrySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNotNull(objEntrySet30);
    }

    @Test
    public void test09914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09914");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        char[] charArray16 = strBuilder8.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        char[] charArray18 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder30.append('a');
        int int37 = strBuilder30.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = new org.apache.commons.lang3.text.StrBuilder();
        int int39 = strBuilder38.capacity();
        java.lang.StringBuffer stringBuffer40 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder38.appendln(stringBuffer40, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder38.insert(1, (double) 32);
        boolean boolean47 = strBuilder38.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder38.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder38.clear();
        int int50 = strBuilder49.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder30.append(strBuilder49);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        int int54 = strBuilder53.capacity();
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendln(stringBuffer55, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder53.insert(1, (double) 32);
        java.lang.String str63 = strBuilder53.rightString((int) ' ');
        boolean boolean65 = strBuilder53.startsWith("");
        char[] charArray66 = strBuilder53.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder51.insert((int) (short) 0, charArray66);
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("l");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder70.replaceFirst("", "");
        char[] charArray74 = strBuilder70.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer76 = new org.apache.commons.lang3.text.StrTokenizer(charArray74, "");
        boolean boolean77 = strTokenizer76.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher78 = strTokenizer76.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer79 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, strMatcher69, strMatcher78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = strTokenizer28.setTrimmerMatcher(strMatcher69);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = strTokenizer28.setIgnoredChar('s');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 32 + "'", int39 == 32);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 32 + "'", int50 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 32 + "'", int54 == 32);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\n32.0" + "'", str63, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strMatcher78);
        org.junit.Assert.assertNotNull(strTokenizer80);
        org.junit.Assert.assertNotNull(strTokenizer82);
    }

    @Test
    public void test09915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09915");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        java.util.stream.IntStream intStream7 = strBuilder6.codePoints();
        java.io.Writer writer8 = strBuilder6.asWriter();
        writer8.write(79);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(intStream7);
        org.junit.Assert.assertNotNull(writer8);
    }

    @Test
    public void test09916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09916");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        int int8 = strTokenizer6.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer6.setDelimiterChar('a');
        char[] charArray15 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ');
        int int18 = strTokenizer17.size();
        boolean boolean19 = strTokenizer17.hasNext();
        java.util.List<java.lang.String> strList20 = strTokenizer17.getTokenList();
        java.lang.String[] strArray24 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        boolean boolean27 = strList20.addAll((java.util.Collection<java.lang.String>) strList25);
        java.util.Spliterator<java.lang.String> strSpliterator28 = strList25.spliterator();
        int int29 = strList25.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int33 = strList25.lastIndexOf((java.lang.Object) strTokenizer32);
        java.util.List<java.lang.String> strList34 = strTokenizer32.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray41 = strTokenizer40.getTokenArray();
        java.lang.String[] strArray42 = strTokenizer40.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.appendWithSeparators((java.lang.Object[]) strArray42, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder44.deleteAll(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer32.setIgnoredMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = strTokenizer10.setIgnoredMatcher(strMatcher45);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strSpliterator28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer48);
    }

    @Test
    public void test09917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09917");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        java.lang.StringBuffer stringBuffer10 = strBuilder9.toStringBuffer();
        char[] charArray15 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, ' ');
        int int18 = strTokenizer17.size();
        boolean boolean19 = strTokenizer17.hasNext();
        java.util.List<java.lang.String> strList20 = strTokenizer17.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "");
        char[] charArray25 = strBuilder21.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer(charArray25, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray25);
        boolean boolean29 = strList20.equals((java.lang.Object) charArray25);
        char[] charArray34 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer(charArray34, ' ');
        int int37 = strTokenizer36.size();
        boolean boolean38 = strTokenizer36.hasNext();
        java.util.List<java.lang.String> strList39 = strTokenizer36.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = new org.apache.commons.lang3.text.StrBuilder();
        int int41 = strBuilder40.capacity();
        java.lang.StringBuffer stringBuffer42 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendln(stringBuffer42, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder40.insert(1, (double) 32);
        java.lang.String str50 = strBuilder40.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder40.insert(1, '#');
        boolean boolean54 = strList39.equals((java.lang.Object) strBuilder40);
        boolean boolean55 = strList20.containsAll((java.util.Collection<java.lang.String>) strList39);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder9.appendAll((java.lang.Iterable<java.lang.String>) strList39);
        int int59 = strBuilder9.lastIndexOf('1', 79);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder9.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder9.append(158);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(stringBuffer10);
        org.junit.Assert.assertEquals(stringBuffer10.toString(), "");
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charArray34);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 32 + "'", int41 == 32);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\n32.0" + "'", str50, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test09918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09918");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        int int3 = strBuilder2.capacity();
        java.lang.StringBuffer stringBuffer4 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder2.appendln(stringBuffer4, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder2.insert(1, (double) 32);
        java.util.Properties properties11 = new java.util.Properties();
        int int12 = properties11.size();
        boolean boolean14 = properties11.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "");
        char[] charArray19 = strBuilder15.toCharArray();
        boolean boolean20 = properties11.containsValue((java.lang.Object) charArray19);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder2.append(charArray19, (int) (byte) 0, 0);
        boolean boolean24 = properties0.equals((java.lang.Object) 0);
        java.lang.String str25 = properties0.toString();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.insert(1, (double) 32);
        java.util.Properties properties37 = new java.util.Properties();
        int int38 = properties37.size();
        boolean boolean40 = properties37.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "");
        char[] charArray45 = strBuilder41.toCharArray();
        boolean boolean46 = properties37.containsValue((java.lang.Object) charArray45);
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder28.append(charArray45, (int) (byte) 0, 0);
        boolean boolean50 = properties26.equals((java.lang.Object) 0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties26.entrySet();
        java.util.Collection<java.lang.Object> objCollection52 = properties26.values();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        properties0.clear();
        java.util.Properties properties55 = new java.util.Properties(properties0);
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32 + "'", int3 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(charArray19);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertNotNull(objCollection52);
    }

    @Test
    public void test09919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09919");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer6, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder3.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder11.appendFixedWidthPadRight(32, (int) 't', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("\n1.0\n52");
        java.lang.String str19 = strBuilder15.rightString((int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendln('s');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" + "'", str19, "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test09920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09920");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        java.util.stream.IntStream intStream6 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.appendPadding(5, ' ');
        int int12 = strBuilder0.lastIndexOf('#', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.deleteFirst("java.io.IOException: java.io.IOException: {}");
        int int16 = strBuilder15.capacity();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(intStream6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
    }

    @Test
    public void test09921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09921");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("");
        boolean boolean2 = strTokenizer1.hasNext();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = strTokenizer1.setDelimiterChar('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray10 = strTokenizer9.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder5.appendAll((java.lang.Object[]) strArray10);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder5.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray20 = strTokenizer19.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.appendAll((java.lang.Object[]) strArray20);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder5.appendln(strBuilder21);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder21.appendSeparator("hi!", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        java.io.Writer writer35 = strBuilder34.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder39.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "");
        char[] charArray47 = strBuilder43.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder42.appendln(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray47);
        writer35.write(charArray47);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder27.append(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer52 = strTokenizer4.reset(charArray47);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer54 = strTokenizer4.reset("\n32.0-1.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = strTokenizer4.setIgnoredChar('$');
        java.lang.String str57 = strTokenizer4.toString();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(strTokenizer4);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(writer35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]");
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strTokenizer52);
        org.junit.Assert.assertNotNull(strTokenizer54);
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str57, "StrTokenizer[not tokenized yet]");
    }

    @Test
    public void test09922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09922");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray11 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        int int14 = strTokenizer13.size();
        boolean boolean15 = strTokenizer13.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer13.setIgnoredMatcher(strMatcher16);
        int int19 = strBuilder3.indexOf(strMatcher16, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.deleteFirst("StrTokenizer[32.0]");
        char[] charArray26 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        int int29 = strTokenizer28.size();
        boolean boolean30 = strTokenizer28.hasNext();
        java.util.List<java.lang.String> strList31 = strTokenizer28.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        char[] charArray36 = strBuilder32.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        boolean boolean40 = strList31.equals((java.lang.Object) charArray36);
        boolean boolean42 = strList31.add("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder21.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList31, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        int int46 = strBuilder45.capacity();
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(stringBuffer47, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.insert(1, (double) 32);
        java.util.Properties properties54 = new java.util.Properties();
        int int55 = properties54.size();
        boolean boolean57 = properties54.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst("", "");
        char[] charArray62 = strBuilder58.toCharArray();
        boolean boolean63 = properties54.containsValue((java.lang.Object) charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder45.append(charArray62, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder21.append(charArray62);
        char[] charArray72 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = new org.apache.commons.lang3.text.StrTokenizer(charArray72, ' ');
        java.lang.String str75 = strTokenizer74.next();
        int int76 = strTokenizer74.nextIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher77 = strTokenizer74.getQuoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray62, strMatcher77);
        int int79 = strTokenizer78.previousIndex();
        boolean boolean80 = strTokenizer78.hasPrevious();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(charArray72);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray72), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray72), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray72), "[ , 4, #, 4]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "4#4" + "'", str75, "4#4");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(strMatcher77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test09923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09923");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        int int17 = strTokenizer16.size();
        boolean boolean18 = strTokenizer16.hasNext();
        java.util.List<java.lang.String> strList19 = strTokenizer16.getTokenList();
        java.lang.String[] strArray23 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        boolean boolean26 = strList19.addAll((java.util.Collection<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder0.appendAll((java.lang.Iterable<java.lang.String>) strList24);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor28 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        int int30 = strBuilder29.capacity();
        java.lang.StringBuffer stringBuffer31 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder29.appendln(stringBuffer31, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder29.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder36.appendln(true);
        boolean boolean41 = strSubstitutor28.replaceIn(strBuilder38, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder0.append((java.lang.CharSequence) strBuilder38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = strBuilder38.asTokenizer();
        java.lang.String str44 = strTokenizer43.nextToken();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer43.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "true" + "'", str44, "true");
    }

    @Test
    public void test09924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09924");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.deleteFirst('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder3.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.clear();
        boolean boolean7 = strBuilder3.endsWith("\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.appendPadding(6, ' ');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test09925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09925");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, "");
        boolean boolean7 = strTokenizer6.hasNext();
        int int8 = strTokenizer6.previousIndex();
        org.apache.commons.lang3.text.StrMatcher strMatcher9 = strTokenizer6.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.appendln('#');
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder15.append(stringBuffer18, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder15.deleteFirst("hi!");
        char[] charArray24 = strBuilder15.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer11.reset(charArray24);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray24);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder37.replaceFirst("", "");
        char[] charArray41 = strBuilder37.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder36.appendln(charArray41);
        org.apache.commons.lang3.text.StrMatcher strMatcher43 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray41);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder27.replaceFirst(strMatcher43, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = new org.apache.commons.lang3.text.StrTokenizer(charArray24, strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = strTokenizer6.setTrimmerMatcher(strMatcher43);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = strTokenizer47.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer51 = strTokenizer47.setDelimiterString("eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee4\n");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strMatcher9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray24);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(charArray41);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[]");
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strTokenizer47);
        org.junit.Assert.assertNotNull(strTokenizer49);
        org.junit.Assert.assertNotNull(strTokenizer51);
    }

    @Test
    public void test09926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09926");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        java.util.Properties properties22 = new java.util.Properties();
        int int23 = properties22.size();
        boolean boolean25 = properties22.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties26 = new java.util.Properties();
        int int27 = properties26.size();
        boolean boolean29 = properties26.containsKey((java.lang.Object) (-1.0f));
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        char[] charArray35 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer(charArray35, ' ');
        int int38 = strTokenizer37.size();
        boolean boolean39 = strTokenizer37.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher40 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer37.setIgnoredMatcher(strMatcher40);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst("", "");
        java.lang.Object obj46 = properties22.putIfAbsent((java.lang.Object) strMatcher40, (java.lang.Object) strBuilder42);
        java.lang.Object obj49 = properties22.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        int int51 = strBuilder50.capacity();
        java.lang.StringBuffer stringBuffer52 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder50.appendln(stringBuffer52, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher56 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int57 = strBuilder55.lastIndexOf(strMatcher56);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder55.insert((int) (short) 1, 32);
        java.util.Properties properties61 = new java.util.Properties();
        int int62 = properties61.size();
        boolean boolean64 = properties61.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties61.entrySet();
        java.lang.Object obj66 = properties22.putIfAbsent((java.lang.Object) strBuilder60, (java.lang.Object) objEntrySet65);
        java.lang.String str67 = strBuilder60.getNewLineText();
        boolean boolean68 = properties0.equals((java.lang.Object) strBuilder60);
        int int69 = properties0.size();
        java.lang.Object obj70 = properties0.clone();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        int int72 = strBuilder71.capacity();
        java.lang.StringBuffer stringBuffer73 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.appendln(stringBuffer73, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder71.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder71.setLength(32);
        java.io.Writer writer82 = strBuilder81.asWriter();
        java.io.Writer writer84 = writer82.append('a');
        boolean boolean85 = properties0.containsKey((java.lang.Object) writer84);
        writer84.flush();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charArray35);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strMatcher40);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 32 + "'", int51 == 32);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMatcher56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 32 + "'", int72 == 32);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(writer82);
        org.junit.Assert.assertNotNull(writer84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test09927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09927");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder6.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.setLength((int) (short) 10);
        java.lang.String str12 = strBuilder10.rightString((int) 't');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.clear();
        java.util.Properties properties14 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray21 = strTokenizer20.getTokenArray();
        java.lang.String[] strArray22 = strTokenizer20.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder18.appendWithSeparators((java.lang.Object[]) strArray22, "4#4");
        char[] charArray27 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray27);
        java.lang.Object obj29 = properties14.getOrDefault((java.lang.Object) strBuilder18, (java.lang.Object) strTokenizer28);
        java.util.Collection<java.lang.Object> objCollection30 = properties14.values();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = strTokenizer32.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer32.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder41.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder42.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder35.appendFixedWidthPadRight((java.lang.Object) strBuilder44, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int49 = strBuilder35.lastIndexOf(strMatcher48);
        char[] charArray54 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = new org.apache.commons.lang3.text.StrTokenizer(charArray54, ' ');
        int int57 = strTokenizer56.size();
        boolean boolean58 = strTokenizer56.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = strTokenizer56.setIgnoredMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder35.deleteFirst(strMatcher59);
        java.lang.Object obj62 = properties14.getOrDefault((java.lang.Object) strTokenizer34, (java.lang.Object) strBuilder61);
        java.util.Collection<java.lang.Object> objCollection63 = properties14.values();
        java.util.Properties properties64 = new java.util.Properties();
        int int65 = properties64.size();
        boolean boolean67 = properties64.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties68 = new java.util.Properties();
        int int69 = properties68.size();
        boolean boolean71 = properties68.containsKey((java.lang.Object) (-1.0f));
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder76.replaceFirst("", "");
        char[] charArray80 = strBuilder76.toCharArray();
        char[] charArray81 = strBuilder73.getChars(charArray80);
        java.io.Reader reader82 = strBuilder73.asReader();
        java.lang.Object obj83 = properties64.remove((java.lang.Object) strBuilder73);
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties64.elements();
        boolean boolean85 = properties14.contains((java.lang.Object) properties64);
        java.lang.Object obj88 = properties14.setProperty("", " \000\000\000\000\000\000\000\000\000aaaaaaaaaaaaStrTokenizer[not tokenized yet]");
        java.lang.Object obj91 = properties14.setProperty("java.io.IOException: \n32.0a", "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001.0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder94 = strBuilder10.appendFixedWidthPadLeft(obj91, (int) '#', '#');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "100.0\000\000\000\000\000" + "'", str12, "100.0\000\000\000\000\000");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertNotNull(strTokenizer60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "");
        org.junit.Assert.assertNotNull(objCollection63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(charArray80);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray80), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray80), "[]");
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[]");
        org.junit.Assert.assertNotNull(reader82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objEnumeration84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(strBuilder94);
    }

    @Test
    public void test09928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09928");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln((double) '#');
        int int8 = strBuilder5.indexOf("java.io.IOException: java.io.IOException", (int) 'e');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder9.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        java.lang.String[] strArray16 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder12.appendWithSeparators((java.lang.Object[]) strArray16, "4#4");
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader28 = strBuilder24.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder29.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray34 = strTokenizer33.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder29.appendAll((java.lang.Object[]) strArray34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder29.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream39 = strBuilder29.codePoints();
        java.lang.Object obj40 = properties19.replace((java.lang.Object) reader28, (java.lang.Object) intStream39);
        long long42 = reader28.skip(0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray48 = strTokenizer47.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder43.appendAll((java.lang.Object[]) strArray48);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder43.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream53 = strBuilder43.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceFirst("", "");
        char[] charArray58 = strBuilder54.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder43.appendln(charArray58);
        int int62 = reader28.read(charArray58);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder12.append(charArray58);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer65 = new org.apache.commons.lang3.text.StrTokenizer(charArray58, '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder5.appendln(charArray58, 28, 68);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: Invalid startIndex: 68");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(reader28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(intStream39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(intStream53);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[]");
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test09929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09929");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendSeparator("StrTokenizer[]", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder8.appendSeparator('g', (int) '\n');
        int int14 = strBuilder11.lastIndexOf("#\n\n32.032.05.0", 28);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "");
        char[] charArray22 = strBuilder18.toCharArray();
        char[] charArray23 = strBuilder15.getChars(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        int int28 = strBuilder27.capacity();
        java.lang.StringBuffer stringBuffer29 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder27.appendln(stringBuffer29, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher33 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int34 = strBuilder32.lastIndexOf(strMatcher33);
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder32.insert(1, " #\n");
        char[] charArray38 = strBuilder32.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray38);
        int int42 = strMatcher26.isMatch(charArray38, (int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder11.append(charArray38);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 32 + "'", int28 == 32);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMatcher33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "\n #\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "\n #\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[\n,  , #, \n]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(strBuilder43);
    }

    @Test
    public void test09930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09930");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendPadding(4, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder9.setLength(2);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.appendSeparator("java.io.IOException: {\ntrue\n=1.0}", 57);
        int int21 = strBuilder9.indexOf("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder30.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder36.replaceFirst("", "");
        char[] charArray40 = strBuilder36.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder33.append(charArray40, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder46.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray51 = strTokenizer50.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendAll((java.lang.Object[]) strArray51);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder46.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder56.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer60 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray61 = strTokenizer60.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder56.appendAll((java.lang.Object[]) strArray61);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder46.appendln(strBuilder62);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder67.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder71.replaceFirst("", "");
        char[] charArray75 = strBuilder71.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder70.appendln(charArray75);
        boolean boolean77 = strBuilder46.equals((java.lang.Object) strBuilder70);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer("StrTokenizer[not tokenized yet]", ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher81 = strTokenizer80.getDelimiterMatcher();
        int int82 = strBuilder46.indexOf(strMatcher81);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer83 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, strMatcher81);
        // The following exception was thrown during execution in test generation
        try {
            strBuilder9.getChars(56, (-1), charArray40, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]");
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[]");
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strMatcher81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
    }

    @Test
    public void test09931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09931");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.replaceFirst("", "");
        char[] charArray16 = strBuilder12.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder9.append(charArray16, 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder28.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder31.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        char[] charArray39 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder34.appendln(charArray39);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.deleteFirst("StrTokenizer[]");
        java.util.Iterator<java.lang.String> strItor43 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.appendWithSeparators(strItor43, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder45.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder47.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder51.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder54.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder47.appendFixedWidthPadRight((java.lang.Object) strBuilder56, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher60 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int61 = strBuilder47.lastIndexOf(strMatcher60);
        char[] charArray66 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer(charArray66, ' ');
        int int69 = strTokenizer68.size();
        boolean boolean70 = strTokenizer68.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher71 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer72 = strTokenizer68.setIgnoredMatcher(strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder47.deleteFirst(strMatcher71);
        int int74 = strBuilder45.lastIndexOf(strMatcher71);
        int int75 = strBuilder22.indexOf(strMatcher71);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = strBuilder78.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.setNullText("");
        org.apache.commons.lang3.text.StrMatcher strMatcher83 = org.apache.commons.lang3.text.StrMatcher.charMatcher('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder79.replaceAll(strMatcher83, "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, strMatcher71, strMatcher83);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer86.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer90 = strTokenizer88.setEmptyTokenAsNull(false);
        int int91 = strTokenizer88.nextIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer93 = strTokenizer88.reset("\n#32.0");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[]");
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMatcher60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(charArray66);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strMatcher71);
        org.junit.Assert.assertNotNull(strTokenizer72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strMatcher83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strTokenizer90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(strTokenizer93);
    }

    @Test
    public void test09932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09932");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray11 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        int int14 = strTokenizer13.size();
        boolean boolean15 = strTokenizer13.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer13.setIgnoredMatcher(strMatcher16);
        int int19 = strBuilder3.indexOf(strMatcher16, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.deleteFirst("StrTokenizer[32.0]");
        char[] charArray26 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        int int29 = strTokenizer28.size();
        boolean boolean30 = strTokenizer28.hasNext();
        java.util.List<java.lang.String> strList31 = strTokenizer28.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        char[] charArray36 = strBuilder32.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        boolean boolean40 = strList31.equals((java.lang.Object) charArray36);
        boolean boolean42 = strList31.add("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder21.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList31, "StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = new org.apache.commons.lang3.text.StrBuilder();
        int int46 = strBuilder45.capacity();
        java.lang.StringBuffer stringBuffer47 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder45.appendln(stringBuffer47, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.insert(1, (double) 32);
        java.util.Properties properties54 = new java.util.Properties();
        int int55 = properties54.size();
        boolean boolean57 = properties54.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder58.replaceFirst("", "");
        char[] charArray62 = strBuilder58.toCharArray();
        boolean boolean63 = properties54.containsValue((java.lang.Object) charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder45.append(charArray62, (int) (byte) 0, 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder21.append(charArray62);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder70 = strBuilder68.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder70.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = strBuilder71.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder71.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder71.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder71.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder21.append((java.lang.CharSequence) strBuilder71);
        int int83 = strBuilder81.indexOf('a');
        int int85 = strBuilder81.indexOf("StrTokenizer[{}]");
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
    }

    @Test
    public void test09933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09933");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.lang.String str10 = strBuilder0.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder0.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        char[] charArray18 = strBuilder14.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, "");
        boolean boolean21 = strTokenizer20.hasNext();
        boolean boolean22 = strTokenizer20.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder13.appendAll((java.util.Iterator<java.lang.String>) strTokenizer20);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.append(' ');
        java.lang.String str27 = strBuilder25.leftString(5);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.insert(4, 0);
        boolean boolean32 = strBuilder25.contains('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder25.appendSeparator("#\nfalse\n");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\n32.0" + "'", str10, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\n32.0" + "'", str27, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test09934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09934");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder3.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.append((float) 3);
        int int13 = strBuilder10.indexOf(' ', 2);
        java.lang.StringBuffer stringBuffer14 = strBuilder10.toStringBuffer();
        java.lang.String str15 = strBuilder10.getNewLineText();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.insert(81, (float) 7);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 81");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(stringBuffer14);
        org.junit.Assert.assertEquals(stringBuffer14.toString(), "3.0");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test09935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09935");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray2 = strTokenizer1.getTokenArray();
        java.lang.String[] strArray3 = strTokenizer1.getTokenArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = strTokenizer1.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = strTokenizer1.reset("{}");
        java.lang.String str8 = strTokenizer7.getContent();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = strTokenizer7.setIgnoredChar('e');
        java.util.List<java.lang.String> strList11 = strTokenizer10.getTokenList();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strTokenizer5);
        org.junit.Assert.assertNotNull(strTokenizer7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strList11);
    }

    @Test
    public void test09936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09936");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder13.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder15.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder21.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder22.appendln((double) '#');
        boolean boolean25 = strBuilder15.equals(strBuilder24);
        java.util.stream.IntStream intStream26 = strBuilder15.codePoints();
        boolean boolean27 = strList9.contains((java.lang.Object) strBuilder15);
        java.util.stream.Stream<java.lang.String> strStream28 = strList9.stream();
        java.util.Iterator<java.lang.String> strItor29 = strList9.iterator();
        java.util.Properties properties30 = new java.util.Properties();
        int int31 = properties30.size();
        java.lang.Throwable throwable33 = null;
        java.io.IOException iOException34 = new java.io.IOException("\n32.0", throwable33);
        java.io.IOException iOException35 = new java.io.IOException((java.lang.Throwable) iOException34);
        char[] charArray38 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray38);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = strTokenizer39.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer43 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder47.appendln('#');
        java.lang.StringBuffer stringBuffer50 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.append(stringBuffer50, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder47.deleteFirst("hi!");
        char[] charArray56 = strBuilder47.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strTokenizer43.reset(charArray56);
        boolean boolean58 = properties30.replace((java.lang.Object) iOException34, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer43);
        int int59 = strList9.lastIndexOf((java.lang.Object) boolean58);
        char[] charArray62 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray62);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer64 = new org.apache.commons.lang3.text.StrTokenizer(charArray62);
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray62);
        boolean boolean66 = strList9.contains((java.lang.Object) strMatcher65);
        java.util.Spliterator<java.lang.String> strSpliterator67 = strList9.spliterator();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strStream28);
        org.junit.Assert.assertNotNull(strItor29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strTokenizer41);
        org.junit.Assert.assertNotNull(strTokenizer43);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(charArray56);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray56), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray56), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray56), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(charArray62);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray62), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray62), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray62), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer63);
        org.junit.Assert.assertNotNull(strMatcher65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strSpliterator67);
    }

    @Test
    public void test09937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09937");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        java.util.Properties properties9 = new java.util.Properties();
        int int10 = properties9.size();
        boolean boolean12 = properties9.containsKey((java.lang.Object) (-1.0f));
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        char[] charArray17 = strBuilder13.toCharArray();
        boolean boolean18 = properties9.containsValue((java.lang.Object) charArray17);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder0.append(charArray17, (int) (byte) 0, 0);
        java.lang.String str22 = strBuilder21.toString();
        char[] charArray27 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray27, ' ');
        java.lang.String str30 = strTokenizer29.next();
        int int31 = strTokenizer29.previousIndex();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder21.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer29, "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder21.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher41 = strTokenizer40.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer40, "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer40.reset("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder50.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder52.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder53.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder46.appendFixedWidthPadRight((java.lang.Object) strBuilder55, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher59 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int60 = strBuilder46.lastIndexOf(strMatcher59);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer61 = strTokenizer40.setQuoteMatcher(strMatcher59);
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder21.appendFixedWidthPadLeft((java.lang.Object) strTokenizer40, (int) '$', ' ');
        org.apache.commons.lang3.text.StrMatcher strMatcher65 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder64.replaceFirst(strMatcher65, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder67.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder68.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder68.appendSeparator('3');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(charArray17);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\n32.0" + "'", str22, "\n32.0");
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[ , 4, #, 4]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4#4" + "'", str30, "4#4");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMatcher41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMatcher59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test09938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09938");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.lang.String str18 = strList14.remove(0);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        java.lang.String[] strArray32 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        boolean boolean35 = strList28.addAll((java.util.Collection<java.lang.String>) strList33);
        boolean boolean36 = strList14.addAll((java.util.Collection<java.lang.String>) strList33);
        java.util.stream.Stream<java.lang.String> strStream37 = strList33.parallelStream();
        java.lang.Object[] objArray38 = strList33.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator39 = strList33.spliterator();
        java.lang.String str41 = strList33.get((int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        int int43 = strBuilder42.capacity();
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder42.appendln(stringBuffer44, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher48 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int49 = strBuilder47.lastIndexOf(strMatcher48);
        java.lang.String[] strArray51 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.lang.Object obj54 = null;
        boolean boolean55 = strList52.contains(obj54);
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder47.appendAll((java.lang.Iterable<java.lang.String>) strList52);
        boolean boolean57 = strList33.retainAll((java.util.Collection<java.lang.String>) strList52);
        java.util.Properties properties58 = new java.util.Properties();
        int int59 = properties58.size();
        java.lang.Object obj60 = properties58.clone();
        boolean boolean61 = strList52.remove(obj60);
        boolean boolean62 = strList52.isEmpty();
        int int63 = strList52.size();
        char[] charArray68 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer70 = new org.apache.commons.lang3.text.StrTokenizer(charArray68, ' ');
        int int71 = strTokenizer70.size();
        boolean boolean72 = strTokenizer70.hasNext();
        java.util.List<java.lang.String> strList73 = strTokenizer70.getTokenList();
        java.lang.String[] strArray77 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        boolean boolean80 = strList73.addAll((java.util.Collection<java.lang.String>) strList78);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer82 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray83 = strTokenizer82.getTokenArray();
        java.lang.String[] strArray84 = strTokenizer82.getTokenArray();
        boolean boolean85 = strTokenizer82.hasNext();
        int int86 = strTokenizer82.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher87 = strTokenizer82.getQuoteMatcher();
        java.util.List<java.lang.String> strList88 = strTokenizer82.getTokenList();
        boolean boolean89 = strList73.retainAll((java.util.Collection<java.lang.String>) strList88);
        java.lang.Object[] objArray90 = strList73.toArray();
        java.lang.Object[] objArray91 = strList73.toArray();
        int int92 = strList52.indexOf((java.lang.Object) strList73);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str94 = strList52.get(27);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 27, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\n32.0" + "'", str18, "\n32.0");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[\n32.0, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[\n32.0, , ]");
        org.junit.Assert.assertNotNull(strSpliterator39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\n32.0" + "'", str41, "\n32.0");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMatcher48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "{}");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(strMatcher87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[]");
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[]");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test09939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09939");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder5.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder5.insert(0, (long) '#');
        java.lang.Class<?> wildcardClass13 = strBuilder12.getClass();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test09940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09940");
        java.io.IOException iOException3 = new java.io.IOException();
        java.lang.Throwable[] throwableArray4 = iOException3.getSuppressed();
        java.lang.Throwable[] throwableArray5 = iOException3.getSuppressed();
        java.io.IOException iOException6 = new java.io.IOException("########", (java.lang.Throwable) iOException3);
        java.io.IOException iOException7 = new java.io.IOException("1\n", (java.lang.Throwable) iOException6);
        java.io.IOException iOException8 = new java.io.IOException("java.io.IOException:  ", (java.lang.Throwable) iOException7);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
    }

    @Test
    public void test09941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09941");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.append((long) 'a');
        boolean boolean11 = strBuilder9.contains('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder9.appendFixedWidthPadRight(1, 0, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.append(false);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test09942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09942");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        boolean boolean20 = strList9.add("\n");
        java.util.Spliterator<java.lang.String> strSpliterator21 = strList9.spliterator();
        char[] charArray26 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        int int29 = strTokenizer28.size();
        boolean boolean30 = strTokenizer28.hasNext();
        java.util.List<java.lang.String> strList31 = strTokenizer28.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        char[] charArray36 = strBuilder32.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        boolean boolean40 = strList31.equals((java.lang.Object) charArray36);
        char[] charArray45 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer47 = new org.apache.commons.lang3.text.StrTokenizer(charArray45, ' ');
        int int48 = strTokenizer47.size();
        boolean boolean49 = strTokenizer47.hasNext();
        java.util.List<java.lang.String> strList50 = strTokenizer47.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        int int52 = strBuilder51.capacity();
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(stringBuffer53, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder51.insert(1, (double) 32);
        java.lang.String str61 = strBuilder51.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder51.insert(1, '#');
        boolean boolean65 = strList50.equals((java.lang.Object) strBuilder51);
        boolean boolean66 = strList31.containsAll((java.util.Collection<java.lang.String>) strList50);
        java.lang.String str68 = strList31.remove((int) (short) 0);
        java.util.Iterator<java.lang.String> strItor69 = strList31.iterator();
        java.util.Iterator<java.lang.String> strItor70 = strList31.iterator();
        boolean boolean72 = strList31.add("\n32.0");
        boolean boolean73 = strList9.containsAll((java.util.Collection<java.lang.String>) strList31);
        int int74 = strList31.size();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strSpliterator21);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charArray45);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 32 + "'", int52 == 32);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\n32.0" + "'", str61, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "4#4" + "'", str68, "4#4");
        org.junit.Assert.assertNotNull(strItor69);
        org.junit.Assert.assertNotNull(strItor70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
    }

    @Test
    public void test09943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09943");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.replaceFirst('4', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder14.append((float) 3);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder14.setLength((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder10.append((java.lang.Object) (byte) 1);
        int int27 = strBuilder24.lastIndexOf('$', 37);
        int int28 = strBuilder24.length();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 6 + "'", int28 == 6);
    }

    @Test
    public void test09944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09944");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder4.appendFixedWidthPadLeft(0, 32, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.append((long) 26);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln((double) 98);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test09945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09945");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader9 = strBuilder5.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder10.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream20 = strBuilder10.codePoints();
        java.lang.Object obj21 = properties0.replace((java.lang.Object) reader9, (java.lang.Object) intStream20);
        long long23 = reader9.skip(0L);
        boolean boolean24 = reader9.ready();
        reader9.reset();
        reader9.reset();
        int int27 = reader9.read();
        long long29 = reader9.skip((long) 116);
        boolean boolean30 = reader9.markSupported();
        reader9.reset();
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(reader9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(intStream20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 35 + "'", int27 == 35);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test09946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09946");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.deleteAll('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.appendSeparator("StrTokenizer[]", "java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.append(false);
        java.lang.String str11 = strBuilder10.toString();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.append("java.io.IOException: hi!false");
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.append(50);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder10.deleteAll("\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.appendNewLine();
        java.io.Writer writer19 = strBuilder10.asWriter();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "java.io.IOException: hi!false" + "'", str11, "java.io.IOException: hi!false");
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(writer19);
    }

    @Test
    public void test09947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09947");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder33.lastIndexOf(strMatcher34);
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder33.insert((int) (short) 1, 32);
        java.util.Properties properties39 = new java.util.Properties();
        int int40 = properties39.size();
        boolean boolean42 = properties39.containsKey((java.lang.Object) (-1.0f));
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties39.entrySet();
        java.lang.Object obj44 = properties0.putIfAbsent((java.lang.Object) strBuilder38, (java.lang.Object) objEntrySet43);
        java.lang.String str45 = strBuilder38.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = strBuilder38.appendSeparator("", " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder50 = strBuilder48.setNewLineText("100.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder48.appendSeparator("\n-1.0100.0\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder55 = strBuilder52.insert(3, false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test09948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09948");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        boolean boolean25 = properties0.isEmpty();
        java.lang.Object obj28 = properties0.setProperty(" 4#4", "\na32");
        boolean boolean29 = properties0.isEmpty();
        int int30 = properties0.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("35.0\n4");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendAll((java.lang.Object[]) strArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder45.appendln('#');
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder45.append(stringBuffer48, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder45.deleteFirst("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder45.appendSeparator("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder45.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder39.append((java.lang.CharSequence) strBuilder58);
        java.lang.Object obj60 = properties0.put((java.lang.Object) strTokenizer32, (java.lang.Object) strBuilder39);
        java.lang.String str61 = strTokenizer32.next();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(strTokenizer32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "35.0\n4" + "'", str61, "35.0\n4");
    }

    @Test
    public void test09949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09949");
        java.lang.String[] strArray36 = new java.lang.String[] { "true\n###################################", "true\n###################################", "#", "false", "StrTokenizer[32.0]", "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000", "StrTokenizer[32.0]", "a4", "10.0", "{}", "StrTokenizer[32.0]", "java.io.IOException: hi!false", "{}3.0", "java.io.IOException", "java.io.IOException", "StrTokenizer[4#4]", "{\n36.0\n=StrTokenizer[not tokenized yet]}", "\n", "a4", "\n", "###", "java.io.IOException: {}", "StrTokenizer[]", "java.io.IOException: hi!", "###", "true", "java.io.IOException: {}", "h", "a4", "{\ntrue\n=1.0}", "true\n###################################", "false", "", "java.io.IOException: hi!", " ", "#" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        java.lang.Object obj39 = null;
        boolean boolean40 = strList37.equals(obj39);
        java.util.stream.Stream<java.lang.String> strStream41 = strList37.stream();
        java.util.Spliterator<java.lang.String> strSpliterator42 = strList37.spliterator();
        int int43 = strList37.size();
        boolean boolean44 = strList37.isEmpty();
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strStream41);
        org.junit.Assert.assertNotNull(strSpliterator42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 36 + "'", int43 == 36);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test09950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09950");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        java.util.stream.IntStream intStream10 = strBuilder0.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder0.appendln(charArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.replaceFirst("", "");
        java.io.Reader reader23 = strBuilder19.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder19.appendSeparator('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder19.replaceFirst(' ', '4');
        java.io.Reader reader29 = strBuilder28.asReader();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder35.appendln('#');
        java.lang.StringBuffer stringBuffer38 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder35.append(stringBuffer38, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder35.deleteFirst("hi!");
        char[] charArray44 = strBuilder35.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer45 = strTokenizer31.reset(charArray44);
        java.lang.String str46 = strTokenizer31.next();
        java.util.List<java.lang.String> strList47 = strTokenizer31.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.append('a');
        int int56 = strBuilder49.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer57 = strBuilder49.asTokenizer();
        boolean boolean58 = strList47.remove((java.lang.Object) strBuilder49);
        boolean boolean59 = strBuilder28.equals(strBuilder49);
        int int61 = strBuilder49.indexOf("java.io.IOException: StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder62 = strBuilder18.appendln((java.lang.Object) int61);
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder62.replaceFirst(' ', 'a');
        int int68 = strBuilder65.lastIndexOf("33.02.01#\n", (int) '3');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(intStream10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(reader29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(charArray44);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "#" + "'", str46, "#");
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test09951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09951");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.append((double) 10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.appendNull();
        java.lang.Object obj7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder5.appendFixedWidthPadRight(obj7, (int) (short) 10, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        java.lang.String str15 = strBuilder11.getNewLineText();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder11.appendln((float) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.setNullText(" ");
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder19.appendSeparator(' ', 53);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.append(strBuilder22);
        char[] charArray28 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer(charArray28, ' ');
        int int31 = strTokenizer30.size();
        boolean boolean32 = strTokenizer30.hasNext();
        java.util.List<java.lang.String> strList33 = strTokenizer30.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = strBuilder34.replaceFirst("", "");
        char[] charArray38 = strBuilder34.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer41 = new org.apache.commons.lang3.text.StrTokenizer(charArray38);
        boolean boolean42 = strList33.equals((java.lang.Object) charArray38);
        char[] charArray47 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer49 = new org.apache.commons.lang3.text.StrTokenizer(charArray47, ' ');
        int int50 = strTokenizer49.size();
        boolean boolean51 = strTokenizer49.hasNext();
        java.util.List<java.lang.String> strList52 = strTokenizer49.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        int int54 = strBuilder53.capacity();
        java.lang.StringBuffer stringBuffer55 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder53.appendln(stringBuffer55, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder53.insert(1, (double) 32);
        java.lang.String str63 = strBuilder53.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder53.insert(1, '#');
        boolean boolean67 = strList52.equals((java.lang.Object) strBuilder53);
        boolean boolean68 = strList33.containsAll((java.util.Collection<java.lang.String>) strList52);
        char[] charArray73 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer75 = new org.apache.commons.lang3.text.StrTokenizer(charArray73, ' ');
        int int76 = strTokenizer75.size();
        boolean boolean77 = strTokenizer75.hasNext();
        java.util.List<java.lang.String> strList78 = strTokenizer75.getTokenList();
        java.lang.String[] strArray82 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        boolean boolean85 = strList78.addAll((java.util.Collection<java.lang.String>) strList83);
        boolean boolean86 = strList52.containsAll((java.util.Collection<java.lang.String>) strList83);
        java.util.Iterator<java.lang.String> strItor87 = strList83.iterator();
        org.apache.commons.lang3.text.StrBuilder strBuilder88 = strBuilder10.appendAll((java.lang.Iterable<java.lang.String>) strList83);
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder10.appendln('9');
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 32 + "'", int54 == 32);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\n32.0" + "'", str63, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strItor87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test09952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09952");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("StrTokenizer[#]");
        org.junit.Assert.assertNotNull(strTokenizer1);
    }

    @Test
    public void test09953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09953");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        int int5 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.append((int) (short) 0);
        boolean boolean9 = strBuilder7.contains('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.deleteAll("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.append("\n32.0java.io.IOException: hi!116\n\n\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder14.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "");
        char[] charArray21 = strBuilder17.toCharArray();
        char[] charArray22 = strBuilder14.getChars(charArray21);
        org.apache.commons.lang3.text.StrMatcher strMatcher23 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray21);
        int int24 = strBuilder13.indexOf(strMatcher23);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]");
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(strMatcher23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test09954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09954");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder16.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.append((float) '4');
        java.io.Writer writer28 = writer11.append((java.lang.CharSequence) strBuilder25);
        writer11.write((int) '$');
        writer11.write((int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendAll((java.lang.Object[]) strArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder39.append((double) (short) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder41.setLength((int) (short) 10);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder43.append((float) 0L);
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = strBuilder46.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder49.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder53.replaceFirst("", "");
        char[] charArray57 = strBuilder53.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder52.appendln(charArray57);
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder58.setNewLineText("\n");
        java.io.Reader reader61 = strBuilder60.asReader();
        java.io.Writer writer62 = strBuilder60.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder60.deleteAll('#');
        java.io.Writer writer65 = strBuilder60.asWriter();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder45.append((java.lang.Object) writer65);
        int int67 = strBuilder66.length();
        java.io.Writer writer68 = writer11.append((java.lang.CharSequence) strBuilder66);
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder71.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder74 = strBuilder72.appendln((double) '#');
        char[] charArray75 = strBuilder72.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer78 = new org.apache.commons.lang3.text.StrTokenizer(charArray75, '9', 't');
        writer11.write(charArray75);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(writer28);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(charArray57);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray57), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray57), "[]");
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(reader61);
        org.junit.Assert.assertNotNull(writer62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(writer65);
        org.junit.Assert.assertNotNull(strBuilder66);
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 79 + "'", int67 == 79);
        org.junit.Assert.assertNotNull(writer68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(charArray75);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "35.0\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "35.0\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[3, 5, ., 0, \n]");
    }

    @Test
    public void test09955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09955");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder6.appendSeparator(' ', (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln('#');
        char[] charArray16 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer(charArray16, ' ');
        int int19 = strTokenizer18.size();
        boolean boolean20 = strTokenizer18.hasNext();
        java.util.List<java.lang.String> strList21 = strTokenizer18.getTokenList();
        java.lang.String[] strArray25 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        boolean boolean28 = strList21.addAll((java.util.Collection<java.lang.String>) strList26);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray31 = strTokenizer30.getTokenArray();
        java.lang.String[] strArray32 = strTokenizer30.getTokenArray();
        boolean boolean33 = strTokenizer30.hasNext();
        int int34 = strTokenizer30.size();
        org.apache.commons.lang3.text.StrMatcher strMatcher35 = strTokenizer30.getQuoteMatcher();
        java.util.List<java.lang.String> strList36 = strTokenizer30.getTokenList();
        boolean boolean37 = strList21.retainAll((java.util.Collection<java.lang.String>) strList36);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder9.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList21, "");
        java.util.stream.Stream<java.lang.String> strStream40 = strList21.parallelStream();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strMatcher35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strStream40);
    }

    @Test
    public void test09956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09956");
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor0 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        int int2 = strBuilder1.capacity();
        java.lang.StringBuffer stringBuffer3 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.appendln(stringBuffer3, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder1.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.appendln(true);
        boolean boolean13 = strSubstitutor0.replaceIn(strBuilder10, (int) '$', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        int int15 = strBuilder14.capacity();
        java.lang.StringBuffer stringBuffer16 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder14.appendln(stringBuffer16, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher20 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int21 = strBuilder19.lastIndexOf(strMatcher20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder19.insert((int) (short) 1, 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder24.deleteAll("java.io.IOException: hi!");
        boolean boolean27 = strSubstitutor0.replaceIn(strBuilder24);
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = new org.apache.commons.lang3.text.StrBuilder();
        int int29 = strBuilder28.capacity();
        java.lang.StringBuffer stringBuffer30 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder28.appendln(stringBuffer30, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder28.insert(1, (double) 32);
        java.lang.String str38 = strBuilder28.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder28.replaceAll("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder42.replaceFirst("", "");
        char[] charArray46 = strBuilder42.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer(charArray46, "");
        boolean boolean49 = strTokenizer48.hasNext();
        boolean boolean50 = strTokenizer48.hasPrevious();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder41.appendAll((java.util.Iterator<java.lang.String>) strTokenizer48);
        java.lang.String str52 = strBuilder41.getNullText();
        java.lang.String str53 = strSubstitutor0.replace(strBuilder41);
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor55 = strSubstitutor0.setVariablePrefix("1\n\n10\n");
        org.apache.commons.lang3.text.StrLookup<?> wildcardStrLookup56 = strSubstitutor0.getVariableResolver();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 32 + "'", int2 == 32);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMatcher20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\n32.0" + "'", str38, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(charArray46);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray46), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray46), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\n32.0" + "'", str53, "\n32.0");
        org.junit.Assert.assertNotNull(strSubstitutor55);
        org.junit.Assert.assertNull(wildcardStrLookup56);
    }

    @Test
    public void test09957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09957");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst('$', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder1.append('a');
        int int8 = strBuilder1.lastIndexOf("\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        int int10 = strBuilder9.capacity();
        java.lang.StringBuffer stringBuffer11 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder9.appendln(stringBuffer11, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder9.insert(1, (double) 32);
        boolean boolean18 = strBuilder9.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder9.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder9.clear();
        int int21 = strBuilder20.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder1.append(strBuilder20);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        int int25 = strBuilder24.capacity();
        java.lang.StringBuffer stringBuffer26 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder24.appendln(stringBuffer26, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder24.insert(1, (double) 32);
        java.lang.String str34 = strBuilder24.rightString((int) ' ');
        boolean boolean36 = strBuilder24.startsWith("");
        char[] charArray37 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder22.insert((int) (short) 0, charArray37);
        java.lang.String str39 = strBuilder38.getNullText();
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = strBuilder38.append((double) 9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder41.append("97\nhi!36", 100, (int) 'g');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\n32.0" + "'", str34, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charArray37);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test09958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09958");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.util.Spliterator<java.lang.String> strSpliterator17 = strList14.spliterator();
        int int18 = strList14.size();
        java.lang.String str20 = strList14.remove((int) (byte) 0);
        boolean boolean22 = strList14.add("{}");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder23.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray28 = strTokenizer27.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendAll((java.lang.Object[]) strArray28);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder23.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder33.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer37 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray38 = strTokenizer37.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder33.appendAll((java.lang.Object[]) strArray38);
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder23.appendln(strBuilder39);
        org.apache.commons.lang3.text.StrBuilder strBuilder41 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder41.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder44.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder48 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder48.replaceFirst("", "");
        char[] charArray52 = strBuilder48.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder47.appendln(charArray52);
        boolean boolean54 = strBuilder23.equals((java.lang.Object) strBuilder47);
        boolean boolean55 = strList14.remove((java.lang.Object) strBuilder23);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder23.replaceAll("{}", "h");
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder23.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder23.deleteAll('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = strBuilder61.deleteAll('\000');
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder67 = strBuilder66.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = strBuilder67.append((double) 10L);
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder67.replaceAll("4#4", "\n32.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder73 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder73.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder75.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder76.setNullText("");
        char[] charArray79 = strBuilder78.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder78.insert(0, true);
        org.apache.commons.lang3.text.StrBuilder strBuilder85 = strBuilder78.insert(0, (long) '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder85.setNewLineText("hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder87.appendSeparator("java.io.IOException: hi!false", 116);
        boolean boolean91 = strBuilder67.equalsIgnoreCase(strBuilder90);
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder63.appendln(strBuilder67);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strSpliterator17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(charArray52);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]");
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[]");
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test09959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09959");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.lang.String str10 = properties4.getProperty("h");
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties4.entrySet();
        java.io.IOException iOException13 = new java.io.IOException();
        java.lang.Throwable[] throwableArray14 = iOException13.getSuppressed();
        java.lang.Throwable[] throwableArray15 = iOException13.getSuppressed();
        java.io.IOException iOException16 = new java.io.IOException((java.lang.Throwable) iOException13);
        boolean boolean17 = properties4.containsValue((java.lang.Object) iOException16);
        char[] charArray23 = new char[] { ' ', '4', '#', '#', ' ' };
        org.apache.commons.lang3.text.StrMatcher strMatcher24 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = new org.apache.commons.lang3.text.StrBuilder(3);
        char[] charArray27 = strBuilder26.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher28 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray27);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer29 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, strMatcher28);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder30.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray35 = strTokenizer34.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder30.appendAll((java.lang.Object[]) strArray35);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder30.replaceFirst('a', 'a');
        java.lang.String str41 = strBuilder39.rightString((int) '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.ensureCapacity(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder39.deleteFirst('$');
        java.lang.Object obj46 = properties4.put((java.lang.Object) strTokenizer29, (java.lang.Object) strBuilder45);
        char[] charArray49 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer50 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray49);
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = new org.apache.commons.lang3.text.StrBuilder();
        int int52 = strBuilder51.capacity();
        java.lang.StringBuffer stringBuffer53 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder56 = strBuilder51.appendln(stringBuffer53, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder58 = strBuilder51.appendln((int) (byte) 0);
        java.io.Writer writer59 = strBuilder58.asWriter();
        java.io.IOException iOException60 = new java.io.IOException();
        java.lang.Throwable[] throwableArray61 = iOException60.getSuppressed();
        java.lang.Throwable[] throwableArray62 = iOException60.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder58.appendWithSeparators((java.lang.Object[]) throwableArray62, "1");
        java.lang.Object obj65 = properties4.getOrDefault((java.lang.Object) charArray49, (java.lang.Object) throwableArray62);
        java.util.Set<java.lang.Object> objSet66 = properties4.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties4.entrySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4## ");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4## ");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, #,  ]");
        org.junit.Assert.assertNotNull(strMatcher24);
        org.junit.Assert.assertNotNull(charArray27);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]");
        org.junit.Assert.assertNotNull(strMatcher28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(charArray49);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 32 + "'", int52 == 32);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(writer59);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNotNull(objEntrySet67);
    }

    @Test
    public void test09960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09960");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder11.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln((double) '#');
        boolean boolean15 = strBuilder5.equals(strBuilder14);
        java.util.stream.IntStream intStream16 = strBuilder5.codePoints();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder5.replaceFirst('a', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder5.appendln('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder5.appendFixedWidthPadRight((int) (short) 0, 112, '\000');
        int int26 = strBuilder25.capacity();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 308 + "'", int26 == 308);
    }

    @Test
    public void test09961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09961");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        boolean boolean9 = strBuilder0.startsWith("4#4");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer10 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.appendAll((java.util.Iterator<java.lang.String>) strTokenizer10);
        boolean boolean12 = strTokenizer10.isIgnoreEmptyTokens();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = strTokenizer10.setIgnoreEmptyTokens(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("");
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        char[] charArray28 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendln(charArray28);
        int int33 = strMatcher16.isMatch(charArray28, (-1), (int) ' ', (int) (byte) -1);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = strTokenizer14.setTrimmerMatcher(strMatcher16);
        boolean boolean35 = strTokenizer14.isEmptyTokenAsNull();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strTokenizer10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(strTokenizer34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test09962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09962");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        boolean boolean3 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties4 = new java.util.Properties();
        int int5 = properties4.size();
        boolean boolean7 = properties4.containsKey((java.lang.Object) (-1.0f));
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        char[] charArray13 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer15 = new org.apache.commons.lang3.text.StrTokenizer(charArray13, ' ');
        int int16 = strTokenizer15.size();
        boolean boolean17 = strTokenizer15.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher18 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer15.setIgnoredMatcher(strMatcher18);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst("", "");
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) strMatcher18, (java.lang.Object) strBuilder20);
        java.lang.Object obj27 = properties0.setProperty(" 4#4", "\n32.0");
        java.lang.Object obj30 = properties0.setProperty("hi!", "hi!");
        boolean boolean31 = properties0.isEmpty();
        properties0.clear();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer36 = new org.apache.commons.lang3.text.StrTokenizer("h", '4', '$');
        boolean boolean37 = strTokenizer36.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher38 = null;
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = strTokenizer36.setDelimiterMatcher(strMatcher38);
        java.lang.String[] strArray40 = strTokenizer36.getTokenArray();
        boolean boolean41 = properties0.containsValue((java.lang.Object) strTokenizer36);
        java.util.List<java.lang.String> strList42 = strTokenizer36.getTokenList();
        java.lang.String str43 = strTokenizer36.toString();
        java.lang.String str44 = strTokenizer36.previousToken();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMatcher18);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strTokenizer39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "StrTokenizer[h]" + "'", str43, "StrTokenizer[h]");
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test09963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09963");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        java.util.ListIterator<java.lang.String> strItor75 = strList9.listIterator((int) (short) 0);
        java.util.List<java.lang.String> strList78 = strList9.subList((int) (short) 1, 1);
        java.util.Spliterator<java.lang.String> strSpliterator79 = strList78.spliterator();
        java.util.Iterator<java.lang.String> strItor80 = strList78.iterator();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(strItor75);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strSpliterator79);
        org.junit.Assert.assertNotNull(strItor80);
    }

    @Test
    public void test09964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09964");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.replaceFirst("", "");
        char[] charArray14 = strBuilder10.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray14);
        boolean boolean18 = strList9.equals((java.lang.Object) charArray14);
        boolean boolean20 = strList9.add("\n");
        boolean boolean22 = strList9.add("\n2.0");
        java.util.ListIterator<java.lang.String> strItor23 = strList9.listIterator();
        java.util.Spliterator<java.lang.String> strSpliterator24 = strList9.spliterator();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strItor23);
        org.junit.Assert.assertNotNull(strSpliterator24);
    }

    @Test
    public void test09965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09965");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        java.lang.String str18 = strList14.remove(0);
        char[] charArray23 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = new org.apache.commons.lang3.text.StrTokenizer(charArray23, ' ');
        int int26 = strTokenizer25.size();
        boolean boolean27 = strTokenizer25.hasNext();
        java.util.List<java.lang.String> strList28 = strTokenizer25.getTokenList();
        java.lang.String[] strArray32 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        boolean boolean35 = strList28.addAll((java.util.Collection<java.lang.String>) strList33);
        boolean boolean36 = strList14.addAll((java.util.Collection<java.lang.String>) strList33);
        java.util.stream.Stream<java.lang.String> strStream37 = strList33.parallelStream();
        java.lang.Object[] objArray38 = strList33.toArray();
        java.util.Spliterator<java.lang.String> strSpliterator39 = strList33.spliterator();
        boolean boolean40 = strList33.isEmpty();
        int int41 = strList33.size();
        java.util.Properties properties42 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = strBuilder43.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray49 = strTokenizer48.getTokenArray();
        java.lang.String[] strArray50 = strTokenizer48.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder52 = strBuilder46.appendWithSeparators((java.lang.Object[]) strArray50, "4#4");
        char[] charArray55 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer56 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray55);
        java.lang.Object obj57 = properties42.getOrDefault((java.lang.Object) strBuilder46, (java.lang.Object) strTokenizer56);
        int int58 = properties42.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder59.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer63 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray64 = strTokenizer63.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder65 = strBuilder59.appendAll((java.lang.Object[]) strArray64);
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder59.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder69 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder71 = strBuilder69.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer73 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray74 = strTokenizer73.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder75 = strBuilder69.appendAll((java.lang.Object[]) strArray74);
        org.apache.commons.lang3.text.StrBuilder strBuilder76 = strBuilder59.appendln(strBuilder75);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder75.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder79 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = strBuilder79.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder82 = strBuilder81.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder82.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder87 = strBuilder82.replaceFirst('4', 'a');
        boolean boolean88 = properties42.remove((java.lang.Object) strBuilder75, (java.lang.Object) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder91 = strBuilder75.appendPadding((int) (byte) 1, 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder75.reverse();
        boolean boolean93 = strList33.equals((java.lang.Object) strBuilder92);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\n32.0" + "'", str18, "\n32.0");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strStream37);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[\n32.0, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[\n32.0, , ]");
        org.junit.Assert.assertNotNull(strSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test09966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09966");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        java.lang.String str14 = strTokenizer13.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setQuoteChar('4');
        boolean boolean17 = strTokenizer16.isEmptyTokenAsNull();
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = org.apache.commons.lang3.text.StrMatcher.stringMatcher("\n32.0-1.0");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer16.setQuoteMatcher(strMatcher19);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer16.setQuoteChar('#');
        int int23 = strTokenizer16.size();
        int int24 = strTokenizer16.size();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test09967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09967");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.ensureCapacity((int) (short) 10);
        boolean boolean13 = strBuilder6.equals((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.setNullText("java.io.IOException");
        java.lang.String str16 = strBuilder12.getNullText();
        java.util.Properties properties17 = new java.util.Properties();
        int int18 = properties17.size();
        boolean boolean20 = properties17.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        int int22 = properties21.size();
        boolean boolean24 = properties21.containsKey((java.lang.Object) (-1.0f));
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.lang.String str27 = properties21.getProperty("h");
        boolean boolean28 = properties21.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder12.appendFixedWidthPadRight((java.lang.Object) properties21, (int) '4', '$');
        int int32 = properties21.size();
        java.lang.Throwable throwable34 = null;
        java.io.IOException iOException35 = new java.io.IOException("{}", throwable34);
        java.io.IOException iOException36 = new java.io.IOException((java.lang.Throwable) iOException35);
        java.lang.Throwable[] throwableArray37 = iOException36.getSuppressed();
        java.io.IOException iOException39 = new java.io.IOException("java.io.IOException: ########");
        iOException36.addSuppressed((java.lang.Throwable) iOException39);
        boolean boolean41 = properties21.contains((java.lang.Object) iOException36);
        java.util.Properties properties42 = new java.util.Properties();
        int int43 = properties42.size();
        boolean boolean45 = properties42.containsKey((java.lang.Object) (-1.0f));
        java.util.Properties properties46 = new java.util.Properties();
        int int47 = properties46.size();
        boolean boolean49 = properties46.containsKey((java.lang.Object) (-1.0f));
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.lang.String str52 = properties46.getProperty("h");
        boolean boolean53 = properties46.isEmpty();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.lang.Object obj56 = properties46.remove((java.lang.Object) "true\na4\n");
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "java.io.IOException" + "'", str16, "java.io.IOException");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(obj56);
    }

    @Test
    public void test09968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09968");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        int int26 = strBuilder25.capacity();
        java.lang.StringBuffer stringBuffer27 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder25.appendln(stringBuffer27, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder25.setNullText("");
        java.lang.Object obj33 = properties0.get((java.lang.Object) strBuilder32);
        java.util.Properties properties34 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder38 = strBuilder35.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray41 = strTokenizer40.getTokenArray();
        java.lang.String[] strArray42 = strTokenizer40.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder38.appendWithSeparators((java.lang.Object[]) strArray42, "4#4");
        char[] charArray47 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer48 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray47);
        java.lang.Object obj49 = properties34.getOrDefault((java.lang.Object) strBuilder38, (java.lang.Object) strTokenizer48);
        int int50 = properties34.size();
        int int51 = properties34.size();
        java.util.Set<java.lang.String> strSet52 = properties34.stringPropertyNames();
        org.apache.commons.lang3.text.StrBuilder strBuilder53 = strBuilder32.appendAll((java.lang.Iterable<java.lang.String>) strSet52);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder53.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder54.replaceAll('#', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder60 = strBuilder54.appendSeparator("StrTokenizer[35.0, 4]", " #\naaaa");
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(charArray47);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test09969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09969");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.appendln('#');
        java.lang.StringBuffer stringBuffer6 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.append(stringBuffer6, (int) (byte) -1, (int) (byte) 100);
        char[] charArray14 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = new org.apache.commons.lang3.text.StrTokenizer(charArray14, ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder3.append(charArray14);
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.insert(5, "");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.insert(1, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder23.delete((int) (short) 1, 40);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(charArray14);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[ , 4, #, 4]");
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test09970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09970");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        char[] charArray16 = strBuilder8.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        char[] charArray18 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray18);
        boolean boolean25 = strTokenizer24.hasPrevious();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test09971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09971");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        char[] charArray11 = strBuilder7.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder6.appendln(charArray11);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(charArray11);
        java.lang.String str14 = strTokenizer13.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer16 = strTokenizer13.setQuoteChar('4');
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder20 = strBuilder17.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder20.replaceFirst('a', '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder24.replaceFirst("", "");
        char[] charArray28 = strBuilder24.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder23.appendln(charArray28);
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray28);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer13.setTrimmerMatcher(strMatcher30);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]");
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strTokenizer16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]");
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer31);
    }

    @Test
    public void test09972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09972");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Enumeration<java.lang.Object> objEnumeration1 = properties0.keys();
        java.lang.Object obj4 = properties0.setProperty("h", "{}");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("true");
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer12 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray13 = strTokenizer12.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder7.appendAll((java.lang.Object[]) strArray13);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder15.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder18.replaceFirst("", "");
        char[] charArray22 = strBuilder18.toCharArray();
        char[] charArray23 = strBuilder15.getChars(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer24 = new org.apache.commons.lang3.text.StrTokenizer(charArray22);
        char[] charArray25 = strBuilder7.getChars(charArray22);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strTokenizer6.reset(charArray22);
        java.lang.String str27 = strTokenizer6.getContent();
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("true\n###################################3\n");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer30 = strTokenizer6.setDelimiterMatcher(strMatcher29);
        int int31 = strTokenizer6.previousIndex();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = strTokenizer6.setDelimiterString("tue");
        java.util.List<java.lang.String> strList34 = strTokenizer6.getTokenList();
        boolean boolean35 = properties0.equals((java.lang.Object) strTokenizer6);
        org.junit.Assert.assertNotNull(objEnumeration1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strTokenizer6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[]");
        org.junit.Assert.assertNotNull(charArray23);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]");
        org.junit.Assert.assertNotNull(charArray25);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[]");
        org.junit.Assert.assertNotNull(strTokenizer26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strTokenizer33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test09973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09973");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        int int11 = strBuilder10.capacity();
        java.lang.StringBuffer stringBuffer12 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder10.appendln(stringBuffer12, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder10.insert(1, (double) 32);
        java.lang.String str20 = strBuilder10.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder10.insert(1, '#');
        boolean boolean24 = strList9.equals((java.lang.Object) strBuilder10);
        java.lang.Throwable throwable26 = null;
        java.io.IOException iOException27 = new java.io.IOException("{}", throwable26);
        java.lang.Throwable[] throwableArray28 = iOException27.getSuppressed();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder10.appendWithSeparators((java.lang.Object[]) throwableArray28, "10.0");
        org.apache.commons.lang3.text.StrBuilder strBuilder31 = strBuilder10.appendNewLine();
        int int32 = strBuilder10.length();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\n32.0" + "'", str20, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 7 + "'", int32 == 7);
    }

    @Test
    public void test09974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09974");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder0.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray15 = strTokenizer14.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder10.appendAll((java.lang.Object[]) strArray15);
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder0.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder16.appendSeparator("hi!", "");
        java.io.Reader reader23 = strBuilder22.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder22.deleteFirst(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = strBuilder25.asTokenizer();
        // The following exception was thrown during execution in test generation
        try {
            strTokenizer26.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove() is unsupported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(reader23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strTokenizer26);
    }

    @Test
    public void test09975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09975");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Collection<java.lang.Object> objCollection16 = properties0.values();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer18 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher19 = strTokenizer18.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer20 = strTokenizer18.reset();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder21.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder25.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder28 = strBuilder27.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder28.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder21.appendFixedWidthPadRight((java.lang.Object) strBuilder30, (int) (byte) -1, '#');
        org.apache.commons.lang3.text.StrMatcher strMatcher34 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int35 = strBuilder21.lastIndexOf(strMatcher34);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher45 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer46 = strTokenizer42.setIgnoredMatcher(strMatcher45);
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder21.deleteFirst(strMatcher45);
        java.lang.Object obj48 = properties0.getOrDefault((java.lang.Object) strTokenizer20, (java.lang.Object) strBuilder47);
        java.util.Collection<java.lang.Object> objCollection49 = properties0.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = properties0.entrySet();
        properties0.clear();
        boolean boolean52 = properties0.isEmpty();
        java.io.OutputStream outputStream53 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream53, "\ntrue0.0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(strMatcher19);
        org.junit.Assert.assertNotNull(strTokenizer20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMatcher34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strMatcher45);
        org.junit.Assert.assertNotNull(strTokenizer46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "");
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test09976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09976");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        boolean boolean9 = strBuilder0.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.reverse();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder0.clear();
        int int12 = strBuilder11.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder16.appendSeparator('#', (int) (byte) 100);
        java.io.Reader reader20 = strBuilder16.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder11.appendln(strBuilder16);
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = new org.apache.commons.lang3.text.StrBuilder();
        int int23 = strBuilder22.capacity();
        java.lang.StringBuffer stringBuffer24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder22.appendln(stringBuffer24, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder22.insert(1, (double) 32);
        int int31 = strBuilder22.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder22.append((double) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder22.append((float) 5);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder21.append(strBuilder22);
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder21.insert(8, (int) '4');
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder21.replaceFirst(' ', '3');
        org.apache.commons.lang3.text.StrMatcher strMatcher44 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher("java.io.IOException: hi!false");
        int int46 = strBuilder21.indexOf(strMatcher44, 43);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(reader20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 32 + "'", int31 == 32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMatcher44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test09977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09977");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.insert(51, (long) 118);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 51");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09978");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray7 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder3.appendln(charArray7, (int) (short) 1, 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder10.insert(0, (int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder13.appendPadding((int) (byte) 0, '$');
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder13.append(0);
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder13.reverse();
        int int20 = strBuilder19.length();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
    }

    @Test
    public void test09979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09979");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        int int5 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.append((int) (short) 0);
        boolean boolean9 = strBuilder7.contains('a');
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder7.deleteAll("java.io.IOException: hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder7.append(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder13.trim();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test09980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09980");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray22 = strTokenizer21.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.appendAll((java.lang.Object[]) strArray22);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder17.replaceFirst('a', 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder27.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray32 = strTokenizer31.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder27.appendAll((java.lang.Object[]) strArray32);
        org.apache.commons.lang3.text.StrBuilder strBuilder34 = strBuilder17.appendln(strBuilder33);
        org.apache.commons.lang3.text.StrBuilder strBuilder36 = strBuilder33.appendln((long) 'a');
        org.apache.commons.lang3.text.StrBuilder strBuilder37 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder37.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder40 = strBuilder39.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder42 = strBuilder40.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder45 = strBuilder40.replaceFirst('4', 'a');
        boolean boolean46 = properties0.remove((java.lang.Object) strBuilder33, (java.lang.Object) '4');
        java.lang.Object obj47 = properties0.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties0.entrySet();
        org.apache.commons.lang3.text.StrBuilder strBuilder49 = new org.apache.commons.lang3.text.StrBuilder();
        int int50 = strBuilder49.capacity();
        java.lang.StringBuffer stringBuffer51 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder49.appendln(stringBuffer51, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder57 = strBuilder49.insert(1, (double) 32);
        boolean boolean58 = strBuilder49.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder61 = strBuilder49.appendSeparator('a', ' ');
        boolean boolean62 = strBuilder61.isEmpty();
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder61.append(10);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder64.append(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer68 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher69 = strTokenizer68.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer71 = strTokenizer68.reset("");
        java.lang.String str72 = strTokenizer71.nextToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer74 = strTokenizer71.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher75 = strTokenizer71.getDelimiterMatcher();
        int int77 = strBuilder64.indexOf(strMatcher75, 4);
        org.apache.commons.lang3.text.StrBuilder strBuilder80 = strBuilder64.appendSeparator('e', 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder81 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder84 = strBuilder81.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray87 = strTokenizer86.getTokenArray();
        java.lang.String[] strArray88 = strTokenizer86.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder90 = strBuilder84.appendWithSeparators((java.lang.Object[]) strArray88, "4#4");
        org.apache.commons.lang3.text.StrMatcher strMatcher91 = org.apache.commons.lang3.text.StrMatcher.tabMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder92 = strBuilder90.deleteAll(strMatcher91);
        org.apache.commons.lang3.text.StrBuilder strBuilder93 = strBuilder90.trim();
        org.apache.commons.lang3.text.StrBuilder strBuilder96 = strBuilder93.replaceAll("{}3.0", "");
        java.lang.Object obj97 = properties0.getOrDefault((java.lang.Object) strBuilder64, (java.lang.Object) "");
        int int98 = properties0.size();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 32 + "'", int50 == 32);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMatcher69);
        org.junit.Assert.assertNotNull(strTokenizer71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strTokenizer74);
        org.junit.Assert.assertNotNull(strMatcher75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strMatcher91);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertEquals("'" + obj97 + "' != '" + "" + "'", obj97, "");
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
    }

    @Test
    public void test09981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09981");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        int int5 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.append((int) (short) 0);
        boolean boolean9 = strBuilder0.contains("");
        java.lang.StringBuffer stringBuffer10 = strBuilder0.toStringBuffer();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder0.append("", 37, 106);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: startIndex must be valid");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(stringBuffer10);
        org.junit.Assert.assertEquals(stringBuffer10.toString(), "0");
    }

    @Test
    public void test09982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09982");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder2.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder3.setNullText("");
        char[] charArray6 = strBuilder5.toCharArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder5.appendNull();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.appendln((long) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = strBuilder9.appendln((double) 112);
        org.apache.commons.lang3.text.StrBuilder strBuilder13 = strBuilder11.append('9');
        int int14 = strBuilder11.capacity();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(charArray6);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]");
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 14 + "'", int14 == 14);
    }

    @Test
    public void test09983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09983");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        java.lang.String[] strArray7 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder3.appendWithSeparators((java.lang.Object[]) strArray7, "4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder3.delete(0, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder3.appendSeparator("1", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder15.appendNull();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strBuilder16.asTokenizer();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = strTokenizer17.setDelimiterString("100.0\000\000\000\000\000");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setDelimiterString("java.io.IOException: StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = strTokenizer21.reset();
        java.lang.String str23 = strTokenizer22.nextToken();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertNotNull(strTokenizer19);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test09984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09984");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        int int16 = properties0.size();
        java.io.PrintStream printStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test09985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09985");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer5 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray6 = strTokenizer5.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.appendAll((java.lang.Object[]) strArray6);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder8.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder11.replaceFirst("", "");
        char[] charArray15 = strBuilder11.toCharArray();
        char[] charArray16 = strBuilder8.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = new org.apache.commons.lang3.text.StrTokenizer(charArray15);
        char[] charArray18 = strBuilder0.getChars(charArray15);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, ' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer26 = new org.apache.commons.lang3.text.StrTokenizer(charArray18, '#', '4');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer26.reset();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]");
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]");
        org.junit.Assert.assertNotNull(charArray18);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]");
        org.junit.Assert.assertNotNull(strTokenizer27);
    }

    @Test
    public void test09986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09986");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer3 = new org.apache.commons.lang3.text.StrTokenizer("og.", '9', '4');
    }

    @Test
    public void test09987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09987");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer1 = org.apache.commons.lang3.text.StrTokenizer.getTSVInstance("a}3.0$");
        java.lang.String str2 = strTokenizer1.getContent();
        org.junit.Assert.assertNotNull(strTokenizer1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "a}3.0$" + "'", str2, "a}3.0$");
    }

    @Test
    public void test09988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09988");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer7 = new org.apache.commons.lang3.text.StrTokenizer(charArray4);
        java.lang.String str8 = strTokenizer7.toString();
        java.lang.String str9 = strTokenizer7.previousToken();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer7.setIgnoredChar(' ');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = strTokenizer11.setIgnoredChar('t');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = strTokenizer11.previous();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "StrTokenizer[not tokenized yet]" + "'", str8, "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
    }

    @Test
    public void test09989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09989");
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder("\n32.0a");
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.insert(4, 0.0f);
        java.lang.String str6 = strBuilder4.rightString((int) (short) 10);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\n32.0.00a" + "'", str6, "\n32.0.00a");
    }

    @Test
    public void test09990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09990");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder5.appendNewLine();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder7.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.appendln(true);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder12.appendPadding((int) '#', '#');
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder18 = strBuilder16.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder18.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder19.appendln((double) '#');
        boolean boolean22 = strBuilder12.equals(strBuilder21);
        java.util.stream.IntStream intStream23 = strBuilder12.codePoints();
        java.util.Iterator<java.lang.String> strItor24 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder12.appendWithSeparators(strItor24, " 4#4");
        org.apache.commons.lang3.text.StrBuilder strBuilder29 = strBuilder26.replaceFirst(' ', ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = strBuilder6.appendln(strBuilder26, 0, (int) (byte) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = strBuilder6.equals(strBuilder33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(intStream23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test09991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09991");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder3.replaceFirst('a', '4');
        char[] charArray11 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = new org.apache.commons.lang3.text.StrTokenizer(charArray11, ' ');
        int int14 = strTokenizer13.size();
        boolean boolean15 = strTokenizer13.hasNext();
        org.apache.commons.lang3.text.StrMatcher strMatcher16 = org.apache.commons.lang3.text.StrMatcher.quoteMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer17 = strTokenizer13.setIgnoredMatcher(strMatcher16);
        int int19 = strBuilder3.indexOf(strMatcher16, (int) (short) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder3.deleteFirst("StrTokenizer[32.0]");
        char[] charArray26 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer(charArray26, ' ');
        int int29 = strTokenizer28.size();
        boolean boolean30 = strTokenizer28.hasNext();
        java.util.List<java.lang.String> strList31 = strTokenizer28.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder32 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder32.replaceFirst("", "");
        char[] charArray36 = strBuilder32.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer38 = new org.apache.commons.lang3.text.StrTokenizer(charArray36, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer39 = new org.apache.commons.lang3.text.StrTokenizer(charArray36);
        boolean boolean40 = strList31.equals((java.lang.Object) charArray36);
        boolean boolean42 = strList31.add("\n");
        org.apache.commons.lang3.text.StrBuilder strBuilder44 = strBuilder21.appendWithSeparators((java.lang.Iterable<java.lang.String>) strList31, "StrTokenizer[not tokenized yet]");
        java.util.Iterator<java.lang.String> strItor45 = strList31.iterator();
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(charArray11);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strMatcher16);
        org.junit.Assert.assertNotNull(strTokenizer17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strItor45);
    }

    @Test
    public void test09992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09992");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer4 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray5 = strTokenizer4.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder0.appendAll((java.lang.Object[]) strArray5);
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.ensureCapacity((int) (short) 10);
        boolean boolean13 = strBuilder6.equals((java.lang.Object) strBuilder12);
        org.apache.commons.lang3.text.StrBuilder strBuilder15 = strBuilder6.setNullText("java.io.IOException: hi!");
        char[] charArray20 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer22 = new org.apache.commons.lang3.text.StrTokenizer(charArray20, ' ');
        int int23 = strTokenizer22.size();
        boolean boolean24 = strTokenizer22.hasNext();
        java.util.List<java.lang.String> strList25 = strTokenizer22.getTokenList();
        java.lang.String[] strArray29 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        boolean boolean32 = strList25.addAll((java.util.Collection<java.lang.String>) strList30);
        java.util.Spliterator<java.lang.String> strSpliterator33 = strList30.spliterator();
        char[] charArray38 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer40 = new org.apache.commons.lang3.text.StrTokenizer(charArray38, ' ');
        int int41 = strTokenizer40.size();
        boolean boolean42 = strTokenizer40.hasNext();
        java.util.List<java.lang.String> strList43 = strTokenizer40.getTokenList();
        java.lang.String[] strArray47 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        boolean boolean50 = strList43.addAll((java.util.Collection<java.lang.String>) strList48);
        java.util.Spliterator<java.lang.String> strSpliterator51 = strList48.spliterator();
        int int52 = strList48.size();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer55 = new org.apache.commons.lang3.text.StrTokenizer(" 4#4", "");
        int int56 = strList48.lastIndexOf((java.lang.Object) strTokenizer55);
        java.util.List<java.lang.String> strList57 = strTokenizer55.getTokenList();
        org.apache.commons.lang3.text.StrSubstitutor strSubstitutor58 = new org.apache.commons.lang3.text.StrSubstitutor();
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = new org.apache.commons.lang3.text.StrBuilder();
        int int60 = strBuilder59.capacity();
        java.lang.StringBuffer stringBuffer61 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder64 = strBuilder59.appendln(stringBuffer61, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder59.setNullText("");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln(true);
        boolean boolean71 = strSubstitutor58.replaceIn(strBuilder68, (int) '$', 0);
        boolean boolean72 = strList57.equals((java.lang.Object) '$');
        boolean boolean73 = strList30.containsAll((java.util.Collection<java.lang.String>) strList57);
        java.util.ListIterator<java.lang.String> strItor75 = strList30.listIterator(0);
        boolean boolean77 = strList30.remove((java.lang.Object) false);
        org.apache.commons.lang3.text.StrBuilder strBuilder78 = strBuilder6.appendAll((java.lang.Iterable<java.lang.String>) strList30);
        boolean boolean79 = strList30.isEmpty();
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(charArray20);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strSpliterator33);
        org.junit.Assert.assertNotNull(charArray38);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray38), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray38), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strSpliterator51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 3 + "'", int52 == 3);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 32 + "'", int60 == 32);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strItor75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test09993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09993");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder3 = strBuilder0.replaceFirst("", "");
        char[] charArray4 = strBuilder0.toCharArray();
        int int5 = strBuilder0.capacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = strBuilder0.append((int) (short) 0);
        boolean boolean9 = strBuilder0.contains("");
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder0.appendSeparator('3', '6');
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 32 + "'", int5 == 32);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test09994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09994");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = strBuilder0.deleteFirst("");
        int int4 = strBuilder0.indexOf("");
        int int7 = strBuilder0.lastIndexOf('#', (int) (byte) 0);
        java.io.Reader reader8 = strBuilder0.asReader();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.append((int) (short) 1);
        org.apache.commons.lang3.text.StrBuilder strBuilder12 = strBuilder10.append("StrTokenizer[not tokenized yet]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = strBuilder12.appendln(false);
        int int15 = strBuilder12.capacity();
        java.util.stream.IntStream intStream16 = strBuilder12.codePoints();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer19 = new org.apache.commons.lang3.text.StrTokenizer("java.io.IOException", "h");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer21 = strTokenizer19.setIgnoreEmptyTokens(true);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = strTokenizer21.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer25 = strTokenizer21.setEmptyTokenAsNull(false);
        org.apache.commons.lang3.text.StrMatcher strMatcher26 = strTokenizer25.getIgnoredMatcher();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = strBuilder12.deleteAll(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(reader8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 74 + "'", int15 == 74);
        org.junit.Assert.assertNotNull(intStream16);
        org.junit.Assert.assertNotNull(strTokenizer21);
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertNotNull(strTokenizer25);
        org.junit.Assert.assertNotNull(strMatcher26);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test09995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09995");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder6 = strBuilder4.appendln('#');
        org.apache.commons.lang3.text.StrBuilder strBuilder7 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder9 = strBuilder7.deleteFirst("");
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder9.minimizeCapacity();
        org.apache.commons.lang3.text.StrBuilder strBuilder11 = new org.apache.commons.lang3.text.StrBuilder();
        int int12 = strBuilder11.capacity();
        java.lang.StringBuffer stringBuffer13 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = strBuilder11.appendln(stringBuffer13, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrMatcher strMatcher17 = org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher();
        int int18 = strBuilder16.lastIndexOf(strMatcher17);
        boolean boolean19 = strBuilder9.equalsIgnoreCase(strBuilder16);
        char[] charArray22 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray22);
        boolean boolean24 = properties0.replace((java.lang.Object) strBuilder6, (java.lang.Object) strBuilder9, (java.lang.Object) strTokenizer23);
        org.apache.commons.lang3.text.StrBuilder strBuilder26 = strBuilder9.deleteAll("StrTokenizer[]");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer28 = new org.apache.commons.lang3.text.StrTokenizer("");
        org.apache.commons.lang3.text.StrMatcher strMatcher29 = strTokenizer28.getTrimmerMatcher();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer31 = strTokenizer28.setIgnoredChar('$');
        org.apache.commons.lang3.text.StrBuilder strBuilder33 = strBuilder26.appendWithSeparators((java.util.Iterator<java.lang.String>) strTokenizer31, "StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder35 = strBuilder26.append("true");
        boolean boolean37 = strBuilder35.endsWith("\na32");
        org.apache.commons.lang3.text.StrBuilder strBuilder39 = strBuilder35.appendln((long) '4');
        java.lang.String str41 = strBuilder39.leftString(48);
        org.apache.commons.lang3.text.StrBuilder strBuilder43 = strBuilder39.setNewLineText("java.io.IOException: java.io.IOException: hi!");
        java.lang.StringBuffer stringBuffer44 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder47 = strBuilder43.appendln(stringBuffer44, 9, (int) 's');
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charArray22);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMatcher29);
        org.junit.Assert.assertNotNull(strTokenizer31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "true52\n" + "'", str41, "true52\n");
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test09996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09996");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.apache.commons.lang3.text.StrBuilder strBuilder2 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder2.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder5.replaceFirst('a', '4');
        java.io.Writer writer9 = strBuilder8.asWriter();
        properties1.store(writer9, "");
        java.util.Collection<java.lang.Object> objCollection12 = properties1.values();
        java.util.Set<java.lang.String> strSet13 = properties1.stringPropertyNames();
        java.lang.Object obj16 = properties1.setProperty("", "#");
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(writer9);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test09997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09997");
        org.apache.commons.lang3.text.StrBuilder strBuilder0 = new org.apache.commons.lang3.text.StrBuilder();
        int int1 = strBuilder0.capacity();
        java.lang.StringBuffer stringBuffer2 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder5 = strBuilder0.appendln(stringBuffer2, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder8 = strBuilder0.insert(1, (double) 32);
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder0.setLength(32);
        java.io.Writer writer11 = strBuilder10.asWriter();
        writer11.write(" 4#4", (int) (byte) 0, (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder16 = new org.apache.commons.lang3.text.StrBuilder();
        int int17 = strBuilder16.capacity();
        java.lang.StringBuffer stringBuffer18 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder21 = strBuilder16.appendln(stringBuffer18, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder24 = strBuilder16.insert(1, (double) 32);
        java.lang.String str26 = strBuilder16.rightString((int) ' ');
        boolean boolean28 = strBuilder16.startsWith("");
        char[] charArray29 = strBuilder16.toCharArray();
        org.apache.commons.lang3.text.StrMatcher strMatcher30 = org.apache.commons.lang3.text.StrMatcher.charSetMatcher(charArray29);
        writer11.write(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer32 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray29);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray29);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 32 + "'", int1 == 32);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(writer11);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\n32.0" + "'", str26, "\n32.0");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "\n32.0");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "\n32.0");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[\n, 3, 2, ., 0]");
        org.junit.Assert.assertNotNull(strMatcher30);
        org.junit.Assert.assertNotNull(strTokenizer32);
    }

    @Test
    public void test09998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09998");
        char[] charArray4 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer(charArray4, ' ');
        int int7 = strTokenizer6.size();
        boolean boolean8 = strTokenizer6.hasNext();
        java.util.List<java.lang.String> strList9 = strTokenizer6.getTokenList();
        java.lang.String[] strArray13 = new java.lang.String[] { "\n32.0", "", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        boolean boolean16 = strList9.addAll((java.util.Collection<java.lang.String>) strList14);
        char[] charArray21 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer23 = new org.apache.commons.lang3.text.StrTokenizer(charArray21, ' ');
        int int24 = strTokenizer23.size();
        boolean boolean25 = strTokenizer23.hasNext();
        java.util.List<java.lang.String> strList26 = strTokenizer23.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder27 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder27.replaceFirst("", "");
        char[] charArray31 = strBuilder27.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer33 = new org.apache.commons.lang3.text.StrTokenizer(charArray31, 'a');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer(charArray31);
        boolean boolean35 = strList26.equals((java.lang.Object) charArray31);
        char[] charArray40 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer42 = new org.apache.commons.lang3.text.StrTokenizer(charArray40, ' ');
        int int43 = strTokenizer42.size();
        boolean boolean44 = strTokenizer42.hasNext();
        java.util.List<java.lang.String> strList45 = strTokenizer42.getTokenList();
        org.apache.commons.lang3.text.StrBuilder strBuilder46 = new org.apache.commons.lang3.text.StrBuilder();
        int int47 = strBuilder46.capacity();
        java.lang.StringBuffer stringBuffer48 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder51 = strBuilder46.appendln(stringBuffer48, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder54 = strBuilder46.insert(1, (double) 32);
        java.lang.String str56 = strBuilder46.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder59 = strBuilder46.insert(1, '#');
        boolean boolean60 = strList45.equals((java.lang.Object) strBuilder46);
        boolean boolean61 = strList26.containsAll((java.util.Collection<java.lang.String>) strList45);
        boolean boolean62 = strList9.addAll((java.util.Collection<java.lang.String>) strList45);
        org.apache.commons.lang3.text.StrBuilder strBuilder63 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder66 = strBuilder63.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder68 = strBuilder66.appendln('#');
        java.lang.StringBuffer stringBuffer69 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder72 = strBuilder66.append(stringBuffer69, (int) (byte) -1, (int) (byte) 100);
        int int73 = strList9.lastIndexOf((java.lang.Object) stringBuffer69);
        char[] charArray78 = new char[] { ' ', '4', '#', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer80 = new org.apache.commons.lang3.text.StrTokenizer(charArray78, ' ');
        int int81 = strTokenizer80.size();
        int int82 = strTokenizer80.previousIndex();
        boolean boolean83 = strList9.equals((java.lang.Object) strTokenizer80);
        java.lang.String str84 = strTokenizer80.next();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer86 = strTokenizer80.setDelimiterString("{}");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer88 = strTokenizer80.setEmptyTokenAsNull(true);
        org.apache.commons.lang3.text.StrMatcher strMatcher89 = strTokenizer80.getTrimmerMatcher();
        boolean boolean90 = strTokenizer80.hasPrevious();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer92 = strTokenizer80.setIgnoredChar('9');
        org.apache.commons.lang3.text.StrTokenizer strTokenizer94 = strTokenizer80.setQuoteChar('\n');
        int int95 = strTokenizer80.previousIndex();
        org.junit.Assert.assertNotNull(charArray4);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charArray21);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(charArray31);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "\n32.0" + "'", str56, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(charArray78);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " 4#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , 4, #, 4]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "4#4" + "'", str84, "4#4");
        org.junit.Assert.assertNotNull(strTokenizer86);
        org.junit.Assert.assertNotNull(strTokenizer88);
        org.junit.Assert.assertNotNull(strMatcher89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(strTokenizer92);
        org.junit.Assert.assertNotNull(strTokenizer94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
    }

    @Test
    public void test09999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09999");
        java.util.Properties properties0 = new java.util.Properties();
        org.apache.commons.lang3.text.StrBuilder strBuilder1 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder4 = strBuilder1.replaceFirst("", "hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer6 = new org.apache.commons.lang3.text.StrTokenizer("");
        java.lang.String[] strArray7 = strTokenizer6.getTokenArray();
        java.lang.String[] strArray8 = strTokenizer6.getTokenArray();
        org.apache.commons.lang3.text.StrBuilder strBuilder10 = strBuilder4.appendWithSeparators((java.lang.Object[]) strArray8, "4#4");
        char[] charArray13 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer14 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray13);
        java.lang.Object obj15 = properties0.getOrDefault((java.lang.Object) strBuilder4, (java.lang.Object) strTokenizer14);
        java.util.Collection<java.lang.Object> objCollection16 = properties0.values();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = new org.apache.commons.lang3.text.StrBuilder();
        int int18 = strBuilder17.capacity();
        java.lang.StringBuffer stringBuffer19 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder22 = strBuilder17.appendln(stringBuffer19, (int) '#', (int) (byte) 0);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.insert(1, (double) 32);
        java.lang.String str27 = strBuilder17.rightString((int) ' ');
        org.apache.commons.lang3.text.StrBuilder strBuilder30 = strBuilder17.replaceAll("", "hi!");
        java.lang.Object obj31 = properties0.remove((java.lang.Object) "");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer34 = new org.apache.commons.lang3.text.StrTokenizer("0", '#');
        int int35 = strTokenizer34.nextIndex();
        java.lang.String[] strArray36 = strTokenizer34.getTokenArray();
        boolean boolean37 = properties0.containsValue((java.lang.Object) strTokenizer34);
        java.lang.String str38 = properties0.toString();
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(charArray13);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "StrTokenizer[not tokenized yet]");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 32 + "'", int18 == 32);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\n32.0" + "'", str27, "\n32.0");
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{}" + "'", str38, "{}");
    }

    @Test
    public void test10000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test10000");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.lang.Throwable throwable3 = null;
        java.io.IOException iOException4 = new java.io.IOException("\n32.0", throwable3);
        java.io.IOException iOException5 = new java.io.IOException((java.lang.Throwable) iOException4);
        char[] charArray8 = new char[] { 'a', '4' };
        org.apache.commons.lang3.text.StrTokenizer strTokenizer9 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(charArray8);
        org.apache.commons.lang3.text.StrTokenizer strTokenizer11 = strTokenizer9.setDelimiterString("hi!");
        org.apache.commons.lang3.text.StrTokenizer strTokenizer13 = org.apache.commons.lang3.text.StrTokenizer.getCSVInstance("StrTokenizer[]");
        org.apache.commons.lang3.text.StrBuilder strBuilder14 = new org.apache.commons.lang3.text.StrBuilder();
        org.apache.commons.lang3.text.StrBuilder strBuilder17 = strBuilder14.replaceFirst("", "");
        org.apache.commons.lang3.text.StrBuilder strBuilder19 = strBuilder17.appendln('#');
        java.lang.StringBuffer stringBuffer20 = null;
        org.apache.commons.lang3.text.StrBuilder strBuilder23 = strBuilder17.append(stringBuffer20, (int) (byte) -1, (int) (byte) 100);
        org.apache.commons.lang3.text.StrBuilder strBuilder25 = strBuilder17.deleteFirst("hi!");
        char[] charArray26 = strBuilder17.toCharArray();
        org.apache.commons.lang3.text.StrTokenizer strTokenizer27 = strTokenizer13.reset(charArray26);
        boolean boolean28 = properties0.replace((java.lang.Object) iOException4, (java.lang.Object) "hi!", (java.lang.Object) strTokenizer13);
        int int29 = properties0.size();
        int int30 = properties0.size();
        java.lang.String str31 = properties0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, 4]");
        org.junit.Assert.assertNotNull(strTokenizer9);
        org.junit.Assert.assertNotNull(strTokenizer11);
        org.junit.Assert.assertNotNull(strTokenizer13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(charArray26);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "#\n");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[#, \n]");
        org.junit.Assert.assertNotNull(strTokenizer27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
    }
}
